<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>AnalyticalTable</name>
    <derived/>
    <documentation>Table which handles analytical OData backends. The AnalyticalTable only works with an AnalyticalBinding and
correctly annotated OData services. Please check on the SAP Annotations for OData Version 2.0 documentation for further details.</documentation>
    <baseType>sap.ui.table/Table</baseType>
    <properties>
        <property name="sumOnTop" type="sap.ui.core/boolean" defaultValue="false" group="Appearance">
            <documentation>Specifies if the total values should be displayed in the group headers or on bottom of the row. Does not affact the total sum.</documentation>
        </property>
        <property name="numberOfExpandedLevels" type="sap.ui.core/int" defaultValue="0" group="Misc">
            <documentation>Number of levels, which should be opened initially (on first load of data).</documentation>
        </property>
        <property name="autoExpandMode" type="sap.ui.core/string" defaultValue="Bundled" group="Misc">
            <documentation>The kind of auto expansion algorithm, e.g. optimised filter conditions, per level requests, ...
sap.ui.table.TreeAutoExpandMode</documentation>
        </property>
        <property name="columnVisibilityMenuSorter" type="sap.ui.core/any" group="Appearance">
            <documentation>Functions which is used to sort the column visibility menu entries e.g.: function(ColumnA, ColumnB) { return 0 = equals, &lt;0 lower, &gt;0 greater }; Other values than functions will be ignored.</documentation>
        </property>
        <property name="collapseRecursive" type="sap.ui.core/boolean" defaultValue="true">
            <documentation>Setting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed.</documentation>
        </property>
        <property name="dirty" type="sap.ui.core/boolean" group="Appearance">
            <documentation>If dirty the content of the Table will be overlayed.</documentation>
            <deprecation since="1.21.2">Please use setShowOverlay instead.</deprecation>
        </property>
    </properties>
    <methods>
        <method name="collapseAll" type="sap.ui.table/TreeTable">
            <documentation>Collapses all nodes (and lower if collapseRecursive is activated)</documentation>
        </method>
        <method name="getContextByIndex" type="sap.ui.core/object">
            <documentation>Returns the context of a row by its index.</documentation>
            <parameters>
                <parameter name="index" type="sap.ui.core/int">
                    <documentation>Index of the row to return the context from.</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="getTotalSize" type="sap.ui.core/int">
            <documentation>Returns the total size of the data entries.</documentation>
        </method>
        <method name="isIndexSelected" type="sap.ui.core/boolean">
            <documentation>Checks if the row at the given index is selected.</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>The row index for which the selection state should be retrieved</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="setSelectedIndex" type="sap.ui.table/TreeTable">
            <documentation>Overriden from Table.js base class.
In a TreeTable you can only select indices, which correspond to the currently visualized tree.
Invisible tree nodes (e.g. collapsed child nodes) can not be selected via Index, because they do not
correspond to a TreeTable row.</documentation>
            <parameters>
                <parameter name="rowIndex" type="sap.ui.core/int">
                    <documentation>The row index which will be selected (if existing)</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="getSelectedIndices" type="sap.ui.core/int[]">
            <documentation>Returns an array containing the row indices of all selected tree nodes (ordered ascending).

Please be aware of the following:
Due to performance/network traffic reasons, the getSelectedIndices function returns only all indices
of actually selected rows/tree nodes. Unknown rows/nodes (as in "not yet loaded" to the client), will not be
returned.</documentation>
        </method>
        <method name="setSelectionInterval" type="sap.ui.table/TreeTable">
            <documentation>Sets the selection of the TreeTable to the given range (including boundaries).
Beware: The previous selection will be lost/overriden. If this is not wanted, please use "addSelectionInterval" and
"removeSelectionIntervall".</documentation>
            <parameters>
                <parameter name="fromIndex" type="sap.ui.core/int">
                    <documentation>the start index of the selection range</documentation>
                </parameter>
                <parameter name="toIndex" type="sap.ui.core/int">
                    <documentation>the end index of the selection range</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="addSelectionInterval" type="sap.ui.table/TreeTable">
            <documentation>Marks a range of tree nodes as selected, starting with iFromIndex going to iToIndex.
The TreeNodes are referenced via their absolute row index.
Please be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.
Invisible nodes (collapsed child nodes) will not be regarded.

Please also take notice of the fact, that "addSelectionInterval" does not change any other selection.
To override the current selection, please use "setSelctionInterval" or for a single entry use "setSelectedIndex".</documentation>
            <parameters>
                <parameter name="fromIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be selected.</documentation>
                </parameter>
                <parameter name="toIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be selected.</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="removeSelectionInterval" type="sap.ui.table/TreeTable">
            <documentation>All rows/tree nodes inside the range (including boundaries) will be deselected.
Tree nodes are referenced with theit absolute row index inside the tree-
Please be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.
Invisible nodes (collapsed child nodes) will not be regarded.</documentation>
            <parameters>
                <parameter name="fromIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be deselected.</documentation>
                </parameter>
                <parameter name="toIndex" type="sap.ui.core/int">
                    <documentation>The starting index of the range which will be deselected.</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="selectAll" type="sap.ui.table/TreeTable">
            <documentation>Selects all available nodes/rows.

Explanation of the SelectAll function and what to expect from its behavior:
All rows/tree nodes locally stored on the client are selected.
In addition all subsequent rows/tree nodes, which will be paged into view are also immediatly selected.
However, due to obvious performance/network traffic reasons, the SelectAll function will NOT retrieve any data from the backend.</documentation>
        </method>
        <method name="getSelectedIndex" type="sap.ui.core/int[]">
            <documentation>Retrieves the lead selection index. The lead selection index is, among other things, used to determine the
start/end of a selection range, when using Shift-Click to select multiple entries at once.</documentation>
        </method>
        <method name="clearSelection" type="sap.ui.table/TreeTable">
            <documentation>Clears the complete selection (all tree table rows/nodes will lose their selection)</documentation>
        </method>
    </methods>
</control>
