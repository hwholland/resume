{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.ui.comp",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.ui.comp",
			"basename": "comp",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "SAPUI5 library with smart controls."
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.filterbar.FilterBar",
			"basename": "FilterBar",
			"resource": "sap/ui/comp/filterbar/FilterBar.js",
			"module": "sap/ui/comp/filterbar/FilterBar",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.layout.Grid",
			"description": "The control displays filters in a user-friendly manner to populate values for a query. The FilterBar consists of a row containing the\n       {@link sap.ui.comp.variants.VariantManagement VariantManagement} control, the related buttons, and an area underneath displaying the\n       filters. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The\n       area containing the filters can be hidden or shown using the Hide Filter Bar / Show Filter Bar button. The Go button triggers the search\n       event, and the Filters button shows the filter dialog.<br>\n       In this dialog, the consumer has full control over the filter bar. The filters in this dialog are displayed in one column and organized\n       in groups. The filter items of the <code>filterItems</code> aggregation are grouped in the Basic group . Each filter can be marked as\n       visible in the filter bar by selecting Add to Filter Bar. In addition, the items in the <code>filterGroupItems</code> aggregation can\n       be marked as part of the current variant. The FilterBar also supports a different UI layout when used inside a value help dialog. In\n       this case the FilterBar consists of two logical areas, one containing the general search button and in the Advanced Search area. The\n       Advanced Search is a collapsible area displaying the advanced filters in two columns.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "persistencyKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Key used to access personalization data.",
						"methods": [
							"getPersistencyKey",
							"setPersistencyKey"
						]
					},
					{
						"name": "advancedMode",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "The advanced mode overwrites the standard behavior and is used in the value help scenario.",
						"methods": [
							"getAdvancedMode",
							"setAdvancedMode"
						]
					},
					{
						"name": "expandAdvancedArea",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.30.0",
						"description": "Collapses/expands the advanced area.",
						"deprecated": {
							"since": "1.30.0",
							"text": "Replaced by property <code>filterBarExpanded</code> This property is mapped to the\r            filterBarExpanded property."
						},
						"methods": [
							"getExpandAdvancedArea",
							"setExpandAdvancedArea"
						]
					},
					{
						"name": "searchEnabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Enables/disables the Search button.",
						"deprecated": {
							"since": "1.32.0"
						},
						"methods": [
							"getSearchEnabled",
							"setSearchEnabled"
						]
					},
					{
						"name": "filterBarExpanded",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.1",
						"description": "Shows/hides the filter row.",
						"methods": [
							"getFilterBarExpanded",
							"setFilterBarExpanded"
						]
					},
					{
						"name": "considerGroupTitle",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "If this property is set, then the label for filters will be prefixed with the group title.",
						"methods": [
							"getConsiderGroupTitle",
							"setConsiderGroupTitle"
						]
					},
					{
						"name": "showClearButton",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.1",
						"description": "Handles visibility of the Clear button on the Filters dialog.",
						"methods": [
							"getShowClearButton",
							"setShowClearButton"
						]
					},
					{
						"name": "showRestoreButton",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.1",
						"description": "Handles visibility of the Restore button on the Filters dialog.",
						"methods": [
							"getShowRestoreButton",
							"setShowRestoreButton"
						]
					},
					{
						"name": "showGoOnFB",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Handles visibility of the Go button on the filter bar.",
						"methods": [
							"getShowGoOnFB",
							"setShowGoOnFB"
						]
					},
					{
						"name": "showRestoreOnFB",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Handles visibility of the Restore button on the filter bar.",
						"methods": [
							"getShowRestoreOnFB",
							"setShowRestoreOnFB"
						]
					},
					{
						"name": "showClearOnFB",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Handles visibility of the Clear button on the filter bar.",
						"methods": [
							"getShowClearOnFB",
							"setShowClearOnFB"
						]
					},
					{
						"name": "showGoButton",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.1",
						"description": "Handles visibility of the Go button on the filter bar.",
						"deprecated": {
							"since": "1.28.0",
							"text": "Replaced by property <code>showGoOnFB</code>"
						},
						"methods": [
							"getShowGoButton",
							"setShowGoButton"
						]
					},
					{
						"name": "deltaVariantMode",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Stores the delta as compared to the standard variant.",
						"methods": [
							"getDeltaVariantMode",
							"setDeltaVariantMode"
						]
					},
					{
						"name": "filterContainerWidth",
						"type": "string",
						"defaultValue": "12rem",
						"group": "Misc",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Sets the width of the filters container.",
						"methods": [
							"getFilterContainerWidth",
							"setFilterContainerWidth"
						]
					},
					{
						"name": "useToolbar",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Determines what design should be used. Default is the design with the toolbar. In mobile scenarios this property is ignored - the\rdesign with the toolbar will be used.",
						"methods": [
							"getUseToolbar",
							"setUseToolbar"
						]
					},
					{
						"name": "header",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Specifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar</code>\ris set to <code>false</code>.",
						"methods": [
							"getHeader",
							"setHeader"
						]
					},
					{
						"name": "showFilterConfiguration",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Handles visibility of the Filters button on the filter bar.",
						"methods": [
							"getShowFilterConfiguration",
							"setShowFilterConfiguration"
						]
					}
				],
				"aggregations": [
					{
						"name": "filterItems",
						"singularName": "filterItem",
						"type": "sap.ui.comp.filterbar.FilterItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Filters belonging to the basic group.",
						"methods": [
							"getFilterItems",
							"destroyFilterItems",
							"insertFilterItem",
							"addFilterItem",
							"removeFilterItem",
							"indexOfFilterItem",
							"removeAllFilterItems"
						]
					},
					{
						"name": "filterGroupItems",
						"singularName": "filterGroupItem",
						"type": "sap.ui.comp.filterbar.FilterGroupItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Filters belonging to groups other than the basic group.",
						"methods": [
							"getFilterGroupItems",
							"destroyFilterGroupItems",
							"insertFilterGroupItem",
							"addFilterGroupItem",
							"removeFilterGroupItem",
							"indexOfFilterGroupItem",
							"removeAllFilterGroupItems"
						]
					}
				],
				"associations": [
					{
						"name": "basicSearch",
						"singularName": "basicSearch",
						"type": "sap.m.SearchField",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.30.0",
						"description": "Populates the basic search area on the filter bar and the Filters dialog.",
						"methods": [
							"getBasicSearch",
							"setBasicSearch"
						]
					}
				],
				"events": [
					{
						"name": "cancel",
						"visibility": "public",
						"description": "This event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty.",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					},
					{
						"name": "reset",
						"visibility": "public",
						"description": "This event is fired when the Restore button is pressed.",
						"parameters": {
							"selectionSet": {
								"name": "selectionSet",
								"type": "sap.ui.core.Control[]",
								"description": "Visible controls"
							}
						},
						"methods": [
							"attachReset",
							"detachReset",
							"fireReset"
						]
					},
					{
						"name": "search",
						"visibility": "public",
						"description": "This event is fired when the Go button is pressed.",
						"parameters": {
							"selectionSet": {
								"name": "selectionSet",
								"type": "sap.ui.core.Control[]",
								"description": "Visible controls"
							}
						},
						"methods": [
							"attachSearch",
							"detachSearch",
							"fireSearch"
						]
					},
					{
						"name": "beforeVariantSave",
						"visibility": "public",
						"description": "This event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved\ras variant later.",
						"parameters": {
							"context": {
								"name": "context",
								"type": "string",
								"description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
							}
						},
						"methods": [
							"attachBeforeVariantSave",
							"detachBeforeVariantSave",
							"fireBeforeVariantSave"
						]
					},
					{
						"name": "beforeVariantFetch",
						"visibility": "public",
						"since": "1.28.13",
						"description": "This event is fired before a variant is fetched.",
						"methods": [
							"attachBeforeVariantFetch",
							"detachBeforeVariantFetch",
							"fireBeforeVariantFetch"
						]
					},
					{
						"name": "afterVariantLoad",
						"visibility": "public",
						"description": "This event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters\rwith data from the variant.",
						"parameters": {
							"context": {
								"name": "context",
								"type": "string",
								"description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
							}
						},
						"methods": [
							"attachAfterVariantLoad",
							"detachAfterVariantLoad",
							"fireAfterVariantLoad"
						]
					},
					{
						"name": "filterChange",
						"visibility": "public",
						"description": "This event is fired when a filter has changed.",
						"methods": [
							"attachFilterChange",
							"detachFilterChange",
							"fireFilterChange"
						]
					},
					{
						"name": "clear",
						"visibility": "public",
						"description": "This event is fired when the Clear button is pressed. The consumer has to clear all filters.",
						"parameters": {
							"selectionSet": {
								"name": "selectionSet",
								"type": "sap.ui.core.Control[]",
								"description": "Visible controls"
							}
						},
						"methods": [
							"attachClear",
							"detachClear",
							"fireClear"
						]
					},
					{
						"name": "initialise",
						"visibility": "public",
						"description": "This event is fired when the filter bar is initialized.",
						"methods": [
							"attachInitialise",
							"detachInitialise",
							"fireInitialise"
						]
					},
					{
						"name": "initialized",
						"visibility": "public",
						"since": "1.38.0",
						"description": "This event is fired after the filter bar was initialized and the standard variant was obtained. Eventual navigation related actions\rshould be triggered by this event.",
						"methods": [
							"attachInitialized",
							"detachInitialized",
							"fireInitialized"
						]
					},
					{
						"name": "afterVariantSave",
						"visibility": "public",
						"description": "This event is fired after a variant has been saved. ID of the saved variant.",
						"methods": [
							"attachAfterVariantSave",
							"detachAfterVariantSave",
							"fireAfterVariantSave"
						]
					},
					{
						"name": "filtersDialogClosed",
						"visibility": "public",
						"since": "1.34.0",
						"description": "This event is fired after the filters dialog is closed.",
						"methods": [
							"attachFiltersDialogClosed",
							"detachFiltersDialogClosed",
							"fireFiltersDialogClosed"
						]
					},
					{
						"name": "assignedFiltersChanged",
						"visibility": "public",
						"since": "1.38.0",
						"description": "This event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be\rchanged. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText</code> method.",
						"methods": [
							"attachAssignedFiltersChanged",
							"detachAssignedFiltersChanged",
							"fireAssignedFiltersChanged"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterVariantLoad",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"context": {
											"name": "context",
											"type": "string",
											"optional": false,
											"description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters\nwith data from the variant."
				},
				{
					"name": "afterVariantSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after a variant has been saved. ID of the saved variant."
				},
				{
					"name": "assignedFiltersChanged",
					"visibility": "public",
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be\nchanged. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText</code> method."
				},
				{
					"name": "beforeVariantFetch",
					"visibility": "public",
					"since": "1.28.13",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired before a variant is fetched."
				},
				{
					"name": "beforeVariantSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"context": {
											"name": "context",
											"type": "string",
											"optional": false,
											"description": "Context of the event. Can also be <code>null</code> or <code>undefined</code>"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved\nas variant later."
				},
				{
					"name": "cancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty."
				},
				{
					"name": "clear",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectionSet": {
											"name": "selectionSet",
											"type": "sap.ui.core.Control[]",
											"optional": false,
											"description": "Visible controls"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the Clear button is pressed. The consumer has to clear all filters."
				},
				{
					"name": "filterChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when a filter has changed."
				},
				{
					"name": "filtersDialogClosed",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after the filters dialog is closed."
				},
				{
					"name": "initialise",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when the filter bar is initialized."
				},
				{
					"name": "initialized",
					"visibility": "public",
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after the filter bar was initialized and the standard variant was obtained. Eventual navigation related actions\nshould be triggered by this event."
				},
				{
					"name": "reset",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectionSet": {
											"name": "selectionSet",
											"type": "sap.ui.core.Control[]",
											"optional": false,
											"description": "Visible controls"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the Restore button is pressed."
				},
				{
					"name": "search",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectionSet": {
											"name": "selectionSet",
											"type": "sap.ui.core.Control[]",
											"optional": false,
											"description": "Visible controls"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the Go button is pressed."
				}
			],
			"methods": [
				{
					"name": "_getFilterInformation",
					"visibility": "protected",
					"returnValue": {
						"type": "array",
						"description": "of filter information"
					},
					"description": "Provides filter information for lazy instantiation"
				},
				{
					"name": "addFilterGroupItem",
					"visibility": "public",
					"parameters": [
						{
							"name": "oFilterGroupItem",
							"type": "sap.ui.comp.filterbar.FilterGroupItem",
							"optional": false,
							"description": "Belongs to any group other than basic"
						}
					],
					"description": "Adds a <code>FilterGroupItem</code> element to the aggregation <code>filterGroupItems</code>."
				},
				{
					"name": "addFilterItem",
					"visibility": "public",
					"parameters": [
						{
							"name": "oFilterItem",
							"type": "sap.ui.comp.filterbar.FilterItem",
							"optional": false,
							"description": "Belongs to the basic group"
						}
					],
					"description": "Adds a <code>FilterItem</code> element to the aggregation <code>filterItems</code>."
				},
				{
					"name": "applyVariant",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVariant",
							"type": "object",
							"optional": false,
							"description": "JSON object"
						},
						{
							"name": "sContext",
							"type": "string",
							"optional": false,
							"description": "Describes in which context the variant is applied. The context is passed on to the application via the\n       afterVariantLoad event"
						},
						{
							"name": "bInitial",
							"type": "boolean",
							"optional": false,
							"description": "indicates if the apply was executed during the initialization phase."
						}
					],
					"description": "Applies the variant. This method is executed from the {@link sap.ui.comp.smartvariants.SmartVariantManagement SmartVariantManagement} control."
				},
				{
					"name": "attachAfterVariantLoad",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantLoad</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters\nwith data from the variant."
				},
				{
					"name": "attachAfterVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantSave</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after a variant has been saved. ID of the saved variant."
				},
				{
					"name": "attachAssignedFiltersChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>assignedFiltersChanged</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be\nchanged. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText</code> method."
				},
				{
					"name": "attachBeforeVariantFetch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.13",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeVariantFetch</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired before a variant is fetched."
				},
				{
					"name": "attachBeforeVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeVariantSave</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved\nas variant later."
				},
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>cancel</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty."
				},
				{
					"name": "attachClear",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>clear</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Clear button is pressed. The consumer has to clear all filters."
				},
				{
					"name": "attachFilterChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>filterChange</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when a filter has changed."
				},
				{
					"name": "attachFiltersDialogClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>filtersDialogClosed</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after the filters dialog is closed."
				},
				{
					"name": "attachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialise</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the filter bar is initialized."
				},
				{
					"name": "attachInitialized",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialized</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired after the filter bar was initialized and the standard variant was obtained. Eventual navigation related actions\nshould be triggered by this event."
				},
				{
					"name": "attachReset",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>reset</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Restore button is pressed."
				},
				{
					"name": "attachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>search</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar</code> itself.\n\nThis event is fired when the Go button is pressed."
				},
				{
					"name": "clearVariantSelection",
					"visibility": "public",
					"description": "Resets the current selection in the variant management control to standard."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destroys the control."
				},
				{
					"name": "destroyFilterGroupItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the filterGroupItems in the aggregation <code>filterGroupItems</code>."
				},
				{
					"name": "destroyFilterItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the filterItems in the aggregation <code>filterItems</code>."
				},
				{
					"name": "detachAfterVariantLoad",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantLoad</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantSave</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAssignedFiltersChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>assignedFiltersChanged</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeforeVariantFetch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.13",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeVariantFetch</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeforeVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeVariantSave</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>cancel</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachClear",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>clear</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFilterChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>filterChange</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFiltersDialogClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>filtersDialogClosed</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialise</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInitialized",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialized</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachReset",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>reset</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>search</code> event of this <code>sap.ui.comp.filterbar.FilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "determineControlByFilterItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The corresponding control. If no match is found <code>null</code> is returned."
					},
					"parameters": [
						{
							"name": "oFilterItem",
							"type": "sap.ui.comp.filterbar.FilterItem",
							"optional": false,
							"description": "From the aggregations"
						}
					],
					"description": "Retrieves the control associated to the filter."
				},
				{
					"name": "determineControlByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The corresponding control, if no match is found, <code>null</code> is returned."
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the filter."
						},
						{
							"name": "sGroupName",
							"type": "string",
							"optional": false,
							"description": "Group name of the filter; <code>null</code> for filter that belongs to basic group."
						}
					],
					"description": "Retrieves the control based on the name and group name."
				},
				{
					"name": "determineMandatoryFilterItems",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "Of visible mandatory filters"
					},
					"description": "Retrieves the mandatory filters."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.filterbar.FilterBar with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.Grid.extend}."
				},
				{
					"name": "fetchVariant",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "JSON object"
					},
					"parameters": [
						{
							"name": "bConsiderInvisibleFilters",
							"type": "boolean",
							"optional": false,
							"description": "Indicates if invisible filters should be considered"
						}
					],
					"description": "Creates and returns the variant representation. This method is executed from the SmartVariantManagement control."
				},
				{
					"name": "fireAfterVariantSave",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterVariantSave</code> to attached listeners."
				},
				{
					"name": "fireAssignedFiltersChanged",
					"visibility": "public",
					"description": "Notifies about a filter change. Is the indicator that the text of filters with values may be changed."
				},
				{
					"name": "fireBeforeVariantFetch",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.13",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>beforeVariantFetch</code> to attached listeners."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>cancel</code> to attached listeners."
				},
				{
					"name": "fireClear",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>clear</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionSet</code> of type <code>sap.ui.core.Control[]</code>Visible controls</li>\n</ul>"
				},
				{
					"name": "fireFiltersDialogClosed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>filtersDialogClosed</code> to attached listeners."
				},
				{
					"name": "fireInitialise",
					"visibility": "public",
					"description": "This method has to be called by the consumer to indicate that the data model is available."
				},
				{
					"name": "fireInitialized",
					"visibility": "public",
					"description": "This method will be called by the smart variant mangement and it indicates, that the standard variant was obtained."
				},
				{
					"name": "fireReset",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>reset</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionSet</code> of type <code>sap.ui.core.Control[]</code>Visible controls</li>\n</ul>"
				},
				{
					"name": "fireSearch",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>search</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionSet</code> of type <code>sap.ui.core.Control[]</code>Visible controls</li>\n</ul>"
				},
				{
					"name": "getAdvancedMode",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>advancedMode</code>"
					},
					"description": "Gets current value of property <code>advancedMode</code>.\n\nThe advanced mode overwrites the standard behavior and is used in the value help scenario.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getAllFilterItems",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "filters Of the current variant"
					},
					"parameters": [
						{
							"name": "bConsiderOnlyVisibleFields",
							"type": "boolean",
							"optional": false,
							"description": "Indicates that only visible filters are retrieved"
						}
					],
					"description": "Retrieves filters belonging to the current variant."
				},
				{
					"name": "getBasicSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.SearchField"
					},
					"since": "1.30.0",
					"description": "ID of the element which is the current target of the association <code>basicSearch</code>, or <code>null</code>."
				},
				{
					"name": "getConsiderGroupTitle",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>considerGroupTitle</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>considerGroupTitle</code>.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getCurrentVariantId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "ID of the current variant"
					},
					"since": "1.28.0",
					"description": "Retrieves the current variant ID."
				},
				{
					"name": "getDataSuiteFormat",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "JSON string representing the selection variant for UI navigation; <code>null</code> otherwise"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bConsiderAllFilters",
							"type": "boolean",
							"optional": false,
							"description": "also include empty/invisible fields filter data"
						}
					],
					"description": "Retrieves the current variant as selection variant for UI navigation"
				},
				{
					"name": "getDeltaVariantMode",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>deltaVariantMode</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>deltaVariantMode</code>.\n\nStores the delta as compared to the standard variant.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getFilterBarExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>filterBarExpanded</code>"
					},
					"since": "1.26.1",
					"description": "Gets current value of property <code>filterBarExpanded</code>.\n\nShows/hides the filter row.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getFilterContainerWidth",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>filterContainerWidth</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>filterContainerWidth</code>.\n\nSets the width of the filters container.\n\nDefault value is <code>12rem</code>."
				},
				{
					"name": "getFilterGroupItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterGroupItem[]"
					},
					"description": "Gets content of aggregation <code>filterGroupItems</code>.\n\nFilters belonging to groups other than the basic group."
				},
				{
					"name": "getFilterItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem[]"
					},
					"description": "Gets content of aggregation <code>filterItems</code>.\n\nFilters belonging to the basic group."
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>header</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>header</code>.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar</code>\nis set to <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.filterbar.FilterBar."
				},
				{
					"name": "getPersistencyKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>persistencyKey</code>"
					},
					"description": "Gets current value of property <code>persistencyKey</code>.\n\nKey used to access personalization data."
				},
				{
					"name": "getSearchEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>searchEnabled</code>"
					},
					"description": "Gets current value of property <code>searchEnabled</code>.\n\nEnables/disables the Search button.\n\nDefault value is <code>true</code>.",
					"deprecated": {
						"since": "1.32.0"
					}
				},
				{
					"name": "getShowClearButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showClearButton</code>"
					},
					"since": "1.26.1",
					"description": "Gets current value of property <code>showClearButton</code>.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowClearOnFB",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showClearOnFB</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>showClearOnFB</code>.\n\nHandles visibility of the Clear button on the filter bar.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowFilterConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showFilterConfiguration</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>showFilterConfiguration</code>.\n\nHandles visibility of the Filters button on the filter bar.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowGoOnFB",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showGoOnFB</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>showGoOnFB</code>.\n\nHandles visibility of the Go button on the filter bar.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowRestoreButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showRestoreButton</code>"
					},
					"since": "1.26.1",
					"description": "Gets current value of property <code>showRestoreButton</code>.\n\nHandles visibility of the Restore button on the Filters dialog.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowRestoreOnFB",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showRestoreOnFB</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>showRestoreOnFB</code>.\n\nHandles visibility of the Restore button on the filter bar.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getUseToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useToolbar</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>useToolbar</code>.\n\nDetermines what design should be used. Default is the design with the toolbar. In mobile scenarios this property is ignored - the\ndesign with the toolbar will be used.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "indexOfFilterGroupItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFilterGroupItem",
							"type": "sap.ui.comp.filterbar.FilterGroupItem",
							"optional": false,
							"description": "The filterGroupItem whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.filterbar.FilterGroupItem</code> in the aggregation <code>filterGroupItems</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfFilterItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFilterItem",
							"type": "sap.ui.comp.filterbar.FilterItem",
							"optional": false,
							"description": "The filterItem whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.filterbar.FilterItem</code> in the aggregation <code>filterItems</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertFilterGroupItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilterGroupItem",
							"type": "sap.ui.comp.filterbar.FilterGroupItem",
							"optional": false,
							"description": "the filterGroupItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the filterGroupItem should be inserted at; for\n             a negative value of <code>iIndex</code>, the filterGroupItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filterGroupItem is inserted at\n             the last position"
						}
					],
					"description": "Inserts a filterGroupItem into the aggregation <code>filterGroupItems</code>."
				},
				{
					"name": "insertFilterItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilterItem",
							"type": "sap.ui.comp.filterbar.FilterItem",
							"optional": false,
							"description": "the filterItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the filterItem should be inserted at; for\n             a negative value of <code>iIndex</code>, the filterItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filterItem is inserted at\n             the last position"
						}
					],
					"description": "Inserts a filterItem into the aggregation <code>filterItems</code>."
				},
				{
					"name": "registerApplyData",
					"visibility": "public",
					"parameters": [
						{
							"name": "fCallBack",
							"type": "function",
							"optional": false,
							"description": "Called when a variant must be applied"
						}
					],
					"description": "Registration of a callback function. The provided callback function is executed when a variant must be applied. The callback function will\nreceive the corresponding data set containing all relevant data in JSON, as initially provided by the callback for fetchData."
				},
				{
					"name": "registerFetchData",
					"visibility": "public",
					"parameters": [
						{
							"name": "fCallBack",
							"type": "function",
							"optional": false,
							"description": "Called when a variant must be fetched"
						}
					],
					"description": "Registration of a callback function. The provided callback function is executed when saving a variant is triggered and must provide all\nrelevant fields and values in JSON."
				},
				{
					"name": "registerGetFiltersWithValues",
					"visibility": "public",
					"since": "1.26.1",
					"parameters": [
						{
							"name": "fCallBack",
							"type": "function",
							"optional": false,
							"description": "Called when a variant must be applied"
						}
					],
					"description": "Registration of a callback function. The provided callback function is executed to obtain the filters with values."
				},
				{
					"name": "removeAllFilterGroupItems",
					"visibility": "public",
					"description": "Removes all entries in the aggregation filterGroupItems."
				},
				{
					"name": "removeAllFilterItems",
					"visibility": "public",
					"description": "Removes all entries in the aggregation filterItems."
				},
				{
					"name": "removeAllFilters",
					"visibility": "public",
					"description": "Removes all entries in the aggregations filterItems, filterGroupItems, basicSearch"
				},
				{
					"name": "removeBasicSearch",
					"visibility": "public",
					"since": "1.30.0",
					"description": "Removes the association basicSearch."
				},
				{
					"name": "removeFilterGroupItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterGroupItem",
						"description": "The removed filterGroupItem or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vFilterGroupItem",
							"type": "int|string|sap.ui.comp.filterbar.FilterGroupItem",
							"optional": false,
							"description": "The filterGroupItemto remove or its index or id"
						}
					],
					"description": "Removes a filterGroupItem from the aggregation <code>filterGroupItems</code>."
				},
				{
					"name": "removeFilterItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "The removed filterItem or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vFilterItem",
							"type": "int|string|sap.ui.comp.filterbar.FilterItem",
							"optional": false,
							"description": "The filterItemto remove or its index or id"
						}
					],
					"description": "Removes a filterItem from the aggregation <code>filterItems</code>."
				},
				{
					"name": "retrieveFiltersWithValues",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "Filter labels that represents relevant filters with values"
					},
					"description": "Retrieves the labels of all visible filters that belongs to the current variant and have an assigned value."
				},
				{
					"name": "retrieveFiltersWithValuesAsText",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "Filter labels that represents relevant filters with values"
					},
					"description": "Retrieves the labels of all visible filters that belongs to the current variant and have an assigned value."
				},
				{
					"name": "setAdvancedMode",
					"visibility": "public",
					"parameters": [
						{
							"name": "bFlag",
							"type": "boolean",
							"optional": false,
							"description": "Sets the advanced mode"
						}
					],
					"description": "The advanced mode is only relevant for the value help scenario. UI representation is different from the standard filter bar."
				},
				{
					"name": "setBasicSearch",
					"visibility": "public",
					"parameters": [
						{
							"name": "oBasicSearchField",
							"type": "sap.m.SearchField",
							"optional": false,
							"description": "Control"
						}
					],
					"description": "Adds a basic search field to the toolbar."
				},
				{
					"name": "setConsiderGroupTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bConsiderGroupTitle",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>considerGroupTitle</code>"
						}
					],
					"description": "Sets a new value for property <code>considerGroupTitle</code>.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setCurrentVariantId",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sVariantId",
							"type": "string",
							"optional": false,
							"description": "ID of the variant"
						},
						{
							"name": "bDoNotApplyVariant",
							"type": "boolean",
							"optional": false,
							"description": "If set to <code>true</code>, the <code>applyVariant</code> method is not executed yet. Relevant during\n       navigation, when called before the initialise event has been executed."
						}
					],
					"description": "Sets the current variant ID."
				},
				{
					"name": "setDataSuiteFormat",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sSuiteData",
							"type": "string",
							"optional": false,
							"description": "Represents the selection variants for UI navigation"
						},
						{
							"name": "bReplace",
							"type": "boolean",
							"optional": false,
							"description": "Replaces existing filter data"
						}
					],
					"description": "Sets the selection variant for UI navigation to FilterBar."
				},
				{
					"name": "setDeltaVariantMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bDeltaVariantMode",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>deltaVariantMode</code>"
						}
					],
					"description": "Sets a new value for property <code>deltaVariantMode</code>.\n\nStores the delta as compared to the standard variant.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setFilterBarExpanded",
					"visibility": "public",
					"since": "1.26.1",
					"parameters": [
						{
							"name": "bShowExpanded",
							"type": "boolean",
							"optional": false,
							"description": "Mode"
						}
					],
					"description": "Sets filterbar in collapsed/expanded mode."
				},
				{
					"name": "setFilterContainerWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sFilterContainerWidth",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>filterContainerWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>filterContainerWidth</code>.\n\nSets the width of the filters container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12rem</code>."
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "sHeader",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>header</code>"
						}
					],
					"description": "Sets a new value for property <code>header</code>.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar</code>\nis set to <code>false</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPersistencyKey",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPersistenceKey",
							"type": "string",
							"optional": false,
							"description": "ID for persistency"
						}
					],
					"description": "Sets the persistency key."
				},
				{
					"name": "setShowClearButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "bShowClearButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showClearButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showClearButton</code>.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowClearOnFB",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bFlag",
							"type": "boolean",
							"optional": false,
							"description": "State of visibility"
						}
					],
					"description": "Handles the visibility for the Clear button in the filter bar. On phone devices, the value is always treated as false."
				},
				{
					"name": "setShowGoOnFB",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bFlag",
							"type": "boolean",
							"optional": false,
							"description": "State of visibility"
						}
					],
					"description": "Handles the visibility of the Go button on filter bar."
				},
				{
					"name": "setShowRestoreButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "bShowRestoreButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showRestoreButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showRestoreButton</code>.\n\nHandles visibility of the Restore button on the Filters dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowRestoreOnFB",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bFlag",
							"type": "boolean",
							"optional": false,
							"description": "State of visibility"
						}
					],
					"description": "Handles the visibility of the Restore button in the filter bar. On phone devices, the value is always treated as false."
				},
				{
					"name": "setUseToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bUseToolbar",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useToolbar</code>"
						}
					],
					"description": "Sets a new value for property <code>useToolbar</code>.\n\nDetermines what design should be used. Default is the design with the toolbar. In mobile scenarios this property is ignored - the\ndesign with the toolbar will be used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.filterbar.FilterGroupItem",
			"basename": "FilterGroupItem",
			"resource": "sap/ui/comp/filterbar/FilterGroupItem.js",
			"module": "sap/ui/comp/filterbar/FilterGroupItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.comp.filterbar.FilterItem",
			"description": "Represents a filter belonging to a group other than basic.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "groupTitle",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Title of the group.",
						"methods": [
							"getGroupTitle",
							"setGroupTitle"
						]
					},
					{
						"name": "groupName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Name of the group.",
						"methods": [
							"getGroupName",
							"setGroupName"
						]
					},
					{
						"name": "visibleInAdvancedArea",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24.0",
						"description": "If set to true, this filter is visible on the filter bar by default.\nMapped against the <code>visibleInFilterBar</code> property.",
						"deprecated": {
							"since": "1.26.1",
							"text": "Replaced by property <code>visibleInFilterBar</code>"
						},
						"methods": [
							"getVisibleInAdvancedArea",
							"setVisibleInAdvancedArea"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new filterbar/FilterGroupItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destroys this element."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.filterbar.FilterGroupItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterItem.extend}."
				},
				{
					"name": "getGroupName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>groupName</code>"
					},
					"description": "Gets current value of property <code>groupName</code>.\n\nName of the group."
				},
				{
					"name": "getGroupTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>groupTitle</code>"
					},
					"description": "Gets current value of property <code>groupTitle</code>.\n\nTitle of the group."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.filterbar.FilterGroupItem."
				},
				{
					"name": "setGroupName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterGroupItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sGroupName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>groupName</code>"
						}
					],
					"description": "Sets a new value for property <code>groupName</code>.\n\nName of the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setGroupTitle",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "Group title"
						}
					],
					"description": "Setter for group title."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.filterbar.FilterItem",
			"basename": "FilterItem",
			"resource": "sap/ui/comp/filterbar/FilterItem.js",
			"module": "sap/ui/comp/filterbar/FilterItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Represents a filter belonging to the basic group.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Label of the filter.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Name of the filter. This is an identifier for the filter and has to be unique.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "mandatory",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Mandatory flag.",
						"methods": [
							"getMandatory",
							"setMandatory"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Visibility state of the filter.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "labelTooltip",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Tooltip for the filter.",
						"methods": [
							"getLabelTooltip",
							"setLabelTooltip"
						]
					},
					{
						"name": "partOfCurrentVariant",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.1",
						"description": "Determines if a filter is part of the currently selected variant. This property is ONLY used internally and must not be used by the\nfilter bar consumers.",
						"methods": [
							"getPartOfCurrentVariant",
							"setPartOfCurrentVariant"
						]
					},
					{
						"name": "visibleInFilterBar",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.1",
						"description": "Controls the visibility of a filter item in the filter bar.",
						"methods": [
							"getVisibleInFilterBar",
							"setVisibleInFilterBar"
						]
					}
				],
				"aggregations": [
					{
						"name": "control",
						"singularName": "control",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The control of the filter.",
						"methods": [
							"getControl",
							"destroyControl",
							"setControl"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "This event is fired when one of the properties is changed.",
						"parameters": {
							"propertyName": {
								"name": "propertyName",
								"type": "string",
								"description": "Name of the changed property"
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new filterbar/FilterItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyName": {
											"name": "propertyName",
											"type": "string",
											"optional": false,
											"description": "Name of the changed property"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when one of the properties is changed."
				}
			],
			"methods": [
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterItem</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.comp.filterbar.FilterItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterItem</code> itself.\n\nThis event is fired when one of the properties is changed."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destroys this element."
				},
				{
					"name": "destroyControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the control in the aggregation <code>control</code>."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.comp.filterbar.FilterItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.filterbar.FilterItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>propertyName</code> of type <code>string</code>Name of the changed property</li>\n</ul>"
				},
				{
					"name": "getControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>control</code>.\n\nThe control of the filter."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nLabel of the filter."
				},
				{
					"name": "getLabelTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>labelTooltip</code>"
					},
					"description": "Gets current value of property <code>labelTooltip</code>.\n\nTooltip for the filter."
				},
				{
					"name": "getMandatory",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>mandatory</code>"
					},
					"description": "Gets current value of property <code>mandatory</code>.\n\nMandatory flag.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.filterbar.FilterItem."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nName of the filter. This is an identifier for the filter and has to be unique."
				},
				{
					"name": "getPartOfCurrentVariant",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>partOfCurrentVariant</code>"
					},
					"since": "1.26.1",
					"description": "Gets current value of property <code>partOfCurrentVariant</code>.\n\nDetermines if a filter is part of the currently selected variant. This property is ONLY used internally and must not be used by the\nfilter bar consumers.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nVisibility state of the filter.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getVisibleInFilterBar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleInFilterBar</code>"
					},
					"since": "1.26.1",
					"description": "Gets current value of property <code>visibleInFilterBar</code>.\n\nControls the visibility of a filter item in the filter bar.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "init",
					"visibility": "public",
					"description": "Initializes the filter item."
				},
				{
					"name": "setControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The control to set"
						}
					],
					"description": "Sets the aggregated <code>control</code>."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "Label text"
						}
					],
					"description": "Setter for label."
				},
				{
					"name": "setLabelTooltip",
					"visibility": "public",
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "Tooltip text"
						}
					],
					"description": "Setter for tooltip."
				},
				{
					"name": "setMandatory",
					"visibility": "public",
					"parameters": [
						{
							"name": "bValue",
							"type": "string",
							"optional": false,
							"description": "Mandatory state"
						}
					],
					"description": "Setter for mandatory flag."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nName of the filter. This is an identifier for the filter and has to be unique.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPartOfCurrentVariant",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "bPartOfCurrentVariant",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>partOfCurrentVariant</code>"
						}
					],
					"description": "Sets a new value for property <code>partOfCurrentVariant</code>.\n\nDetermines if a filter is part of the currently selected variant. This property is ONLY used internally and must not be used by the\nfilter bar consumers.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "State of visibility"
						}
					],
					"description": "Setter for visible property."
				},
				{
					"name": "setVisibleInFilterBar",
					"visibility": "public",
					"since": "1.26.1",
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "State of visibility in filter bar"
						}
					],
					"description": "Setter for visible in filter bar."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.navpopover.LinkData",
			"basename": "LinkData",
			"resource": "sap/ui/comp/navpopover/LinkData.js",
			"module": "sap/ui/comp/navpopover/LinkData",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Stores display text together with a navigation target hyperlink.<br>\n       The LinkData class is used by {@link sap.ui.comp.navpopover.SmartLink SmartLink} and\n       {@link sap.ui.comp.navpopover.SemanticObjectController SemanticObjectController} to define the visible links on\n       {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover}.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Text which can be displayed on the UI",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "href",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Destination link for a navigation operation in internal format. <b>Note</b>: The link will be encoded before it is shown in external\nformat using the <code>hrefForExternal</code> method of the CrossApplicationNavigation service.",
						"methods": [
							"getHref",
							"setHref"
						]
					},
					{
						"name": "target",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The standard values for the <code>target</code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name\ncan be entered. This property is only used if the <code>href</code> property is set.",
						"methods": [
							"getTarget",
							"setTarget"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new navpopover/LinkData.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.navpopover.LinkData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getHref",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>href</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>href</code>.\n\nDestination link for a navigation operation in internal format. <b>Note</b>: The link will be encoded before it is shown in external\nformat using the <code>hrefForExternal</code> method of the CrossApplicationNavigation service."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.navpopover.LinkData."
				},
				{
					"name": "getTarget",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>target</code>"
					},
					"description": "Gets current value of property <code>target</code>.\n\nThe standard values for the <code>target</code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name\ncan be entered. This property is only used if the <code>href</code> property is set."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>text</code>.\n\nText which can be displayed on the UI"
				},
				{
					"name": "setHref",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sHref",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>href</code>"
						}
					],
					"description": "Sets a new value for property <code>href</code>.\n\nDestination link for a navigation operation in internal format. <b>Note</b>: The link will be encoded before it is shown in external\nformat using the <code>hrefForExternal</code> method of the CrossApplicationNavigation service.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTarget",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>target</code>"
						}
					],
					"description": "Sets a new value for property <code>target</code>.\n\nThe standard values for the <code>target</code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name\ncan be entered. This property is only used if the <code>href</code> property is set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nText which can be displayed on the UI\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.navpopover.NavigationPopover",
			"basename": "NavigationPopover",
			"resource": "sap/ui/comp/navpopover/NavigationPopover.js",
			"module": "sap/ui/comp/navpopover/NavigationPopover",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Popover",
			"description": "The NavigationPopover allows navigating to different destinations by providing links on a popover.<br>\n       The links are fetched using the {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} service of the unified\n       shell.<br>\n       This class gets instantiated by {@link sap.ui.comp.navpopover.SmartLink SmartLink}. It is recommended to use\n       {@link sap.ui.comp.navpopover.SmartLink SmartLink} instead of creating NavigationPopover manually.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "popover title",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "semanticObjectName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "the name of the semantic object",
						"methods": [
							"getSemanticObjectName",
							"setSemanticObjectName"
						]
					},
					{
						"name": "semanticAttributes",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "describes the semantic attributes. The attribute has to be a map",
						"methods": [
							"getSemanticAttributes",
							"setSemanticAttributes"
						]
					},
					{
						"name": "appStateKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The application state key passed to retrieve the navigation targets.",
						"methods": [
							"getAppStateKey",
							"setAppStateKey"
						]
					},
					{
						"name": "mainNavigationId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Sets the visible text for the main navigation. If empty, the navigationPopover will try to get the Id from the given sourceObject.",
						"methods": [
							"getMainNavigationId",
							"setMainNavigationId"
						]
					}
				],
				"aggregations": [
					{
						"name": "availableActions",
						"singularName": "availableAction",
						"type": "sap.ui.comp.navpopover.LinkData",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.28.0",
						"description": "A list of available actions shown to the user.",
						"methods": [
							"getAvailableActions",
							"destroyAvailableActions",
							"insertAvailableAction",
							"addAvailableAction",
							"removeAvailableAction",
							"indexOfAvailableAction",
							"removeAllAvailableActions"
						]
					},
					{
						"name": "mainNavigation",
						"singularName": "mainNavigation",
						"type": "sap.ui.comp.navpopover.LinkData",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The main navigation displayed first on the popover.",
						"methods": [
							"getMainNavigation",
							"destroyMainNavigation",
							"setMainNavigation"
						]
					},
					{
						"name": "ownNavigation",
						"singularName": "ownNavigation",
						"type": "sap.ui.comp.navpopover.LinkData",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The navigation taking the user back to the source application.",
						"methods": [
							"getOwnNavigation",
							"destroyOwnNavigation",
							"setOwnNavigation"
						]
					}
				],
				"associations": [
					{
						"name": "source",
						"singularName": "source",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Source control for which the popover is displayed.",
						"methods": [
							"getSource",
							"setSource"
						]
					},
					{
						"name": "extraContent",
						"singularName": "extraContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.28.0",
						"description": "ExtraContent is displayed between the main navigation and the additional available links.",
						"methods": [
							"getExtraContent",
							"setExtraContent"
						]
					},
					{
						"name": "component",
						"singularName": "component",
						"type": "sap.ui.core.Element",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The parent component.",
						"methods": [
							"getComponent",
							"setComponent"
						]
					}
				],
				"events": [
					{
						"name": "targetsObtained",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The navigation targets that are shown.",
						"methods": [
							"attachTargetsObtained",
							"detachTargetsObtained",
							"fireTargetsObtained"
						]
					},
					{
						"name": "navigate",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event is triggered when a link is pressed.",
						"methods": [
							"attachNavigate",
							"detachNavigate",
							"fireNavigate"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new navpopover/NavigationPopover.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "navigate",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is triggered when a link is pressed."
				},
				{
					"name": "targetsObtained",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The navigation targets that are shown."
				}
			],
			"methods": [
				{
					"name": "addAvailableAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oAvailableAction",
							"type": "sap.ui.comp.navpopover.LinkData",
							"optional": false,
							"description": "the availableAction to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some availableAction to the aggregation <code>availableActions</code>."
				},
				{
					"name": "attachNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>navigate</code> event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself.\n\nEvent is triggered when a link is pressed."
				},
				{
					"name": "attachTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>targetsObtained</code> event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover</code> itself.\n\nThe navigation targets that are shown."
				},
				{
					"name": "destroyAvailableActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"description": "Destroys all the availableActions in the aggregation <code>availableActions</code>."
				},
				{
					"name": "destroyMainNavigation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"description": "Destroys the mainNavigation in the aggregation <code>mainNavigation</code>."
				},
				{
					"name": "destroyOwnNavigation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"description": "Destroys the ownNavigation in the aggregation <code>ownNavigation</code>."
				},
				{
					"name": "detachNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>navigate</code> event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>targetsObtained</code> event of this <code>sap.ui.comp.navpopover.NavigationPopover</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopover with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Popover.extend}."
				},
				{
					"name": "fireNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>navigate</code> to attached listeners."
				},
				{
					"name": "fireTargetsObtained",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>targetsObtained</code> to attached listeners."
				},
				{
					"name": "getAppStateKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>appStateKey</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>appStateKey</code>.\n\nThe application state key passed to retrieve the navigation targets."
				},
				{
					"name": "getAvailableActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData[]"
					},
					"since": "1.28.0",
					"description": "Gets content of aggregation <code>availableActions</code>.\n\nA list of available actions shown to the user."
				},
				{
					"name": "getComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element"
					},
					"description": "ID of the element which is the current target of the association <code>component</code>, or <code>null</code>."
				},
				{
					"name": "getExtraContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"since": "1.28.0",
					"description": "ID of the element which is the current target of the association <code>extraContent</code>, or <code>null</code>."
				},
				{
					"name": "getMainNavigation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData"
					},
					"since": "1.28.0",
					"description": "Gets content of aggregation <code>mainNavigation</code>.\n\nThe main navigation displayed first on the popover."
				},
				{
					"name": "getMainNavigationId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>mainNavigationId</code>"
					},
					"description": "Gets current value of property <code>mainNavigationId</code>.\n\nSets the visible text for the main navigation. If empty, the navigationPopover will try to get the Id from the given sourceObject."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopover."
				},
				{
					"name": "getOwnNavigation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData"
					},
					"since": "1.28.0",
					"description": "Gets content of aggregation <code>ownNavigation</code>.\n\nThe navigation taking the user back to the source application."
				},
				{
					"name": "getSemanticAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>semanticAttributes</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>semanticAttributes</code>.\n\ndescribes the semantic attributes. The attribute has to be a map"
				},
				{
					"name": "getSemanticObjectName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>semanticObjectName</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>semanticObjectName</code>.\n\nthe name of the semantic object"
				},
				{
					"name": "getSource",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"since": "1.28.0",
					"description": "ID of the element which is the current target of the association <code>source</code>, or <code>null</code>."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>title</code>.\n\npopover title"
				},
				{
					"name": "indexOfAvailableAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oAvailableAction",
							"type": "sap.ui.comp.navpopover.LinkData",
							"optional": false,
							"description": "The availableAction whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.navpopover.LinkData</code> in the aggregation <code>availableActions</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertAvailableAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oAvailableAction",
							"type": "sap.ui.comp.navpopover.LinkData",
							"optional": false,
							"description": "the availableAction to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the availableAction should be inserted at; for\n             a negative value of <code>iIndex</code>, the availableAction is inserted at position 0; for a value\n             greater than the current size of the aggregation, the availableAction is inserted at\n             the last position"
						}
					],
					"description": "Inserts a availableAction into the aggregation <code>availableActions</code>."
				},
				{
					"name": "removeAllAvailableActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.28.0",
					"description": "Removes all the controls from the aggregation <code>availableActions</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAvailableAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.LinkData",
						"description": "The removed availableAction or <code>null</code>"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "vAvailableAction",
							"type": "int|string|sap.ui.comp.navpopover.LinkData",
							"optional": false,
							"description": "The availableActionto remove or its index or id"
						}
					],
					"description": "Removes a availableAction from the aggregation <code>availableActions</code>."
				},
				{
					"name": "retrieveNavTargets",
					"visibility": "public",
					"parameters": [
						{
							"name": "sSemanticObject",
							"type": "string",
							"optional": false,
							"description": "name of the semantical object"
						}
					],
					"description": "determines the potential navigation targets for the semantical object and visualize the popover"
				},
				{
					"name": "setAppStateKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sAppStateKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>appStateKey</code>"
						}
					],
					"description": "Sets a new value for property <code>appStateKey</code>.\n\nThe application state key passed to retrieve the navigation targets.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oComponent",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "Id of an element which becomes the new target of this component association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>component</code>."
				},
				{
					"name": "setExtraContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oExtraContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this extraContent association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>extraContent</code>."
				},
				{
					"name": "setMainNavigation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oMainNavigation",
							"type": "sap.ui.comp.navpopover.LinkData",
							"optional": false,
							"description": "The mainNavigation to set"
						}
					],
					"description": "Sets the aggregated <code>mainNavigation</code>."
				},
				{
					"name": "setMainNavigationId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMainNavigationId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>mainNavigationId</code>"
						}
					],
					"description": "Sets a new value for property <code>mainNavigationId</code>.\n\nSets the visible text for the main navigation. If empty, the navigationPopover will try to get the Id from the given sourceObject.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setOwnNavigation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oOwnNavigation",
							"type": "sap.ui.comp.navpopover.LinkData",
							"optional": false,
							"description": "The ownNavigation to set"
						}
					],
					"description": "Sets the aggregated <code>ownNavigation</code>."
				},
				{
					"name": "setSemanticAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oSemanticAttributes",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>semanticAttributes</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticAttributes</code>.\n\ndescribes the semantic attributes. The attribute has to be a map\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSemanticObjectName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sSemanticObjectName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>semanticObjectName</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticObjectName</code>.\n\nthe name of the semantic object\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSource",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oSource",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this source association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>source</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopover",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\npopover title\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "show",
					"visibility": "public",
					"description": "displays the popover. This method should be called, once all navigation targets are adapted by the application"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.navpopover.NavigationPopoverHandler",
			"basename": "NavigationPopoverHandler",
			"resource": "sap/ui/comp/navpopover/NavigationPopoverHandler.js",
			"module": "sap/ui/comp/navpopover/NavigationPopoverHandler",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.ManagedObject",
			"description": "The NavigationPopoverHandler control uses a semantic object to display\n       {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further navigation steps.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "semanticObject",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36.0",
						"description": "Name of semantic object which is used to fill the navigation popover.",
						"methods": [
							"getSemanticObject",
							"setSemanticObject"
						]
					},
					{
						"name": "semanticObjectController",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36.0",
						"description": "The semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set\nmanually, it tries to find a SemanticObjectController in its parent hierarchy.",
						"methods": [
							"getSemanticObjectController",
							"setSemanticObjectController"
						]
					},
					{
						"name": "fieldName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36.0",
						"description": "The metadata field name for this NavigationPopoverHandler control.",
						"methods": [
							"getFieldName",
							"setFieldName"
						]
					},
					{
						"name": "semanticObjectLabel",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36.0",
						"description": "Shown label of semantic object.",
						"methods": [
							"getSemanticObjectLabel",
							"setSemanticObjectLabel"
						]
					},
					{
						"name": "mapFieldToSemanticObject",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>false</code>, the NavigationPopoverHandler control will not replace its field name with the according\n<code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several\nNavigationPopoverHandler on the same semantic object.",
						"methods": [
							"getMapFieldToSemanticObject",
							"setMapFieldToSemanticObject"
						]
					},
					{
						"name": "semanticAttributes",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "hidden",
						"since": "1.38.0",
						"description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.",
						"methods": [
							"getSemanticAttributes",
							"setSemanticAttributes"
						]
					}
				],
				"associations": [
					{
						"name": "control",
						"singularName": "control",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The parent control.",
						"methods": [
							"getControl",
							"setControl"
						]
					}
				],
				"events": [
					{
						"name": "beforePopoverOpens",
						"visibility": "public",
						"since": "1.36.0",
						"description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the\n<code>beforePopoverOpens</code> is fired after the link has been clicked.",
						"parameters": {
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object for which the navigation targets will be retrieved."
							},
							"semanticAttributes": {
								"name": "semanticAttributes",
								"type": "object",
								"description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
							},
							"setSemanticAttributes": {
								"name": "setSemanticAttributes",
								"type": "function",
								"description": "This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul>"
							},
							"setAppStateKey": {
								"name": "setAppStateKey",
								"type": "function",
								"description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul>"
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the NavigationPopoverHandler."
							},
							"open": {
								"name": "open",
								"type": "function",
								"description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code>\nfunction has to be called manually in order to open the navigation popover."
							}
						},
						"methods": [
							"attachBeforePopoverOpens",
							"detachBeforePopoverOpens",
							"fireBeforePopoverOpens"
						]
					},
					{
						"name": "navigationTargetsObtained",
						"visibility": "public",
						"since": "1.36.0",
						"description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to\nchange the targets.",
						"parameters": {
							"mainNavigation": {
								"name": "mainNavigation",
								"type": "sap.ui.comp.navpopover.LinkData",
								"description": "The main navigation object."
							},
							"actions": {
								"name": "actions",
								"type": "sap.ui.comp.navpopover.LinkData[]",
								"description": "Array of available navigation target objects."
							},
							"ownNavigation": {
								"name": "ownNavigation",
								"type": "sap.ui.comp.navpopover.LinkData",
								"description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
							},
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object for which the navigation targets have been retrieved."
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the NavigationPopoverHandler."
							},
							"show": {
								"name": "show",
								"type": "function",
								"description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example NavigationPopoverHandler).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul>"
							}
						},
						"methods": [
							"attachNavigationTargetsObtained",
							"detachNavigationTargetsObtained",
							"fireNavigationTargetsObtained"
						]
					},
					{
						"name": "innerNavigate",
						"visibility": "public",
						"since": "1.36.0",
						"description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.",
						"parameters": {
							"text": {
								"name": "text",
								"type": "string",
								"description": "The UI text shown in the clicked link."
							},
							"href": {
								"name": "href",
								"type": "string",
								"description": "The navigation target of the clicked link."
							},
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object used to retrieve this target."
							},
							"semanticAttributes": {
								"name": "semanticAttributes",
								"type": "object",
								"description": "Map containing the semantic attributes used to retrieve this target."
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the NavigationPopoverHandler."
							}
						},
						"methods": [
							"attachInnerNavigate",
							"detachInnerNavigate",
							"fireInnerNavigate"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new navpopover/NavigationPopoverHandler.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "beforePopoverOpens",
					"visibility": "public",
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object for which the navigation targets will be retrieved."
										},
										"semanticAttributes": {
											"name": "semanticAttributes",
											"type": "object",
											"optional": false,
											"description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
										},
										"setSemanticAttributes": {
											"name": "setSemanticAttributes",
											"type": "function",
											"optional": false,
											"description": "This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul>"
										},
										"setAppStateKey": {
											"name": "setAppStateKey",
											"type": "function",
											"optional": false,
											"description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul>"
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the NavigationPopoverHandler."
										},
										"open": {
											"name": "open",
											"type": "function",
											"optional": false,
											"description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code>\nfunction has to be called manually in order to open the navigation popover."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the\n<code>beforePopoverOpens</code> is fired after the link has been clicked."
				},
				{
					"name": "innerNavigate",
					"visibility": "public",
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"text": {
											"name": "text",
											"type": "string",
											"optional": false,
											"description": "The UI text shown in the clicked link."
										},
										"href": {
											"name": "href",
											"type": "string",
											"optional": false,
											"description": "The navigation target of the clicked link."
										},
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object used to retrieve this target."
										},
										"semanticAttributes": {
											"name": "semanticAttributes",
											"type": "object",
											"optional": false,
											"description": "Map containing the semantic attributes used to retrieve this target."
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the NavigationPopoverHandler."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
				},
				{
					"name": "navigationTargetsObtained",
					"visibility": "public",
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"mainNavigation": {
											"name": "mainNavigation",
											"type": "sap.ui.comp.navpopover.LinkData",
											"optional": false,
											"description": "The main navigation object."
										},
										"actions": {
											"name": "actions",
											"type": "sap.ui.comp.navpopover.LinkData[]",
											"optional": false,
											"description": "Array of available navigation target objects."
										},
										"ownNavigation": {
											"name": "ownNavigation",
											"type": "sap.ui.comp.navpopover.LinkData",
											"optional": false,
											"description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
										},
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object for which the navigation targets have been retrieved."
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the NavigationPopoverHandler."
										},
										"show": {
											"name": "show",
											"type": "function",
											"optional": false,
											"description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example NavigationPopoverHandler).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul>"
										}
									}
								}
							}
						}
					],
					"description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to\nchange the targets."
				}
			],
			"methods": [
				{
					"name": "attachBeforePopoverOpens",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforePopoverOpens</code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the\n<code>beforePopoverOpens</code> is fired after the link has been clicked."
				},
				{
					"name": "attachInnerNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>innerNavigate</code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
				},
				{
					"name": "attachNavigationTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>navigationTargetsObtained</code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to\nchange the targets."
				},
				{
					"name": "detachBeforePopoverOpens",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforePopoverOpens</code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInnerNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>innerNavigate</code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNavigationTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>navigationTargetsObtained</code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopoverHandler with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "fireBeforePopoverOpens",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>beforePopoverOpens</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object for which the navigation targets will be retrieved.</li>\n<li><code>semanticAttributes</code> of type <code>object</code>Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.</li>\n<li><code>setSemanticAttributes</code> of type <code>function</code>This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul></li>\n<li><code>setAppStateKey</code> of type <code>function</code>This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul></li>\n<li><code>originalId</code> of type <code>string</code>The ID of the NavigationPopoverHandler.</li>\n<li><code>open</code> of type <code>function</code>This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code>\nfunction has to be called manually in order to open the navigation popover.</li>\n</ul>"
				},
				{
					"name": "fireInnerNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>innerNavigate</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>text</code> of type <code>string</code>The UI text shown in the clicked link.</li>\n<li><code>href</code> of type <code>string</code>The navigation target of the clicked link.</li>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object used to retrieve this target.</li>\n<li><code>semanticAttributes</code> of type <code>object</code>Map containing the semantic attributes used to retrieve this target.</li>\n<li><code>originalId</code> of type <code>string</code>The ID of the NavigationPopoverHandler.</li>\n</ul>"
				},
				{
					"name": "fireNavigationTargetsObtained",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>navigationTargetsObtained</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>mainNavigation</code> of type <code>sap.ui.comp.navpopover.LinkData</code>The main navigation object.</li>\n<li><code>actions</code> of type <code>sap.ui.comp.navpopover.LinkData[]</code>Array of available navigation target objects.</li>\n<li><code>ownNavigation</code> of type <code>sap.ui.comp.navpopover.LinkData</code>The navigation object for the own application. This navigation option is by default not visible on the popover.</li>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object for which the navigation targets have been retrieved.</li>\n<li><code>originalId</code> of type <code>string</code>The ID of the NavigationPopoverHandler.</li>\n<li><code>show</code> of type <code>function</code>This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example NavigationPopoverHandler).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul></li>\n</ul>"
				},
				{
					"name": "getControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>control</code>, or <code>null</code>."
				},
				{
					"name": "getFieldName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>fieldName</code>"
					},
					"since": "1.36.0",
					"description": "Gets current value of property <code>fieldName</code>.\n\nThe metadata field name for this NavigationPopoverHandler control."
				},
				{
					"name": "getMapFieldToSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>mapFieldToSemanticObject</code>"
					},
					"description": "Gets current value of property <code>mapFieldToSemanticObject</code>.\n\nIf set to <code>false</code>, the NavigationPopoverHandler control will not replace its field name with the according\n<code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several\nNavigationPopoverHandler on the same semantic object.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopoverHandler."
				},
				{
					"name": "getSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>semanticObject</code>"
					},
					"since": "1.36.0",
					"description": "Gets current value of property <code>semanticObject</code>.\n\nName of semantic object which is used to fill the navigation popover."
				},
				{
					"name": "getSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>semanticObjectController</code>"
					},
					"since": "1.36.0",
					"description": "Gets current value of property <code>semanticObjectController</code>.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set\nmanually, it tries to find a SemanticObjectController in its parent hierarchy."
				},
				{
					"name": "getSemanticObjectLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>semanticObjectLabel</code>"
					},
					"since": "1.36.0",
					"description": "Gets current value of property <code>semanticObjectLabel</code>.\n\nShown label of semantic object."
				},
				{
					"name": "getSemanticObjectValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The semantic object's value."
					},
					"description": "Gets the current value assigned to the field with the NavigationPopoverHandler's semantic object name."
				},
				{
					"name": "openPopover",
					"visibility": "public",
					"description": "Opens the navigation popover."
				},
				{
					"name": "setControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this control association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>control</code>."
				},
				{
					"name": "setFieldName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "sFieldName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>fieldName</code>"
						}
					],
					"description": "Sets a new value for property <code>fieldName</code>.\n\nThe metadata field name for this NavigationPopoverHandler control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMapFieldToSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bMapFieldToSemanticObject",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>mapFieldToSemanticObject</code>"
						}
					],
					"description": "Sets a new value for property <code>mapFieldToSemanticObject</code>.\n\nIf set to <code>false</code>, the NavigationPopoverHandler control will not replace its field name with the according\n<code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several\nNavigationPopoverHandler on the same semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "sSemanticObject",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>semanticObject</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticObject</code>.\n\nName of semantic object which is used to fill the navigation popover.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oSemanticObjectController",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>semanticObjectController</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticObjectController</code>.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set\nmanually, it tries to find a SemanticObjectController in its parent hierarchy.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSemanticObjectLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.NavigationPopoverHandler",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "sSemanticObjectLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>semanticObjectLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticObjectLabel</code>.\n\nShown label of semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.navpopover.SemanticObjectController",
			"basename": "SemanticObjectController",
			"resource": "sap/ui/comp/navpopover/SemanticObjectController.js",
			"module": "sap/ui/comp/navpopover/SemanticObjectController",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The SemanticObjectController allows the user to register against semantic object navigation events as well as define semantic objects\n       which should be ignored.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "ignoredFields",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Comma-separated list of field names that must not be displayed as links.",
						"methods": [
							"getIgnoredFields",
							"setIgnoredFields"
						]
					},
					{
						"name": "prefetchNavigationTargets",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "If set to <code>true</code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for\rwhich no targets were found. Setting this value to <code>true</code> will trigger an additional roundtrip.",
						"methods": [
							"getPrefetchNavigationTargets",
							"setPrefetchNavigationTargets"
						]
					},
					{
						"name": "fieldSemanticObjectMap",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Maps the field names to the related semantic objects. When accessing this property for the first time, the mapping will be\rcalculated from the metadata within the provided model.",
						"methods": [
							"getFieldSemanticObjectMap",
							"setFieldSemanticObjectMap"
						]
					},
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The name of the entity set used. If <code>entitySet</code> has not been defined, the SemanticObjectController tries to retrieve\rthe name from its parents. <b>Note:</b> This is not a dynamic UI5 property.",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					}
				],
				"events": [
					{
						"name": "navigationTargetsObtained",
						"visibility": "public",
						"since": "1.28.0",
						"description": "After the navigation targets have been retrieved, <code>navigationTargetsObtained</code> is fired and makes it possible you to\rchange the targets.",
						"parameters": {
							"mainNavigation": {
								"name": "mainNavigation",
								"type": "sap.ui.comp.navpopover.LinkData",
								"description": "The main navigation object."
							},
							"actions": {
								"name": "actions",
								"type": "sap.ui.comp.navpopover.LinkData[]",
								"description": "Array of available navigation target objects."
							},
							"ownNavigation": {
								"name": "ownNavigation",
								"type": "sap.ui.comp.navpopover.LinkData",
								"description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
							},
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object for which the navigation targets have been retrieved."
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the control that fires this event. If <code>navigationTargetsObtained</code> is registered on the SmartLink,\r<code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If\r<code>navigationTargetsObtained</code> is registered on the SemanticObjectController, <code>originalId</code> helps to\ridentify the original SmartLink control which triggered the event."
							},
							"show": {
								"name": "show",
								"type": "function",
								"description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\rregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\r<code>show()</code>\r <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\r <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\rParameters:\r<ul>\r<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\rcalculated using binding context of given source object (such as SmartLink).</li>\r<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\r<code>mainNavigation</code> will be used.</li>\r<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross-application navigation links. If\rempty, property <code>actions</code> will be used.</li>\r<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\r</ul>"
							}
						},
						"methods": [
							"attachNavigationTargetsObtained",
							"detachNavigationTargetsObtained",
							"fireNavigationTargetsObtained"
						]
					},
					{
						"name": "beforePopoverOpens",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change\rthe parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens</code> is fired after the\rlink has been clicked.",
						"parameters": {
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object for which the navigation targets will be retrieved."
							},
							"semanticAttributes": {
								"name": "semanticAttributes",
								"type": "object",
								"description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
							},
							"setSemanticAttributes": {
								"name": "setSemanticAttributes",
								"type": "function",
								"description": "This callback function enables you to define a changed semantic attributes map. Signatures:\r<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\r<ul>\r<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\r</ul>"
							},
							"setAppStateKey": {
								"name": "setAppStateKey",
								"type": "function",
								"description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures:\r<code>setAppStateKey(sAppStateKey)</code> Parameter:\r<ul>\r<li>{string} sAppStateKey</li>\r</ul>"
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the control that fires this event. If <code>beforePopoverOpens</code> is registered on the SmartLink,\r<code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If the\r<code>beforePopoverOpens</code> is registered on the SemanticObjectController, <code>originalId</code> helps to\ridentify the original SmartLink control which triggered the event."
							},
							"open": {
								"name": "open",
								"type": "function",
								"description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\rSignatures: <code>open()</code> If <code>beforePopoverOpens</code> has been registered, <code>open</code> function\rhas to be called manually in order to open the navigation popover."
							}
						},
						"methods": [
							"attachBeforePopoverOpens",
							"detachBeforePopoverOpens",
							"fireBeforePopoverOpens"
						]
					},
					{
						"name": "navigate",
						"visibility": "public",
						"since": "1.28.0",
						"description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\rleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.",
						"parameters": {
							"text": {
								"name": "text",
								"type": "string",
								"description": "The UI text shown in the clicked link."
							},
							"href": {
								"name": "href",
								"type": "string",
								"description": "The navigation target of the clicked link."
							},
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object used to retrieve this target."
							},
							"semanticAttributes": {
								"name": "semanticAttributes",
								"type": "object",
								"description": "Map containing the semantic attributes used to retrieve this target."
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the control that fires this event. If <code>navigate</code> is registered on the SmartLink,\r<code>originalId</code> is the same as the event's source ID which is the SmartLink's ID. If <code>navigate</code> is\rregistered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control\rwhich triggered the event."
							}
						},
						"methods": [
							"attachNavigate",
							"detachNavigate",
							"fireNavigate"
						]
					},
					{
						"name": "prefetchDone",
						"visibility": "public",
						"since": "1.28.0",
						"description": "If the property <code>prefetchNavigationTargets</code> is set to <code>true</code>, event <code>prefetchDone</code> is fired\rafter all navigation targets have been retrieved.",
						"parameters": {
							"semanticObjects": {
								"name": "semanticObjects",
								"type": "object",
								"description": "A map containing all semantic objects as keys for which at least one navigation target has been found. The value for each\rsemantic object key is an array containing the available actions found for this semantic object."
							}
						},
						"methods": [
							"attachPrefetchDone",
							"detachPrefetchDone",
							"firePrefetchDone"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new navpopover/SemanticObjectController.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "beforePopoverOpens",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object for which the navigation targets will be retrieved."
										},
										"semanticAttributes": {
											"name": "semanticAttributes",
											"type": "object",
											"optional": false,
											"description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets."
										},
										"setSemanticAttributes": {
											"name": "setSemanticAttributes",
											"type": "function",
											"optional": false,
											"description": "This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul>"
										},
										"setAppStateKey": {
											"name": "setAppStateKey",
											"type": "function",
											"optional": false,
											"description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul>"
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the control that fires this event. If <code>beforePopoverOpens</code> is registered on the SmartLink,\n<code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If the\n<code>beforePopoverOpens</code> is registered on the SemanticObjectController, <code>originalId</code> helps to\nidentify the original SmartLink control which triggered the event."
										},
										"open": {
											"name": "open",
											"type": "function",
											"optional": false,
											"description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If <code>beforePopoverOpens</code> has been registered, <code>open</code> function\nhas to be called manually in order to open the navigation popover."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change\nthe parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens</code> is fired after the\nlink has been clicked."
				},
				{
					"name": "navigate",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"text": {
											"name": "text",
											"type": "string",
											"optional": false,
											"description": "The UI text shown in the clicked link."
										},
										"href": {
											"name": "href",
											"type": "string",
											"optional": false,
											"description": "The navigation target of the clicked link."
										},
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object used to retrieve this target."
										},
										"semanticAttributes": {
											"name": "semanticAttributes",
											"type": "object",
											"optional": false,
											"description": "Map containing the semantic attributes used to retrieve this target."
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the control that fires this event. If <code>navigate</code> is registered on the SmartLink,\n<code>originalId</code> is the same as the event's source ID which is the SmartLink's ID. If <code>navigate</code> is\nregistered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control\nwhich triggered the event."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
				},
				{
					"name": "navigationTargetsObtained",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"mainNavigation": {
											"name": "mainNavigation",
											"type": "sap.ui.comp.navpopover.LinkData",
											"optional": false,
											"description": "The main navigation object."
										},
										"actions": {
											"name": "actions",
											"type": "sap.ui.comp.navpopover.LinkData[]",
											"optional": false,
											"description": "Array of available navigation target objects."
										},
										"ownNavigation": {
											"name": "ownNavigation",
											"type": "sap.ui.comp.navpopover.LinkData",
											"optional": false,
											"description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
										},
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object for which the navigation targets have been retrieved."
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the control that fires this event. If <code>navigationTargetsObtained</code> is registered on the SmartLink,\n<code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If\n<code>navigationTargetsObtained</code> is registered on the SemanticObjectController, <code>originalId</code> helps to\nidentify the original SmartLink control which triggered the event."
										},
										"show": {
											"name": "show",
											"type": "function",
											"optional": false,
											"description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (such as SmartLink).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross-application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul>"
										}
									}
								}
							}
						}
					],
					"description": "After the navigation targets have been retrieved, <code>navigationTargetsObtained</code> is fired and makes it possible you to\nchange the targets."
				},
				{
					"name": "prefetchDone",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"semanticObjects": {
											"name": "semanticObjects",
											"type": "object",
											"optional": false,
											"description": "A map containing all semantic objects as keys for which at least one navigation target has been found. The value for each\nsemantic object key is an array containing the available actions found for this semantic object."
										}
									}
								}
							}
						}
					],
					"description": "If the property <code>prefetchNavigationTargets</code> is set to <code>true</code>, event <code>prefetchDone</code> is fired\nafter all navigation targets have been retrieved."
				}
			],
			"methods": [
				{
					"name": "attachBeforePopoverOpens",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforePopoverOpens</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change\nthe parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens</code> is fired after the\nlink has been clicked."
				},
				{
					"name": "attachNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>navigate</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
				},
				{
					"name": "attachNavigationTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>navigationTargetsObtained</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nAfter the navigation targets have been retrieved, <code>navigationTargetsObtained</code> is fired and makes it possible you to\nchange the targets."
				},
				{
					"name": "attachPrefetchDone",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>prefetchDone</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController</code> itself.\n\nIf the property <code>prefetchNavigationTargets</code> is set to <code>true</code>, event <code>prefetchDone</code> is fired\nafter all navigation targets have been retrieved."
				},
				{
					"name": "detachBeforePopoverOpens",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforePopoverOpens</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>navigate</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNavigationTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>navigationTargetsObtained</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPrefetchDone",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>prefetchDone</code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.navpopover.SemanticObjectController with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireBeforePopoverOpens",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>beforePopoverOpens</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object for which the navigation targets will be retrieved.</li>\n<li><code>semanticAttributes</code> of type <code>object</code>Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.</li>\n<li><code>setSemanticAttributes</code> of type <code>function</code>This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul></li>\n<li><code>setAppStateKey</code> of type <code>function</code>This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul></li>\n<li><code>originalId</code> of type <code>string</code>The ID of the control that fires this event. If <code>beforePopoverOpens</code> is registered on the SmartLink,\n<code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If the\n<code>beforePopoverOpens</code> is registered on the SemanticObjectController, <code>originalId</code> helps to\nidentify the original SmartLink control which triggered the event.</li>\n<li><code>open</code> of type <code>function</code>This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If <code>beforePopoverOpens</code> has been registered, <code>open</code> function\nhas to be called manually in order to open the navigation popover.</li>\n</ul>"
				},
				{
					"name": "fireNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>navigate</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>text</code> of type <code>string</code>The UI text shown in the clicked link.</li>\n<li><code>href</code> of type <code>string</code>The navigation target of the clicked link.</li>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object used to retrieve this target.</li>\n<li><code>semanticAttributes</code> of type <code>object</code>Map containing the semantic attributes used to retrieve this target.</li>\n<li><code>originalId</code> of type <code>string</code>The ID of the control that fires this event. If <code>navigate</code> is registered on the SmartLink,\n<code>originalId</code> is the same as the event's source ID which is the SmartLink's ID. If <code>navigate</code> is\nregistered on the SemanticObjectController, <code>originalId</code> helps to identify the original SmartLink control\nwhich triggered the event.</li>\n</ul>"
				},
				{
					"name": "fireNavigationTargetsObtained",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>navigationTargetsObtained</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>mainNavigation</code> of type <code>sap.ui.comp.navpopover.LinkData</code>The main navigation object.</li>\n<li><code>actions</code> of type <code>sap.ui.comp.navpopover.LinkData[]</code>Array of available navigation target objects.</li>\n<li><code>ownNavigation</code> of type <code>sap.ui.comp.navpopover.LinkData</code>The navigation object for the own application. This navigation option is by default not visible on the popover.</li>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object for which the navigation targets have been retrieved.</li>\n<li><code>originalId</code> of type <code>string</code>The ID of the control that fires this event. If <code>navigationTargetsObtained</code> is registered on the SmartLink,\n<code>originalId</code> is the same as the event's source ID which is also the SmartLink's ID. If\n<code>navigationTargetsObtained</code> is registered on the SemanticObjectController, <code>originalId</code> helps to\nidentify the original SmartLink control which triggered the event.</li>\n<li><code>show</code> of type <code>function</code>This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (such as SmartLink).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross-application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul></li>\n</ul>"
				},
				{
					"name": "firePrefetchDone",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>prefetchDone</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObjects</code> of type <code>object</code>A map containing all semantic objects as keys for which at least one navigation target has been found. The value for each\nsemantic object key is an array containing the available actions found for this semantic object.</li>\n</ul>"
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entitySet</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>entitySet</code>.\n\nThe name of the entity set used. If <code>entitySet</code> has not been defined, the SemanticObjectController tries to retrieve\nthe name from its parents. <b>Note:</b> This is not a dynamic UI5 property."
				},
				{
					"name": "getFieldSemanticObjectMap",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>fieldSemanticObjectMap</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>fieldSemanticObjectMap</code>.\n\nMaps the field names to the related semantic objects. When accessing this property for the first time, the mapping will be\ncalculated from the metadata within the provided model."
				},
				{
					"name": "getIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ignoredFields</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>ignoredFields</code>.\n\nComma-separated list of field names that must not be displayed as links."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.navpopover.SemanticObjectController."
				},
				{
					"name": "getPrefetchNavigationTargets",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>prefetchNavigationTargets</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>prefetchNavigationTargets</code>.\n\nIf set to <code>true</code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for\nwhich no targets were found. Setting this value to <code>true</code> will trigger an additional roundtrip.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "hasSemanticObjectLinks",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the semantic object has known navigation links"
					},
					"parameters": [
						{
							"name": "sSemanticObject",
							"type": "string",
							"optional": false
						}
					],
					"description": "Checks if the given semantic object name has a navigation link. <b>Note</b>: this method returns a valid value only after the event\n<code>prefetchDone</code> has been raised. The event <code>prefetchDone</code> is raised if the property\n<code>prefetchNavigationTargets</code> is set to <code>true</code>."
				},
				{
					"name": "registerControl",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSmartLink",
							"type": "sap.ui.comp.navpopover.SmartLink",
							"optional": false
						}
					],
					"description": "Adds the given control to the SemanticObjectController and registers all relevant events."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>entitySet</code>"
						}
					],
					"description": "Sets a new value for property <code>entitySet</code>.\n\nThe name of the entity set used. If <code>entitySet</code> has not been defined, the SemanticObjectController tries to retrieve\nthe name from its parents. <b>Note:</b> This is not a dynamic UI5 property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setFieldSemanticObjectMap",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oFieldSemanticObjectMap",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>fieldSemanticObjectMap</code>"
						}
					],
					"description": "Sets a new value for property <code>fieldSemanticObjectMap</code>.\n\nMaps the field names to the related semantic objects. When accessing this property for the first time, the mapping will be\ncalculated from the metadata within the provided model.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sIgnoredFields",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ignoredFields</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoredFields</code>.\n\nComma-separated list of field names that must not be displayed as links.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoredState",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSmartLink",
							"type": "sap.ui.comp.navpopover.SmartLink",
							"optional": false,
							"description": "the SmartLink which should be enabled or disabled."
						}
					],
					"description": "Checks if the given SmartLink has to be enabled or disabled and sets the state."
				},
				{
					"name": "setPrefetchNavigationTargets",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bPrefetchNavigationTargets",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>prefetchNavigationTargets</code>"
						}
					],
					"description": "Sets a new value for property <code>prefetchNavigationTargets</code>.\n\nIf set to <code>true</code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for\nwhich no targets were found. Setting this value to <code>true</code> will trigger an additional roundtrip.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "unregisterControl",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSmartLink",
							"type": "sap.ui.comp.navpopover.SmartLink",
							"optional": false
						}
					],
					"description": "Removes the given control from the SemanticObjectController and unregisters all relevant events."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.navpopover.SmartLink",
			"basename": "SmartLink",
			"resource": "sap/ui/comp/navpopover/SmartLink.js",
			"module": "sap/ui/comp/navpopover/SmartLink",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Link",
			"description": "The SmartLink control uses a semantic object to display {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further\n       navigation steps.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "semanticObject",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Name of semantic object which is used to fill the navigation popover. <b>Note</b>: Setting a value triggers an asynchronous\ndetermination, so the effect can be delayed.",
						"methods": [
							"getSemanticObject",
							"setSemanticObject"
						]
					},
					{
						"name": "semanticObjectController",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to\nfind a SemanticObjectController in its parent hierarchy. <b>Note</b>: Setting a value triggers an asynchronous determination, so\nthe effect can be delayed.",
						"methods": [
							"getSemanticObjectController",
							"setSemanticObjectController"
						]
					},
					{
						"name": "fieldName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The metadata field name for this SmartLink control. <b>Note</b>: Setting a value triggers an asynchronous determination, so the\neffect can be delayed.",
						"methods": [
							"getFieldName",
							"setFieldName"
						]
					},
					{
						"name": "semanticObjectLabel",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Shown label of semantic object.",
						"methods": [
							"getSemanticObjectLabel",
							"setSemanticObjectLabel"
						]
					},
					{
						"name": "createControlCallback",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Function that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are\navailable. The function has no parameters and has to return an instance of sap.ui.core.Control.",
						"methods": [
							"getCreateControlCallback",
							"setCreateControlCallback"
						]
					},
					{
						"name": "mapFieldToSemanticObject",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>false</code>, the SmartLink control will not replace its field name with the according\n<code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several\nSmartLinks on the same semantic object.",
						"methods": [
							"getMapFieldToSemanticObject",
							"setMapFieldToSemanticObject"
						]
					},
					{
						"name": "ignoreLinkRendering",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "If set to <code>true</code>, the SmartLink control will render the <code>innerControl</code> or the control provided by\n<code>createControlCallback</code> instead of the actual link. This is used for example by the SemanticObjectController if this\nSmartLink is listed in its <code>ignoredFields</code> or no navigation targets were found during prefetch. <b>Note</b>: Setting\na value triggers an asynchronous determination, so the effect can be delayed.",
						"methods": [
							"getIgnoreLinkRendering",
							"setIgnoreLinkRendering"
						]
					}
				],
				"aggregations": [
					{
						"name": "innerControl",
						"singularName": "innerControl",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Control that is displayed instead of SmartLink, if the SmartLink is disabled (for example, if no navigation targets are available).\nIf <code>innerControl</code> is not provided, the SmartLink control tries to create one with property\n<code>createControlCallback</code>.",
						"methods": [
							"getInnerControl",
							"destroyInnerControl",
							"setInnerControl"
						]
					}
				],
				"events": [
					{
						"name": "beforePopoverOpens",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of SmartLink, the <code>beforePopoverOpens</code> is fired\nafter the link has been clicked.",
						"parameters": {
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object for which the navigation targets will be retrieved."
							},
							"semanticAttributes": {
								"name": "semanticAttributes",
								"type": "object",
								"description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.\ntargets."
							},
							"setSemanticAttributes": {
								"name": "setSemanticAttributes",
								"type": "function",
								"description": "This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul>"
							},
							"setAppStateKey": {
								"name": "setAppStateKey",
								"type": "function",
								"description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul>"
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the SmartLink."
							},
							"open": {
								"name": "open",
								"type": "function",
								"description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code>\nfunction has to be called manually in order to open the navigation popover."
							}
						},
						"methods": [
							"attachBeforePopoverOpens",
							"detachBeforePopoverOpens",
							"fireBeforePopoverOpens"
						]
					},
					{
						"name": "navigationTargetsObtained",
						"visibility": "public",
						"since": "1.28.0",
						"description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to\nchange the targets.",
						"parameters": {
							"mainNavigation": {
								"name": "mainNavigation",
								"type": "sap.ui.comp.navpopover.LinkData",
								"description": "The main navigation object."
							},
							"actions": {
								"name": "actions",
								"type": "sap.ui.comp.navpopover.LinkData[]",
								"description": "Array of available navigation target objects."
							},
							"ownNavigation": {
								"name": "ownNavigation",
								"type": "sap.ui.comp.navpopover.LinkData",
								"description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
							},
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object for which the navigation targets have been retrieved."
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the SmartLink."
							},
							"show": {
								"name": "show",
								"type": "function",
								"description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example SmartLink).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul>"
							}
						},
						"methods": [
							"attachNavigationTargetsObtained",
							"detachNavigationTargetsObtained",
							"fireNavigationTargetsObtained"
						]
					},
					{
						"name": "innerNavigate",
						"visibility": "public",
						"since": "1.28.0",
						"description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.",
						"parameters": {
							"text": {
								"name": "text",
								"type": "string",
								"description": "The UI text shown in the clicked link."
							},
							"href": {
								"name": "href",
								"type": "string",
								"description": "The navigation target of the clicked link."
							},
							"semanticObject": {
								"name": "semanticObject",
								"type": "string",
								"description": "The semantic object used to retrieve this target."
							},
							"semanticAttributes": {
								"name": "semanticAttributes",
								"type": "object",
								"description": "Map containing the semantic attributes used to retrieve this target."
							},
							"originalId": {
								"name": "originalId",
								"type": "string",
								"description": "The ID of the SmartLink."
							}
						},
						"methods": [
							"attachInnerNavigate",
							"detachInnerNavigate",
							"fireInnerNavigate"
						]
					}
				],
				"annotations": [
					{
						"name": "semanticObject",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "SemanticObject",
						"defaultValue": "null",
						"appliesTo": [
							"text",
							"label",
							"value"
						],
						"since": "1.28.1",
						"description": "Defines a name of the <code>SemanticObject</code> that can be represented with a <code>Property</code> that is defined within an <code>EntityType</code>.\nThe <code>SmartLink</code> control can be created from the XML view or from the OData metadata. With this annotation in place, the\n<code>SemanticObjectController</code> will provide all the available features for the <code>SmartLink</code> control.\n\n<i>XML Example of OData V4 with SemanticObject on Product/Name</i>\n<pre>\n  &lt;Annotations Target=&quot;ProductCollection.Product/Name&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticObject&quot; String=&quot;SemanticObjectName&quot; /&gt;\n  &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "semanticKey",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"EntityType"
						],
						"annotation": "SemanticKey",
						"defaultValue": "null",
						"appliesTo": [
							"text",
							"label",
							"value"
						],
						"since": "1.28.1",
						"description": "Defines whether a property is a semantic key that allows a semantic object navigation.\n\n<i>XML Example of OData V4 with SemanticKey Annotation</i>\n<pre>\n   &lt;Annotations Target=&quot;SalesOrderType&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SemanticKey&quot;&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;SalesOrderID&lt;/PropertyPath&gt;\n         &lt;PropertyPath&gt;SalesOrderItemID&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "textArrangement",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntityType"
						],
						"annotation": "TextArrangement",
						"defaultValue": "null",
						"appliesTo": [
							"text"
						],
						"since": "1.32.1",
						"description": "Describes the arrangement of a code value and its text. A fixed or dynamic value can be provided as an enumeration by referencing to\nanother <code>Property</code> within the same <code>EntityType</code>.\n<ul>\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst</code><br>\nThe underlying control is represented with the specified description followed by its ID. </li>\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextLast</code><br>\nThe underlying control is represented with the specified ID followed by its description. </li>\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly</code><br>\nThe underlying control is represented with the specified description. </li>\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate</code><br>\nThe underlying control is represented with the specified ID. </li>\n</li>\n</ul>\n\n<i>XML Example of OData V4 with TextArrangement on ProductType</i>\n<pre>\n   &lt;Annotations Target=&quot;ProductType&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;UI.TextArrangementType/TextFirst&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new navpopover/SmartLink.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "beforePopoverOpens",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object for which the navigation targets will be retrieved."
										},
										"semanticAttributes": {
											"name": "semanticAttributes",
											"type": "object",
											"optional": false,
											"description": "Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.\ntargets."
										},
										"setSemanticAttributes": {
											"name": "setSemanticAttributes",
											"type": "function",
											"optional": false,
											"description": "This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul>"
										},
										"setAppStateKey": {
											"name": "setAppStateKey",
											"type": "function",
											"optional": false,
											"description": "This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul>"
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the SmartLink."
										},
										"open": {
											"name": "open",
											"type": "function",
											"optional": false,
											"description": "This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code>\nfunction has to be called manually in order to open the navigation popover."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of SmartLink, the <code>beforePopoverOpens</code> is fired\nafter the link has been clicked."
				},
				{
					"name": "innerNavigate",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"text": {
											"name": "text",
											"type": "string",
											"optional": false,
											"description": "The UI text shown in the clicked link."
										},
										"href": {
											"name": "href",
											"type": "string",
											"optional": false,
											"description": "The navigation target of the clicked link."
										},
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object used to retrieve this target."
										},
										"semanticAttributes": {
											"name": "semanticAttributes",
											"type": "object",
											"optional": false,
											"description": "Map containing the semantic attributes used to retrieve this target."
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the SmartLink."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
				},
				{
					"name": "navigationTargetsObtained",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"mainNavigation": {
											"name": "mainNavigation",
											"type": "sap.ui.comp.navpopover.LinkData",
											"optional": false,
											"description": "The main navigation object."
										},
										"actions": {
											"name": "actions",
											"type": "sap.ui.comp.navpopover.LinkData[]",
											"optional": false,
											"description": "Array of available navigation target objects."
										},
										"ownNavigation": {
											"name": "ownNavigation",
											"type": "sap.ui.comp.navpopover.LinkData",
											"optional": false,
											"description": "The navigation object for the own application. This navigation option is by default not visible on the popover."
										},
										"semanticObject": {
											"name": "semanticObject",
											"type": "string",
											"optional": false,
											"description": "The semantic object for which the navigation targets have been retrieved."
										},
										"originalId": {
											"name": "originalId",
											"type": "string",
											"optional": false,
											"description": "The ID of the SmartLink."
										},
										"show": {
											"name": "show",
											"type": "function",
											"optional": false,
											"description": "This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example SmartLink).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul>"
										}
									}
								}
							}
						}
					],
					"description": "After the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to\nchange the targets."
				}
			],
			"methods": [
				{
					"name": "attachBeforePopoverOpens",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforePopoverOpens</code> event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink</code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of SmartLink, the <code>beforePopoverOpens</code> is fired\nafter the link has been clicked."
				},
				{
					"name": "attachInnerNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>innerNavigate</code> event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink</code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event."
				},
				{
					"name": "attachNavigationTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>navigationTargetsObtained</code> event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink</code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained</code> is fired and provides the possibility to\nchange the targets."
				},
				{
					"name": "destroyInnerControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"description": "Destroys the innerControl in the aggregation <code>innerControl</code>."
				},
				{
					"name": "detachBeforePopoverOpens",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforePopoverOpens</code> event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInnerNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>innerNavigate</code> event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNavigationTargetsObtained",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>navigationTargetsObtained</code> event of this <code>sap.ui.comp.navpopover.SmartLink</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.navpopover.SmartLink with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Link.extend}."
				},
				{
					"name": "fireBeforePopoverOpens",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>beforePopoverOpens</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object for which the navigation targets will be retrieved.</li>\n<li><code>semanticAttributes</code> of type <code>object</code>Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.\ntargets.</li>\n<li><code>setSemanticAttributes</code> of type <code>function</code>This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)</code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.</li>\n</ul></li>\n<li><code>setAppStateKey</code> of type <code>function</code>This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)</code> Parameter:\n<ul>\n<li>{string} sAppStateKey</li>\n</ul></li>\n<li><code>originalId</code> of type <code>string</code>The ID of the SmartLink.</li>\n<li><code>open</code> of type <code>function</code>This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()</code> If the <code>beforePopoverOpens</code> has been registered, the <code>open</code>\nfunction has to be called manually in order to open the navigation popover.</li>\n</ul>"
				},
				{
					"name": "fireInnerNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>innerNavigate</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>text</code> of type <code>string</code>The UI text shown in the clicked link.</li>\n<li><code>href</code> of type <code>string</code>The navigation target of the clicked link.</li>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object used to retrieve this target.</li>\n<li><code>semanticAttributes</code> of type <code>object</code>Map containing the semantic attributes used to retrieve this target.</li>\n<li><code>originalId</code> of type <code>string</code>The ID of the SmartLink.</li>\n</ul>"
				},
				{
					"name": "fireNavigationTargetsObtained",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>navigationTargetsObtained</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>mainNavigation</code> of type <code>sap.ui.comp.navpopover.LinkData</code>The main navigation object.</li>\n<li><code>actions</code> of type <code>sap.ui.comp.navpopover.LinkData[]</code>Array of available navigation target objects.</li>\n<li><code>ownNavigation</code> of type <code>sap.ui.comp.navpopover.LinkData</code>The navigation object for the own application. This navigation option is by default not visible on the popover.</li>\n<li><code>semanticObject</code> of type <code>string</code>The semantic object for which the navigation targets have been retrieved.</li>\n<li><code>originalId</code> of type <code>string</code>The ID of the SmartLink.</li>\n<li><code>show</code> of type <code>function</code>This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained</code> has been\nregistered, the <code>show</code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()</code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)</code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)</code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example SmartLink).</li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation</code> will be used.</li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions</code> will be used.</li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.</li>\n</ul></li>\n</ul>"
				},
				{
					"name": "getCreateControlCallback",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>createControlCallback</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>createControlCallback</code>.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are\navailable. The function has no parameters and has to return an instance of sap.ui.core.Control."
				},
				{
					"name": "getFieldName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>fieldName</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>fieldName</code>.\n\nThe metadata field name for this SmartLink control. <b>Note</b>: Setting a value triggers an asynchronous determination, so the\neffect can be delayed."
				},
				{
					"name": "getIgnoreLinkRendering",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>ignoreLinkRendering</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>ignoreLinkRendering</code>.\n\nIf set to <code>true</code>, the SmartLink control will render the <code>innerControl</code> or the control provided by\n<code>createControlCallback</code> instead of the actual link. This is used for example by the SemanticObjectController if this\nSmartLink is listed in its <code>ignoredFields</code> or no navigation targets were found during prefetch. <b>Note</b>: Setting\na value triggers an asynchronous determination, so the effect can be delayed.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getInnerControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"since": "1.28.0",
					"description": "Gets content of aggregation <code>innerControl</code>.\n\nControl that is displayed instead of SmartLink, if the SmartLink is disabled (for example, if no navigation targets are available).\nIf <code>innerControl</code> is not provided, the SmartLink control tries to create one with property\n<code>createControlCallback</code>."
				},
				{
					"name": "getInnerControlValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value"
					},
					"description": "Gets the inner control's value, if no inner control is available, the SmartLink's text will be returned"
				},
				{
					"name": "getMapFieldToSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>mapFieldToSemanticObject</code>"
					},
					"description": "Gets current value of property <code>mapFieldToSemanticObject</code>.\n\nIf set to <code>false</code>, the SmartLink control will not replace its field name with the according\n<code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several\nSmartLinks on the same semantic object.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.navpopover.SmartLink."
				},
				{
					"name": "getSemanticAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Map containing the copy of the available binding context."
					},
					"description": "Gets the semantic object calculated at the last Link press event"
				},
				{
					"name": "getSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>semanticObject</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>semanticObject</code>.\n\nName of semantic object which is used to fill the navigation popover. <b>Note</b>: Setting a value triggers an asynchronous\ndetermination, so the effect can be delayed."
				},
				{
					"name": "getSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>semanticObjectController</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>semanticObjectController</code>.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to\nfind a SemanticObjectController in its parent hierarchy. <b>Note</b>: Setting a value triggers an asynchronous determination, so\nthe effect can be delayed."
				},
				{
					"name": "getSemanticObjectLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>semanticObjectLabel</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>semanticObjectLabel</code>.\n\nShown label of semantic object."
				},
				{
					"name": "getSemanticObjectValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The semantic object's value."
					},
					"description": "Gets the current value assigned to the field with the SmartLink's semantic object name."
				},
				{
					"name": "setCreateControlCallback",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oCreateControlCallback",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>createControlCallback</code>"
						}
					],
					"description": "Sets a new value for property <code>createControlCallback</code>.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are\navailable. The function has no parameters and has to return an instance of sap.ui.core.Control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setFieldName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sFieldName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>fieldName</code>"
						}
					],
					"description": "Sets a new value for property <code>fieldName</code>.\n\nThe metadata field name for this SmartLink control. <b>Note</b>: Setting a value triggers an asynchronous determination, so the\neffect can be delayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoreLinkRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bIgnoreLinkRendering",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>ignoreLinkRendering</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoreLinkRendering</code>.\n\nIf set to <code>true</code>, the SmartLink control will render the <code>innerControl</code> or the control provided by\n<code>createControlCallback</code> instead of the actual link. This is used for example by the SemanticObjectController if this\nSmartLink is listed in its <code>ignoredFields</code> or no navigation targets were found during prefetch. <b>Note</b>: Setting\na value triggers an asynchronous determination, so the effect can be delayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setInnerControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oInnerControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The innerControl to set"
						}
					],
					"description": "Sets the aggregated <code>innerControl</code>."
				},
				{
					"name": "setMapFieldToSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bMapFieldToSemanticObject",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>mapFieldToSemanticObject</code>"
						}
					],
					"description": "Sets a new value for property <code>mapFieldToSemanticObject</code>.\n\nIf set to <code>false</code>, the SmartLink control will not replace its field name with the according\n<code>semanticObject</code> property during the calculation of the semantic attributes. This enables the usage of several\nSmartLinks on the same semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSemanticObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sSemanticObject",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>semanticObject</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticObject</code>.\n\nName of semantic object which is used to fill the navigation popover. <b>Note</b>: Setting a value triggers an asynchronous\ndetermination, so the effect can be delayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oSemanticObjectController",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>semanticObjectController</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticObjectController</code>.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to\nfind a SemanticObjectController in its parent hierarchy. <b>Note</b>: Setting a value triggers an asynchronous determination, so\nthe effect can be delayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSemanticObjectLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SmartLink",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sSemanticObjectLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>semanticObjectLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticObjectLabel</code>.\n\nShown label of semantic object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.odata.FieldSelector",
			"basename": "FieldSelector",
			"resource": "sap/ui/comp/odata/FieldSelector.js",
			"module": "sap/ui/comp/odata/FieldSelector",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Reuse control which displays the properties of OData entity sets.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "showSearchBar",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates to show a search bar for property names inside a selected entity set.",
						"methods": [
							"getShowSearchBar",
							"setShowSearchBar"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Content of the control itself",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				],
				"events": [
					{
						"name": "fieldSelectionChanged",
						"visibility": "public",
						"description": "User selected a different field.",
						"methods": [
							"attachFieldSelectionChanged",
							"detachFieldSelectionChanged",
							"fireFieldSelectionChanged"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new odata/FieldSelector.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "fieldSelectionChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "User selected a different field."
				}
			],
			"methods": [
				{
					"name": "attachFieldSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.odata.FieldSelector",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.odata.FieldSelector</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>fieldSelectionChanged</code> event of this <code>sap.ui.comp.odata.FieldSelector</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.odata.FieldSelector</code> itself.\n\nUser selected a different field."
				},
				{
					"name": "destroy",
					"module": "sap/ui/comp/odata/FieldSelectorModelConverter",
					"visibility": "public",
					"description": "Destroys the inner references",
					"resource": "sap/ui/comp/odata/FieldSelectorModelConverter.js"
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.odata.FieldSelector",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the content in the aggregation <code>content</code>."
				},
				{
					"name": "detachFieldSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.odata.FieldSelector",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>fieldSelectionChanged</code> event of this <code>sap.ui.comp.odata.FieldSelector</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "exit",
					"visibility": "public",
					"description": "Cleans up the control"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.odata.FieldSelector with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireFieldSelectionChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.odata.FieldSelector",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>fieldSelectionChanged</code> to attached listeners."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nContent of the control itself"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.odata.FieldSelector."
				},
				{
					"name": "getSelectedField",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "map of the name of the entity set having the selected field as kex"
					},
					"description": "Returns a map with the name of the entity set and the key of the selected field."
				},
				{
					"name": "getShowSearchBar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSearchBar</code>"
					},
					"description": "Gets current value of property <code>showSearchBar</code>.\n\nIndicates to show a search bar for property names inside a selected entity set.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.odata.FieldSelector",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content to set"
						}
					],
					"description": "Sets the aggregated <code>content</code>."
				},
				{
					"name": "setModel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oModel",
							"type": "sap.ui.model.odata.ODataModel",
							"optional": false,
							"description": "odata model"
						},
						{
							"name": "sEntityTypes",
							"type": "string",
							"optional": false,
							"description": "entity type name(s) separated by comma character or array"
						},
						{
							"name": "bShowExtFieldButton",
							"type": "boolean",
							"optional": false,
							"description": "indicates if the create new field button will be displayed or not"
						},
						{
							"name": "aIgnoredFields",
							"type": "Array",
							"optional": false,
							"description": "List of fields which should be ignored"
						},
						{
							"name": "mBindingPathToFieldListElement",
							"type": "Object.<bindingPath:string, fieldListElement:Object>",
							"optional": false,
							"description": "Map absolute odata binding paths to the field list elements"
						},
						{
							"name": "mIdToFieldListElement",
							"type": "Object.<id:string, fieldListElement:Object>",
							"optional": false,
							"description": "Map field list element ids to the field list elements"
						}
					],
					"description": "Set the model for the entity and fields of an odata service"
				},
				{
					"name": "setShowSearchBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.odata.FieldSelector",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSearchBar",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSearchBar</code>"
						}
					],
					"description": "Sets a new value for property <code>showSearchBar</code>.\n\nIndicates to show a search bar for property names inside a selected entity set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "updateFieldLabel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oFieldListElement",
							"type": "Object",
							"optional": false,
							"description": "Field list element containing all relevant properties needed for the update"
						}
					],
					"description": "Based on the renamed label contained in the field list,\nthe label contained in the field selector will be updated."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.personalization.AggregationRole",
			"basename": "AggregationRole",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "Provides enumeration sap.ui.comp.personalization.AggregationRole. A subset of aggregation roles used in table personalization.",
			"properties": [
				{
					"name": "Dimension",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Dimension role."
				},
				{
					"name": "Measure",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Measure role."
				},
				{
					"name": "NotDimeasure",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Role which is neither dimension nor measure."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.personalization.ChangeType",
			"basename": "ChangeType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "Provides enumeration sap.ui.comp.personalization.ChangeType. A subset of changes done during table personalization.",
			"properties": [
				{
					"name": "ModelChanged",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Change is applied to model but not applied to table"
				},
				{
					"name": "TableChanged",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Change is applied to model and to table"
				},
				{
					"name": "Unchanged",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Not changed"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.personalization.ResetType",
			"basename": "ResetType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "Provides enumeration sap.ui.comp.personalization.ResetType. A subset of reset types used in table personalization.",
			"properties": [
				{
					"name": "ResetFull",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Reset back to Restore (i.e. the version of the table with which the controller was instantiated or via setter updated) was triggered\n(either via API or via reset button)"
				},
				{
					"name": "ResetPartial",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Reset back to the CurrentVariant was triggered"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartchart.SmartChart",
			"basename": "SmartChart",
			"resource": "sap/ui/comp/smartchart/SmartChart.js",
			"module": "sap/ui/comp/smartchart/SmartChart",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.VBox",
			"description": "The SmartChart control creates a chart based on OData metadata and the configuration specified. The entitySet property must be specified\n       to use the control. This property is used to fetch fields from OData metadata, from which the chart UI will be generated. It can also be\n       used to fetch the actual chart data.<br>\n       Based on the chartType property, this control will render the corresponding chart.<br>\n       <b>Note:</b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The entity set name from which to fetch data and generate the columns.<br>\n<b>Note</b> This is not a dynamic property.",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					},
					{
						"name": "smartFilterId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "ID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the\nclosest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.",
						"methods": [
							"getSmartFilterId",
							"setSmartFilterId"
						]
					},
					{
						"name": "ignoredFields",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "CSV of fields that must be ignored in the OData metadata by the SmartChart control.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getIgnoredFields",
							"setIgnoredFields"
						]
					},
					{
						"name": "requestAtLeastFields",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "CSV of fields that must be always requested by the backend system.<br>\nThis property is mainly meant to be used if there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getRequestAtLeastFields",
							"setRequestAtLeastFields"
						]
					},
					{
						"name": "ignoreFromPersonalisation",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "CSV of fields that is not shown in the personalization dialog.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getIgnoreFromPersonalisation",
							"setIgnoreFromPersonalisation"
						]
					},
					{
						"name": "chartType",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the type of chart to be created by the SmartChart control.",
						"methods": [
							"getChartType",
							"setChartType"
						]
					},
					{
						"name": "ignoredChartTypes",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "CSV of fields that is not shown in the list of available chart types.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getIgnoredChartTypes",
							"setIgnoredChartTypes"
						]
					},
					{
						"name": "useVariantManagement",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>true</code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.",
						"methods": [
							"getUseVariantManagement",
							"setUseVariantManagement"
						]
					},
					{
						"name": "useChartPersonalisation",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>true</code>, personalized chart settings are defined. If you want to persist the chart personalization, you need\nto specify the persistencyKey property.",
						"methods": [
							"getUseChartPersonalisation",
							"setUseChartPersonalisation"
						]
					},
					{
						"name": "header",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies header text that is shown in the chart.",
						"methods": [
							"getHeader",
							"setHeader"
						]
					},
					{
						"name": "persistencyKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Key used to access personalization data.",
						"methods": [
							"getPersistencyKey",
							"setPersistencyKey"
						]
					},
					{
						"name": "currentVariantId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Retrieves or applies the current variant.",
						"methods": [
							"getCurrentVariantId",
							"setCurrentVariantId"
						]
					},
					{
						"name": "enableAutoBinding",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty. This happens right after the <code>initialise</code> event has been fired.",
						"methods": [
							"getEnableAutoBinding",
							"setEnableAutoBinding"
						]
					},
					{
						"name": "chartBindingPath",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used\nonly if binding is established internally/automatically - See enableAutoBinding)",
						"methods": [
							"getChartBindingPath",
							"setChartBindingPath"
						]
					},
					{
						"name": "showDrillButtons",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Controls the visibility of the Drill Up and Drill Down buttons.",
						"methods": [
							"getShowDrillButtons",
							"setShowDrillButtons"
						]
					},
					{
						"name": "showZoomButtons",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36",
						"description": "Controls the visibility of the Zoom In and Zoom Out buttons.",
						"methods": [
							"getShowZoomButtons",
							"setShowZoomButtons"
						]
					},
					{
						"name": "showSemanticNavigationButton",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36",
						"description": "Controls the visibility of the Navigation button",
						"methods": [
							"getShowSemanticNavigationButton",
							"setShowSemanticNavigationButton"
						]
					},
					{
						"name": "showVariantManagement",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"description": "Controls the visibility of the Variant Management.",
						"methods": [
							"getShowVariantManagement",
							"setShowVariantManagement"
						]
					},
					{
						"name": "showDetailsButton",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"description": "Controls the visibility of the Details button. If set to <code>true</code>, the datapoint tooltip will be disabled as the\ninformation of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.",
						"methods": [
							"getShowDetailsButton",
							"setShowDetailsButton"
						]
					},
					{
						"name": "showDrillBreadcrumbs",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"description": "Controls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true</code>,\nthe toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.",
						"methods": [
							"getShowDrillBreadcrumbs",
							"setShowDrillBreadcrumbs"
						]
					},
					{
						"name": "showChartTooltip",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"description": "Controls the visibility of the chart tooltip. If set to <code>true </code>, the chart tooltip will be shown when hovering over a\ndata point.",
						"methods": [
							"getShowChartTooltip",
							"setShowChartTooltip"
						]
					},
					{
						"name": "showLegendButton",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36",
						"description": "Controls the visibility of the Navigation button",
						"methods": [
							"getShowLegendButton",
							"setShowLegendButton"
						]
					},
					{
						"name": "legendVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36",
						"description": "Set chart's legend properties.",
						"methods": [
							"getLegendVisible",
							"setLegendVisible"
						]
					},
					{
						"name": "selectionMode",
						"type": "sap.chart.SelectionMode",
						"defaultValue": "Multi",
						"group": "Misc",
						"visibility": "public",
						"since": "1.36",
						"description": "Chart selection mode. Supported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case\ninsensitive, always return in upper case. Unsupported values will be ignored.",
						"methods": [
							"getSelectionMode",
							"setSelectionMode"
						]
					},
					{
						"name": "showFullScreenButton",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36",
						"description": "Controls the visibility of the FullScreen button.",
						"methods": [
							"getShowFullScreenButton",
							"setShowFullScreenButton"
						]
					},
					{
						"name": "useTooltip",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36",
						"description": "Controls the usage either of the tooltip or the popover. If set to <code>true</code>, a tooltip will be displayed.",
						"methods": [
							"getUseTooltip",
							"setUseTooltip"
						]
					},
					{
						"name": "useListForChartTypeSelection",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"description": "Controls the visualization for chart type selection. If set to <code>true</code>, the list of available chart types will be\ndisplayed. If set to <code>false</code> and there are three or fewer available chart types, the chart types will be displayed as\nseparate buttons in the toolbar. If there are more than three chart types, a list will be shown.",
						"methods": [
							"getUseListForChartTypeSelection",
							"setUseListForChartTypeSelection"
						]
					}
				],
				"aggregations": [
					{
						"name": "toolbar",
						"singularName": "toolbar",
						"type": "sap.m.Toolbar",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartChart\ncontrol does not create an additional toolbar, but uses this one.",
						"methods": [
							"getToolbar",
							"destroyToolbar",
							"setToolbar"
						]
					},
					{
						"name": "semanticObjectController",
						"singularName": "semanticObjectController",
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.36",
						"description": "The Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.",
						"methods": [
							"getSemanticObjectController",
							"destroySemanticObjectController",
							"setSemanticObjectController"
						]
					}
				],
				"associations": [
					{
						"name": "smartVariant",
						"singularName": "smartVariant",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38",
						"description": "Identifies the SmartVariant control which should be used for the personalization. Will be ignored if the advanced mode is set.",
						"methods": [
							"getSmartVariant",
							"setSmartVariant"
						]
					}
				],
				"events": [
					{
						"name": "initialise",
						"visibility": "public",
						"description": "This event is fired once the control has been initialized.",
						"methods": [
							"attachInitialise",
							"detachInitialise",
							"fireInitialise"
						]
					},
					{
						"name": "beforeRebindChart",
						"visibility": "public",
						"description": "This event is fired right before the binding is done.",
						"methods": [
							"attachBeforeRebindChart",
							"detachBeforeRebindChart",
							"fireBeforeRebindChart"
						]
					},
					{
						"name": "dataReceived",
						"visibility": "public",
						"description": "This event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart\ncontrol itself.",
						"methods": [
							"attachDataReceived",
							"detachDataReceived",
							"fireDataReceived"
						]
					},
					{
						"name": "afterVariantInitialise",
						"visibility": "public",
						"description": "This event is fired after the variant management in the SmartChart control has been initialized.",
						"methods": [
							"attachAfterVariantInitialise",
							"detachAfterVariantInitialise",
							"fireAfterVariantInitialise"
						]
					},
					{
						"name": "afterVariantSave",
						"visibility": "public",
						"description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.",
						"methods": [
							"attachAfterVariantSave",
							"detachAfterVariantSave",
							"fireAfterVariantSave"
						]
					},
					{
						"name": "afterVariantApply",
						"visibility": "public",
						"description": "This event is fired after a variant has been applied.",
						"methods": [
							"attachAfterVariantApply",
							"detachAfterVariantApply",
							"fireAfterVariantApply"
						]
					},
					{
						"name": "showOverlay",
						"visibility": "public",
						"description": "This event is fired right before the overlay is shown.",
						"methods": [
							"attachShowOverlay",
							"detachShowOverlay",
							"fireShowOverlay"
						]
					}
				],
				"annotations": [
					{
						"name": "semanticObject",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"EntitySet",
							"EntityType",
							"Property"
						],
						"annotation": "SemanticObject",
						"defaultValue": "null",
						"appliesTo": [
							"text"
						],
						"since": "1.34.1",
						"description": "Defines a name of the <code>SemanticObject</code> that can be represented with an <code>EntitySet</code>, <code>EntityType</code>\nor identified by a <code>Property</code>.\nWith this annotation in place, the <code>SemanticObjectController</code> will provide all the available features for the <code>SmartChart</code> control.\n\n<i>XML Example of OData V4 with SemanticObject on ProductName</i>\n<pre>\n   &lt;Annotations Target=\"ProductName\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.SemanticObject\" String=\"SemanticObjectName\" /&gt;\n  &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "fieldVisible",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "FieldControlType/Hidden",
						"defaultValue": "false",
						"appliesTo": [
							"field/#/visible"
						],
						"since": "1.34.1",
						"description": "Defines whether a field in the SmartChart control is visible.\nThe SmartChart interprets the <code>EnumMember</code> <code>FieldControlType/Hidden</code> of the <code>FieldControl</code> annotation for setting the visibility.\n\n<b>Note:</b> Currently only <code>FieldControlType/Hidden</code> is supported for statically hiding the fields.\n\n<i>XML Example of OData V4 with hidden Customer and CompanyCode Properties</i>\n<pre>\n   &lt;Property Name=\"Customer\"&gt;\n     &lt;Annotation Term=\"UI.FieldControlType/Hidden\"/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CompanyCode\"&gt;\n     &lt;Annotation Term=\"UI.FieldControlTpye/Hidden\"/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:visible=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:visible=\"false\"/&gt;\n</pre>"
					},
					{
						"name": "presentationVariant",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntitySet",
							"EntityType"
						],
						"annotation": "PresentationVariant",
						"defaultValue": "null",
						"appliesTo": [
							"chartFields"
						],
						"since": "1.34.1",
						"description": "Renders the initial chart fields for the SmartChart control.\nA <code>PropertyPath</code> and an <code>AnnotationPath</code> can be used for constructing PresentationVariant annotation.\n\n<i>XML Example of OData V4 with Customer and CompanyCode Properties as PresentationVariant</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.PresentationVariant\"&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=\"Visualizations\"&gt;\n         &lt;Collection&gt;\n           &lt;AnnotationPath&gt;@UI.LineItem&lt;/AnnotationPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n       &lt;PropertyValue Property=\"RequestAtLeast\"&gt;\n         &lt;Collection&gt;\n           &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=\"SortOrder\"&gt;\n           &lt;Collection&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=\"Property\" PropertyPath=\"CompanyCode\"/&gt;\n               &lt;PropertyValue Property=\"Descending\" Bool=\"true\"/&gt;\n             &lt;/Record&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=\"Property\" PropertyPath=\"Customer\"/&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n</pre>"
					},
					{
						"name": "chart",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntityType"
						],
						"annotation": "Chart",
						"defaultValue": "null",
						"appliesTo": [
							"chart"
						],
						"since": "1.34.1",
						"description": "Renders a chart based on the information that is provided within the <code>Chart</code> annotation.\n<code>Chart</code> annotation must be defined for an </code>EntityType</code>\n\n<i>XML Example of OData V4 with Chart Annotation</i>\n<pre>\n   &lt;Annotations Target=\"Item\" xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.Chart\"&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=\"Title\" String=\"Line Items\" /&gt;\n         &lt;PropertyValue Property=\"ChartType\"\n            EnumMember=\"com.sap.vocabularies.UI.v1.ChartType/Column\" /&gt;\n         &lt;PropertyValue Property=\"Dimensions\"&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=\"Measures\"&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;AmountInCompanyCodeCurrency&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;AmountInTransactionCurrency&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "chartType",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"PropertyValue"
						],
						"annotation": "Chart/ChartType",
						"defaultValue": "null",
						"appliesTo": [
							"chartType"
						],
						"since": "1.34.1",
						"description": "Renders a chart based on the ChartType information that is provided within <code>Chart</code>\nThe <code>Chart</code> annotation contains an <code>EnumMember</code> where the <code>ChartType</code> must be defined.\nThe annotation is defined as a parameter in the <code>PropertyValue</code>.\n\n<i>XML Example of OData V4 with ChartType as Column Chart</i>\n<pre>\n   &lt;Annotations Target=\"Item\" xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.Chart\"&gt;\n       &lt;Record&gt;\n         &lt;PropertyValue Property=\"Title\" String=\"Line Items\" /&gt;\n         &lt;PropertyValue Property=\"ChartType\"\n            EnumMember=\"com.sap.vocabularies.UI.v1.ChartType/Column\" /&gt;\n         &lt;PropertyValue Property=\"Dimensions\"&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=\"Measures\"&gt;\n           &lt;Collection&gt;\n             &lt;PropertyPath&gt;AmountInCompanyCodeCurrency&lt;/PropertyPath&gt;\n             &lt;PropertyPath&gt;AmountInTransactionCurrency&lt;/PropertyPath&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control that is generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartchart/SmartChart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterVariantApply",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after a variant has been applied."
				},
				{
					"name": "afterVariantInitialise",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after the variant management in the SmartChart control has been initialized."
				},
				{
					"name": "afterVariantSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
				},
				{
					"name": "beforeRebindChart",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired right before the binding is done."
				},
				{
					"name": "dataReceived",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart\ncontrol itself."
				},
				{
					"name": "initialise",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired once the control has been initialized."
				},
				{
					"name": "showOverlay",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired right before the overlay is shown."
				}
			],
			"methods": [
				{
					"name": "applyVariant",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVariantJSON",
							"type": "Object",
							"optional": false,
							"description": "The variant JSON"
						},
						{
							"name": "sContext",
							"type": "string",
							"optional": false,
							"description": "Describes the context in which the variant has been applied"
						}
					],
					"description": "Interface function for SmartVariantManagement control that applies the current variant."
				},
				{
					"name": "attachAfterVariantApply",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantApply</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired after a variant has been applied."
				},
				{
					"name": "attachAfterVariantInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantInitialise</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired after the variant management in the SmartChart control has been initialized."
				},
				{
					"name": "attachAfterVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantSave</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
				},
				{
					"name": "attachBeforeRebindChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeRebindChart</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired right before the binding is done."
				},
				{
					"name": "attachDataReceived",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>dataReceived</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart\ncontrol itself."
				},
				{
					"name": "attachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialise</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired once the control has been initialized."
				},
				{
					"name": "attachShowOverlay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>showOverlay</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart</code> itself.\n\nThis event is fired right before the overlay is shown."
				},
				{
					"name": "destroySemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"description": "Destroys the semanticObjectController in the aggregation <code>semanticObjectController</code>."
				},
				{
					"name": "destroyToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the toolbar in the aggregation <code>toolbar</code>."
				},
				{
					"name": "detachAfterVariantApply",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantApply</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterVariantInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantInitialise</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantSave</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeforeRebindChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeRebindChart</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachDataReceived",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>dataReceived</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialise</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachShowOverlay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>showOverlay</code> event of this <code>sap.ui.comp.smartchart.SmartChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "exit",
					"visibility": "public",
					"description": "Cleans up the control."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartchart.SmartChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.VBox.extend}."
				},
				{
					"name": "fetchVariant",
					"visibility": "public",
					"returnValue": {
						"type": "json",
						"description": "The currently used variant"
					},
					"description": "Interface function for the SmartVariantManagement control that returns the currently used variant data."
				},
				{
					"name": "fireAfterVariantApply",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterVariantApply</code> to attached listeners."
				},
				{
					"name": "fireAfterVariantInitialise",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterVariantInitialise</code> to attached listeners."
				},
				{
					"name": "fireAfterVariantSave",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterVariantSave</code> to attached listeners."
				},
				{
					"name": "fireBeforeRebindChart",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>beforeRebindChart</code> to attached listeners."
				},
				{
					"name": "fireDataReceived",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>dataReceived</code> to attached listeners."
				},
				{
					"name": "fireInitialise",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialise</code> to attached listeners."
				},
				{
					"name": "fireShowOverlay",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>showOverlay</code> to attached listeners."
				},
				{
					"name": "getChart",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The chart"
					},
					"description": "Returns the chart object used internally."
				},
				{
					"name": "getChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartBindingPath</code>"
					},
					"description": "Gets current value of property <code>chartBindingPath</code>.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used\nonly if binding is established internally/automatically - See enableAutoBinding)"
				},
				{
					"name": "getChartType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartType</code>"
					},
					"description": "Gets current value of property <code>chartType</code>.\n\nSpecifies the type of chart to be created by the SmartChart control."
				},
				{
					"name": "getCurrentVariantId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "ID of the currently selected variant"
					},
					"description": "Returns the ID of the currently selected variant."
				},
				{
					"name": "getEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableAutoBinding</code>"
					},
					"description": "Gets current value of property <code>enableAutoBinding</code>.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty. This happens right after the <code>initialise</code> event has been fired.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entitySet</code>"
					},
					"description": "Gets current value of property <code>entitySet</code>.\n\nThe entity set name from which to fetch data and generate the columns.<br>\n<b>Note</b> This is not a dynamic property."
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>header</code>"
					},
					"description": "Gets current value of property <code>header</code>.\n\nSpecifies header text that is shown in the chart."
				},
				{
					"name": "getIgnoredChartTypes",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ignoredChartTypes</code>"
					},
					"description": "Gets current value of property <code>ignoredChartTypes</code>.\n\nCSV of fields that is not shown in the list of available chart types.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ignoredFields</code>"
					},
					"description": "Gets current value of property <code>ignoredFields</code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getIgnoreFromPersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ignoreFromPersonalisation</code>"
					},
					"description": "Gets current value of property <code>ignoreFromPersonalisation</code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getLegendVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>legendVisible</code>"
					},
					"since": "1.36",
					"description": "Gets current value of property <code>legendVisible</code>.\n\nSet chart's legend properties.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartchart.SmartChart."
				},
				{
					"name": "getPersistencyKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>persistencyKey</code>"
					},
					"description": "Gets current value of property <code>persistencyKey</code>.\n\nKey used to access personalization data."
				},
				{
					"name": "getRequestAtLeastFields",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>requestAtLeastFields</code>"
					},
					"description": "Gets current value of property <code>requestAtLeastFields</code>.\n\nCSV of fields that must be always requested by the backend system.<br>\nThis property is mainly meant to be used if there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getSelectionMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.SelectionMode",
						"description": "Value of property <code>selectionMode</code>"
					},
					"since": "1.36",
					"description": "Gets current value of property <code>selectionMode</code>.\n\nChart selection mode. Supported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case\ninsensitive, always return in upper case. Unsupported values will be ignored.\n\nDefault value is <code>Multi</code>."
				},
				{
					"name": "getSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController"
					},
					"since": "1.36",
					"description": "Gets content of aggregation <code>semanticObjectController</code>.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation."
				},
				{
					"name": "getShowChartTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showChartTooltip</code>"
					},
					"since": "1.38",
					"description": "Gets current value of property <code>showChartTooltip</code>.\n\nControls the visibility of the chart tooltip. If set to <code>true </code>, the chart tooltip will be shown when hovering over a\ndata point.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowDetailsButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showDetailsButton</code>"
					},
					"since": "1.38",
					"description": "Gets current value of property <code>showDetailsButton</code>.\n\nControls the visibility of the Details button. If set to <code>true</code>, the datapoint tooltip will be disabled as the\ninformation of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowDrillBreadcrumbs",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showDrillBreadcrumbs</code>"
					},
					"since": "1.38",
					"description": "Gets current value of property <code>showDrillBreadcrumbs</code>.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true</code>,\nthe toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowDrillButtons",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showDrillButtons</code>"
					},
					"description": "Gets current value of property <code>showDrillButtons</code>.\n\nControls the visibility of the Drill Up and Drill Down buttons.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowFullScreenButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showFullScreenButton</code>"
					},
					"since": "1.36",
					"description": "Gets current value of property <code>showFullScreenButton</code>.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowLegendButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showLegendButton</code>"
					},
					"since": "1.36",
					"description": "Gets current value of property <code>showLegendButton</code>.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowSemanticNavigationButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSemanticNavigationButton</code>"
					},
					"since": "1.36",
					"description": "Gets current value of property <code>showSemanticNavigationButton</code>.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showVariantManagement</code>"
					},
					"since": "1.38",
					"description": "Gets current value of property <code>showVariantManagement</code>.\n\nControls the visibility of the Variant Management.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowZoomButtons",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showZoomButtons</code>"
					},
					"since": "1.36",
					"description": "Gets current value of property <code>showZoomButtons</code>.\n\nControls the visibility of the Zoom In and Zoom Out buttons.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSmartFilterId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>smartFilterId</code>"
					},
					"description": "Gets current value of property <code>smartFilterId</code>.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the\nclosest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc."
				},
				{
					"name": "getSmartVariant",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"since": "1.38",
					"description": "ID of the element which is the current target of the association <code>smartVariant</code>, or <code>null</code>."
				},
				{
					"name": "getToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Toolbar"
					},
					"description": "Gets content of aggregation <code>toolbar</code>.\n\nA toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartChart\ncontrol does not create an additional toolbar, but uses this one."
				},
				{
					"name": "getUseChartPersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useChartPersonalisation</code>"
					},
					"description": "Gets current value of property <code>useChartPersonalisation</code>.\n\nIf set to <code>true</code>, personalized chart settings are defined. If you want to persist the chart personalization, you need\nto specify the persistencyKey property.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUseListForChartTypeSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useListForChartTypeSelection</code>"
					},
					"since": "1.38",
					"description": "Gets current value of property <code>useListForChartTypeSelection</code>.\n\nControls the visualization for chart type selection. If set to <code>true</code>, the list of available chart types will be\ndisplayed. If set to <code>false</code> and there are three or fewer available chart types, the chart types will be displayed as\nseparate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUseTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useTooltip</code>"
					},
					"since": "1.36",
					"description": "Gets current value of property <code>useTooltip</code>.\n\nControls the usage either of the tooltip or the popover. If set to <code>true</code>, a tooltip will be displayed.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUseVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useVariantManagement</code>"
					},
					"description": "Gets current value of property <code>useVariantManagement</code>.\n\nIf set to <code>true</code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "rebindChart",
					"visibility": "protected",
					"description": "This can be used to trigger binding on the chart used in the SmartChart"
				},
				{
					"name": "setChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChartBindingPath",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>chartBindingPath</code>"
						}
					],
					"description": "Sets a new value for property <code>chartBindingPath</code>.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used\nonly if binding is established internally/automatically - See enableAutoBinding)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setChartType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChartType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>chartType</code>"
						}
					],
					"description": "Sets a new value for property <code>chartType</code>.\n\nSpecifies the type of chart to be created by the SmartChart control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setCurrentVariantId",
					"visibility": "public",
					"parameters": [
						{
							"name": "sVariantId",
							"type": "string",
							"optional": false,
							"description": "ID of the currently selected variant"
						}
					],
					"description": "Applies the current variant based on the sVariantId parameter. If an empty string or null or undefined have been passed, the standard variant\nwill be used. The standard variant will also be used if the passed sVariantId cannot be found. If the flexibility variant, the content for the\nstandard variant, or the personalizable control cannot be obtained, no changes will be made."
				},
				{
					"name": "setEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableAutoBinding",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableAutoBinding</code>"
						}
					],
					"description": "Sets a new value for property <code>enableAutoBinding</code>.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty. This happens right after the <code>initialise</code> event has been fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"parameters": [
						{
							"name": "sEntitySetName",
							"type": "string",
							"optional": false,
							"description": "The entity set"
						}
					],
					"description": "The entity set name in the OData metadata against which the chart must be bound."
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeader",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>header</code>"
						}
					],
					"description": "Sets a new value for property <code>header</code>.\n\nSpecifies header text that is shown in the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoredChartTypes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIgnoredChartTypes",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ignoredChartTypes</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoredChartTypes</code>.\n\nCSV of fields that is not shown in the list of available chart types.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIgnoredFields",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ignoredFields</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoredFields</code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoreFromPersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIgnoreFromPersonalisation",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ignoreFromPersonalisation</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoreFromPersonalisation</code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPersistencyKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPersistencyKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>persistencyKey</code>"
						}
					],
					"description": "Sets a new value for property <code>persistencyKey</code>.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRequestAtLeastFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sRequestAtLeastFields",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>requestAtLeastFields</code>"
						}
					],
					"description": "Sets a new value for property <code>requestAtLeastFields</code>.\n\nCSV of fields that must be always requested by the backend system.<br>\nThis property is mainly meant to be used if there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<b>Note:</b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelectionMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"parameters": [
						{
							"name": "sSelectionMode",
							"type": "sap.chart.SelectionMode",
							"optional": false,
							"description": "New value for property <code>selectionMode</code>"
						}
					],
					"description": "Sets a new value for property <code>selectionMode</code>.\n\nChart selection mode. Supported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case\ninsensitive, always return in upper case. Unsupported values will be ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Multi</code>."
				},
				{
					"name": "setSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"parameters": [
						{
							"name": "oSemanticObjectController",
							"type": "sap.ui.comp.navpopover.SemanticObjectController",
							"optional": false,
							"description": "The semanticObjectController to set"
						}
					],
					"description": "Sets the aggregated <code>semanticObjectController</code>."
				},
				{
					"name": "setShowChartTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "bShowChartTooltip",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showChartTooltip</code>"
						}
					],
					"description": "Sets a new value for property <code>showChartTooltip</code>.\n\nControls the visibility of the chart tooltip. If set to <code>true </code>, the chart tooltip will be shown when hovering over a\ndata point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowDetailsButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "bShowDetailsButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showDetailsButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showDetailsButton</code>.\n\nControls the visibility of the Details button. If set to <code>true</code>, the datapoint tooltip will be disabled as the\ninformation of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowDrillBreadcrumbs",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "bShowDrillBreadcrumbs",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showDrillBreadcrumbs</code>"
						}
					],
					"description": "Sets a new value for property <code>showDrillBreadcrumbs</code>.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true</code>,\nthe toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowFullScreenButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"parameters": [
						{
							"name": "bShowFullScreenButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showFullScreenButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showFullScreenButton</code>.\n\nControls the visibility of the FullScreen button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "bShowVariantManagement",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showVariantManagement</code>"
						}
					],
					"description": "Sets a new value for property <code>showVariantManagement</code>.\n\nControls the visibility of the Variant Management.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSmartFilterId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSmartFilterId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>smartFilterId</code>"
						}
					],
					"description": "Sets a new value for property <code>smartFilterId</code>.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the\nclosest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSmartVariant",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "oSmartVariant",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>smartVariant</code>."
				},
				{
					"name": "setToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oToolbar",
							"type": "sap.m.Toolbar",
							"optional": false,
							"description": "The toolbar to set"
						}
					],
					"description": "Sets the aggregated <code>toolbar</code>."
				},
				{
					"name": "setUseChartPersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUseChartPersonalisation",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useChartPersonalisation</code>"
						}
					],
					"description": "Sets a new value for property <code>useChartPersonalisation</code>.\n\nIf set to <code>true</code>, personalized chart settings are defined. If you want to persist the chart personalization, you need\nto specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUseListForChartTypeSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "bUseListForChartTypeSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useListForChartTypeSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>useListForChartTypeSelection</code>.\n\nControls the visualization for chart type selection. If set to <code>true</code>, the list of available chart types will be\ndisplayed. If set to <code>false</code> and there are three or fewer available chart types, the chart types will be displayed as\nseparate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUseTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"parameters": [
						{
							"name": "bUseTooltip",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useTooltip</code>"
						}
					],
					"description": "Sets a new value for property <code>useTooltip</code>.\n\nControls the usage either of the tooltip or the popover. If set to <code>true</code>, a tooltip will be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUseVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartchart.SmartChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUseVariantManagement",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useVariantManagement</code>"
						}
					],
					"description": "Sets a new value for property <code>useVariantManagement</code>.\n\nIf set to <code>true</code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfield.Configuration",
			"basename": "Configuration",
			"resource": "sap/ui/comp/smartfield/Configuration.js",
			"module": "sap/ui/comp/smartfield/Configuration",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The configuration allows to further define the behavior of a SmartField.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "controlType",
						"type": "sap.ui.comp.smartfield.ControlType",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "By default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the\rdefault behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as\ra combo box.",
						"methods": [
							"getControlType",
							"setControlType"
						]
					},
					{
						"name": "displayBehaviour",
						"type": "sap.ui.comp.smartfield.DisplayBehaviour",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the\rdescriptions of the values shown in the result after a query are displayed.",
						"methods": [
							"getDisplayBehaviour",
							"setDisplayBehaviour"
						]
					},
					{
						"name": "preventInitialDataFetchInValueHelpDialog",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for\rthis field will be filled initially. The default value is <code>true</code>, which means the table will not be filled as the\rdata fetch is prevented.",
						"methods": [
							"getPreventInitialDataFetchInValueHelpDialog",
							"setPreventInitialDataFetchInValueHelpDialog"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfield/Configuration.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfield.Configuration with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getControlType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlType",
						"description": "Value of property <code>controlType</code>"
					},
					"description": "Gets current value of property <code>controlType</code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the\ndefault behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as\na combo box."
				},
				{
					"name": "getDisplayBehaviour",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.DisplayBehaviour",
						"description": "Value of property <code>displayBehaviour</code>"
					},
					"description": "Gets current value of property <code>displayBehaviour</code>.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the\ndescriptions of the values shown in the result after a query are displayed."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfield.Configuration."
				},
				{
					"name": "getPreventInitialDataFetchInValueHelpDialog",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>preventInitialDataFetchInValueHelpDialog</code>"
					},
					"description": "Gets current value of property <code>preventInitialDataFetchInValueHelpDialog</code>.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for\nthis field will be filled initially. The default value is <code>true</code>, which means the table will not be filled as the\ndata fetch is prevented.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setControlType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.Configuration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sControlType",
							"type": "sap.ui.comp.smartfield.ControlType",
							"optional": false,
							"description": "New value for property <code>controlType</code>"
						}
					],
					"description": "Sets a new value for property <code>controlType</code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the\ndefault behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as\na combo box.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDisplayBehaviour",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.Configuration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayBehaviour",
							"type": "sap.ui.comp.smartfield.DisplayBehaviour",
							"optional": false,
							"description": "New value for property <code>displayBehaviour</code>"
						}
					],
					"description": "Sets a new value for property <code>displayBehaviour</code>.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the\ndescriptions of the values shown in the result after a query are displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPreventInitialDataFetchInValueHelpDialog",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.Configuration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPreventInitialDataFetchInValueHelpDialog",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>preventInitialDataFetchInValueHelpDialog</code>"
						}
					],
					"description": "Sets a new value for property <code>preventInitialDataFetchInValueHelpDialog</code>.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for\nthis field will be filled initially. The default value is <code>true</code>, which means the table will not be filled as the\ndata fetch is prevented.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.smartfield.ControlContextType",
			"basename": "ControlContextType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of the different contexts supported by the SmartField, if it is using an OData model.",
			"properties": [
				{
					"name": "Form",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Behaves currently exactly like <code>sap.ui.comp.smartfield.ControlContextType.None</code>."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No special context is selected. The Smart Field applies its internal defaults."
				},
				{
					"name": "ResponsiveTable",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Also the UoM layout is influenced."
				},
				{
					"name": "SmartFormGrid",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "If this is selected the UoM layout is influenced."
				},
				{
					"name": "Table",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "If this is selected the UoM layout is influenced."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfield.ControlProposal",
			"basename": "ControlProposal",
			"resource": "sap/ui/comp/smartfield/ControlProposal.js",
			"module": "sap/ui/comp/smartfield/ControlProposal",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Proposes a control to be rendered. The smart field may ignore the proposal.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "controlType",
						"type": "sap.ui.comp.smartfield.ControlProposalType",
						"defaultValue": "None",
						"group": "Misc",
						"visibility": "public",
						"description": "By default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some\rextent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.",
						"methods": [
							"getControlType",
							"setControlType"
						]
					}
				],
				"aggregations": [
					{
						"name": "objectStatus",
						"singularName": "objectStatu",
						"type": "sap.ui.comp.smartfield.ObjectStatus",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Optional definition to further qualify how an object status control should be rendered.",
						"methods": [
							"getObjectStatus",
							"destroyObjectStatus",
							"setObjectStatus"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfield/ControlProposal.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "destroyObjectStatus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlProposal",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"description": "Destroys the objectStatus in the aggregation <code>objectStatus</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfield.ControlProposal with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getControlType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlProposalType",
						"description": "Value of property <code>controlType</code>"
					},
					"description": "Gets current value of property <code>controlType</code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some\nextent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfield.ControlProposal."
				},
				{
					"name": "getObjectStatus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ObjectStatus"
					},
					"since": "1.34.0",
					"description": "Gets content of aggregation <code>objectStatus</code>.\n\nOptional definition to further qualify how an object status control should be rendered."
				},
				{
					"name": "setControlType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlProposal",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sControlType",
							"type": "sap.ui.comp.smartfield.ControlProposalType",
							"optional": false,
							"description": "New value for property <code>controlType</code>"
						}
					],
					"description": "Sets a new value for property <code>controlType</code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some\nextent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setObjectStatus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlProposal",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oObjectStatus",
							"type": "sap.ui.comp.smartfield.ObjectStatus",
							"optional": false,
							"description": "The objectStatus to set"
						}
					],
					"description": "Sets the aggregated <code>objectStatus</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.smartfield.ControlProposalType",
			"basename": "ControlProposalType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of the different control proposals supported by the Smart Field, if it is using an OData model.",
			"properties": [
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No special context is selected. The Smart Field applies its internal defaults."
				},
				{
					"name": "ObjectIdentifier",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "If this is selected, the sap.m.ObjectIdentifier control is used to display IDs, if they are not editable. The current OData property is\nassumed to have a text annotation. Otherwise the configuration is ignored."
				},
				{
					"name": "ObjectNumber",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "If this is selected, the sap.m.ObjectNumber control is used to display units of measure. If the value property of the Smart Field is not\nbound to a unit of measure, the property is ignored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.smartfield.ControlType",
			"basename": "ControlType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "The available control types to configure the internal control selection of a SmartField control.",
			"properties": [
				{
					"name": "auto",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The SmartField chooses the control."
				},
				{
					"name": "checkBox",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The SmartField displays a check box."
				},
				{
					"name": "datePicker",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The SmartField displays a date picker."
				},
				{
					"name": "dropDownList",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The SmartField uses a drop down list box."
				},
				{
					"name": "input",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The SmartField displays an input field."
				},
				{
					"name": "selection",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The SmartField displays a <code>sap.m.Selection</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.smartfield.CriticalityRepresentationType",
			"basename": "CriticalityRepresentationType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "The different options to visualize the ObjectStatus control.",
			"properties": [
				{
					"name": "WithIcon",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "If this is selected, the sap.m.ObjectStatus control visualizes the criticality using an icon."
				},
				{
					"name": "WithoutIcon",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "If this is selected, the sap.m.ObjectStatus control does not visualize the criticality using an icon."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.smartfield.DisplayBehaviour",
			"basename": "DisplayBehaviour",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "The different options to define display behavior for the value help of a SmartField control.",
			"properties": [
				{
					"name": "auto",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The SmartField chooses the display behavior."
				},
				{
					"name": "descriptionAndId",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Description and ID are displayed for available values."
				},
				{
					"name": "descriptionOnly",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Only the description of the available values is displayed."
				},
				{
					"name": "idAndDescription",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "ID and description are displayed for available values."
				},
				{
					"name": "idOnly",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows the ID only."
				},
				{
					"name": "OnOff",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows Boolean value as On/Off"
				},
				{
					"name": "TrueFalse",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows Boolean value as True/False"
				},
				{
					"name": "YesNo",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows Boolean value as Yes/No"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.smartfield.JSONType",
			"basename": "JSONType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of the different data types supported by the SmartField control, if it is using a JSON model.",
			"properties": [
				{
					"name": "Boolean",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Boolean Type"
				},
				{
					"name": "Date",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The JavaScript Date Object"
				},
				{
					"name": "DateTime",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Date Time Type"
				},
				{
					"name": "Float",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Float type"
				},
				{
					"name": "Integer",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Integer type"
				},
				{
					"name": "String",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The JavaScript primary type String"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfield.ObjectStatus",
			"basename": "ObjectStatus",
			"resource": "sap/ui/comp/smartfield/ObjectStatus.js",
			"module": "sap/ui/comp/smartfield/ObjectStatus",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Defines a possible object status control to be rendered. The smart field may ignore the proposal.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "criticality",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Optional attribute, which can be set, if the control type has the value ObjectStatus.",
						"methods": [
							"getCriticality",
							"setCriticality"
						]
					},
					{
						"name": "criticalityRepresentationType",
						"type": "sap.ui.comp.smartfield.CriticalityRepresentationType",
						"defaultValue": "WithIcon",
						"group": "Misc",
						"visibility": "public",
						"description": "Optional attribute, which can be set to control how the criticality is visualized.",
						"methods": [
							"getCriticalityRepresentationType",
							"setCriticalityRepresentationType"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfield/ObjectStatus.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfield.ObjectStatus with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getCriticality",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>criticality</code>"
					},
					"description": "Gets current value of property <code>criticality</code>.\n\nOptional attribute, which can be set, if the control type has the value ObjectStatus."
				},
				{
					"name": "getCriticalityRepresentationType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.CriticalityRepresentationType",
						"description": "Value of property <code>criticalityRepresentationType</code>"
					},
					"description": "Gets current value of property <code>criticalityRepresentationType</code>.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nDefault value is <code>WithIcon</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfield.ObjectStatus."
				},
				{
					"name": "setCriticality",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ObjectStatus",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCriticality",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>criticality</code>"
						}
					],
					"description": "Sets a new value for property <code>criticality</code>.\n\nOptional attribute, which can be set, if the control type has the value ObjectStatus.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setCriticalityRepresentationType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ObjectStatus",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sCriticalityRepresentationType",
							"type": "sap.ui.comp.smartfield.CriticalityRepresentationType",
							"optional": false,
							"description": "New value for property <code>criticalityRepresentationType</code>"
						}
					],
					"description": "Sets a new value for property <code>criticalityRepresentationType</code>.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>WithIcon</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfield.SmartField",
			"basename": "SmartField",
			"resource": "sap/ui/comp/smartfield/SmartField.js",
			"module": "sap/ui/comp/smartfield/SmartField",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The SmartField control is a wrapper for other controls. It interprets OData metadata to determine the control that has to be\n       instantiated. The OData entity is derived from the control's binding context. The OData entity's property that is changed or displayed\n       with the control is derived from the control's value property.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The value property keeps the current value of the control. If a binding expression is configured, this is used to determine the\nproperty of an OData entity.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Enables the control.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of an entity set for which the control manages values. This is an optional property.",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Sets the control into an editable mode or a display mode.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "contextEditable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.31.0",
						"description": "Notifies the control whether controls using the SmartField are editable or not.",
						"methods": [
							"getContextEditable",
							"setContextEditable"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width can be set to an absolute value.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "textAlign",
						"type": "sap.ui.core.TextAlign",
						"defaultValue": "Initial",
						"group": "Misc",
						"visibility": "public",
						"description": "Horizontal alignment of the text.",
						"methods": [
							"getTextAlign",
							"setTextAlign"
						]
					},
					{
						"name": "placeholder",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text shown when no value available.",
						"methods": [
							"getPlaceholder",
							"setPlaceholder"
						]
					},
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "To be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Appearance",
						"visibility": "public",
						"description": "Visualizes warnings or errors.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "valueStateText",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The text which is shown in the value state message popup.",
						"methods": [
							"getValueStateText",
							"setValueStateText"
						]
					},
					{
						"name": "showValueStateMessage",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "The text which is shown in the value state message popup.",
						"methods": [
							"getShowValueStateMessage",
							"setShowValueStateMessage"
						]
					},
					{
						"name": "jsontype",
						"type": "sap.ui.comp.smartfield.JSONType",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Data types to be used, if the SmartField control is interacting with a JSON model. If the value property of the control is bound to\na property of an OData entity set, this property is not considered.",
						"deprecated": {
							"since": "1.31.0"
						},
						"methods": [
							"getJsontype",
							"setJsontype"
						]
					},
					{
						"name": "mandatory",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Mandatory property.",
						"methods": [
							"getMandatory",
							"setMandatory"
						]
					},
					{
						"name": "maxLength",
						"type": "int",
						"defaultValue": 0,
						"group": "Misc",
						"visibility": "public",
						"description": "Maximum number of characters. Value <code>0</code> means the feature is switched off.",
						"methods": [
							"getMaxLength",
							"setMaxLength"
						]
					},
					{
						"name": "showSuggestion",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>true</code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.",
						"methods": [
							"getShowSuggestion",
							"setShowSuggestion"
						]
					},
					{
						"name": "showValueHelp",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.",
						"methods": [
							"getShowValueHelp",
							"setShowValueHelp"
						]
					},
					{
						"name": "showLabel",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set to false the label is not displayed.",
						"methods": [
							"getShowLabel",
							"setShowLabel"
						]
					},
					{
						"name": "textLabel",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This property contains the text of an associated smart label.",
						"methods": [
							"getTextLabel",
							"setTextLabel"
						]
					},
					{
						"name": "tooltipLabel",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This property contains the tool tip of the associated smart label.",
						"methods": [
							"getTooltipLabel",
							"setTooltipLabel"
						]
					},
					{
						"name": "uomVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Visible state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.",
						"methods": [
							"getUomVisible",
							"setUomVisible"
						]
					},
					{
						"name": "uomEditable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Editable state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its\nassociated currency.",
						"methods": [
							"getUomEditable",
							"setUomEditable"
						]
					},
					{
						"name": "uomEnabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Enabled state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.",
						"methods": [
							"getUomEnabled",
							"setUomEnabled"
						]
					},
					{
						"name": "url",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Contains a URL which is used to render a link. The link is rendered, if the OData property which the value property of the control\nis bound to is of type <code>Edm.String</code> and the Smart Field is in display mode.",
						"methods": [
							"getUrl",
							"setUrl"
						]
					},
					{
						"name": "uomEditState",
						"type": "int",
						"defaultValue": -1,
						"group": "Misc",
						"visibility": "public",
						"since": "1.31.0",
						"description": "This property is for internal use only.",
						"methods": [
							"getUomEditState",
							"setUomEditState"
						]
					},
					{
						"name": "controlContext",
						"type": "sap.ui.comp.smartfield.ControlContextType",
						"defaultValue": "None",
						"group": "Misc",
						"visibility": "public",
						"since": "1.31.0",
						"description": "Defines in which context the layout of the smart field has to be interpreted.",
						"methods": [
							"getControlContext",
							"setControlContext"
						]
					},
					{
						"name": "proposedControl",
						"type": "sap.ui.comp.smartfield.ControlProposalType",
						"defaultValue": "None",
						"group": "Misc",
						"visibility": "public",
						"since": "1.31.0",
						"description": "Proposes a control to be rendered. The smart field may ignore the proposal.",
						"deprecated": {
							"since": "1.32.0"
						},
						"methods": [
							"getProposedControl",
							"setProposedControl"
						]
					},
					{
						"name": "wrapping",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.36.6",
						"description": "Indicates whether the control break lines (in display mode) to prevent overflow.",
						"methods": [
							"getWrapping",
							"setWrapping"
						]
					},
					{
						"name": "clientSideMandatoryCheck",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.3",
						"description": "Determines if the mandatory check happens on the client side <code>true</code> or on the server side <code>false</code>.",
						"methods": [
							"getClientSideMandatoryCheck",
							"setClientSideMandatoryCheck"
						]
					}
				],
				"aggregations": [
					{
						"name": "_content",
						"singularName": "_content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The content aggregation is used to hold the control that is hosted by the SmartField control.",
						"methods": [
							"get_content",
							"destroy_content",
							"set_content"
						]
					},
					{
						"name": "configuration",
						"singularName": "configuration",
						"type": "sap.ui.comp.smartfield.Configuration",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Optional configuration for SmartField.",
						"methods": [
							"getConfiguration",
							"destroyConfiguration",
							"setConfiguration"
						]
					},
					{
						"name": "controlProposal",
						"singularName": "controlProposal",
						"type": "sap.ui.comp.smartfield.ControlProposal",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.32.0",
						"description": "Proposes a control to be rendered. The smart field may ignore the proposal.",
						"deprecated": {
							"since": "1.34.0"
						},
						"methods": [
							"getControlProposal",
							"destroyControlProposal",
							"setControlProposal"
						]
					},
					{
						"name": "_ariaLabelInvisibleText",
						"singularName": "_ariaLabelInvisibleText",
						"type": "sap.ui.core.InvisibleText",
						"cardinality": "0..n",
						"visibility": "hidden",
						"since": "1.34.2",
						"description": "Collects the texts to be used for the ARIA labels.<br>\nThe InvisibleText controls will be added to the DOM by the SmartField control.",
						"methods": [
							"get_ariaLabelInvisibleText",
							"destroy_ariaLabelInvisibleText",
							"insert_ariaLabelInvisibleText",
							"add_ariaLabelInvisibleText",
							"remove_ariaLabelInvisibleText",
							"indexOf_ariaLabelInvisibleText",
							"removeAll_ariaLabelInvisibleText"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.34.2",
						"description": "Association with controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "entitySetFound",
						"visibility": "public",
						"description": "The OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it\nis specified. In both cases this event is fired.",
						"methods": [
							"attachEntitySetFound",
							"detachEntitySetFound",
							"fireEntitySetFound"
						]
					},
					{
						"name": "change",
						"visibility": "public",
						"description": "The event is fired after the text in the field has changed and the focus leaves the TextField or Enter is pressed.",
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "initialise",
						"visibility": "public",
						"description": "The event is fired after the smart field has calculated its metadata.",
						"methods": [
							"attachInitialise",
							"detachInitialise",
							"fireInitialise"
						]
					},
					{
						"name": "visibleChanged",
						"visibility": "public",
						"description": "The event is fired after the visibility of the control has changed.",
						"methods": [
							"attachVisibleChanged",
							"detachVisibleChanged",
							"fireVisibleChanged"
						]
					},
					{
						"name": "editableChanged",
						"visibility": "public",
						"since": "1.30.0",
						"description": "The event is fired after the value of editable property of the control has changed.",
						"methods": [
							"attachEditableChanged",
							"detachEditableChanged",
							"fireEditableChanged"
						]
					},
					{
						"name": "contextEditableChanged",
						"visibility": "public",
						"since": "1.31.0",
						"description": "The event is fired after the context editable property of the control has changed.",
						"methods": [
							"attachContextEditableChanged",
							"detachContextEditableChanged",
							"fireContextEditableChanged"
						]
					},
					{
						"name": "innerControlsCreated",
						"visibility": "public",
						"description": "The event is fired after the inner controls have been created.",
						"methods": [
							"attachInnerControlsCreated",
							"detachInnerControlsCreated",
							"fireInnerControlsCreated"
						]
					},
					{
						"name": "valueListChanged",
						"visibility": "public",
						"since": "1.31.0",
						"description": "The event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data.",
						"methods": [
							"attachValueListChanged",
							"detachValueListChanged",
							"fireValueListChanged"
						]
					},
					{
						"name": "press",
						"visibility": "public",
						"since": "1.36.0",
						"description": "Fires when the user triggers the link control or taps/clicks on an active title of the object identifier control.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				],
				"annotations": [
					{
						"name": "dataType",
						"namespace": "Edm",
						"annotation": "undefined",
						"defaultValue": "undefined",
						"description": "Based on the data type the <code>SmartField</code> determines the rendering of the inner control. Additionally the\n<code>FieldControl</code> is used.\n<code>FieldControl<code> is an annotation that contains a collection of <code>EnumMembers</code> that can dynamically set the state of the control.\nControls used for the <code>SmartField</code> control during runtime are:\n<ul>\n   <li>sap.m.Input of type Edm.String without value help. <br>\n      Used if control is editable and the EntityType is updatable.\n   </li>\n   <li>sap.m.Input of type Edm.String with value help and suggestion list. <br>\n      Used if control is editable, the <code>EntityType</code> is updatable, and a ValueHelp annotations exists.\n   </li>\n</ul>"
					},
					{
						"name": "fieldVisible",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"Record"
						],
						"annotation": "FieldControl",
						"defaultValue": "false",
						"appliesTo": [
							"fieldItem/#/visible"
						],
						"since": "1.28.1",
						"description": "Defines whether the control is visible. A fixed or dynamic value can be provided as an enumeration by referencing another\n<code>Property</code> within the same <code>EntityType</code>. Whenever the value of the referenced property changes to 0 or\ngreater than 0, the visibility is changed. The property <code>visible</code> of the SmartField control can be used to handle the\nvisibility of the control.\n\n<i>XML Example of OData V4 with Hidden Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; Path=&quot;FieldControlValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; Path=&quot;FieldControlValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;FieldControlValue&quot; type=&quot;Edm.Byte&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:visible=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:visible=&quot;false&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldReadOnly",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"Record"
						],
						"annotation": "FieldControl",
						"defaultValue": "false",
						"appliesTo": [
							"fieldItem/#/editable"
						],
						"since": "1.28.1",
						"description": "Defines whether the control is read-only. The value can be provided as a fixed or dynamic value of an enumeration by referencing\nanother <code>Property</code> within the same <code>EntityType</code>. Whenever the value of the referenced property changes to 1\nor greater than 1, the editability is changed. The <code>editable</code> property of the SmartField control renders the field as\neditable input. A SmartField is only editable if the corresponding <code>EntityType</code> is at least annotated as\n<code>com.sap.vocabularies.Common.v1.Updatable</code>.\n\n<i>XML Example of OData V4 with Read-only Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; Path=&quot;FieldControlValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;FieldControl&quot; Path=&quot;FieldControlValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;com.sap.vocabularies.Common.v1.FieldControlValue&quot; type=&quot;Edm.Byte&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:updatable</code> annotation on the <code>Property</code> can be used to render fields in read-only mode.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:updatable=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:updatable=&quot;false&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldMandatory",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"Record"
						],
						"annotation": "FieldControl",
						"defaultValue": "false",
						"appliesTo": [
							"fieldItem/#/editable"
						],
						"since": "1.28.1",
						"description": "Defines whether the control is mandatory. The value can be provided as a fixed or dynamic value of an enumeration by referencing\nanother <code>Property</code> within the same <code>EntityType</code>. Whenever the value of the referenced property changes to 7\nor less than 7, the mandatory state is changed. The <code>mandatory</code> property of the SmartField control renders the field as\nmandatory input. A SmartField can only be mandatory if the corresponding <code>EntityType</code> is at least annotated as\n<code>com.sap.vocabularies.Common.v1.Updatable</code>.\n\n<i>XML Example of OData V4 with Mandatory Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; Path=&quot;FieldControlValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.FieldControl&quot; Path=&quot;FieldControlValue&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;FieldControlValue&quot; type=&quot;Edm.Byte&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:field-control</code> annotation on the <code>Property</code> can be used to specify whether the field is\nmandatory.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:field-control=&quot;mandatory&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:field-control=&quot;mandatory&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldMasked",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "Masked",
						"defaultValue": "false",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.28.1",
						"description": "Determines that a control must not display the actual value in a field with sensitive data, but replace it with a placeholder, for\nexample, *. Use this annotation for sensitive data.\n\n<i>XML Example of OData V4 with Masked Password property</i>\n\n<pre>\n  &lt;Property Name=&quot;Password&quot; /&gt;\n  &lt;Annotations Target=&quot;Password&quot; xmlns=&quot;http://docs.oasis-open.org/odata/ns/edm&quot;&gt;\n    &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Masked&quot; /&gt;\n  &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "fieldLabel",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"PropertyPath"
						],
						"annotation": "Label",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/label"
						],
						"since": "1.28.1",
						"description": "A short, human-readable text suitable for labels on user interfaces. Renders the value associated with the label annotation of a\n<code>Property</code>, which can be <code>null</code>.\n\n<i>XML Example of OData V4 with CustomerName as Label for Customer</i>\n\n<pre>\n  &lt;Property Name=&quot;Customer&quot;&gt;\n    &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Label&quot; Path=&quot;CustomerName&quot; /&gt;\n  &lt;/Property&gt;\n  &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used to assign a label.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:label=&quot;Customer Name&quot;/&gt;\n   &lt;Property &gt;ame=&quot;CompanyCode&quot; ... sap:label=&quot;Company Code&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldText",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "Text",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.28.1",
						"description": "A descriptive text for values of the annotated property. <b>Note:</b> The value must be a dynamic expression when used as metadata\nannotation.\n\n<i>XML Example of OData V4 Text on CustomerName Property</i>\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.Text&quot; Path=&quot;CustomerName&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:text</code> annotation on the <code>Property</code> can be used to assign text.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:text=&quot;CustomerName&quot;/&gt;\n   &lt;Property Name=&quot;CustomerName&quot; type=&quot;Edm.String&quot;/&gt;\n</pre>"
					},
					{
						"name": "textArrangement",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntityType"
						],
						"annotation": "TextArrangement",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.32.1",
						"description": "Describes the arrangement of a code value and its text. The value can be a fixed or dynamic value of an enumeration by referencing\nanother <code>Property</code> within the same <code>EntityType</code>. The enumeration members can have the following possible\nvalues:\n<ul>\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst</code><br>\nThe underlying control is represented with the specified description followed by its ID. </li>\n<li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextLast</code><br>\nThe underlying control is represented with the specified ID followed by its description. </li>\n</ul>\n<i>XML Example of OData V4 with TextArrangement on ProductType</i>\n\n<pre>\n   &lt;Annotations Target=&quot;ProductType&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.TextArrangement&quot; EnumMember=&quot;UI.TextArrangementType/TextFirst&quot;/&gt;\n   &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "fieldCurrencyCode",
						"namespace": "Org.OData.Measures.V1",
						"target": [
							"Property"
						],
						"annotation": "ISOCurrency",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.28.1",
						"description": "Defines a currency code for an amount according to the ISO 4217 standard. <code>ISOCurrency</code> annotation can point to a\n<code>Property</code>, which can also be <code>null</code>.\n\n<i>XML Example of OData V4 with Price and CurrencyCode as ISOCurrency</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.ISOCurrency&quot; Path=&quot;CurrencyCode&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CurrencyCode&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"currency-code\"</code> along with <code>sap:unit</code> annotations on the\n<code>Property</code> can be used to assign a currency code to the field.\n\n<pre>\n   &lt;Property Name=&quot;Price&quot; ... sap:unit=&quot;CurrencyCode&quot;/&gt;\n   &lt;Property Name=&quot;CurrencyCode&quot; ... sap:semantics=&quot;currency-code&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldUnitOfMeasure",
						"namespace": "Org.OData.Measures.V1",
						"target": [
							"Property"
						],
						"annotation": "Unit",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.28.1",
						"description": "The unit of measure for this measured quantity, for example, cm for centimeters. Renders the value associated with the unit annotation\nof a <code>Property</code>, which can be <code>null</code>.\n\n<i>XML Example of OData V4 with OrderedQuantity and OrderedUnit as Unit</i>\n\n<pre>\n   &lt;Property Name=&quot;OrderedQuantity&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Unit&quot; Path=&quot;OrderedUnit&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;OrderedUnit&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"unit-of-measure\"</code> along with <code>sap:unit</code> annotations on the\n<code>Property</code> can be used to assign a unit of measure to the field.\n\n<pre>\n   &lt;Property Name=&quot;OrderedQuantity&quot; ... sap:unit=&quot;OrderedUnit&quot;/&gt;\n   &lt;Property Name=&quot;OrderedUnit&quot; ... sap:semantics=&quot;unit-of-measure&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldScale",
						"namespace": "Org.OData.Measures.V1",
						"target": [
							"Property"
						],
						"annotation": "Scale",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.28.1",
						"description": "Defines the number of digits that are to be displayed after the decimal point. This annotation can be applied to a\n<code>Property</code>.\n\n<i>XML Example of OData V4 with Scaled Price and Weight Properties</i>\n\n<pre>\n   &lt;Property Name=&quot;Price&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Scale&quot; Path=&quot;PriceScale&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;Weight&quot;&gt;\n      &lt;Annotation Term=&quot;Org.OData.Measures.V1.Scale&quot; Path=&quot;WeightScale&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;PriceScale&quot; type=&quot;Edm.Byte&quot; /&gt;\n   &lt;Property Name=&quot;WeightScale&quot; type=&quot;Edm.Byte&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:precision</code> annotation on the <code>Property</code> can be used to scale the number of digits to be\ndisplayed after the decimal point.\n\n<pre>\n   &lt;Property Name=&quot;Price&quot; ... sap:precision=&quot;2&quot;/&gt;\n   &lt;Property Name=&quot;Weight&quot; ... sap:precision=&quot;3&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldQuickInfo",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "QuickInfo",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/tooltip"
						],
						"since": "1.28.1",
						"description": "A short, human-readable text suitable for tool tips in user interfaces.\n\n<i>XML Example of OData V4 with Tooltip on CompanyCode Property</i>\n\n<pre>\n   &lt;Property Name=&quot;CompanyCode&quot;&gt;\n     &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.QuickInfo&quot; Path=&quot;CompanyCodeQuickInfo&quot; /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=&quot;CompanyQuickInfo&quot; type=&quot;Edm.String&quot; /&gt;\n</pre>\n\nFor OData v2 the <code>sap:quickinfo</code> annotation on the <code>Property</code> can be used to assign information relevant for\ntool tips of the field.\n\n<pre>\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:quickinfo=&quot;Company Code quickinfo&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldMultiLineText",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"Property",
							"PropertyPath"
						],
						"annotation": "MultiLineText",
						"defaultValue": "true",
						"appliesTo": [
							"fieldItem/#/control"
						],
						"since": "1.28.1",
						"description": "Properties annotated with this annotation are rendered as multi-line text (for example, text area).\n\n<i>XML Example of OData V4 with Multi-line Text Description Property</i>\n\n<pre>\n   &lt;Property Name=&quot;Description&quot; /&gt;\n   &lt;Annotations Target=&quot;Description&quot;&gt;\n      &lt;Annotation Term=&quot;com.sap.vocabularies.UI.v1.MultiLineText&quot; /&gt;\n   &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "fieldUpperCase",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"Parameter"
						],
						"annotation": "IsUpperCase",
						"defaultValue": "true",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.28.1",
						"description": "Defines whether a string value is capitalized.\n\n<i>XML Example of OData V4 with Capitalized Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.IsUpperCase&quot;&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:display-format=\"UpperCase\"</code> annotation on the <code>Property</code> can be used to render the text\nin upper case format.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:display-format=&quot;UpperCase&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:display-format=&quot;UpperCase&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldCreatable",
						"namespace": "Org.OData.Capabilities.V1",
						"target": [
							"EntitySet"
						],
						"annotation": "InsertRestrictions/Insertable",
						"defaultValue": "false",
						"appliesTo": [
							"fieldItem/#/editable"
						],
						"since": "1.28.1",
						"description": "Defines whether an <code>EntitySet</code> can be created.\n\n<i>XML Example of OData V4 with Insertable ProductCollection EntitySet</i>\n\n<pre>\n  &lt;EntitySet Name=&quot;ProductCollection&quot;&gt;\n    &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.InsertRestrictions&quot;&gt;\n      &lt;Record&gt;\n        &lt;PropertyValue Property=&quot;Insertable&quot; Bool=&quot;true&quot; /&gt;\n      &lt;/Record&gt;\n    &lt;/Annotation&gt;\n  &lt;/EntitySet&gt;\n</pre>\n\nFor OData v2 the <code>sap:creatable</code> annotation on the <code>Property</code> can be used to specify that the field is\ncreatable.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:creatable=&quot;true&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:creatable=&quot;true&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldComputed",
						"namespace": "Org.OData.Core.V1",
						"target": [
							"Property"
						],
						"annotation": "Computed",
						"defaultValue": "true",
						"appliesTo": [
							"fieldItem/#/editable"
						],
						"since": "1.28.1",
						"description": "Defines whether a <code>Property</code> can be created. A value for this <code>Property</code> is generated on both insert and\nupdate actions.\n\n<i>XML Example of OData V4 with Computed Customer and CompanyCode Properties</i>\n\n<pre>\n   &lt;Annotation Term=&quot;Org.OData.Core.V1.Computed&quot;&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:creatable</code> and <code>sap:updatable</code> annotation on the <code>Property</code> can be used to\nspecify whether a value has to be created on insert and update actions.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:creatable=&quot;true&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:creatable=&quot;true&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldUpdatableEntitySet",
						"namespace": "Org.OData.Capabilities.V1",
						"target": [
							"EntitySet"
						],
						"annotation": "UpdateRestrictions/Updatable",
						"defaultValue": "false",
						"appliesTo": [
							"fieldItem/#editable"
						],
						"since": "1.28.1",
						"description": "Defines whether an <code>EntitySet</code> can be updated.\n\n<i>XML Example of OData V4 with Updatable ProductCollection EntitySet</i>\n\n<pre>\n  &lt;EntitySet Name=&quot;ProductCollection&quot;&gt;\n    &lt;Annotation Term=&quot;Org.OData.Capabilities.V1.UpdateRestrictions&quot;&gt;\n      &lt;Record&gt;\n        PropertyValue Property=&quot;Updatable&quot; Bool=&quot;true&quot; /&gt;\n      &lt;/Record&gt;\n    &lt;/Annotation&gt;\n  &lt;/EntitySet&gt;\n</pre>\n\nFor OData v2 the <code>sap:updatable</code> annotation on the <code>Property</code> can be used to specify whether a field is\nupdatable.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:updatable=&quot;true&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:updatable=&quot;true&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldImmutable",
						"namespace": "Org.OData.Core.V1",
						"target": [
							"Property"
						],
						"annotation": "Immutable",
						"defaultValue": "true",
						"appliesTo": [
							"fieldItem/#/editable"
						],
						"since": "1.28.1",
						"description": "A value for this non-key property can be provided on <code>insert</code> and cannot even be changed on update actions.\n\n<i>XML Example of OData V4 with Immutable Customer and CompanyCode properties</i>\n\n<pre>\n   &lt;Annotation Term=&quot;Org.OData.Core.V1.Immutable&quot;&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:updatable</code> and <code>sap:creatable</code> annotation on the <code>Property</code> can be used to\navoid changes that can be done on update actions.\n\n<pre>\n   &lt;Property Name=&quot;Customer&quot; ... sap:creatable=&quot;false&quot;/&gt;\n   &lt;Property Name=&quot;CompanyCode&quot; ... sap:creatable=&quot;false&quot;/&gt;\n</pre>"
					},
					{
						"name": "fieldSideEffects",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"EntitySet",
							"EntityType",
							"ComplexType"
						],
						"annotation": "SideEffects",
						"defaultValue": "null",
						"appliesTo": [
							"fieldItem/#/value"
						],
						"since": "1.32.1",
						"description": "Changes to the source properties may have side-effects on the target properties or entities. If neither TargetProperties nor\nTargetEntities are specified, a change to the source property values may have unforeseeable side-effects. An empty\nNavigationPropertyPath may be used in TargetEntities to specify that any property of the annotated entity type may be affected. Actions\nare a special case: here the change trigger is the action invocation, so SourceProperties and SourceEntities have no meaning, only\nTargetProperties and TargetEntities are relevant. They are addressed via the binding parameter of the action. <code>SideEffects</code>\ncan be associated with the given entity, which can be a complex type, entity type or entity set. In addition to this,\n<code>SideEffects</code> can also be applied to a <code>PropertyPath</code> or a <code>NavigationPropertyPath</code> of the given\nentity.\n\n<i>XML Example of OData V4 with Side Effect on CurrencyCode Property</i>\n\n<pre>\n  &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.SideEffects&quot; Qualifier=&quot;ExampleQualifierName&quot;&gt;\n    &lt;Record&gt;\n      &lt;PropertyValue Property=&quot;SourceProperties&quot;&gt;\n        &lt;Collection&gt;\n          &lt;PropertyPath&gt;CurrencyCode&lt;/PropertyPath&gt;\n        &lt;/Collection&gt;\n      &lt;/PropertyValue&gt;\n      &lt;PropertyValue Property=&quot;TargetProperties&quot;&gt;\n        &lt;Collection&gt;\n          &lt;PropertyPath&gt;CurrencyCode&lt;/PropertyPath&gt;\n        &lt;/Collection&gt;\n      &lt;/PropertyValue&gt;\n      &lt;PropertyValue Property=&quot;EffectTypes&quot; EnumMember=&quot;ValidationMessage&quot; /&gt;\n    &lt;/Record&gt;\n  &lt;/Annotation&gt;\n</pre>"
					},
					{
						"name": "valueList",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"Parameter"
						],
						"annotation": "ValueList",
						"defaultValue": "null",
						"appliesTo": [
							"field/#/fieldHelp"
						],
						"since": "1.28.1",
						"description": "Specifies how to get a list of acceptable values for a property or parameter. Provides the value help dialog and type-ahead function.\n\n<i>XML Example of OData V4 Value List on Category Property</i>\n\n<pre>\n   &lt;Annotation Term=&quot;com.sap.vocabularies.Common.v1.ValueList&quot;&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=&quot;Label&quot; String=&quot;Category&quot; /&gt;\n       &lt;PropertyValue Property=&quot;CollectionPath&quot; String=&quot;Category&quot; /&gt;\n       &lt;PropertyValue Property=&quot;SearchSupported&quot; Bool=&quot;true&quot; /&gt;\n       &lt;PropertyValue Property=&quot;Parameters&quot;&gt;\n         &lt;Collection&gt;\n           &lt;Record Type=&quot;com.sap.vocabularies.Common.v1.ValueListParameterOut&quot;&gt;\n             &lt;PropertyValue Property=&quot;LocalDataProperty&quot; PropertyPath=&quot;Category&quot; /&gt;\n             &lt;PropertyValue Property=&quot;ValueListProperty&quot; String=&quot;Description&quot; /&gt;\n           &lt;/Record&gt;\n           &lt;Record Type=&quot;com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly&quot;&gt;\n             &lt;PropertyValue Property=&quot;ValueListProperty&quot; String=&quot;CategoryName&quot; /&gt;\n           &lt;/Record&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfield/SmartField.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired after the text in the field has changed and the focus leaves the TextField or Enter is pressed."
				},
				{
					"name": "contextEditableChanged",
					"visibility": "public",
					"since": "1.31.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired after the context editable property of the control has changed."
				},
				{
					"name": "editableChanged",
					"visibility": "public",
					"since": "1.30.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired after the value of editable property of the control has changed."
				},
				{
					"name": "entitySetFound",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it\nis specified. In both cases this event is fired."
				},
				{
					"name": "initialise",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired after the smart field has calculated its metadata."
				},
				{
					"name": "innerControlsCreated",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired after the inner controls have been created."
				},
				{
					"name": "press",
					"visibility": "public",
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fires when the user triggers the link control or taps/clicks on an active title of the object identifier control."
				},
				{
					"name": "valueListChanged",
					"visibility": "public",
					"since": "1.31.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data."
				},
				{
					"name": "visibleChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired after the visibility of the control has changed."
				}
			],
			"methods": [
				{
					"name": "_getEmbeddedSmartField",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "The controls hosted currently by this SmartField"
					},
					"description": "Resolves the controls hosted currently by this SmartField."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.2",
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addAssociation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAssociationName",
							"type": "string",
							"optional": false,
							"description": "the string identifying the association the object should be added to."
						},
						{
							"name": "sId",
							"type": "string|sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the ID of the ManagedObject object to add; if empty, nothing is added; if a\n       <code>sap.ui.base.ManagedObject</code> is given, its ID is added"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this managed object as well as the newly associated object are not marked as changed"
						}
					],
					"description": "Adds some object with the ID <code>sId</code> to the association identified by <code>sAssociationName</code> and marks this ManagedObject\nas changed. This method does not avoid duplicates. <b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the\nclass documentation</a>. Applications or frameworks must not use this method to generically add an object to an association. Use the concrete\nmethod add<i>XYZ</i> for association 'XYZ' or the generic {@link #applySettings} instead."
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the text in the field has changed and the focus leaves the TextField or Enter is pressed."
				},
				{
					"name": "attachContextEditableChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>contextEditableChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the context editable property of the control has changed."
				},
				{
					"name": "attachEditableChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>editableChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the value of editable property of the control has changed."
				},
				{
					"name": "attachEntitySetFound",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>entitySetFound</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it\nis specified. In both cases this event is fired."
				},
				{
					"name": "attachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialise</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the smart field has calculated its metadata."
				},
				{
					"name": "attachInnerControlsCreated",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>innerControlsCreated</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the inner controls have been created."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nFires when the user triggers the link control or taps/clicks on an active title of the object identifier control."
				},
				{
					"name": "attachValueListChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>valueListChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data."
				},
				{
					"name": "attachVisibleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>visibleChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField</code> itself.\n\nThe event is fired after the visibility of the control has changed."
				},
				{
					"name": "checkClientError",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code>, if a client error has been detected, <code>false</code> otherwise"
					},
					"description": "Returns whether a client error has been detected. Additionally the error message is shown, if this is not the case already."
				},
				{
					"name": "destroyConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the configuration in the aggregation <code>configuration</code>."
				},
				{
					"name": "destroyControlProposal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"description": "Destroys the controlProposal in the aggregation <code>controlProposal</code>.",
					"deprecated": {
						"since": "1.34.0"
					}
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachContextEditableChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>contextEditableChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachEditableChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>editableChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachEntitySetFound",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>entitySetFound</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialise</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInnerControlsCreated",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>innerControlsCreated</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachValueListChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>valueListChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachVisibleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>visibleChanged</code> event of this <code>sap.ui.comp.smartfield.SmartField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfield.SmartField with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners."
				},
				{
					"name": "fireContextEditableChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>contextEditableChanged</code> to attached listeners."
				},
				{
					"name": "fireEditableChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>editableChanged</code> to attached listeners."
				},
				{
					"name": "fireEntitySetFound",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>entitySetFound</code> to attached listeners."
				},
				{
					"name": "fireInitialise",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialise</code> to attached listeners."
				},
				{
					"name": "fireInnerControlsCreated",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>innerControlsCreated</code> to attached listeners."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "fireValueListChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>valueListChanged</code> to attached listeners."
				},
				{
					"name": "fireVisibleChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>visibleChanged</code> to attached listeners."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"since": "1.34.2",
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getClientSideMandatoryCheck",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>clientSideMandatoryCheck</code>"
					},
					"since": "1.38.3",
					"description": "Gets current value of property <code>clientSideMandatoryCheck</code>.\n\nDetermines if the mandatory check happens on the client side <code>true</code> or on the server side <code>false</code>.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.Configuration"
					},
					"description": "Gets content of aggregation <code>configuration</code>.\n\nOptional configuration for SmartField."
				},
				{
					"name": "getContextEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>contextEditable</code>"
					},
					"since": "1.31.0",
					"description": "Gets current value of property <code>contextEditable</code>.\n\nNotifies the control whether controls using the SmartField are editable or not.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getControlContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlContextType",
						"description": "Value of property <code>controlContext</code>"
					},
					"since": "1.31.0",
					"description": "Gets current value of property <code>controlContext</code>.\n\nDefines in which context the layout of the smart field has to be interpreted.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getControlProposal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlProposal"
					},
					"since": "1.32.0",
					"description": "Gets content of aggregation <code>controlProposal</code>.\n\nProposes a control to be rendered. The smart field may ignore the proposal.",
					"deprecated": {
						"since": "1.34.0"
					}
				},
				{
					"name": "getDataProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The OData property."
					},
					"description": "Returns the OData property to which the <code>value</code> property of the control is bound."
				},
				{
					"name": "getDataType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The data type to which the value property is bound."
					},
					"description": "Returns the EDM data type of the OData property to which the value property of the control is bound to. If no model or no OData property is\navailable <code>null</code> is returned."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nSets the control into an editable mode or a display mode.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nEnables the control.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entitySet</code>"
					},
					"description": "Gets current value of property <code>entitySet</code>.\n\nThe name of an entity set for which the control manages values. This is an optional property."
				},
				{
					"name": "getFocusDomRef",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "The DOM element that should get the focus, can be <code>null</code>"
					},
					"description": "Returns the DOM element that gets the focus."
				},
				{
					"name": "getInnerControls",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "The controls hosted currently by this SmartField"
					},
					"description": "Resolves the controls hosted currently by this SmartField."
				},
				{
					"name": "getJsontype",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.JSONType",
						"description": "Value of property <code>jsontype</code>"
					},
					"description": "Gets current value of property <code>jsontype</code>.\n\nData types to be used, if the SmartField control is interacting with a JSON model. If the value property of the control is bound to\na property of an OData entity set, this property is not considered.",
					"deprecated": {
						"since": "1.31.0"
					}
				},
				{
					"name": "getMandatory",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>mandatory</code>"
					},
					"description": "Gets current value of property <code>mandatory</code>.\n\nMandatory property.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMaxLength",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxLength</code>"
					},
					"description": "Gets current value of property <code>maxLength</code>.\n\nMaximum number of characters. Value <code>0</code> means the feature is switched off.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfield.SmartField."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit')."
				},
				{
					"name": "getPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>placeholder</code>"
					},
					"description": "Gets current value of property <code>placeholder</code>.\n\nText shown when no value available."
				},
				{
					"name": "getProposedControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.ControlProposalType",
						"description": "Value of property <code>proposedControl</code>"
					},
					"since": "1.31.0",
					"description": "Gets current value of property <code>proposedControl</code>.\n\nProposes a control to be rendered. The smart field may ignore the proposal.\n\nDefault value is <code>None</code>.",
					"deprecated": {
						"since": "1.32.0"
					}
				},
				{
					"name": "getShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showLabel</code>"
					},
					"description": "Gets current value of property <code>showLabel</code>.\n\nIf set to false the label is not displayed.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowSuggestion",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSuggestion</code>"
					},
					"description": "Gets current value of property <code>showSuggestion</code>.\n\nIf set to <code>true</code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowValueHelp",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showValueHelp</code>"
					},
					"description": "Gets current value of property <code>showValueHelp</code>.\n\nIf set to true, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowValueStateMessage",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showValueStateMessage</code>"
					},
					"description": "Gets current value of property <code>showValueStateMessage</code>.\n\nThe text which is shown in the value state message popup.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSupportedAnnotationPaths",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "array",
						"description": "The resulting paths are returned"
					},
					"parameters": [
						{
							"name": "oMetaModel",
							"type": "sap.ui.model.odata.ODataMetaModel",
							"optional": false,
							"description": "The given OData meta model"
						},
						{
							"name": "oEntitySet",
							"type": "object",
							"optional": false,
							"description": "The given entity set"
						},
						{
							"name": "sValueBinding",
							"type": "string",
							"optional": false,
							"description": "The path identifying the OData property the value property of the SmartField is bound to"
						},
						{
							"name": "bNavigationPathsOnly",
							"type": "boolean",
							"optional": false,
							"description": "If set to <code>true</code>, no properties are returned"
						}
					],
					"description": "Calculates the paths to the annotations used by the SmartField."
				},
				{
					"name": "getTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextAlign",
						"description": "Value of property <code>textAlign</code>"
					},
					"description": "Gets current value of property <code>textAlign</code>.\n\nHorizontal alignment of the text.\n\nDefault value is <code>Initial</code>."
				},
				{
					"name": "getTextLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>textLabel</code>"
					},
					"description": "Gets current value of property <code>textLabel</code>.\n\nThis property contains the text of an associated smart label."
				},
				{
					"name": "getTooltipLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>tooltipLabel</code>"
					},
					"description": "Gets current value of property <code>tooltipLabel</code>.\n\nThis property contains the tool tip of the associated smart label."
				},
				{
					"name": "getUnitOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The current unit of measure is returned, which can be <code>null</code"
					},
					"description": "If the OData property to which the control's value property is bound semantically represents a unit of measure, the value of the current unit\nof measure is returned. Otherwise <code>null</code> is returned."
				},
				{
					"name": "getUomEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>uomEditable</code>"
					},
					"description": "Gets current value of property <code>uomEditable</code>.\n\nEditable state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its\nassociated currency.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUomEditState",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>uomEditState</code>"
					},
					"since": "1.31.0",
					"description": "Gets current value of property <code>uomEditState</code>.\n\nThis property is for internal use only.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "getUomEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>uomEnabled</code>"
					},
					"description": "Gets current value of property <code>uomEnabled</code>.\n\nEnabled state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUomVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>uomVisible</code>"
					},
					"description": "Gets current value of property <code>uomVisible</code>.\n\nVisible state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>url</code>"
					},
					"description": "Gets current value of property <code>url</code>.\n\nContains a URL which is used to render a link. The link is rendered, if the OData property which the value property of the control\nis bound to is of type <code>Edm.String</code> and the Smart Field is in display mode."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The value of the property"
					},
					"description": "Returns the value of the <code>value</code> property."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "The property value"
					},
					"description": "Getter for property <code>valueState</code>. Default value is <code>None</code>."
				},
				{
					"name": "getValueStateText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The property value"
					},
					"description": "Getter for property <code>valueStateText</code>. Default value is empty/<code>undefined</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width can be set to an absolute value."
				},
				{
					"name": "getWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>wrapping</code>"
					},
					"since": "1.36.6",
					"description": "Gets current value of property <code>wrapping</code>.\n\nIndicates whether the control break lines (in display mode) to prevent overflow.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.34.2",
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"since": "1.34.2",
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setClientSideMandatoryCheck",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.3",
					"parameters": [
						{
							"name": "bClientSideMandatoryCheck",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>clientSideMandatoryCheck</code>"
						}
					],
					"description": "Sets a new value for property <code>clientSideMandatoryCheck</code>.\n\nDetermines if the mandatory check happens on the client side <code>true</code> or on the server side <code>false</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oConfiguration",
							"type": "sap.ui.comp.smartfield.Configuration",
							"optional": false,
							"description": "The configuration to set"
						}
					],
					"description": "Sets the aggregated <code>configuration</code>."
				},
				{
					"name": "setContextEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Setter for property <code>contextEditable</code>. Default value is <code>false</code>."
				},
				{
					"name": "setControlContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "sControlContext",
							"type": "sap.ui.comp.smartfield.ControlContextType",
							"optional": false,
							"description": "New value for property <code>controlContext</code>"
						}
					],
					"description": "Sets a new value for property <code>controlContext</code>.\n\nDefines in which context the layout of the smart field has to be interpreted.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setControlProposal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "oControlProposal",
							"type": "sap.ui.comp.smartfield.ControlProposal",
							"optional": false,
							"description": "The controlProposal to set"
						}
					],
					"description": "Sets the aggregated <code>controlProposal</code>.",
					"deprecated": {
						"since": "1.34.0"
					}
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Setter for property <code>editable</code>. Default value is <code>false</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "The new value for property <code>enabled</code>."
						}
					],
					"description": "Setter for property <code>enabled</code>. Default value is <code>true</code>."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The new value for property <code>entitySet</code>"
						}
					],
					"description": "Setter for property <code>entitySet</code>. Default value is <code>undefined</code>."
				},
				{
					"name": "setJsontype",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sJsontype",
							"type": "sap.ui.comp.smartfield.JSONType",
							"optional": false,
							"description": "New value for property <code>jsontype</code>"
						}
					],
					"description": "Sets a new value for property <code>jsontype</code>.\n\nData types to be used, if the SmartField control is interacting with a JSON model. If the value property of the control is bound to\na property of an OData entity set, this property is not considered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"since": "1.31.0"
					}
				},
				{
					"name": "setMandatory",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bMandatory",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>mandatory</code>"
						}
					],
					"description": "Sets a new value for property <code>mandatory</code>.\n\nMandatory property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setMaxLength",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxLength",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxLength</code>"
						}
					],
					"description": "Sets a new value for property <code>maxLength</code>.\n\nMaximum number of characters. Value <code>0</code> means the feature is switched off.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPlaceholder",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>placeholder</code>"
						}
					],
					"description": "Sets a new value for property <code>placeholder</code>.\n\nText shown when no value available.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setProposedControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "sProposedControl",
							"type": "sap.ui.comp.smartfield.ControlProposalType",
							"optional": false,
							"description": "New value for property <code>proposedControl</code>"
						}
					],
					"description": "Sets a new value for property <code>proposedControl</code>.\n\nProposes a control to be rendered. The smart field may ignore the proposal.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>.",
					"deprecated": {
						"since": "1.32.0"
					}
				},
				{
					"name": "setShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowLabel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>showLabel</code>.\n\nIf set to false the label is not displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowSuggestion",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSuggestion",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSuggestion</code>"
						}
					],
					"description": "Sets a new value for property <code>showSuggestion</code>.\n\nIf set to <code>true</code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowValueHelp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowValueHelp",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showValueHelp</code>"
						}
					],
					"description": "Sets a new value for property <code>showValueHelp</code>.\n\nIf set to true, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowValueStateMessage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowValueStateMessage",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showValueStateMessage</code>"
						}
					],
					"description": "Sets a new value for property <code>showValueStateMessage</code>.\n\nThe text which is shown in the value state message popup.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "New value for property <code>textAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>textAlign</code>.\n\nHorizontal alignment of the text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Initial</code>."
				},
				{
					"name": "setTextLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>textLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>textLabel</code>.\n\nThis property contains the text of an associated smart label.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTooltipLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTooltipLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>tooltipLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>tooltipLabel</code>.\n\nThis property contains the tool tip of the associated smart label.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUnitOfMeasure",
					"visibility": "public",
					"parameters": [
						{
							"name": "sUnit",
							"type": "string",
							"optional": false,
							"description": "The new unit of measure to be set."
						}
					],
					"description": "If the OData property the control's value property is bound to semantically represents a unit of measure, the value of the current unit of\nmeasure can be changed."
				},
				{
					"name": "setUomEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUomEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>uomEditable</code>"
						}
					],
					"description": "Sets a new value for property <code>uomEditable</code>.\n\nEditable state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its\nassociated currency.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUomEditState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "iUomEditState",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>uomEditState</code>"
						}
					],
					"description": "Sets a new value for property <code>uomEditState</code>.\n\nThis property is for internal use only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "setUomEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUomEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>uomEnabled</code>"
						}
					],
					"description": "Sets a new value for property <code>uomEnabled</code>.\n\nEnabled state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUomVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUomVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>uomVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>uomVisible</code>.\n\nVisible state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The new value for property <code>url</code>"
						}
					],
					"description": "Setter for property <code>url</code>. Default value is <code>null</code>."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"description": "The new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>. Default value is <code>true</code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "The new value for property <code>valueState</code>"
						}
					],
					"description": "Setter for property <code>valueState</code>. Default value is <code>None</code>."
				},
				{
					"name": "setValueStateText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "The new value for property <code>valueStateText</code>"
						}
					],
					"description": "Setter for property <code>valueStateText</code>. Default value is empty/<code>undefined</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": false,
							"description": "If <code>true</code>, the managed object is not marked as changed"
						}
					],
					"description": "Setter for property <code>visible</code>. Default value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "The new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>."
				},
				{
					"name": "setWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bWrapping",
							"type": "boolean",
							"optional": false,
							"description": "The new value for property <code>wrapping</code>"
						}
					],
					"description": "Setter for property <code>wrapping</code>. The wrapping is only relevant for the table control context."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfield.SmartLabel",
			"basename": "SmartLabel",
			"resource": "sap/ui/comp/smartfield/SmartLabel.js",
			"module": "sap/ui/comp/smartfield/SmartLabel",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Label",
			"description": "The SmartLabel control extends {@link sap.m.Label sap.m.Label} and displays the label for\n       {@link sap.ui.comp.smartfield.SmartField SmartField}. It uses the annotations <code>sap:label</code> or\n       <code>com.sap.vocabularies.Common.v1.Label</code> for the label text and <code>sap:quickinfo</code> or\n       <code>com.sap.vocabularies.Common.v1.QuickInfo</code> for the tooltip. The mandatory indicator is obtained from the SmartField\n       control. The association with a SmartField control is built using the setLabelFor method.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfield/SmartLabel."
			},
			"methods": [
				{
					"name": "destroy",
					"visibility": "public",
					"parameters": [
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": false,
							"description": "If set to <code>true</code>, UI element is not marked for redraw"
						}
					],
					"description": "Cleans up the resources associated with this element and all its children. After an element has been destroyed, it can no longer be used on the\nUI. Applications should call this method if they don't need the element any longer."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfield.SmartLabel with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Label.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfield.SmartLabel."
				},
				{
					"name": "setLabelFor",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSmartField",
							"type": "sap.ui.comp.SmartField",
							"optional": false,
							"description": "The associated SmartField control"
						}
					],
					"description": "Assigns SmartField."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfilterbar.ControlConfiguration",
			"basename": "ControlConfiguration",
			"resource": "sap/ui/comp/smartfilterbar/ControlConfiguration.js",
			"module": "sap/ui/comp/smartfilterbar/ControlConfiguration",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "ControlConfiguration can be used to add additional configuration for filter fields in the SmartFilterBar control, in order to overwrite\n       the default settings from the OData metadata. For instance, it is possible to change the label, index or control type of a filter field.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The key property corresponds to the field name from the OData service $metadata document.",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "groupId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData\nmetadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.",
						"methods": [
							"getGroupId",
							"setGroupId"
						]
					},
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Using this property it is possible to overwrite the label of a filter field in the SmartFilterBar.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Using this flag it is possible to hide fields from the OData metadata.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "hasValueHelpDialog",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether a value help dialog is available or not.",
						"methods": [
							"getHasValueHelpDialog",
							"setHasValueHelpDialog"
						]
					},
					{
						"name": "controlType",
						"type": "string",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and\nannotations. Using this property it is possible to overwrite the OData metadata. Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.CONTROLTYPE",
						"methods": [
							"getControlType",
							"setControlType"
						]
					},
					{
						"name": "filterType",
						"type": "string",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The filter type specifies whether the filter fields is e.g. type single value, multi-value,or interval. The filter type is being\ncalculated by the martFilterBar based on the OData metadata. Using this property the filter type can be configured manually.\nPossible value scan be found here: sap.ui.comp.smartfilterbar.ControlConfiguration.FILTERTYPE",
						"methods": [
							"getFilterType",
							"setFilterType"
						]
					},
					{
						"name": "index",
						"type": "int",
						"defaultValue": -1,
						"group": "Misc",
						"visibility": "public",
						"description": "The zero based index can be used to specify the initial order of fields (without any variants).",
						"methods": [
							"getIndex",
							"setIndex"
						]
					},
					{
						"name": "hasTypeAhead",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Property can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for\nDrodDownListbox",
						"methods": [
							"getHasTypeAhead",
							"setHasTypeAhead"
						]
					},
					{
						"name": "mandatory",
						"type": "string",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Property can be used to overwrite the mandatory state of a filter field. Possible values:\nsap.ui.comp.smartfilterbar.ControlConfiguration.MANDATORY Property can only be set during initialisation. Changes at runtime will\nbe ignored.",
						"methods": [
							"getMandatory",
							"setMandatory"
						]
					},
					{
						"name": "width",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the filter field in a CSS compatible format. The width can be set only once during initialisation. Changes at runtime\nwill not be reflected. The width will not be applied to custom controls.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "visibleInAdvancedArea",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.",
						"methods": [
							"getVisibleInAdvancedArea",
							"setVisibleInAdvancedArea"
						]
					},
					{
						"name": "preventInitialDataFetchInValueHelpDialog",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "In case there are value help annotations for this filter field, it is possible to specify whether the table in the value help\ndialog for this field will be filled initially. The default value is flase, which menas the table will be filled as the data fetch\nis not being prevented.",
						"methods": [
							"getPreventInitialDataFetchInValueHelpDialog",
							"setPreventInitialDataFetchInValueHelpDialog"
						]
					},
					{
						"name": "displayBehaviour",
						"type": "string",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown\ntext) , Description and ID for MultiInput (token text) Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR",
						"methods": [
							"getDisplayBehaviour",
							"setDisplayBehaviour"
						]
					},
					{
						"name": "conditionType",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The condition Type class name to use for this filter item\nImplemantation should derive from sap.ui.comp.config.condition.Type",
						"methods": [
							"getConditionType",
							"setConditionType"
						]
					}
				],
				"aggregations": [
					{
						"name": "defaultFilterValues",
						"singularName": "defaultFilterValue",
						"type": "sap.ui.comp.smartfilterbar.SelectOption",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Default value for a filter field.",
						"methods": [
							"getDefaultFilterValues",
							"destroyDefaultFilterValues",
							"insertDefaultFilterValue",
							"addDefaultFilterValue",
							"removeDefaultFilterValue",
							"indexOfDefaultFilterValue",
							"removeAllDefaultFilterValues"
						]
					},
					{
						"name": "customControl",
						"singularName": "customControl",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "If a custom control is specified, the Smart Filter Bar will not create a control but use the custom control. Additional services\nlike TypeAhead have to implemented manually.",
						"methods": [
							"getCustomControl",
							"destroyCustomControl",
							"setCustomControl"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Fired when the value of a property, for example isVisible, has changed.",
						"parameters": {
							"propertyName": {
								"name": "propertyName",
								"type": "string",
								"description": "Name of the changed property"
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfilterbar/ControlConfiguration.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyName": {
											"name": "propertyName",
											"type": "string",
											"optional": false,
											"description": "Name of the changed property"
										}
									}
								}
							}
						}
					],
					"description": "Fired when the value of a property, for example isVisible, has changed."
				}
			],
			"methods": [
				{
					"name": "addDefaultFilterValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDefaultFilterValue",
							"type": "sap.ui.comp.smartfilterbar.SelectOption",
							"optional": false,
							"description": "the defaultFilterValue to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some defaultFilterValue to the aggregation <code>defaultFilterValues</code>."
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code> itself.\n\nFired when the value of a property, for example isVisible, has changed."
				},
				{
					"name": "destroyCustomControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the customControl in the aggregation <code>customControl</code>."
				},
				{
					"name": "destroyDefaultFilterValues",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the defaultFilterValues in the aggregation <code>defaultFilterValues</code>."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.ControlConfiguration with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>propertyName</code> of type <code>string</code>Name of the changed property</li>\n</ul>"
				},
				{
					"name": "getConditionType",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>conditionType</code>"
					},
					"description": "Gets current value of property <code>conditionType</code>.\n\nThe condition Type class name to use for this filter item\nImplemantation should derive from sap.ui.comp.config.condition.Type"
				},
				{
					"name": "getControlType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>controlType</code>"
					},
					"description": "Gets current value of property <code>controlType</code>.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and\nannotations. Using this property it is possible to overwrite the OData metadata. Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.CONTROLTYPE\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getCustomControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>customControl</code>.\n\nIf a custom control is specified, the Smart Filter Bar will not create a control but use the custom control. Additional services\nlike TypeAhead have to implemented manually."
				},
				{
					"name": "getDefaultFilterValues",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SelectOption[]"
					},
					"description": "Gets content of aggregation <code>defaultFilterValues</code>.\n\nDefault value for a filter field."
				},
				{
					"name": "getDisplayBehaviour",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>displayBehaviour</code>"
					},
					"description": "Gets current value of property <code>displayBehaviour</code>.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown\ntext) , Description and ID for MultiInput (token text) Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getFilterType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>filterType</code>"
					},
					"description": "Gets current value of property <code>filterType</code>.\n\nThe filter type specifies whether the filter fields is e.g. type single value, multi-value,or interval. The filter type is being\ncalculated by the martFilterBar based on the OData metadata. Using this property the filter type can be configured manually.\nPossible value scan be found here: sap.ui.comp.smartfilterbar.ControlConfiguration.FILTERTYPE\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getGroupId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>groupId</code>"
					},
					"description": "Gets current value of property <code>groupId</code>.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData\nmetadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC."
				},
				{
					"name": "getHasTypeAhead",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>hasTypeAhead</code>"
					},
					"description": "Gets current value of property <code>hasTypeAhead</code>.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for\nDrodDownListbox\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHasValueHelpDialog",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>hasValueHelpDialog</code>"
					},
					"description": "Gets current value of property <code>hasValueHelpDialog</code>.\n\nSpecifies whether a value help dialog is available or not.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getIndex",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>index</code>"
					},
					"description": "Gets current value of property <code>index</code>.\n\nThe zero based index can be used to specify the initial order of fields (without any variants).\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\n\nThe key property corresponds to the field name from the OData service $metadata document."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar."
				},
				{
					"name": "getMandatory",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>mandatory</code>"
					},
					"description": "Gets current value of property <code>mandatory</code>.\n\nProperty can be used to overwrite the mandatory state of a filter field. Possible values:\nsap.ui.comp.smartfilterbar.ControlConfiguration.MANDATORY Property can only be set during initialisation. Changes at runtime will\nbe ignored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.ControlConfiguration."
				},
				{
					"name": "getPreventInitialDataFetchInValueHelpDialog",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>preventInitialDataFetchInValueHelpDialog</code>"
					},
					"description": "Gets current value of property <code>preventInitialDataFetchInValueHelpDialog</code>.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help\ndialog for this field will be filled initially. The default value is flase, which menas the table will be filled as the data fetch\nis not being prevented.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getVisibleInAdvancedArea",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleInAdvancedArea</code>"
					},
					"description": "Gets current value of property <code>visibleInAdvancedArea</code>.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialisation. Changes at runtime\nwill not be reflected. The width will not be applied to custom controls."
				},
				{
					"name": "indexOfDefaultFilterValue",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oDefaultFilterValue",
							"type": "sap.ui.comp.smartfilterbar.SelectOption",
							"optional": false,
							"description": "The defaultFilterValue whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartfilterbar.SelectOption</code> in the aggregation <code>defaultFilterValues</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertDefaultFilterValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDefaultFilterValue",
							"type": "sap.ui.comp.smartfilterbar.SelectOption",
							"optional": false,
							"description": "the defaultFilterValue to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the defaultFilterValue should be inserted at; for\n             a negative value of <code>iIndex</code>, the defaultFilterValue is inserted at position 0; for a value\n             greater than the current size of the aggregation, the defaultFilterValue is inserted at\n             the last position"
						}
					],
					"description": "Inserts a defaultFilterValue into the aggregation <code>defaultFilterValues</code>."
				},
				{
					"name": "removeAllDefaultFilterValues",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SelectOption[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>defaultFilterValues</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeDefaultFilterValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SelectOption",
						"description": "The removed defaultFilterValue or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vDefaultFilterValue",
							"type": "int|string|sap.ui.comp.smartfilterbar.SelectOption",
							"optional": false,
							"description": "The defaultFilterValueto remove or its index or id"
						}
					],
					"description": "Removes a defaultFilterValue from the aggregation <code>defaultFilterValues</code>."
				},
				{
					"name": "setConditionType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oConditionType",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>conditionType</code>"
						}
					],
					"description": "Sets a new value for property <code>conditionType</code>.\n\nThe condition Type class name to use for this filter item\nImplemantation should derive from sap.ui.comp.config.condition.Type\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setControlType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sControlType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>controlType</code>"
						}
					],
					"description": "Sets a new value for property <code>controlType</code>.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and\nannotations. Using this property it is possible to overwrite the OData metadata. Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.CONTROLTYPE\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setCustomControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The customControl to set"
						}
					],
					"description": "Sets the aggregated <code>customControl</code>."
				},
				{
					"name": "setDisplayBehaviour",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayBehaviour",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>displayBehaviour</code>"
						}
					],
					"description": "Sets a new value for property <code>displayBehaviour</code>.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown\ntext) , Description and ID for MultiInput (token text) Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setFilterType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFilterType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>filterType</code>"
						}
					],
					"description": "Sets a new value for property <code>filterType</code>.\n\nThe filter type specifies whether the filter fields is e.g. type single value, multi-value,or interval. The filter type is being\ncalculated by the martFilterBar based on the OData metadata. Using this property the filter type can be configured manually.\nPossible value scan be found here: sap.ui.comp.smartfilterbar.ControlConfiguration.FILTERTYPE\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setGroupId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>groupId</code>"
						}
					],
					"description": "Sets a new value for property <code>groupId</code>.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData\nmetadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHasTypeAhead",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHasTypeAhead",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>hasTypeAhead</code>"
						}
					],
					"description": "Sets a new value for property <code>hasTypeAhead</code>.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for\nDrodDownListbox\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHasValueHelpDialog",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHasValueHelpDialog",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>hasValueHelpDialog</code>"
						}
					],
					"description": "Sets a new value for property <code>hasValueHelpDialog</code>.\n\nSpecifies whether a value help dialog is available or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>index</code>"
						}
					],
					"description": "Sets a new value for property <code>index</code>.\n\nThe zero based index can be used to specify the initial order of fields (without any variants).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\n\nThe key property corresponds to the field name from the OData service $metadata document.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMandatory",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMandatory",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>mandatory</code>"
						}
					],
					"description": "Sets a new value for property <code>mandatory</code>.\n\nProperty can be used to overwrite the mandatory state of a filter field. Possible values:\nsap.ui.comp.smartfilterbar.ControlConfiguration.MANDATORY Property can only be set during initialisation. Changes at runtime will\nbe ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setPreventInitialDataFetchInValueHelpDialog",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPreventInitialDataFetchInValueHelpDialog",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>preventInitialDataFetchInValueHelpDialog</code>"
						}
					],
					"description": "Sets a new value for property <code>preventInitialDataFetchInValueHelpDialog</code>.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help\ndialog for this field will be filled initially. The default value is flase, which menas the table will be filled as the data fetch\nis not being prevented.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setVisibleInAdvancedArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisibleInAdvancedArea",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visibleInAdvancedArea</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleInAdvancedArea</code>.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialisation. Changes at runtime\nwill not be reflected. The width will not be applied to custom controls.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfilterbar.GroupConfiguration",
			"basename": "GroupConfiguration",
			"resource": "sap/ui/comp/smartfilterbar/GroupConfiguration.js",
			"module": "sap/ui/comp/smartfilterbar/GroupConfiguration",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "A GroupConfiguration can be used to add additional configurations for groups in the SmartFilterBar. A group in the SmartFilterBar is a group of filter fields in the advanced search.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The key property shall correspond to the name EntityTypeName from the OData service $metadata document.",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "index",
						"type": "any",
						"group": "Misc",
						"visibility": "public",
						"description": "Zero based integer index.\rThe index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.",
						"methods": [
							"getIndex",
							"setIndex"
						]
					},
					{
						"name": "label",
						"type": "any",
						"group": "Misc",
						"visibility": "public",
						"description": "Using this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Fired when the value of a property, for example label, has changed",
						"parameters": {
							"propertyName": {
								"name": "propertyName",
								"type": "string",
								"description": "Name of the changed property"
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfilterbar/GroupConfiguration.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyName": {
											"name": "propertyName",
											"type": "string",
											"optional": false,
											"description": "Name of the changed property"
										}
									}
								}
							}
						}
					],
					"description": "Fired when the value of a property, for example label, has changed"
				}
			],
			"methods": [
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code> itself.\n\nFired when the value of a property, for example label, has changed"
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.GroupConfiguration with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>propertyName</code> of type <code>string</code>Name of the changed property</li>\n</ul>"
				},
				{
					"name": "getIndex",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>index</code>"
					},
					"description": "Gets current value of property <code>index</code>.\n\nZero based integer index.\nThe index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nDefault value is <code>undefined</code>."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\n\nThe key property shall correspond to the name EntityTypeName from the OData service $metadata document."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nDefault value is <code>undefined</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.GroupConfiguration."
				},
				{
					"name": "setIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIndex",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>index</code>"
						}
					],
					"description": "Sets a new value for property <code>index</code>.\n\nZero based integer index.\nThe index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\n\nThe key property shall correspond to the name EntityTypeName from the OData service $metadata document.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLabel",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>undefined</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfilterbar.SelectOption",
			"basename": "SelectOption",
			"resource": "sap/ui/comp/smartfilterbar/SelectOption.js",
			"module": "sap/ui/comp/smartfilterbar/SelectOption",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "A Select Option can be used to specify default filter values for a control configuration of the SmartFilterBar.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "sign",
						"type": "string",
						"defaultValue": "I",
						"group": "Misc",
						"visibility": "public",
						"description": "The sign for a Select Option. Possible values are I for include or E for exclude. Constants can be found here: sap.ui.comp.smartfilterbar.SelectOption.SIGN",
						"methods": [
							"getSign",
							"setSign"
						]
					},
					{
						"name": "operator",
						"type": "string",
						"defaultValue": "EQ",
						"group": "Misc",
						"visibility": "public",
						"description": "The operator for a select option. The default value is EQ \"for equals\". Possible values can be found here: sap.ui.comp.smartfilterbar.SelectOption.OPERATOR.",
						"methods": [
							"getOperator",
							"setOperator"
						]
					},
					{
						"name": "low",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The low value for a select option.",
						"methods": [
							"getLow",
							"setLow"
						]
					},
					{
						"name": "high",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The high value for a select option. The high value is only required for a few operators, e.g. BT (between).",
						"methods": [
							"getHigh",
							"setHigh"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfilterbar/SelectOption.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.SelectOption with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getHigh",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>high</code>"
					},
					"description": "Gets current value of property <code>high</code>.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between)."
				},
				{
					"name": "getLow",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>low</code>"
					},
					"description": "Gets current value of property <code>low</code>.\n\nThe low value for a select option."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.SelectOption."
				},
				{
					"name": "getOperator",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>operator</code>"
					},
					"description": "Gets current value of property <code>operator</code>.\n\nThe operator for a select option. The default value is EQ \"for equals\". Possible values can be found here: sap.ui.comp.smartfilterbar.SelectOption.OPERATOR.\n\nDefault value is <code>EQ</code>."
				},
				{
					"name": "getSign",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>sign</code>"
					},
					"description": "Gets current value of property <code>sign</code>.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude. Constants can be found here: sap.ui.comp.smartfilterbar.SelectOption.SIGN\n\nDefault value is <code>I</code>."
				},
				{
					"name": "setHigh",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SelectOption",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHigh",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>high</code>"
						}
					],
					"description": "Sets a new value for property <code>high</code>.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SelectOption",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLow",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>low</code>"
						}
					],
					"description": "Sets a new value for property <code>low</code>.\n\nThe low value for a select option.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setOperator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SelectOption",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sOperator",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>operator</code>"
						}
					],
					"description": "Sets a new value for property <code>operator</code>.\n\nThe operator for a select option. The default value is EQ \"for equals\". Possible values can be found here: sap.ui.comp.smartfilterbar.SelectOption.OPERATOR.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>EQ</code>."
				},
				{
					"name": "setSign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SelectOption",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSign",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>sign</code>"
						}
					],
					"description": "Sets a new value for property <code>sign</code>.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude. Constants can be found here: sap.ui.comp.smartfilterbar.SelectOption.SIGN\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>I</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartfilterbar.SmartFilterBar",
			"basename": "SmartFilterBar",
			"resource": "sap/ui/comp/smartfilterbar/SmartFilterBar.js",
			"module": "sap/ui/comp/smartfilterbar/SmartFilterBar",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.comp.filterbar.FilterBar",
			"description": "The SmartFilterBar control uses the OData metadata of an entity in order to create a filter bar.<br>\n       Whether a field is visible on the filter bar, supports type-ahead and value help, for example, is automatically determined. When you use\n       control configurations and group configurations it is possible to configure the filter bar and adapt it according to your needs.<br>\n       <b><i>Note:</i></b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "entityType",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The OData entity type whose metadata is used to create the SmartFilterBar. Note: Changing this value after the SmartFilterBar is\ninitialized (initialise event was fired) has no effect.",
						"methods": [
							"getEntityType",
							"setEntityType"
						]
					},
					{
						"name": "resourceUri",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Optional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. Note:\nChanging this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.",
						"deprecated": {
							"since": "1.29",
							"text": "Set an ODataModel as the main model on your control/view instead"
						},
						"methods": [
							"getResourceUri",
							"setResourceUri"
						]
					},
					{
						"name": "basicSearchFieldName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Name of the field that has to be the focus of basic search. This is only relevant for SmartFilterBar in combination with\nValueHelpDialog.",
						"methods": [
							"getBasicSearchFieldName",
							"setBasicSearchFieldName"
						]
					},
					{
						"name": "enableBasicSearch",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Enables basic search field in the SmartFilterBar control. This must only be enabled for entities that support such search behavior.",
						"methods": [
							"getEnableBasicSearch",
							"setEnableBasicSearch"
						]
					}
				],
				"aggregations": [
					{
						"name": "controlConfiguration",
						"singularName": "controlConfiguration",
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Using control configurations you can add additional configuration to filter fields, for example set custom labels, change the order\nof fields, or change the filter field control type. Note: Changing the values here after the SmartFilter is initialized (initialise\nevent was fired) has no effect.",
						"methods": [
							"getControlConfiguration",
							"destroyControlConfiguration",
							"insertControlConfiguration",
							"addControlConfiguration",
							"removeControlConfiguration",
							"indexOfControlConfiguration",
							"removeAllControlConfiguration"
						]
					},
					{
						"name": "groupConfiguration",
						"singularName": "groupConfiguration",
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Provides the possibility to add additional configuration to groups. Groups are used to show fields in the advanced area of the\nSmartFilterBar. With additional configuration, you can for example set custom labels or change the order of groups. Note: Changing\nthe values here after the SmartFilter is initialized (initialise event was fired) has no effect.",
						"methods": [
							"getGroupConfiguration",
							"destroyGroupConfiguration",
							"insertGroupConfiguration",
							"addGroupConfiguration",
							"removeGroupConfiguration",
							"indexOfGroupConfiguration",
							"removeAllGroupConfiguration"
						]
					}
				],
				"associations": [
					{
						"name": "smartVariant",
						"singularName": "smartVariant",
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38",
						"description": "Identifies the SmartVariant control which should be used for the personalization.",
						"methods": [
							"getSmartVariant",
							"setSmartVariant"
						]
					}
				],
				"events": [
					{
						"name": "pendingChange",
						"visibility": "public",
						"since": "1.36",
						"description": "This event is fired after the pending state of the FilterBar control changes.",
						"methods": [
							"attachPendingChange",
							"detachPendingChange",
							"firePendingChange"
						]
					}
				],
				"annotations": [
					{
						"name": "filterable",
						"namespace": "Org.OData.Capabilities.V1",
						"target": [
							"EntitySet"
						],
						"annotation": "FilterRestrictions/NonFilterableProperties",
						"defaultValue": "true",
						"appliesTo": [
							"filterItem/#/value"
						],
						"since": "1.28.1",
						"description": "Defines whether a <code>Property</code> can be used for filtering data.\nAll properties are filterable by default.\nIn order to disable filtering capability, these properties must be excluded.\n\n<b>Note:</b> Currently only OData v2 annotation is supported by the SmartFilterBar control.\n\n<i>XML Example of OData V4 with Excluded Customer and CompanyCode Properties</i>\n<pre>\n   &lt;Annotation Term=\"Org.OData.Capabilities.V1.FilterRestrictions\"&gt;\n     &lt;PropertyValue Property=\"NonFilterableProperties\"&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n         &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filterable</code> annotation on the <code>Property</code> can be used to exclude properties from filtering.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:filterable=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:filterable=\"false\"/&gt;\n</pre>"
					},
					{
						"name": "fieldGroup",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntityType"
						],
						"annotation": "FieldGroup",
						"defaultValue": "null",
						"appliesTo": [
							"filterGroupItem"
						],
						"since": "1.28.1",
						"description": "Defines a group for a filter field.\nThe value can be provided as a fixed or dynamic value of an enumeration by referencing another <code>Property</code>\nwithin the same <code>EntityType</code>.\n\n<i>XML Example for OData V4 with CompanyName and CompanyCode Properties</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.FieldGroup\" Qualifier=\"FieldGroup1\"&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=\"Label\" String=\"my Field Group 1\" /&gt;\n       &lt;PropertyValue Property=\"Data\"&gt;\n         &lt;Collection&gt;\n           &lt;PropertyPath&gt;CompanyName&lt;/PropertyPath&gt;\n           &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
					},
					{
						"name": "textArrangement",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntityType"
						],
						"annotation": "TextArrangement",
						"defaultValue": "null",
						"appliesTo": [
							"text"
						],
						"since": "1.32.1",
						"description": "Describes the arrangement of a code value and its text.\nThe value can be provided as a fixed or dynamic value of an enumeration by referencing another <code>Property</code>\nwithin the same <code>EntityType</code>.\nThe enumeration members can have the following values:\n<ul>\n   <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst</code><br>\n      The underlying control is represented with the specified description followed by its ID.\n   </li>\n   <li><code>com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly</code><br>\n      The underlying control is represented with the specified description only.\n   </li>\n</ul>\n\n<i>XML Example of OData V4 with EntityType ProductType</i>\n<pre>\n   &lt;Annotations Target=\"ProductType\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.TextArrangement\" EnumMember=\"com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst\"/&gt;\n   &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "filterVisible",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "FieldControlType/Hidden",
						"defaultValue": "false",
						"appliesTo": [
							"filterItem/#/visible"
						],
						"since": "1.32.1",
						"description": "Defines whether the filter is visible.\nThe SmartFilterBar interprets the <code>EnumMember</code> <code>FieldControlType/Hidden</code> of the <code>FieldControl</code> annotation for setting the visibility.\n\n<b>Note:</b> Currently only <code>FieldControlType/Hidden</code> is supported for statically hiding the filter fields.\n\n<i>XML Example of OData V4 with Hidden Customer and CompanyCode Properties</i>\n<pre>\n   &lt;Property Name=\"Customer\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.FieldControlType/Hidden\"/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CompanyCode\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.FieldControlTpye/Hidden\"/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:visible=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:visible=\"false\"/&gt;\n</pre>"
					},
					{
						"name": "valueList",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"Parameter"
						],
						"annotation": "ValueList",
						"defaultValue": "null",
						"appliesTo": [
							"filterItem/#/fieldHelp"
						],
						"since": "1.28.1",
						"description": "Contains annotations that provide information for rendering a <code>ValueHelpList</code> that are set on the <code>Property</code>.\nEach Parameter on the <code>ValueList</code> annotation has maximum of two properties:\n<ol>\n  <li>LocalDataProperty - Path to the property on the local entity that triggered the ValueList.</li>\n  <li>ValueListProperty - Path to property in on the ValueList entity.</li>\n</ol>\n\n<i>XML Example of OData V4 with Category having ValueList</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.ValueList\"&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=\"Label\" String=\"Category\" /&gt;\n       &lt;PropertyValue Property=\"CollectionPath\" String=\"Category\" /&gt;\n       &lt;PropertyValue Property=\"SearchSupported\" Bool=\"true\" /&gt;\n       &lt;PropertyValue Property=\"Parameters\"&gt;\n       &lt;Collection&gt;\n         &lt;Record Type=\"com.sap.vocabularies.Common.v1.ValueListParameterOut\"&gt;\n           &lt;PropertyValue Property=\"LocalDataProperty\" PropertyPath=\"Category\" /&gt;\n           &lt;PropertyValue Property=\"ValueListProperty\" String=\"Description\" /&gt;\n         &lt;/Record&gt;\n         &lt;Record Type=\"com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly\"&gt;\n           &lt;PropertyValue Property=\"ValueListProperty\" String=\"CategoryName\" /&gt;\n         &lt;/Record&gt;\n       &lt;/Collection&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>"
					},
					{
						"name": "filterLabelOnProperty",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"PropertyPath"
						],
						"annotation": "Label",
						"defaultValue": "null",
						"appliesTo": [
							"filterItem/label"
						],
						"since": "1.28.1",
						"description": "A short, human-readable text suitable for the filter's name.\nThe <code>com.sap.vocabularies.Common.v1.Label</code> annotation  is defined on the <code>Property</code>.\nIf the <code>com.sap.vocabularies.Common.v1.Label</code> annotation is given, it has precedence.\nIf none of the annotations are given, then the label will be the Property name.\n\n<i>XML Example for OData V4 where CustomerName is the Label assigned to Customer</i>\n<pre>\n   &lt;Property Name=\"Customer\" /&gt;\n   &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.Label\" Path=\"Customer\" String=\"Customer Name\"/&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used to define the label of the column.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:label=\"Customer Name\"/&gt;\n</pre>"
					},
					{
						"name": "filterLabelOnLineItem",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"Property",
							"Parameter"
						],
						"annotation": "LineItem/Label",
						"defaultValue": "undefined",
						"appliesTo": [
							"filterItem/label"
						],
						"since": "1.28.1",
						"description": "A short, human-readable text suitable for the filter's name.\nThe <code>Label<code> annotation of <code>com.sap.vocabularies.UI.v1.DataFieldAbstract</code> is defined within <code>com.sap.vocabularies.UI.v1.LineItem</code> annotation.\nIf the <code>com.sap.vocabularies.Common.v1.Label</code> annotation is given, it has precedence.\nIf none of the annotations are given, then the label will be the Property name of the column.\n\n<i>XML Example for OData V4 where CustomerName is the Label assigned to Customer</i>\n<pre>\n   &lt;Property Name=\"Customer\"&gt;\n    &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.Label\" Path=\"CustomerName\" /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CustomerName\" type=\"Edm.String\" /&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used to define the label of the column.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:label=\"My Customer\"/&gt;\n</pre>"
					},
					{
						"name": "requiredInFilter",
						"namespace": "Org.OData.Capabilities.V1",
						"target": [
							"EntitySet"
						],
						"annotation": "FilterRestrictions/RequiredProperties",
						"defaultValue": "true",
						"appliesTo": [
							"filterItem/#/value"
						],
						"since": "1.28.1",
						"description": "Defines the filter field as mandatory filter.\nFilter fields having this annotation must be a part of the <code>$filter</code> request sent to the back-end.\n\n<b>Note:</b> Currently only OData v2 annotation is supported by the <code>SmartFilterBar</code> control.\n\n<i>XML Example of OData V4 with Required CompanyCode Filter</i>\n<pre>\n   &lt;Annotation Term=\"Org.OData.Capabilities.V1.FilterRestrictions\"&gt;\n     &lt;Record&gt;\n         &lt;PropertyValue Property=\"RequiresFilter\" Bool=\"true\"/&gt;\n         &lt;PropertyValue Property=\"RequiredProperties\"&gt;\n          &lt;Collection&gt;\n             &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n          &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:required-in-filter</code> annotation on the <code>Property</code> can be used for setting the filter as a mandatory filter field.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:required-in-filter=\"true\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:required-in-filter=\"true\"/&gt;\n</pre>"
					},
					{
						"name": "multiValueFilter",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"EntitySet"
						],
						"annotation": "FilterExpressionRestrictions/MultiValue",
						"defaultValue": "null",
						"appliesTo": [
							"filterItem/#/input"
						],
						"since": "1.28.1",
						"description": "Defines whether multiple values can be used in a single filter.\nWith multi-value filtering, more that one \"equals\" condition can be defined for filtering the data.\n\n<b>Note:</b> Currently only OData v2 annotation is supported by the <code>SmartFilterBar</code> control.\n\n<i>XML Example of OData V4 with Multi-value Customer and CompanyCode Properties</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.FilterExpressionRestriction\" \n     EnumMember=\"com.sap.vocabularies.Common.v1.FilterExpressionType/MultiValue&gt;\n     &lt;Record&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n         &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"multi-value\"</code> annotation on the <code>Property</code> can be used for rendering multi-value filter field.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:filter-restriction=\"multi-value\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:filter-restriction=\"multi-value\"/&gt;\n</pre>"
					},
					{
						"name": "singleValueFilter",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"EntitySet"
						],
						"annotation": "FilterExpressionRestrictions/SingleValue",
						"defaultValue": "null",
						"appliesTo": [
							"filterItem/#/input"
						],
						"since": "1.28.1",
						"description": "Restricts the filter to only <b>one</b> single value entry.\nWith single-value filtering, you cannot define more than one \"equals\" condition for filtering the data.\n\n<b>Note:</b> Currently only OData v2 annotation is supported by the <code>SmartFilterBar</code> control.\n\n<i>XML Example of OData V4 with Single-value Customer and CompanyCode Properties</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.FilterExpressionRestriction\"\n     EnumMember=\"com.sap.vocabularies.Common.v1.FilterExpressionType/SingleValue&gt;\n     &lt;Record&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n         &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"single-value\"</code> annotation on the <code>Property</code> can be used for rendering a single-value filter field.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:filter-restriction=\"single-value\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:filter-restriction=\"single-value\"/&gt;\n</pre>"
					},
					{
						"name": "singleIntervalFilter",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"EntitySet"
						],
						"annotation": "FilterExpressionRestrictions/SingleInterval",
						"defaultValue": "null",
						"appliesTo": [
							"filterItem/#/input"
						],
						"since": "1.28.1",
						"description": "Restricts the filter to specify an interval, for example, a date interval for filtering the data present between the given dates.\n\n<b>Note:</b> Currently only OData v2 annotation is supported by the <code>SmartFilterBar</code> control.\n\n<i>XML Example of OData V4 with Interval Restriction on DocumentDate Property</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.FilterExpressionRestriction\"\n     EnumMember=\"com.sap.vocabularies.Common.v1.FilterExpressionType/SingleInterval&gt;\n     &lt;Record&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;DocumentDate&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/Record&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filter-restriction=\"interval\"</code> annotation on the <code>Property</code> can be used for rendering an interval filter field.\n<pre>\n   &lt;Property Name=\"DocumentDate\" ... sap:filter-restriction=\"interval\"/&gt;\n</pre>"
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartfilterbar/SmartFilterBar.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "pendingChange",
					"visibility": "public",
					"since": "1.36",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after the pending state of the FilterBar control changes."
				}
			],
			"methods": [
				{
					"name": "addControlConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControlConfiguration",
							"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
							"optional": false,
							"description": "the controlConfiguration to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some controlConfiguration to the aggregation <code>controlConfiguration</code>."
				},
				{
					"name": "addFieldToAdvancedArea",
					"visibility": "public",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "The key like specified in the OData metadata"
						}
					],
					"description": "Searches for the filter field having the specified OData key and adds this filter field to the advanced area. If there is no corresponding\nfield in the OData metadata, this method has no effect."
				},
				{
					"name": "addGroupConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oGroupConfiguration",
							"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
							"optional": false,
							"description": "the groupConfiguration to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some groupConfiguration to the aggregation <code>groupConfiguration</code>."
				},
				{
					"name": "applyVariant",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVariant",
							"type": "object",
							"optional": false,
							"description": "The variant that must be applied. oVariant must contain a valid JSON object."
						}
					],
					"description": "Applies the current variant as opposed to fetchVariant. The variant is retrieved via the flex layer."
				},
				{
					"name": "attachPendingChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pendingChange</code> event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code> itself.\n\nThis event is fired after the pending state of the FilterBar control changes."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destroys the control."
				},
				{
					"name": "destroyControlConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the controlConfiguration in the aggregation <code>controlConfiguration</code>."
				},
				{
					"name": "destroyGroupConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the groupConfiguration in the aggregation <code>groupConfiguration</code>."
				},
				{
					"name": "detachPendingChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pendingChange</code> event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBar with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterBar.extend}."
				},
				{
					"name": "fetchVariant",
					"visibility": "public",
					"returnValue": {
						"type": "object"
					},
					"description": "Retrieves the currently visible filters and the values for storing them as variants. The result will be passed on as a JSON object to the\ncallee smart variant control."
				},
				{
					"name": "firePendingChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.36",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pendingChange</code> to attached listeners."
				},
				{
					"name": "getBasicSearchControl",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Basic search control"
					},
					"description": "Returns an instance of the control for the basic search."
				},
				{
					"name": "getBasicSearchFieldName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>basicSearchFieldName</code>"
					},
					"description": "Gets current value of property <code>basicSearchFieldName</code>.\n\nName of the field that has to be the focus of basic search. This is only relevant for SmartFilterBar in combination with\nValueHelpDialog."
				},
				{
					"name": "getControlByKey",
					"visibility": "public",
					"returnValue": {
						"type": "object|sap.ui.Control",
						"description": "The control in the filter bar, if any"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "The key as present in the OData property name/control configuration"
						}
					],
					"description": "Returns the control (if any) with the specified key (Property name in OData entity). Use just the property name as the key when getting a\ncontrol from the basic area. Example: \"CompanyCode\" & Use \"EntityName/GroupName.FieldName\" format to get controls from groups.\nExample:\"Account.CompanyCode\""
				},
				{
					"name": "getControlConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration[]"
					},
					"description": "Gets content of aggregation <code>controlConfiguration</code>.\n\nUsing control configurations you can add additional configuration to filter fields, for example set custom labels, change the order\nof fields, or change the filter field control type. Note: Changing the values here after the SmartFilter is initialized (initialise\nevent was fired) has no effect."
				},
				{
					"name": "getEnableBasicSearch",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableBasicSearch</code>"
					},
					"description": "Gets current value of property <code>enableBasicSearch</code>.\n\nEnables basic search field in the SmartFilterBar control. This must only be enabled for entities that support such search behavior.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entityType</code>"
					},
					"description": "Gets current value of property <code>entityType</code>.\n\nThe OData entity type whose metadata is used to create the SmartFilterBar. Note: Changing this value after the SmartFilterBar is\ninitialized (initialise event was fired) has no effect."
				},
				{
					"name": "getFilterData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The JSON data in the filter bar"
					},
					"parameters": [
						{
							"name": "bAllFilterData",
							"type": "boolean",
							"optional": false,
							"description": "Also include empty/invisible fields filter data"
						}
					],
					"description": "Returns the data currently set in the filter data model."
				},
				{
					"name": "getFilterDataAsString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The JSON data string"
					},
					"parameters": [
						{
							"name": "bAllFilterData",
							"type": "boolean",
							"optional": false,
							"description": "Also include empty/invisible fields filter data"
						}
					],
					"description": "Returns the data currently set in the filter data model as string."
				},
				{
					"name": "getFilters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Filter[]",
						"description": "array of sap.ui.model.Filter or multi-filters"
					},
					"parameters": [
						{
							"name": "aFieldNames",
							"type": "string[]",
							"optional": true,
							"description": "optional array of field names that filters should be returned, if not given all visible filters are returned"
						}
					],
					"description": "Returns an array of filters (sap.ui.model.Filter instances), for visible fields, that can be used to restrict the query result from OData.<br>\nThe result of this method can directly be used during aggregation binding or OData read."
				},
				{
					"name": "getGroupConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration[]"
					},
					"description": "Gets content of aggregation <code>groupConfiguration</code>.\n\nProvides the possibility to add additional configuration to groups. Groups are used to show fields in the advanced area of the\nSmartFilterBar. With additional configuration, you can for example set custom labels or change the order of groups. Note: Changing\nthe values here after the SmartFilter is initialized (initialise event was fired) has no effect."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartfilterbar.SmartFilterBar."
				},
				{
					"name": "getParameters",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "A parameter object containing OData query parameters"
					},
					"description": "Returns a parameter object that can be used to restrict the query result from OData in case of basic search."
				},
				{
					"name": "getResourceUri",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>resourceUri</code>"
					},
					"description": "Gets current value of property <code>resourceUri</code>.\n\nOptional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. Note:\nChanging this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.",
					"deprecated": {
						"since": "1.29",
						"text": "Set an ODataModel as the main model on your control/view instead"
					}
				},
				{
					"name": "getSmartVariant",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement"
					},
					"since": "1.38",
					"description": "ID of the element which is the current target of the association <code>smartVariant</code>, or <code>null</code>."
				},
				{
					"name": "indexOfControlConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oControlConfiguration",
							"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
							"optional": false,
							"description": "The controlConfiguration whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartfilterbar.ControlConfiguration</code> in the aggregation <code>controlConfiguration</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfGroupConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oGroupConfiguration",
							"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
							"optional": false,
							"description": "The groupConfiguration whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartfilterbar.GroupConfiguration</code> in the aggregation <code>groupConfiguration</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertControlConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControlConfiguration",
							"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
							"optional": false,
							"description": "the controlConfiguration to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the controlConfiguration should be inserted at; for\n             a negative value of <code>iIndex</code>, the controlConfiguration is inserted at position 0; for a value\n             greater than the current size of the aggregation, the controlConfiguration is inserted at\n             the last position"
						}
					],
					"description": "Inserts a controlConfiguration into the aggregation <code>controlConfiguration</code>."
				},
				{
					"name": "insertGroupConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oGroupConfiguration",
							"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
							"optional": false,
							"description": "the groupConfiguration to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the groupConfiguration should be inserted at; for\n             a negative value of <code>iIndex</code>, the groupConfiguration is inserted at position 0; for a value\n             greater than the current size of the aggregation, the groupConfiguration is inserted at\n             the last position"
						}
					],
					"description": "Inserts a groupConfiguration into the aggregation <code>groupConfiguration</code>."
				},
				{
					"name": "isPending",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if at least one FilterItem element of the FilterBar control is pending"
					},
					"description": "Checks the pending state of the FilterBar control"
				},
				{
					"name": "removeAllControlConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>controlConfiguration</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllGroupConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>groupConfiguration</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeControlConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.ControlConfiguration",
						"description": "The removed controlConfiguration or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vControlConfiguration",
							"type": "int|string|sap.ui.comp.smartfilterbar.ControlConfiguration",
							"optional": false,
							"description": "The controlConfigurationto remove or its index or id"
						}
					],
					"description": "Removes a controlConfiguration from the aggregation <code>controlConfiguration</code>."
				},
				{
					"name": "removeGroupConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.GroupConfiguration",
						"description": "The removed groupConfiguration or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vGroupConfiguration",
							"type": "int|string|sap.ui.comp.smartfilterbar.GroupConfiguration",
							"optional": false,
							"description": "The groupConfigurationto remove or its index or id"
						}
					],
					"description": "Removes a groupConfiguration from the aggregation <code>groupConfiguration</code>."
				},
				{
					"name": "setBasicSearchFieldName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBasicSearchFieldName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>basicSearchFieldName</code>"
						}
					],
					"description": "Sets a new value for property <code>basicSearchFieldName</code>.\n\nName of the field that has to be the focus of basic search. This is only relevant for SmartFilterBar in combination with\nValueHelpDialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEnableBasicSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableBasicSearch",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableBasicSearch</code>"
						}
					],
					"description": "Sets a new value for property <code>enableBasicSearch</code>.\n\nEnables basic search field in the SmartFilterBar control. This must only be enabled for entities that support such search behavior.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEntityType",
					"visibility": "public",
					"parameters": [
						{
							"name": "sEntityTypeName",
							"type": "string",
							"optional": false,
							"description": "type name"
						}
					],
					"description": "The entity type name from OData metadata, for which the filter bar is created."
				},
				{
					"name": "setFilterData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oJson",
							"type": "object",
							"optional": false,
							"description": "The JSON data in the filter bar"
						},
						{
							"name": "bReplace",
							"type": "boolean",
							"optional": false,
							"description": "Replace existing filter data"
						}
					],
					"description": "Sets the data in the filter data model. The follow-on filterChange event is only triggered when none _CUSTOM data is set."
				},
				{
					"name": "setFilterDataAsString",
					"visibility": "public",
					"parameters": [
						{
							"name": "sJson",
							"type": "string",
							"optional": false,
							"description": "The JSON data in the filter bar"
						},
						{
							"name": "bReplace",
							"type": "boolean",
							"optional": false,
							"description": "Replace existing filter data"
						}
					],
					"description": "Sets the data in the filter data model as string."
				},
				{
					"name": "setResourceUri",
					"visibility": "public",
					"parameters": [
						{
							"name": "sResourceUri",
							"type": "string",
							"optional": false,
							"description": "The URI of the oData service from which the metadata would be read"
						}
					],
					"description": "Uses the provided resource URI to fetch the OData metadata instead of using the default ODataModel (getModel()). You should only set this if\nyou intend to get the metadata for the filter bar from elsewhere!",
					"deprecated": {
						"since": "1.29",
						"text": "Set an ODataModel as the main model on your control/view instead"
					}
				},
				{
					"name": "setSmartVariant",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfilterbar.SmartFilterBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "oSmartVariant",
							"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
							"optional": false,
							"description": "Id of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>smartVariant</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.flexibility.DialogContent",
			"basename": "DialogContent",
			"resource": "sap/ui/comp/smartform/flexibility/DialogContent.js",
			"module": "sap/ui/comp/smartform/flexibility/DialogContent",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The content of the personalization dialog of the SmartForm",
			"ui5-metadata": {
				"stereotype": "control",
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Content of the control itself",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/flexibility/DialogContent.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.DialogContent",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.flexibility.DialogContent with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nContent of the control itself"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.flexibility.DialogContent."
				},
				{
					"name": "init",
					"visibility": "public",
					"description": "Initialisation"
				},
				{
					"name": "initialiseODataFieldSelector",
					"visibility": "public",
					"parameters": [
						{
							"name": "oODataModel",
							"type": "sap.ui.model.odata.ODataModel",
							"optional": false,
							"description": "The list of fields will be extracetd from the models metadata"
						},
						{
							"name": "sEntityType",
							"type": "string",
							"optional": false,
							"description": "The entity type whose fields could be selected"
						},
						{
							"name": "sComponentName",
							"type": "string",
							"optional": false,
							"description": "The name of the SAPUI5 component"
						},
						{
							"name": "aIgnoredFields",
							"type": "array",
							"optional": false,
							"description": "List of fields which should be ignored"
						},
						{
							"name": "mBindingPathToFieldListElement",
							"type": "Object.<bindingPath:string, fieldListElement:Object>",
							"optional": false,
							"description": "Map absolute odata binding paths to the field list elements"
						},
						{
							"name": "mIdToFieldListElement",
							"type": "Object.<id:string, fieldListElement:Object>",
							"optional": false,
							"description": "Map field list element ids to the field list elements"
						},
						{
							"name": "mPropertyBag",
							"type": "map",
							"optional": false,
							"description": "(optional) contains additional data that are needed for reading of changes\n- appDescriptor that belongs to actual component\n- siteId that belongs to actual component"
						}
					],
					"description": "Returns Ids of the assigned changes of the component (correctly sorted)"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.DialogContent",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content to set"
						}
					],
					"description": "Sets the aggregated <code>content</code>."
				},
				{
					"name": "setViewId",
					"visibility": "public",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Control Id"
						}
					],
					"description": "Sets the first part of new control ids for the view context"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.flexibility.FieldList",
			"basename": "FieldList",
			"resource": "sap/ui/comp/smartform/flexibility/FieldList.js",
			"module": "sap/ui/comp/smartform/flexibility/FieldList",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Contains list of forms, groups and fields which can could be modified by the SAPUI5 flexibility services",
			"ui5-metadata": {
				"stereotype": "control",
				"aggregations": [
					{
						"name": "nodes",
						"singularName": "node",
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Nodes representing either a Form, a Group or a field",
						"methods": [
							"getNodes",
							"destroyNodes",
							"insertNode",
							"addNode",
							"removeNode",
							"indexOfNode",
							"removeAllNodes"
						]
					}
				],
				"events": [
					{
						"name": "selectionChanged",
						"visibility": "public",
						"description": "Event is fired when the selected node has changed",
						"methods": [
							"attachSelectionChanged",
							"detachSelectionChanged",
							"fireSelectionChanged"
						]
					},
					{
						"name": "labelChanged",
						"visibility": "public",
						"description": "Event is fired when the label of the node has changed",
						"methods": [
							"attachLabelChanged",
							"detachLabelChanged",
							"fireLabelChanged"
						]
					},
					{
						"name": "nodeHidden",
						"visibility": "public",
						"description": "Event is fired when a node was hidden",
						"methods": [
							"attachNodeHidden",
							"detachNodeHidden",
							"fireNodeHidden"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/flexibility/FieldList.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "labelChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the label of the node has changed"
				},
				{
					"name": "nodeHidden",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when a node was hidden"
				},
				{
					"name": "selectionChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the selected node has changed"
				}
			],
			"methods": [
				{
					"name": "attachLabelChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldList</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>labelChanged</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldList</code> itself.\n\nEvent is fired when the label of the node has changed"
				},
				{
					"name": "attachNodeHidden",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldList</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>nodeHidden</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldList</code> itself.\n\nEvent is fired when a node was hidden"
				},
				{
					"name": "attachSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldList</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selectionChanged</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldList</code> itself.\n\nEvent is fired when the selected node has changed"
				},
				{
					"name": "detachLabelChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>labelChanged</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNodeHidden",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>nodeHidden</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selectionChanged</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.flexibility.FieldList with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireLabelChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>labelChanged</code> to attached listeners."
				},
				{
					"name": "fireNodeHidden",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>nodeHidden</code> to attached listeners."
				},
				{
					"name": "fireSelectionChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selectionChanged</code> to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.flexibility.FieldList."
				},
				{
					"name": "getNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode[]"
					},
					"description": "Gets content of aggregation <code>nodes</code>.\n\nNodes representing either a Form, a Group or a field"
				},
				{
					"name": "getSelectedNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "field list node"
					},
					"description": "Returns the currently selected field list node"
				},
				{
					"name": "indexOfNode",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
							"optional": false,
							"description": "The node whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> in the aggregation <code>nodes</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "init",
					"visibility": "public",
					"description": "init"
				},
				{
					"name": "insertNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
							"optional": false,
							"description": "the node to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex</code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"
						}
					],
					"description": "Inserts a node into the aggregation <code>nodes</code>."
				},
				{
					"name": "removeAllNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>nodes</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.flexibility.FieldListNode",
			"basename": "FieldListNode",
			"resource": "sap/ui/comp/smartform/flexibility/FieldListNode.js",
			"module": "sap/ui/comp/smartform/flexibility/FieldListNode",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "A node within the field list control",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The label",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "isVisible",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "is visible flag",
						"methods": [
							"getIsVisible",
							"setIsVisible"
						]
					},
					{
						"name": "isSelected",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "is node selected",
						"methods": [
							"getIsSelected",
							"setIsSelected"
						]
					}
				],
				"aggregations": [
					{
						"name": "nodes",
						"singularName": "node",
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Nodes representing either a Form, a Group or a field",
						"methods": [
							"getNodes",
							"destroyNodes",
							"insertNode",
							"addNode",
							"removeNode",
							"indexOfNode",
							"removeAllNodes"
						]
					},
					{
						"name": "layout",
						"singularName": "layout",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "private aggregation",
						"methods": [
							"getLayout",
							"destroyLayout",
							"setLayout"
						]
					}
				],
				"events": [
					{
						"name": "selected",
						"visibility": "public",
						"description": "node was selected",
						"parameters": {
							"target": {
								"name": "target",
								"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
								"description": "The inner node which was clicked"
							}
						},
						"methods": [
							"attachSelected",
							"detachSelected",
							"fireSelected"
						]
					},
					{
						"name": "labelChanged",
						"visibility": "public",
						"description": "label of node was changed",
						"parameters": {
							"target": {
								"name": "target",
								"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
								"description": "The inner node which was clicked"
							}
						},
						"methods": [
							"attachLabelChanged",
							"detachLabelChanged",
							"fireLabelChanged"
						]
					},
					{
						"name": "nodeHidden",
						"visibility": "public",
						"description": "node was hidden",
						"parameters": {
							"target": {
								"name": "target",
								"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
								"description": "The inner node which was hidden"
							}
						},
						"methods": [
							"attachNodeHidden",
							"detachNodeHidden",
							"fireNodeHidden"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/flexibility/FieldListNode.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "labelChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"target": {
											"name": "target",
											"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
											"optional": false,
											"description": "The inner node which was clicked"
										}
									}
								}
							}
						}
					],
					"description": "label of node was changed"
				},
				{
					"name": "nodeHidden",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"target": {
											"name": "target",
											"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
											"optional": false,
											"description": "The inner node which was hidden"
										}
									}
								}
							}
						}
					],
					"description": "node was hidden"
				},
				{
					"name": "selected",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"target": {
											"name": "target",
											"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
											"optional": false,
											"description": "The inner node which was clicked"
										}
									}
								}
							}
						}
					],
					"description": "node was selected"
				}
			],
			"methods": [
				{
					"name": "_onLabelChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "object",
							"optional": false,
							"description": "Event"
						}
					],
					"description": "Event handler - called when the user changes the label"
				},
				{
					"name": "_onLabelSelectedByKeyboard",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "object",
							"optional": false,
							"description": "Event"
						}
					],
					"description": "Event handler - called when the user has selected the label using the keyboard"
				},
				{
					"name": "addNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
							"optional": false,
							"description": "the node to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some node to the aggregation <code>nodes</code>."
				},
				{
					"name": "attachLabelChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>labelChanged</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> itself.\n\nlabel of node was changed"
				},
				{
					"name": "attachNodeHidden",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>nodeHidden</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> itself.\n\nnode was hidden"
				},
				{
					"name": "attachSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selected</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> itself.\n\nnode was selected"
				},
				{
					"name": "destroyLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the layout in the aggregation <code>layout</code>."
				},
				{
					"name": "destroyNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the nodes in the aggregation <code>nodes</code>."
				},
				{
					"name": "detachLabelChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>labelChanged</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNodeHidden",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>nodeHidden</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selected</code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.flexibility.FieldListNode with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireLabelChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>labelChanged</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>target</code> of type <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>The inner node which was clicked</li>\n</ul>"
				},
				{
					"name": "fireNodeHidden",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>nodeHidden</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>target</code> of type <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>The inner node which was hidden</li>\n</ul>"
				},
				{
					"name": "fireSelected",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selected</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>target</code> of type <code>sap.ui.comp.smartform.flexibility.FieldListNode</code>The inner node which was clicked</li>\n</ul>"
				},
				{
					"name": "getIsSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isSelected</code>"
					},
					"description": "Gets current value of property <code>isSelected</code>.\n\nis node selected"
				},
				{
					"name": "getIsVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isVisible</code>"
					},
					"description": "Gets current value of property <code>isVisible</code>.\n\nis visible flag"
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nThe label"
				},
				{
					"name": "getLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>layout</code>.\n\nprivate aggregation"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.flexibility.FieldListNode."
				},
				{
					"name": "getNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode[]"
					},
					"description": "Gets content of aggregation <code>nodes</code>.\n\nNodes representing either a Form, a Group or a field"
				},
				{
					"name": "indexOfNode",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
							"optional": false,
							"description": "The node whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartform.flexibility.FieldListNode</code> in the aggregation <code>nodes</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
							"optional": false,
							"description": "the node to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex</code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"
						}
					],
					"description": "Inserts a node into the aggregation <code>nodes</code>."
				},
				{
					"name": "removeAllNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>nodes</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "The removed node or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vNode",
							"type": "int|string|sap.ui.comp.smartform.flexibility.FieldListNode",
							"optional": false,
							"description": "The nodeto remove or its index or id"
						}
					],
					"description": "Removes a node from the aggregation <code>nodes</code>."
				},
				{
					"name": "setIsSelected",
					"visibility": "public",
					"parameters": [
						{
							"name": "bIsSelected",
							"type": "boolean",
							"optional": false,
							"description": "field list node selected"
						}
					],
					"description": "Overwritten - Sets the isSelected property"
				},
				{
					"name": "setIsVisible",
					"visibility": "public",
					"parameters": [
						{
							"name": "bIsVisible",
							"type": "boolean",
							"optional": false,
							"description": "isVisible"
						}
					],
					"description": "Overwritten - Sets the isVisible property"
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "Label"
						}
					],
					"description": "Overwritten - Sets the label property"
				},
				{
					"name": "setLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.FieldListNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLayout",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The layout to set"
						}
					],
					"description": "Sets the aggregated <code>layout</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.flexibility.Input",
			"basename": "Input",
			"resource": "sap/ui/comp/smartform/flexibility/Input.js",
			"module": "sap/ui/comp/smartform/flexibility/Input",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Input",
			"description": "Input field with special focus handling",
			"ui5-metadata": {
				"events": [
					{
						"name": "selectedByKeyboard",
						"visibility": "public",
						"description": "Fired when the field is readonly, focused and user pressed Space",
						"methods": [
							"attachSelectedByKeyboard",
							"detachSelectedByKeyboard",
							"fireSelectedByKeyboard"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/flexibility/Input.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "selectedByKeyboard",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the field is readonly, focused and user pressed Space"
				}
			],
			"methods": [
				{
					"name": "attachSelectedByKeyboard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.Input",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.Input</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selectedByKeyboard</code> event of this <code>sap.ui.comp.smartform.flexibility.Input</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.Input</code> itself.\n\nFired when the field is readonly, focused and user pressed Space"
				},
				{
					"name": "detachSelectedByKeyboard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.Input",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selectedByKeyboard</code> event of this <code>sap.ui.comp.smartform.flexibility.Input</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.flexibility.Input with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Input.extend}."
				},
				{
					"name": "fireSelectedByKeyboard",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.flexibility.Input",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selectedByKeyboard</code> to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.flexibility.Input."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.Group",
			"basename": "Group",
			"resource": "sap/ui/comp/smartform/Group.js",
			"module": "sap/ui/comp/smartform/Group",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Groups are used to group group elements.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "useHorizontalLayout",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.",
						"methods": [
							"getUseHorizontalLayout",
							"setUseHorizontalLayout"
						]
					},
					{
						"name": "horizontalLayoutGroupElementMinWidth",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.",
						"methods": [
							"getHorizontalLayoutGroupElementMinWidth",
							"setHorizontalLayoutGroupElementMinWidth"
						]
					},
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Label for the group.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					}
				],
				"aggregations": [
					{
						"name": "groupElements",
						"singularName": "groupElement",
						"type": "sap.ui.comp.smartform.GroupElement",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "A GroupElement is a combination of one label and different controls associated to this label.",
						"methods": [
							"getGroupElements",
							"destroyGroupElements",
							"insertGroupElement",
							"addGroupElement",
							"removeGroupElement",
							"indexOfGroupElement",
							"removeAllGroupElements"
						]
					},
					{
						"name": "layout",
						"singularName": "layout",
						"type": "sap.ui.layout.GridData",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Layout to specify how the group shall be rendered (e.g. span and line-break)",
						"methods": [
							"getLayout",
							"destroyLayout",
							"setLayout"
						]
					}
				],
				"defaultAggregation": "groupElements"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/Group.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addAggregation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the strung identifying the aggregation that oObject should be added to."
						},
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the object to add."
						}
					],
					"description": "Adds some entity to the given aggregation."
				},
				{
					"name": "addCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "oCustomData",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "the customData to add."
						}
					],
					"description": "Adds some CustomeData into the aggregation <code>customData</code>. Additionally the customData is also added to the SmartFields in the\nchildren hierarchy"
				},
				{
					"name": "addGroupElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "oGroupElement",
							"type": "sap.ui.comp.smartform.GroupElement",
							"optional": false,
							"description": "group element to add to aggregation named groupElements."
						}
					],
					"description": "Adds some GroupElement into the aggregation <code>groupElements</code>"
				},
				{
					"name": "destroyGroupElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"description": "Destroys all the group elements in the aggregation <code>groupElements</code>"
				},
				{
					"name": "destroyLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the layout in the aggregation <code>layout</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.Group with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getGroupElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement[]"
					},
					"description": "Gets content of aggregation <code>groupElements</code>.\n\nA GroupElement is a combination of one label and different controls associated to this label."
				},
				{
					"name": "getHorizontalLayoutGroupElementMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>horizontalLayoutGroupElementMinWidth</code>"
					},
					"description": "Gets current value of property <code>horizontalLayoutGroupElementMinWidth</code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nLabel for the group."
				},
				{
					"name": "getLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.layout.GridData"
					},
					"description": "Gets content of aggregation <code>layout</code>.\n\nLayout to specify how the group shall be rendered (e.g. span and line-break)"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.Group."
				},
				{
					"name": "getUseHorizontalLayout",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useHorizontalLayout</code>"
					},
					"description": "Gets current value of property <code>useHorizontalLayout</code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line."
				},
				{
					"name": "indexOfGroupElement",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oGroupElement",
							"type": "sap.ui.comp.smartform.GroupElement",
							"optional": false,
							"description": "The groupElement whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartform.GroupElement</code> in the aggregation <code>groupElements</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertGroupElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "oGroupElement",
							"type": "sap.ui.comp.smartform.GroupElement",
							"optional": false,
							"description": "group element to insert into aggregation named groupElements."
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the 0-based index the GroupElement should be inserted at."
						}
					],
					"description": "Inserts a GroupElement into the aggregation <code>groupElements</code>"
				},
				{
					"name": "removeAllGroupElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement[]",
						"description": "an array of the removed elements."
					},
					"parameters": [
						{
							"name": "the",
							"type": "int|string|sap.ui.comp.smartform.GroupElement",
							"optional": false,
							"description": "GroupElement to remove or its index or id."
						}
					],
					"description": "Removes all group elements from the aggregation <code>groupElements</code>"
				},
				{
					"name": "removeGroupElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "the removed GroupElement or null."
					},
					"parameters": [
						{
							"name": "vGroupElement",
							"type": "int|string|sap.ui.comp.smartform.GroupElement",
							"optional": false,
							"description": "the GroupElement to remove or its index or id."
						}
					],
					"description": "Removes a GroupElement from the aggregation <code>groupElements</code>"
				},
				{
					"name": "setAggregation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "name of an 0..1 aggregation."
						},
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the managed object that is set as aggregated object."
						}
					],
					"description": "Sets a new object in the named 0..1 aggregation."
				},
				{
					"name": "setEditMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "bEditMode",
							"type": "boolean",
							"optional": false,
							"description": "new value for editable property of smart fields."
						}
					],
					"description": "Setter for property editable of all smart fields in children hierarchy."
				},
				{
					"name": "setHorizontalLayoutGroupElementMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iHorizontalLayoutGroupElementMinWidth",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>horizontalLayoutGroupElementMinWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>horizontalLayoutGroupElementMinWidth</code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nLabel for the group.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLayout",
							"type": "sap.ui.layout.GridData",
							"optional": false,
							"description": "The layout to set"
						}
					],
					"description": "Sets the aggregated <code>layout</code>."
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "name of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "value to set the property to"
						}
					],
					"description": "Sets the given value for the given property"
				},
				{
					"name": "setUseHorizontalLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUseHorizontalLayout",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useHorizontalLayout</code>"
						}
					],
					"description": "Sets a new value for property <code>useHorizontalLayout</code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property visible"
						}
					],
					"description": "Sets a new value for property visible. Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead\nof the real control When called with a value of null or undefined, the default value of the property will be restored. Default value is true."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.GroupElement",
			"basename": "GroupElement",
			"resource": "sap/ui/comp/smartform/GroupElement.js",
			"module": "sap/ui/comp/smartform/GroupElement",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "A GroupElement is a combination of one label and different controls associated to this label.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "useHorizontalLayout",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.",
						"methods": [
							"getUseHorizontalLayout",
							"setUseHorizontalLayout"
						]
					},
					{
						"name": "horizontalLayoutGroupElementMinWidth",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.",
						"methods": [
							"getHorizontalLayoutGroupElementMinWidth",
							"setHorizontalLayoutGroupElementMinWidth"
						]
					},
					{
						"name": "elementForLabel",
						"type": "int",
						"defaultValue": 0,
						"group": "Misc",
						"visibility": "public",
						"description": "Index of element to be used for label determination",
						"methods": [
							"getElementForLabel",
							"setElementForLabel"
						]
					}
				],
				"aggregations": [
					{
						"name": "elements",
						"singularName": "element",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregation of controls to be displayed together with a label.",
						"methods": [
							"getElements",
							"destroyElements",
							"insertElement",
							"addElement",
							"removeElement",
							"indexOfElement",
							"removeAllElements"
						]
					}
				],
				"defaultAggregation": "elements",
				"events": [
					{
						"name": "visibleChanged",
						"visibility": "public",
						"description": "The event is fired after the visibility of the control has changed.",
						"methods": [
							"attachVisibleChanged",
							"detachVisibleChanged",
							"fireVisibleChanged"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/GroupElement.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "visibleChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired after the visibility of the control has changed."
				}
			],
			"methods": [
				{
					"name": "addCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "oCustomData",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "the customData to add."
						}
					],
					"description": "Adds some customData into the aggregation <code>customData</code>. Additionally, customData is also added to the SmartField controls in the\nchildren hierarchy."
				},
				{
					"name": "addElement",
					"visibility": "public",
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control to add."
						}
					],
					"description": "Adds some control into the aggregation <code>elements</code>"
				},
				{
					"name": "attachVisibleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.GroupElement</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>visibleChanged</code> event of this <code>sap.ui.comp.smartform.GroupElement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.GroupElement</code> itself.\n\nThe event is fired after the visibility of the control has changed."
				},
				{
					"name": "destroyElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the elements in the aggregation <code>elements</code>."
				},
				{
					"name": "detachVisibleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>visibleChanged</code> event of this <code>sap.ui.comp.smartform.GroupElement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.GroupElement with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireVisibleChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>visibleChanged</code> to attached listeners."
				},
				{
					"name": "getElementForLabel",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>elementForLabel</code>"
					},
					"description": "Gets current value of property <code>elementForLabel</code>.\n\nIndex of element to be used for label determination\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Controls[]",
						"description": "an array of the removed controls."
					},
					"description": "Getter for aggregation <code>elements</code>"
				},
				{
					"name": "getFormElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.layout.form.FormElement",
						"description": "the form element."
					},
					"description": "Returns the from element."
				},
				{
					"name": "getHorizontalLayoutGroupElementMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>horizontalLayoutGroupElementMinWidth</code>"
					},
					"description": "Gets current value of property <code>horizontalLayoutGroupElementMinWidth</code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used."
				},
				{
					"name": "getLabelText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "text of the label."
					},
					"description": "Returns the text of the label."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.GroupElement."
				},
				{
					"name": "getUseHorizontalLayout",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useHorizontalLayout</code>"
					},
					"description": "Gets current value of property <code>useHorizontalLayout</code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line."
				},
				{
					"name": "getVisibleBasedOnElements",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Returns true, in case one element of the group element is visible"
					},
					"description": "Determines the visibility of a group element based on elements"
				},
				{
					"name": "indexOfElement",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The element whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>elements</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control to insert into aggregation named elements."
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the 0-based index the control should be inserted at."
						}
					],
					"description": "Inserts a control into the aggregation <code>elements</code>"
				},
				{
					"name": "removeAllElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named elements."
				},
				{
					"name": "removeElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed element or null"
					},
					"parameters": [
						{
							"name": "The",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "element to remove or its index or ID"
						}
					],
					"description": "Removes an element from the aggregation named elements."
				},
				{
					"name": "setEditMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "bEditMode",
							"type": "boolean",
							"optional": false,
							"description": "new value for editable property of smart fields."
						}
					],
					"description": "Setter for property editable of all smart fields in children hierarchy."
				},
				{
					"name": "setElementForLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iElementForLabel",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>elementForLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>elementForLabel</code>.\n\nIndex of element to be used for label determination\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setHorizontalLayoutGroupElementMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iHorizontalLayoutGroupElementMinWidth",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>horizontalLayoutGroupElementMinWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>horizontalLayoutGroupElementMinWidth</code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "name of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "value to set the property to"
						}
					],
					"description": "Sets the given value for the given property"
				},
				{
					"name": "setUseHorizontalLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.GroupElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUseHorizontalLayout",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useHorizontalLayout</code>"
						}
					],
					"description": "Sets a new value for property <code>useHorizontalLayout</code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.Layout",
			"basename": "Layout",
			"resource": "sap/ui/comp/smartform/Layout.js",
			"module": "sap/ui/comp/smartform/Layout",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Layout settings to adjust ResponsiveGridLayout.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "labelSpanXL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Default span for labels in extra large size.",
						"methods": [
							"getLabelSpanXL",
							"setLabelSpanXL"
						]
					},
					{
						"name": "labelSpanL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Default span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in\rthe line the labelSpanM value is used.",
						"methods": [
							"getLabelSpanL",
							"setLabelSpanL"
						]
					},
					{
						"name": "labelSpanM",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Default span for labels in medium size. This property is used for full size containers. If more than one Container is in one line,\rlabelSpanL is used.",
						"methods": [
							"getLabelSpanM",
							"setLabelSpanM"
						]
					},
					{
						"name": "labelSpanS",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Default span for labels in small size.",
						"methods": [
							"getLabelSpanS",
							"setLabelSpanS"
						]
					},
					{
						"name": "emptySpanXL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Number of grid cells that are empty at the end of each line on extra large size.",
						"methods": [
							"getEmptySpanXL",
							"setEmptySpanXL"
						]
					},
					{
						"name": "emptySpanL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of grid cells that are empty at the end of each line on large size.",
						"methods": [
							"getEmptySpanL",
							"setEmptySpanL"
						]
					},
					{
						"name": "emptySpanM",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of grid cells that are empty at the end of each line on medium size.",
						"methods": [
							"getEmptySpanM",
							"setEmptySpanM"
						]
					},
					{
						"name": "emptySpanS",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of grid cells that are empty at the end of each line on small size.",
						"methods": [
							"getEmptySpanS",
							"setEmptySpanS"
						]
					},
					{
						"name": "columnsXL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Number of columns for extra large size.<br>\rThe number of columns for extra large size must not be smaller than the number of columns for large size.",
						"methods": [
							"getColumnsXL",
							"setColumnsXL"
						]
					},
					{
						"name": "columnsL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of columns for large size.<br>\rThe number of columns for large size must not be smaller than the number of columns for medium size.",
						"methods": [
							"getColumnsL",
							"setColumnsL"
						]
					},
					{
						"name": "columnsM",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of columns for medium size.",
						"methods": [
							"getColumnsM",
							"setColumnsM"
						]
					},
					{
						"name": "singleGroupFullSize",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.34.1",
						"description": "If the SmartForm contains only one single Group and this property is set, the Group is displayed using the full size of the\rSmartForm. In this case the properties columnsL and columnsM are ignored.<br>\rIn all other cases the Group is displayed in the size of one column.",
						"methods": [
							"getSingleGroupFullSize",
							"setSingleGroupFullSize"
						]
					},
					{
						"name": "breakpointXL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Breakpoint (in pixel) between large size and extra large (XL) size.",
						"methods": [
							"getBreakpointXL",
							"setBreakpointXL"
						]
					},
					{
						"name": "breakpointL",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Breakpoint (in pixel) between Medium size and Large size.",
						"methods": [
							"getBreakpointL",
							"setBreakpointL"
						]
					},
					{
						"name": "breakpointM",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "reakpoint (in pixel) between Small size and Medium size.",
						"methods": [
							"getBreakpointM",
							"setBreakpointM"
						]
					},
					{
						"name": "gridDataSpan",
						"type": "sap.ui.layout.GridSpan",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "A string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters\rL, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4\rm4\". Note that the parameters has to be provided in the order large medium small.<br>\rThe value set here will be set to all group elements when used with horizontal layout (smart form property useHorizontalLayout)",
						"methods": [
							"getGridDataSpan",
							"setGridDataSpan"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/Layout.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.Layout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getBreakpointL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>breakpointL</code>"
					},
					"description": "Gets current value of property <code>breakpointL</code>.\n\nBreakpoint (in pixel) between Medium size and Large size."
				},
				{
					"name": "getBreakpointM",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>breakpointM</code>"
					},
					"description": "Gets current value of property <code>breakpointM</code>.\n\nreakpoint (in pixel) between Small size and Medium size."
				},
				{
					"name": "getBreakpointXL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>breakpointXL</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>breakpointXL</code>.\n\nBreakpoint (in pixel) between large size and extra large (XL) size."
				},
				{
					"name": "getColumnsL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>columnsL</code>"
					},
					"description": "Gets current value of property <code>columnsL</code>.\n\nNumber of columns for large size.<br>\nThe number of columns for large size must not be smaller than the number of columns for medium size."
				},
				{
					"name": "getColumnsM",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>columnsM</code>"
					},
					"description": "Gets current value of property <code>columnsM</code>.\n\nNumber of columns for medium size."
				},
				{
					"name": "getColumnsXL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>columnsXL</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>columnsXL</code>.\n\nNumber of columns for extra large size.<br>\nThe number of columns for extra large size must not be smaller than the number of columns for large size."
				},
				{
					"name": "getEmptySpanL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>emptySpanL</code>"
					},
					"description": "Gets current value of property <code>emptySpanL</code>.\n\nNumber of grid cells that are empty at the end of each line on large size."
				},
				{
					"name": "getEmptySpanM",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>emptySpanM</code>"
					},
					"description": "Gets current value of property <code>emptySpanM</code>.\n\nNumber of grid cells that are empty at the end of each line on medium size."
				},
				{
					"name": "getEmptySpanS",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>emptySpanS</code>"
					},
					"description": "Gets current value of property <code>emptySpanS</code>.\n\nNumber of grid cells that are empty at the end of each line on small size."
				},
				{
					"name": "getEmptySpanXL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>emptySpanXL</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>emptySpanXL</code>.\n\nNumber of grid cells that are empty at the end of each line on extra large size."
				},
				{
					"name": "getGridDataSpan",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.layout.GridSpan",
						"description": "Value of property <code>gridDataSpan</code>"
					},
					"description": "Gets current value of property <code>gridDataSpan</code>.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters\nL, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4\nm4\". Note that the parameters has to be provided in the order large medium small.<br>\nThe value set here will be set to all group elements when used with horizontal layout (smart form property useHorizontalLayout)\n\nDefault value is <code></code>."
				},
				{
					"name": "getLabelSpanL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>labelSpanL</code>"
					},
					"description": "Gets current value of property <code>labelSpanL</code>.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in\nthe line the labelSpanM value is used."
				},
				{
					"name": "getLabelSpanM",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>labelSpanM</code>"
					},
					"description": "Gets current value of property <code>labelSpanM</code>.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line,\nlabelSpanL is used."
				},
				{
					"name": "getLabelSpanS",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>labelSpanS</code>"
					},
					"description": "Gets current value of property <code>labelSpanS</code>.\n\nDefault span for labels in small size."
				},
				{
					"name": "getLabelSpanXL",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>labelSpanXL</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>labelSpanXL</code>.\n\nDefault span for labels in extra large size."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.Layout."
				},
				{
					"name": "getSingleGroupFullSize",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>singleGroupFullSize</code>"
					},
					"since": "1.34.1",
					"description": "Gets current value of property <code>singleGroupFullSize</code>.\n\nIf the SmartForm contains only one single Group and this property is set, the Group is displayed using the full size of the\nSmartForm. In this case the properties columnsL and columnsM are ignored.<br>\nIn all other cases the Group is displayed in the size of one column.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setBreakpointL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iBreakpointL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>breakpointL</code>"
						}
					],
					"description": "Sets a new value for property <code>breakpointL</code>.\n\nBreakpoint (in pixel) between Medium size and Large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setBreakpointM",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iBreakpointM",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>breakpointM</code>"
						}
					],
					"description": "Sets a new value for property <code>breakpointM</code>.\n\nreakpoint (in pixel) between Small size and Medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setBreakpointXL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "iBreakpointXL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>breakpointXL</code>"
						}
					],
					"description": "Sets a new value for property <code>breakpointXL</code>.\n\nBreakpoint (in pixel) between large size and extra large (XL) size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setColumnsL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iColumnsL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>columnsL</code>"
						}
					],
					"description": "Sets a new value for property <code>columnsL</code>.\n\nNumber of columns for large size.<br>\nThe number of columns for large size must not be smaller than the number of columns for medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setColumnsM",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iColumnsM",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>columnsM</code>"
						}
					],
					"description": "Sets a new value for property <code>columnsM</code>.\n\nNumber of columns for medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setColumnsXL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "iColumnsXL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>columnsXL</code>"
						}
					],
					"description": "Sets a new value for property <code>columnsXL</code>.\n\nNumber of columns for extra large size.<br>\nThe number of columns for extra large size must not be smaller than the number of columns for large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEmptySpanL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iEmptySpanL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>emptySpanL</code>"
						}
					],
					"description": "Sets a new value for property <code>emptySpanL</code>.\n\nNumber of grid cells that are empty at the end of each line on large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEmptySpanM",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iEmptySpanM",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>emptySpanM</code>"
						}
					],
					"description": "Sets a new value for property <code>emptySpanM</code>.\n\nNumber of grid cells that are empty at the end of each line on medium size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEmptySpanS",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iEmptySpanS",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>emptySpanS</code>"
						}
					],
					"description": "Sets a new value for property <code>emptySpanS</code>.\n\nNumber of grid cells that are empty at the end of each line on small size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEmptySpanXL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "iEmptySpanXL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>emptySpanXL</code>"
						}
					],
					"description": "Sets a new value for property <code>emptySpanXL</code>.\n\nNumber of grid cells that are empty at the end of each line on extra large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setGridDataSpan",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sGridDataSpan",
							"type": "sap.ui.layout.GridSpan",
							"optional": false,
							"description": "New value for property <code>gridDataSpan</code>"
						}
					],
					"description": "Sets a new value for property <code>gridDataSpan</code>.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters\nL, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4\nm4\". Note that the parameters has to be provided in the order large medium small.<br>\nThe value set here will be set to all group elements when used with horizontal layout (smart form property useHorizontalLayout)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setLabelSpanL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iLabelSpanL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>labelSpanL</code>"
						}
					],
					"description": "Sets a new value for property <code>labelSpanL</code>.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in\nthe line the labelSpanM value is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabelSpanM",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iLabelSpanM",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>labelSpanM</code>"
						}
					],
					"description": "Sets a new value for property <code>labelSpanM</code>.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line,\nlabelSpanL is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabelSpanS",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iLabelSpanS",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>labelSpanS</code>"
						}
					],
					"description": "Sets a new value for property <code>labelSpanS</code>.\n\nDefault span for labels in small size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabelSpanXL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "iLabelSpanXL",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>labelSpanXL</code>"
						}
					],
					"description": "Sets a new value for property <code>labelSpanXL</code>.\n\nDefault span for labels in extra large size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSingleGroupFullSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.1",
					"parameters": [
						{
							"name": "bSingleGroupFullSize",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>singleGroupFullSize</code>"
						}
					],
					"description": "Sets a new value for property <code>singleGroupFullSize</code>.\n\nIf the SmartForm contains only one single Group and this property is set, the Group is displayed using the full size of the\nSmartForm. In this case the properties columnsL and columnsM are ignored.<br>\nIn all other cases the Group is displayed in the size of one column.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartform.SmartForm",
			"basename": "SmartForm",
			"resource": "sap/ui/comp/smartform/SmartForm.js",
			"module": "sap/ui/comp/smartform/SmartForm",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The SmartForm control renders a form (sap.ui.layout.form.Form) and supports key user personalization, such as adding/hiding fields and\n       groups, changing the order of fields and groups, and changing labels. When used with the SmartField control the label is taken from the\n       metadata annotation <code>sap:label</code> if not specified in the XML view.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Title of the form.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "useHorizontalLayout",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above\nthe field. Each group is rendered in a new line.",
						"methods": [
							"getUseHorizontalLayout",
							"setUseHorizontalLayout"
						]
					},
					{
						"name": "horizontalLayoutGroupElementMinWidth",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.",
						"methods": [
							"getHorizontalLayoutGroupElementMinWidth",
							"setHorizontalLayoutGroupElementMinWidth"
						]
					},
					{
						"name": "checkButton",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether a check button is added to the toolbar.",
						"methods": [
							"getCheckButton",
							"setCheckButton"
						]
					},
					{
						"name": "entityType",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "CSV of entity types for which the flexibility features are available.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getEntityType",
							"setEntityType"
						]
					},
					{
						"name": "expandable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the control is expandable. Per default the control is not rendered as expanded.",
						"methods": [
							"getExpandable",
							"setExpandable"
						]
					},
					{
						"name": "expanded",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the\ncontent is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.",
						"methods": [
							"getExpanded",
							"setExpanded"
						]
					},
					{
						"name": "editTogglable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the editable property is togglable via button.",
						"methods": [
							"getEditTogglable",
							"setEditTogglable"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the form is editable.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "ignoredFields",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "CSV of fields that must be ignored in the OData metadata by the SmartForm control.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getIgnoredFields",
							"setIgnoredFields"
						]
					},
					{
						"name": "flexEnabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the form enables flexibility features, such as adding new fields.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.",
						"methods": [
							"getFlexEnabled",
							"setFlexEnabled"
						]
					}
				],
				"aggregations": [
					{
						"name": "groups",
						"singularName": "group",
						"type": "sap.ui.comp.smartform.Group",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Groups are used to group form elements.",
						"methods": [
							"getGroups",
							"destroyGroups",
							"insertGroup",
							"addGroup",
							"removeGroup",
							"indexOfGroup",
							"removeAllGroups"
						]
					},
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Content to be rendered.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					},
					{
						"name": "layout",
						"singularName": "layout",
						"type": "sap.ui.comp.smartform.Layout",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Layout settings to adjust ResponsiveGridLayout",
						"methods": [
							"getLayout",
							"destroyLayout",
							"setLayout"
						]
					},
					{
						"name": "semanticObjectController",
						"singularName": "semanticObjectController",
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.",
						"methods": [
							"getSemanticObjectController",
							"destroySemanticObjectController",
							"setSemanticObjectController"
						]
					},
					{
						"name": "customToolbar",
						"singularName": "customToolbar",
						"type": "sap.m.Toolbar",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "An additional toolbar that can be added by the users, which can contain further custom buttons, controls, etc.",
						"methods": [
							"getCustomToolbar",
							"destroyCustomToolbar",
							"setCustomToolbar"
						]
					},
					{
						"name": "toolbar",
						"singularName": "toolbar",
						"type": "sap.m.Toolbar",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Toolbar",
						"methods": [
							"getToolbar",
							"destroyToolbar",
							"setToolbar"
						]
					}
				],
				"defaultAggregation": "groups",
				"events": [
					{
						"name": "editToggled",
						"visibility": "public",
						"description": "This event is fired when the editable property is toggled.",
						"methods": [
							"attachEditToggled",
							"detachEditToggled",
							"fireEditToggled"
						]
					},
					{
						"name": "checked",
						"visibility": "public",
						"description": "This event is fired after check was performed.",
						"methods": [
							"attachChecked",
							"detachChecked",
							"fireChecked"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartform/SmartForm.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "checked",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after check was performed."
				},
				{
					"name": "editToggled",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when the editable property is toggled."
				}
			],
			"methods": [
				{
					"name": "_updateClonedElements",
					"visibility": "protected",
					"parameters": [
						{
							"name": "The",
							"type": "sap.ui.comp.smartform.SmartForm",
							"optional": false,
							"description": "cloned smart form"
						}
					],
					"description": "Updates controls in the hierarchy of a cloned smart form."
				},
				{
					"name": "addAggregation",
					"visibility": "public",
					"parameters": [
						{
							"name": "Name",
							"type": "string",
							"optional": false,
							"description": "of the aggregation"
						},
						{
							"name": "The",
							"type": "object",
							"optional": false,
							"description": "object representing a group"
						}
					],
					"description": "Adds some entity oObject to the aggregation identified by sAggregationName."
				},
				{
					"name": "addGroup",
					"visibility": "public",
					"parameters": [
						{
							"name": "Group",
							"type": "object",
							"optional": false,
							"description": "to be added"
						}
					],
					"description": "Adds a group to the aggregation named groups."
				},
				{
					"name": "attachChecked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>checked</code> event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm</code> itself.\n\nThis event is fired after check was performed."
				},
				{
					"name": "attachEditToggled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>editToggled</code> event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm</code> itself.\n\nThis event is fired when the editable property is toggled."
				},
				{
					"name": "check",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "An array of fields with errors"
					},
					"parameters": [
						{
							"name": "Determines",
							"type": "boolean",
							"optional": false,
							"description": "is only visible fields in visible groups should be considered. default: <code>true</code>"
						}
					],
					"description": "Checks smart fields for client errors."
				},
				{
					"name": "clone",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "A reference to the newly created clone"
					},
					"parameters": [
						{
							"name": "sIdSuffix",
							"type": "string",
							"optional": true,
							"description": "A suffix to be appended to the cloned element id"
						},
						{
							"name": "aLocalIds",
							"type": "string[]",
							"optional": true,
							"description": "An array of local IDs within the cloned hierarchy (internally used)"
						}
					],
					"description": "Clones the SmartForm control."
				},
				{
					"name": "destroyCustomToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the customToolbar in the aggregation <code>customToolbar</code>."
				},
				{
					"name": "destroyGroups",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"description": "Destroys a <code>group</code> from the aggregation named groups."
				},
				{
					"name": "destroyLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the layout in the aggregation <code>layout</code>."
				},
				{
					"name": "destroySemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the semanticObjectController in the aggregation <code>semanticObjectController</code>."
				},
				{
					"name": "detachChecked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>checked</code> event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachEditToggled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>editToggled</code> event of this <code>sap.ui.comp.smartform.SmartForm</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "exit",
					"visibility": "public",
					"description": "Cleans up the resources associated with this element and all its children."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartform.SmartForm with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChecked",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>checked</code> to attached listeners."
				},
				{
					"name": "fireEditToggled",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>editToggled</code> to attached listeners."
				},
				{
					"name": "getAggregation",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "Content of an aggregation"
					},
					"parameters": [
						{
							"name": "Name",
							"type": "string",
							"optional": false,
							"description": "of the aggregation"
						}
					],
					"description": "Returns the aggregated object(s) for the named aggregation."
				},
				{
					"name": "getCheckButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>checkButton</code>"
					},
					"description": "Gets current value of property <code>checkButton</code>.\n\nSpecifies whether a check button is added to the toolbar.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getCustomToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Toolbar",
						"description": "The custom toolbar"
					},
					"description": "Getter for aggregation <code>customToolbar</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nSpecifies whether the form is editable.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEditTogglable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editTogglable</code>"
					},
					"description": "Gets current value of property <code>editTogglable</code>.\n\nSpecifies whether the editable property is togglable via button.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entityType</code>"
					},
					"description": "Gets current value of property <code>entityType</code>.\n\nCSV of entity types for which the flexibility features are available.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getExpandable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>expandable</code>"
					},
					"description": "Gets current value of property <code>expandable</code>.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>expanded</code>"
					},
					"description": "Gets current value of property <code>expanded</code>.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the\ncontent is rendered; if expanded is false, then only the headerText/headerToolbar is rendered."
				},
				{
					"name": "getFlexEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>flexEnabled</code>"
					},
					"description": "Gets current value of property <code>flexEnabled</code>.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getGroups",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "of groups"
					},
					"description": "Returns the content of aggregation groups."
				},
				{
					"name": "getHorizontalLayoutGroupElementMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>horizontalLayoutGroupElementMinWidth</code>"
					},
					"description": "Gets current value of property <code>horizontalLayoutGroupElementMinWidth</code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if the horizontal layout is used."
				},
				{
					"name": "getIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ignoredFields</code>"
					},
					"description": "Gets current value of property <code>ignoredFields</code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartForm control.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Layout"
					},
					"description": "Gets content of aggregation <code>layout</code>.\n\nLayout settings to adjust ResponsiveGridLayout"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartform.SmartForm."
				},
				{
					"name": "getSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController"
					},
					"description": "Gets content of aggregation <code>semanticObjectController</code>.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation."
				},
				{
					"name": "getSmartFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartfield.SmartField[]",
						"description": "An array of smart fields (might be empty)."
					},
					"parameters": [
						{
							"name": "Determines",
							"type": "boolean",
							"optional": false,
							"description": "if only visible groups are considered; default is true"
						}
					],
					"description": "Retrieves all the smart fields of the form."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nTitle of the form."
				},
				{
					"name": "getUseHorizontalLayout",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useHorizontalLayout</code>"
					},
					"description": "Gets current value of property <code>useHorizontalLayout</code>.\n\nSpecifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above\nthe field. Each group is rendered in a new line."
				},
				{
					"name": "getVisibleProperties",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "The properties currently visible"
					},
					"description": "Returns the array of properties currently visible on the UI."
				},
				{
					"name": "indexOfGroup",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oGroup",
							"type": "sap.ui.comp.smartform.Group",
							"optional": false,
							"description": "The group whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartform.Group</code> in the aggregation <code>groups</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertGroup",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "The",
							"type": "sap.ui.comp.smartform.Group",
							"optional": false,
							"description": "group to insert"
						},
						{
							"name": "The",
							"type": "int",
							"optional": false,
							"description": "0-based index the group should be inserted at"
						}
					],
					"description": "Inserts a <code>group</code> into the aggregation named groups."
				},
				{
					"name": "propagateGridDataSpan",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"description": "Sets default span for GridData layout of group elements when used with horizontal layout."
				},
				{
					"name": "removeAllGroups",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.Group[]",
						"description": "an array of the removed groups (might be empty)."
					},
					"description": "Removes all the groups in the aggregation named groups."
				},
				{
					"name": "removeGroup",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "The",
							"type": "sap.ui.comp.smartform.Group",
							"optional": false,
							"description": "group to be removed"
						}
					],
					"description": "Removes a <code>group</code> from the aggregation named groups."
				},
				{
					"name": "setCheckButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bCheckButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>checkButton</code>"
						}
					],
					"description": "Sets a new value for property <code>checkButton</code>.\n\nSpecifies whether a check button is added to the toolbar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setCustomToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "New",
							"type": "sap.m.Toolbar",
							"optional": false,
							"description": "value for aggregation <code>customToolbar</code>."
						}
					],
					"description": "Setter for aggregation <code>customToolbar</code>. Default value is <code>undefined</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>."
						}
					],
					"description": "Setter for property <code>editable</code>."
				},
				{
					"name": "setEditTogglable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "New",
							"type": "boolean",
							"optional": false,
							"description": "value for property <code>editTogglable</code>."
						}
					],
					"description": "Setter for property <code>editTogglable</code>. Default value is <code>undefined</code>."
				},
				{
					"name": "setEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEntityType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>entityType</code>"
						}
					],
					"description": "Sets a new value for property <code>entityType</code>.\n\nCSV of entity types for which the flexibility features are available.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setExpandable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bExpandable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>expandable</code>"
						}
					],
					"description": "Sets a new value for property <code>expandable</code>.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bExpanded",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>expanded</code>"
						}
					],
					"description": "Sets a new value for property <code>expanded</code>.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the\ncontent is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setFlexEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFlexEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>flexEnabled</code>"
						}
					],
					"description": "Sets a new value for property <code>flexEnabled</code>.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setFocusOnEditableControl",
					"visibility": "public",
					"since": "1.36.0",
					"description": "Sets the focus on the first editable control."
				},
				{
					"name": "setHorizontalLayoutGroupElementMinWidth",
					"visibility": "public",
					"parameters": [
						{
							"name": "New",
							"type": "int",
							"optional": false,
							"description": "value for property <code>horizontalLayoutGroupElementMinWidth</code>."
						}
					],
					"description": "Setter for property <code>horizontalLayoutGroupElementMinWidth</code>."
				},
				{
					"name": "setIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIgnoredFields",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ignoredFields</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoredFields</code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartForm control.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLayout",
							"type": "sap.ui.comp.smartform.Layout",
							"optional": false,
							"description": "The layout to set"
						}
					],
					"description": "Sets the aggregated <code>layout</code>."
				},
				{
					"name": "setSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSemanticObjectController",
							"type": "sap.ui.comp.navpopover.SemanticObjectController",
							"optional": false,
							"description": "The semanticObjectController to set"
						}
					],
					"description": "Sets the aggregated <code>semanticObjectController</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>."
						}
					],
					"description": "Setter for property <code>title</code>. Default value is <code>undefined</code>."
				},
				{
					"name": "setUseHorizontalLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartform.SmartForm",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "New",
							"type": "boolean",
							"optional": false,
							"description": "value for property <code>useHorizontalLayout</code>."
						}
					],
					"description": "Setter for property <code>useHorizontalLayout</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
			"basename": "SmartAreaMicroChart",
			"resource": "sap/ui/comp/smartmicrochart/SmartAreaMicroChart.js",
			"module": "sap/ui/comp/smartmicrochart/SmartAreaMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.38",
			"extends": "sap.ui.core.Control",
			"description": "The SmartAreaMicroChart control creates a AreaMicroChart based on OData metadata and the configuration\n       specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch\n       fields from OData metadata, from which Micro Area Chart UI will be generated; it can also be used to fetch\n       the actual chart data.<br>\n       <b><i>Note:</i></b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been\n       initialised.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The entity set name from where the data is fetched and the internal AreaMicroChart representation is created. Note that this is not a dynamic UI5\nproperty",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					},
					{
						"name": "showLabel",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines if the target value and actual value\nare displayed or not",
						"methods": [
							"getShowLabel",
							"setShowLabel"
						]
					},
					{
						"name": "chartType",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the type of Chart.",
						"methods": [
							"getChartType",
							"setChartType"
						]
					},
					{
						"name": "enableAutoBinding",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Only <code>true</code> value is supported: the chart will be bound to the chartBindingPath or to the entitySet",
						"methods": [
							"getEnableAutoBinding",
							"setEnableAutoBinding"
						]
					},
					{
						"name": "chartBindingPath",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This attribute can be used to specify the relative path ( without '/') to an entitySet ( not a single entity)\nthat is used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path.\nIf not specified, the entitySet attribute is used instead.",
						"methods": [
							"getChartBindingPath",
							"setChartBindingPath"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "164px",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the width.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "74px",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the height.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "_chart",
						"singularName": "_chart",
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "This private aggregation is used for the internal binding of the sap.suite.ui.microchart.AreaMicroChart",
						"methods": [
							"get_chart",
							"destroy_chart",
							"set_chart"
						]
					},
					{
						"name": "_chartTexts",
						"singularName": "_chartText",
						"type": "sap.m.ListBase",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "This private aggregation is used for the internal binding of the chart text, description and unit of measure values in case the value is provided via ODataModel",
						"methods": [
							"get_chartTexts",
							"destroy_chartTexts",
							"set_chartTexts"
						]
					}
				],
				"defaultAggregation": "_chart",
				"associations": [
					{
						"name": "chartTitle",
						"singularName": "chartTitle",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "If the associated control is provided, its Text property is set to the Title property of the Chart annotation.\nTitle property of the DataPoint annotation is ignored.\nsince version 1.38",
						"methods": [
							"getChartTitle",
							"setChartTitle"
						]
					},
					{
						"name": "chartDescription",
						"singularName": "chartDescription",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "If the associated control is provided, its Text property is set to the Description property of the Chart annotation.\nDescription property of the DataPoint annotation is ignored.\nsince version 1.38",
						"methods": [
							"getChartDescription",
							"setChartDescription"
						]
					},
					{
						"name": "unitOfMeasure",
						"singularName": "unitOfMeasure",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38",
						"description": "If the associated control is provided, its Text property is set to the Unit of Measure. The Value property of the DataPoint annotation should be annotated with this Unit of Measure. It can be either ISOCurrency or Unit from the OData Measures annotations.",
						"methods": [
							"getUnitOfMeasure",
							"setUnitOfMeasure"
						]
					}
				],
				"events": [
					{
						"name": "initialize",
						"visibility": "public",
						"description": "Event fired once the control has been initialized.",
						"methods": [
							"attachInitialize",
							"detachInitialize",
							"fireInitialize"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new sap.ui.comp.smartmicrochart/SmartAreaMicroChart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "initialize",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired once the control has been initialized."
				}
			],
			"methods": [
				{
					"name": "attachInitialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialize</code> event of this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart</code> itself.\n\nEvent fired once the control has been initialized."
				},
				{
					"name": "detachInitialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialize</code> event of this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartAreaMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireInitialize",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialize</code> to attached listeners."
				},
				{
					"name": "getChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartBindingPath</code>"
					},
					"description": "Gets current value of property <code>chartBindingPath</code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entitySet ( not a single entity)\nthat is used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path.\nIf not specified, the entitySet attribute is used instead."
				},
				{
					"name": "getChartDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"description": "ID of the element which is the current target of the association <code>chartDescription</code>, or <code>null</code>."
				},
				{
					"name": "getChartTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"description": "ID of the element which is the current target of the association <code>chartTitle</code>, or <code>null</code>."
				},
				{
					"name": "getChartType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartType</code>"
					},
					"description": "Gets current value of property <code>chartType</code>.\n\nSpecifies the type of Chart."
				},
				{
					"name": "getEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableAutoBinding</code>"
					},
					"description": "Gets current value of property <code>enableAutoBinding</code>.\n\nOnly <code>true</code> value is supported: the chart will be bound to the chartBindingPath or to the entitySet\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entitySet</code>"
					},
					"description": "Gets current value of property <code>entitySet</code>.\n\nThe entity set name from where the data is fetched and the internal AreaMicroChart representation is created. Note that this is not a dynamic UI5\nproperty"
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nDefines the height.\n\nDefault value is <code>74px</code>."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartAreaMicroChart."
				},
				{
					"name": "getShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showLabel</code>"
					},
					"description": "Gets current value of property <code>showLabel</code>.\n\nDetermines if the target value and actual value\nare displayed or not\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUnitOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"since": "1.38",
					"description": "ID of the element which is the current target of the association <code>unitOfMeasure</code>, or <code>null</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDefines the width.\n\nDefault value is <code>164px</code>."
				},
				{
					"name": "setChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChartBindingPath",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>chartBindingPath</code>"
						}
					],
					"description": "Sets a new value for property <code>chartBindingPath</code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entitySet ( not a single entity)\nthat is used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path.\nIf not specified, the entitySet attribute is used instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setChartDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oChartDescription",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>chartDescription</code>."
				},
				{
					"name": "setChartTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oChartTitle",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>chartTitle</code>."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>entitySet</code>"
						}
					],
					"description": "Sets a new value for property <code>entitySet</code>.\n\nThe entity set name from where the data is fetched and the internal AreaMicroChart representation is created. Note that this is not a dynamic UI5\nproperty\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nDefines the height.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>74px</code>."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowLabel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>showLabel</code>.\n\nDetermines if the target value and actual value\nare displayed or not\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUnitOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "oUnitOfMeasure",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>unitOfMeasure</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartAreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDefines the width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>164px</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
			"basename": "SmartBulletMicroChart",
			"resource": "sap/ui/comp/smartmicrochart/SmartBulletMicroChart.js",
			"module": "sap/ui/comp/smartmicrochart/SmartBulletMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.38",
			"extends": "sap.ui.core.Control",
			"description": "The SmartBulletMicroChart control creates a <code>sap.suite.ui.microchart.BulletMicroChart</code>\nbased on OData metadata and the configuration specified by <code>mSettings</code>.\nThe entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and\nannotation information from the given default OData model. Based on this, the BulletMicroChart UI\nis created.\n<br>\n<b><i>Note:</i></b><br>\nMost of the attributes/properties are not dynamic and cannot be changed once the control has been\ninitialized.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The entity set name from from where the data is fetched and and the internal BulletMicroChart representation is created.\nNote that this is not a dynamic UI5 property.",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					},
					{
						"name": "showLabel",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines if any label is shown or not",
						"methods": [
							"getShowLabel",
							"setShowLabel"
						]
					},
					{
						"name": "chartType",
						"type": "string",
						"defaultValue": "Bullet",
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the chart type. Note that this property is read-only.",
						"methods": [
							"getChartType",
							"setChartType"
						]
					},
					{
						"name": "enableAutoBinding",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists)\nproperty.",
						"methods": [
							"getEnableAutoBinding",
							"setEnableAutoBinding"
						]
					},
					{
						"name": "chartBindingPath",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This attribute can be used to specify the relative path ( without '/') to an entity ( not an entitySet) that\nis used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path",
						"methods": [
							"getChartBindingPath",
							"setChartBindingPath"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "164px",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the width.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If this is set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width</code> property is ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "_criticalityThresholds",
						"singularName": "_criticalityThreshold",
						"type": "sap.ui.core.CustomData",
						"cardinality": "0..n",
						"visibility": "hidden",
						"description": "This private aggregation is used for the internal binding of the DataPoint/CriticalityCalculation values used for calculation of the bar color",
						"methods": [
							"get_criticalityThresholds",
							"destroy_criticalityThresholds",
							"insert_criticalityThreshold",
							"add_criticalityThreshold",
							"remove_criticalityThreshold",
							"indexOf_criticalityThreshold",
							"removeAll_criticalityThresholds"
						]
					},
					{
						"name": "_chart",
						"singularName": "_chart",
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "This private aggregation is used for the internal binding of the sap.suite.ui.microchart.BulletMicroChart",
						"methods": [
							"get_chart",
							"destroy_chart",
							"set_chart"
						]
					}
				],
				"defaultAggregation": "_chart",
				"associations": [
					{
						"name": "chartTitle",
						"singularName": "chartTitle",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If the associated control is provided, its <code>text</code> property is set to the Title property of the Chart annotation.\nTitle property of the DataPoint annotation is ignored.",
						"methods": [
							"getChartTitle",
							"setChartTitle"
						]
					},
					{
						"name": "chartDescription",
						"singularName": "chartDescription",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If the associated control is provided, its <code>text</code> property is set to the Description property of the Chart annotation.\nDescription property of the DataPoint annotation is ignored.",
						"methods": [
							"getChartDescription",
							"setChartDescription"
						]
					},
					{
						"name": "unitOfMeasure",
						"singularName": "unitOfMeasure",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If the associated control is provided, its <code>text</code> property is set to the Unit of Measure. The Value property of the DataPoint annotation should be annotated with this Unit of Measure. It can be either ISOCurrency or Unit from the OData Measures annotations.",
						"methods": [
							"getUnitOfMeasure",
							"setUnitOfMeasure"
						]
					}
				],
				"events": [
					{
						"name": "initialize",
						"visibility": "public",
						"description": "Event fired once the control has been initialized.",
						"methods": [
							"attachInitialize",
							"detachInitialize",
							"fireInitialize"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new sap.ui.comp.smartmicrochart/SmartBulletMicroChart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "initialize",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired once the control has been initialized."
				}
			],
			"methods": [
				{
					"name": "attachInitialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialize</code> event of this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart</code> itself.\n\nEvent fired once the control has been initialized."
				},
				{
					"name": "detachInitialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialize</code> event of this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartBulletMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireInitialize",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialize</code> to attached listeners."
				},
				{
					"name": "getChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartBindingPath</code>"
					},
					"description": "Gets current value of property <code>chartBindingPath</code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entity ( not an entitySet) that\nis used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path"
				},
				{
					"name": "getChartDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"since": "1.38.0",
					"description": "ID of the element which is the current target of the association <code>chartDescription</code>, or <code>null</code>."
				},
				{
					"name": "getChartTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"since": "1.38.0",
					"description": "ID of the element which is the current target of the association <code>chartTitle</code>, or <code>null</code>."
				},
				{
					"name": "getChartType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartType</code>"
					},
					"description": "Gets current value of property <code>chartType</code>.\n\nSpecifies the chart type. Note that this property is read-only.\n\nDefault value is <code>Bullet</code>."
				},
				{
					"name": "getEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableAutoBinding</code>"
					},
					"description": "Gets current value of property <code>enableAutoBinding</code>.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists)\nproperty.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entitySet</code>"
					},
					"description": "Gets current value of property <code>entitySet</code>.\n\nThe entity set name from from where the data is fetched and and the internal BulletMicroChart representation is created.\nNote that this is not a dynamic UI5 property."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this is set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width</code> property is ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartBulletMicroChart."
				},
				{
					"name": "getShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showLabel</code>"
					},
					"description": "Gets current value of property <code>showLabel</code>.\n\nDetermines if any label is shown or not\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUnitOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"since": "1.38.0",
					"description": "ID of the element which is the current target of the association <code>unitOfMeasure</code>, or <code>null</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDefines the width.\n\nDefault value is <code>164px</code>."
				},
				{
					"name": "setChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChartBindingPath",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>chartBindingPath</code>"
						}
					],
					"description": "Sets a new value for property <code>chartBindingPath</code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entity ( not an entitySet) that\nis used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setChartDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oChartDescription",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>chartDescription</code>."
				},
				{
					"name": "setChartTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oChartTitle",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>chartTitle</code>."
				},
				{
					"name": "setEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableAutoBinding",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableAutoBinding</code>"
						}
					],
					"description": "Sets a new value for property <code>enableAutoBinding</code>.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists)\nproperty.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>entitySet</code>"
						}
					],
					"description": "Sets a new value for property <code>entitySet</code>.\n\nThe entity set name from from where the data is fetched and and the internal BulletMicroChart representation is created.\nNote that this is not a dynamic UI5 property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this is set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width</code> property is ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowLabel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>showLabel</code>.\n\nDetermines if any label is shown or not\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUnitOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oUnitOfMeasure",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>unitOfMeasure</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartBulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDefines the width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>164px</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartmicrochart.SmartMicroChart",
			"basename": "SmartMicroChart",
			"resource": "sap/ui/comp/smartmicrochart/SmartMicroChart.js",
			"module": "sap/ui/comp/smartmicrochart/SmartMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.38",
			"extends": "sap.ui.core.Control",
			"description": "The SmartMicroChart control creates a chart based on OData metadata and the configuration specified by <code>mSettings</code>.\nThe entitySet property must be specified in order to use the control. This property is used to fetch metadata and\nannotation information from the given default OData model. Depending on the UI/ChartType annotation, the control\ncreates a corresponding <code>SmartBulletMicroChart</code> or <code>SmartAreaMicroChart</code> instance and delegates to the internal control.\n       <br>\n<b><i>Note:<i></b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The entity set name to fetch data and create the internal chart representation from.\nNote that this is not a dynamic UI5 property.",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					},
					{
						"name": "showLabel",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines if any label is shown or not",
						"methods": [
							"getShowLabel",
							"setShowLabel"
						]
					},
					{
						"name": "enableAutoBinding",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty.",
						"methods": [
							"getEnableAutoBinding",
							"setEnableAutoBinding"
						]
					},
					{
						"name": "chartBindingPath",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This attribute can be used to specify the path that\nis used during the binding of the chart. If not\nspecified, the entitySet attribute is used instead and also stored in this property.\nCalling <code>bindElement</code> binds the control and sets this property.",
						"methods": [
							"getChartBindingPath",
							"setChartBindingPath"
						]
					},
					{
						"name": "chartType",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the type of chart. Note that this property is read-only.",
						"methods": [
							"getChartType",
							"setChartType"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "164px",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the width.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "74px",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the height.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width</code> and <code>height</code> properties are ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "_chart",
						"singularName": "_chart",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "This private aggregation is used for the internal instance of Smart<*>MicroChart.",
						"methods": [
							"get_chart",
							"destroy_chart",
							"set_chart"
						]
					}
				],
				"defaultAggregation": "_chart",
				"associations": [
					{
						"name": "chartTitle",
						"singularName": "chartTitle",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "If the associated control is provided, its <code>text</code> property is set to the Title property of the Chart annotation.\nTitle property of the DataPoint annotation is ignored.",
						"methods": [
							"getChartTitle",
							"setChartTitle"
						]
					},
					{
						"name": "chartDescription",
						"singularName": "chartDescription",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "If the associated control is provided, its <code>text</code> property is set to the Description property of the Chart annotation.\nDescription property of the DataPoint annotation is ignored.",
						"methods": [
							"getChartDescription",
							"setChartDescription"
						]
					},
					{
						"name": "unitOfMeasure",
						"singularName": "unitOfMeasure",
						"type": "sap.m.Label",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "If the associated control is provided, its <code>text</code> property is set to the Unit of Measure. The Value property of the DataPoint annotation should be annotated with this Unit of Measure. It can be either ISOCurrency or Unit from the OData Measures annotations.",
						"methods": [
							"getUnitOfMeasure",
							"setUnitOfMeasure"
						]
					}
				],
				"events": [
					{
						"name": "initialize",
						"visibility": "public",
						"description": "Event fired once the control has been initialized.",
						"methods": [
							"attachInitialize",
							"detachInitialize",
							"fireInitialize"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new sap.ui.comp.smartmicrochart/SmartMicroChart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "initialize",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired once the control has been initialized."
				}
			],
			"methods": [
				{
					"name": "attachInitialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialize</code> event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code> itself.\n\nEvent fired once the control has been initialized."
				},
				{
					"name": "detachInitialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialize</code> event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireInitialize",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialize</code> to attached listeners."
				},
				{
					"name": "getChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartBindingPath</code>"
					},
					"description": "Gets current value of property <code>chartBindingPath</code>.\n\nThis attribute can be used to specify the path that\nis used during the binding of the chart. If not\nspecified, the entitySet attribute is used instead and also stored in this property.\nCalling <code>bindElement</code> binds the control and sets this property."
				},
				{
					"name": "getChartDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"description": "ID of the element which is the current target of the association <code>chartDescription</code>, or <code>null</code>."
				},
				{
					"name": "getChartTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"description": "ID of the element which is the current target of the association <code>chartTitle</code>, or <code>null</code>."
				},
				{
					"name": "getChartType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartType</code>"
					},
					"description": "Gets current value of property <code>chartType</code>.\n\nSpecifies the type of chart. Note that this property is read-only."
				},
				{
					"name": "getEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableAutoBinding</code>"
					},
					"description": "Gets current value of property <code>enableAutoBinding</code>.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entitySet</code>"
					},
					"description": "Gets current value of property <code>entitySet</code>.\n\nThe entity set name to fetch data and create the internal chart representation from.\nNote that this is not a dynamic UI5 property."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nDefines the height.\n\nDefault value is <code>74px</code>."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width</code> and <code>height</code> properties are ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartMicroChart."
				},
				{
					"name": "getShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showLabel</code>"
					},
					"description": "Gets current value of property <code>showLabel</code>.\n\nDetermines if any label is shown or not\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUnitOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Label"
					},
					"description": "ID of the element which is the current target of the association <code>unitOfMeasure</code>, or <code>null</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDefines the width.\n\nDefault value is <code>164px</code>."
				},
				{
					"name": "setChartBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChartBindingPath",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>chartBindingPath</code>"
						}
					],
					"description": "Sets a new value for property <code>chartBindingPath</code>.\n\nThis attribute can be used to specify the path that\nis used during the binding of the chart. If not\nspecified, the entitySet attribute is used instead and also stored in this property.\nCalling <code>bindElement</code> binds the control and sets this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setChartDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oChartDescription",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>chartDescription</code>."
				},
				{
					"name": "setChartTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oChartTitle",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>chartTitle</code>."
				},
				{
					"name": "setEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableAutoBinding",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableAutoBinding</code>"
						}
					],
					"description": "Sets a new value for property <code>enableAutoBinding</code>.\n\nIf set to <code>true</code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>entitySet</code>"
						}
					],
					"description": "Sets a new value for property <code>entitySet</code>.\n\nThe entity set name to fetch data and create the internal chart representation from.\nNote that this is not a dynamic UI5 property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nDefines the height.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>74px</code>."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width</code> and <code>height</code> properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowLabel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>showLabel</code>.\n\nDetermines if any label is shown or not\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUnitOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oUnitOfMeasure",
							"type": "sap.m.Label",
							"optional": false,
							"description": "Id of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>unitOfMeasure</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartmicrochart.SmartMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDefines the width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>164px</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smarttable.SmartTable",
			"basename": "SmartTable",
			"resource": "sap/ui/comp/smarttable/SmartTable.js",
			"module": "sap/ui/comp/smarttable/SmartTable",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.VBox",
			"description": "The SmartTable control creates a table based on OData metadata and the configuration specified. The entitySet attribute must be\n       specified to use the control. This attribute is used to fetch fields from OData metadata, from which columns will be generated; it can\n       also be used to fetch the actual table data.<br>\n       Based on the tableType property, this control will render a standard, analytical, or responsive table.<br>\n       <b><i>Note:</i></b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "The entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					},
					{
						"name": "smartFilterId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "ID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest\nparent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.",
						"methods": [
							"getSmartFilterId",
							"setSmartFilterId"
						]
					},
					{
						"name": "ignoredFields",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "CSV of fields that must be ignored in the OData metadata by the SmartTable control.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getIgnoredFields",
							"setIgnoredFields"
						]
					},
					{
						"name": "initiallyVisibleFields",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.32.0",
						"description": "CSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br>\nThis property is mainly meant to be used when no LineItem annotation exists.<br>\nIf you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and\nfinally based on this property.<br>\n<i>Note:</i><br>\nIf both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getInitiallyVisibleFields",
							"setInitiallyVisibleFields"
						]
					},
					{
						"name": "requestAtLeastFields",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.32.0",
						"description": "CSV of fields that must be always requested from the backend<br>\nThis property is mainly meant to be used when there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<i>Note:</i><br>\nThis property has no effect when AnalyticalTable is used.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getRequestAtLeastFields",
							"setRequestAtLeastFields"
						]
					},
					{
						"name": "ignoreFromPersonalisation",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.32.0",
						"description": "CSV of fields that is not shown in the personalization dialog.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.",
						"methods": [
							"getIgnoreFromPersonalisation",
							"setIgnoreFromPersonalisation"
						]
					},
					{
						"name": "tableType",
						"type": "sap.ui.comp.smarttable.TableType",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Specifies the type of table to be created in the SmartTable control.<br>\n<i>Note:</i><br>\nIf you add a table to the content of the SmartTable in the view, this property has no effect.",
						"methods": [
							"getTableType",
							"setTableType"
						]
					},
					{
						"name": "useVariantManagement",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "The useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you\nneed to specify the persistencyKey property.",
						"methods": [
							"getUseVariantManagement",
							"setUseVariantManagement"
						]
					},
					{
						"name": "showVariantManagement",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "The showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.",
						"methods": [
							"getShowVariantManagement",
							"setShowVariantManagement"
						]
					},
					{
						"name": "useExportToExcel",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Can be set to true or false depending on whether you want to export data to MS Excel®.",
						"methods": [
							"getUseExportToExcel",
							"setUseExportToExcel"
						]
					},
					{
						"name": "useTablePersonalisation",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "The useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table\nsettings. If you want to persist the table personalization, you need to specify the persistencyKey property.",
						"methods": [
							"getUseTablePersonalisation",
							"setUseTablePersonalisation"
						]
					},
					{
						"name": "showTablePersonalisation",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "The showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation\nbutton.",
						"methods": [
							"getShowTablePersonalisation",
							"setShowTablePersonalisation"
						]
					},
					{
						"name": "showRowCount",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "If the showRowCount attribute is set to true number of rows is shown along with the header text.",
						"methods": [
							"getShowRowCount",
							"setShowRowCount"
						]
					},
					{
						"name": "header",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Specifies header text that is shown in table",
						"methods": [
							"getHeader",
							"setHeader"
						]
					},
					{
						"name": "toolbarStyleClass",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "A style class which is defined for the toolbar of the table.",
						"methods": [
							"getToolbarStyleClass",
							"setToolbarStyleClass"
						]
					},
					{
						"name": "enableCustomFilter",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Can be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When\npressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.",
						"methods": [
							"getEnableCustomFilter",
							"setEnableCustomFilter"
						]
					},
					{
						"name": "persistencyKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Key used to access personalization data.",
						"methods": [
							"getPersistencyKey",
							"setPersistencyKey"
						]
					},
					{
						"name": "useOnlyOneSolidToolbar",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "If set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid\nstyle.",
						"deprecated": {
							"since": "1.29",
							"text": "This property has no effect"
						},
						"methods": [
							"getUseOnlyOneSolidToolbar",
							"setUseOnlyOneSolidToolbar"
						]
					},
					{
						"name": "currentVariantId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Retrieves or sets the current variant.",
						"methods": [
							"getCurrentVariantId",
							"setCurrentVariantId"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "This attribute can be used to specify if the controls created by the SmartTable control are editable.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "enableAutoBinding",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "When set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This\nhappens just after the <code>initialise</code> event has been fired.",
						"methods": [
							"getEnableAutoBinding",
							"setEnableAutoBinding"
						]
					},
					{
						"name": "tableBindingPath",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "This attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet\nattribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)",
						"methods": [
							"getTableBindingPath",
							"setTableBindingPath"
						]
					},
					{
						"name": "editTogglable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Specifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only\nfor the SmartField scenario)",
						"methods": [
							"getEditTogglable",
							"setEditTogglable"
						]
					},
					{
						"name": "demandPopin",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.30.0",
						"description": "The demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive\ntable",
						"methods": [
							"getDemandPopin",
							"setDemandPopin"
						]
					},
					{
						"name": "showFullScreenButton",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"description": "Controls the visibility of the FullScreen button.",
						"methods": [
							"getShowFullScreenButton",
							"setShowFullScreenButton"
						]
					}
				],
				"aggregations": [
					{
						"name": "customToolbar",
						"singularName": "customToolbar",
						"type": "sap.m.Toolbar",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.26.0",
						"description": "A toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartTable\ncontrol does not create an additional toolbar, but makes use of this one.",
						"methods": [
							"getCustomToolbar",
							"destroyCustomToolbar",
							"setCustomToolbar"
						]
					},
					{
						"name": "semanticObjectController",
						"singularName": "semanticObjectController",
						"type": "sap.ui.comp.navpopover.SemanticObjectController",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.28.0",
						"description": "The Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.",
						"methods": [
							"getSemanticObjectController",
							"destroySemanticObjectController",
							"setSemanticObjectController"
						]
					},
					{
						"name": "noData",
						"singularName": "noData",
						"type": "sap.ui.core.Control",
						"altTypes": [
							"string"
						],
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.32.0",
						"description": "The value for the noData aggregation can be either a string value or a control instance.<br>\nThe control is shown, in case there is no data for the Table available. In case of a string value this will simply replace the no\ndata text.<br>\nCurrently the Responsive Table only supports string values.",
						"methods": [
							"getNoData",
							"destroyNoData",
							"setNoData"
						]
					},
					{
						"name": "semanticKeyAdditionalControl",
						"singularName": "semanticKeyAdditionalControl",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Allows users to specify an additional control that will be added to a VBox for the first semantic key field.<br>\n<i>Note:</i><br>\nThis property is not meant for public use.",
						"methods": [
							"getSemanticKeyAdditionalControl",
							"destroySemanticKeyAdditionalControl",
							"setSemanticKeyAdditionalControl"
						]
					}
				],
				"associations": [
					{
						"name": "smartVariant",
						"singularName": "smartVariant",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38",
						"description": "Identifies the SmartVariant control which should be used for the personalization. Will be ignored if the advanced mode is set.",
						"methods": [
							"getSmartVariant",
							"setSmartVariant"
						]
					}
				],
				"events": [
					{
						"name": "initialise",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Event fired once the control has been initialized.",
						"methods": [
							"attachInitialise",
							"detachInitialise",
							"fireInitialise"
						]
					},
					{
						"name": "beforeRebindTable",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Event fired just before the binding is being done.",
						"methods": [
							"attachBeforeRebindTable",
							"detachBeforeRebindTable",
							"fireBeforeRebindTable"
						]
					},
					{
						"name": "editToggled",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event fired when display/edit button is clicked.",
						"methods": [
							"attachEditToggled",
							"detachEditToggled",
							"fireEditToggled"
						]
					},
					{
						"name": "dataReceived",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself.",
						"methods": [
							"attachDataReceived",
							"detachDataReceived",
							"fireDataReceived"
						]
					},
					{
						"name": "afterVariantInitialise",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event fired after variant management in the SmartTable has been initialized.",
						"methods": [
							"attachAfterVariantInitialise",
							"detachAfterVariantInitialise",
							"fireAfterVariantInitialise"
						]
					},
					{
						"name": "afterVariantSave",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.",
						"methods": [
							"attachAfterVariantSave",
							"detachAfterVariantSave",
							"fireAfterVariantSave"
						]
					},
					{
						"name": "afterVariantApply",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Event fired after a variant has been applied.",
						"methods": [
							"attachAfterVariantApply",
							"detachAfterVariantApply",
							"fireAfterVariantApply"
						]
					},
					{
						"name": "showOverlay",
						"visibility": "public",
						"since": "1.32.0",
						"description": "Event fired just before the overlay is being shown.",
						"methods": [
							"attachShowOverlay",
							"detachShowOverlay",
							"fireShowOverlay"
						]
					},
					{
						"name": "fieldChange",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Event fired when an editable field, created internally by the SmartTable control, is changed.",
						"methods": [
							"attachFieldChange",
							"detachFieldChange",
							"fireFieldChange"
						]
					}
				],
				"annotations": [
					{
						"name": "sortable",
						"namespace": "Org.OData.Capabilities.V1",
						"target": [
							"EntitySet"
						],
						"annotation": "SortRestrictions/NonSortableProperties",
						"defaultValue": "true",
						"appliesTo": [
							"columns/#"
						],
						"since": "1.28.1",
						"description": "Defines whether a column can be sorted.\nColumns are sortable by default. If sorting on columns has to be restricted,\nthen such columns must be listed under <code>NonSortableProperties</code> (exclude from sorting).\n\nThe annotation is calculated from the currently bound <code>EntitySet</code> and contains a <code>Property</code> collection of the\ncorresponding <code>EntityType</code> definition. Only <code>PropertyPath</code> for columns to be excluded from sorting can be applied.\n\nFor columns added to the content of the SmartTable control, the annotation is not used, and the hosting component needs to take care\nof correct settings.\n\n<i>XML Example of OData V4 with Customer and CompanyCode Properties Excluded from Sorting</i>\n<pre>\n   &lt;Annotation Term=\"Org.OData.Capabilities.V1.SortRestrictions\"&gt;\n     &lt;PropertyValue Property=\"NonSortableProperties\"&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:sortable</code> annotation on the <code>Property</code> can be used to exclude from sorting.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:sortable=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:sortable=\"false\"/&gt;\n</pre>"
					},
					{
						"name": "filterable",
						"namespace": "Org.OData.Capabilities.V1",
						"target": [
							"EntitySet"
						],
						"annotation": "FilterRestrictions/NonFilterableProperties",
						"defaultValue": "true",
						"appliesTo": [
							"columns/#"
						],
						"since": "1.28.1",
						"description": "Defines whether a column can be filtered.\nColumns are filterable by default and need to be excluded.\n\nThe annotation is calculated from the currently bound <code>EntitySet</code> and contains a <code>PropertyPath</code> collection of the\ncorresponding <code>EntityType</code> definition. Only PropertyPaths for columns to be excluded from filtering can be applied.\n\nFor columns added to the content's table of the SmartTable, the annotation is not used and the hosting component needs to take care\nof correct settings.\n\n<b>Note:</b> Currently only OData V2 annotation is supported.\n\n<i>XML Example of OData V4 with Excluded Customer and CompanyCode Properties from Filtering</i>\n<pre>\n   &lt;Annotation Term=\"Org.OData.Capabilities.V1.FilterRestrictions\"&gt;\n     &lt;PropertyValue Property=\"NonFilterableProperties\"&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:filterable</code> annotation on the <code>Property</code> can be used to exclude from filtering.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:filterable=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:filterable=\"false\"/&gt;\n</pre>"
					},
					{
						"name": "columnLabelOnProperty",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"PropertyPath"
						],
						"annotation": "Label",
						"defaultValue": "null",
						"appliesTo": [
							"columns/#/label"
						],
						"since": "1.28.1",
						"description": "A short, human-readable text suitable for the column header's text.\n\nEither <code>com.sap.vocabularies.Common.v1.Label</code> annotation on the <code>Property</code> or <code>Label</code> annotation of\n<code>com.sap.vocabularies.UI.v1.DataFieldAbstract</code> within <code>com.sap.vocabularies.UI.v1.LineItem</code> annotation can be used.\nIf <code>com.sap.vocabularies.Common.v1.Label</code> annotation is given, it has precedence.\nIf none of the annotations is given the label will be the Property name of the column.\n\nFor columns added to the content's table of the SmartTable, the annotation is not used and the hosting component needs to take care\nof correct settings and translation.\n\n<i>XML Example of OData V4 with CustomerName as Label for Customer Property</i>\n<pre>\n   &lt;Property Name=\"Customer\"&gt;\n      &lt;Annotation Term=\"UI.Label\" Path=\"CustomerName\" /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CustomerName\" type=\"Edm.String\" /&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used to define the label of the column.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:label=\"My Customer\"/&gt;\n</pre>"
					},
					{
						"name": "columnLabelOnLineItem",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"Property",
							"Parameter"
						],
						"annotation": "LineItem/Label",
						"defaultValue": "null",
						"appliesTo": [
							"columns/#/label"
						],
						"since": "1.28.1",
						"description": "A short, human-readable text suitable for the column header's text.\n\nEither <code>com.sap.vocabularies.Common.v1.Label</code> annotation on the <code>Property</code> or <code>Label</code> annotation of\n<code>com.sap.vocabularies.UI.v1.DataFieldAbstract</code> within <code>com.sap.vocabularies.UI.v1.LineItem</code> annotation can be used.\nIf <code>com.sap.vocabularies.Common.v1.Label</code> annotation is given, it has precedence.\nIf none of the annotations is given the label will be the Property name of the column.\n\nFor columns added to the content's table of the SmartTable, the annotation is not used and the hosting component needs to take care\nof correct settings and translation.\n\n<i>XML Example of OData V4 with CustomerName as Label for Customer Property</i>\n<pre>\n   &lt;Property Name=\"Customer\"&gt;\n      &lt;Annotation Term=\"UI.Label\" Path=\"CustomerName\" /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CustomerName\" type=\"Edm.String\" /&gt;\n</pre>\n\nFor OData v2 the <code>sap:label</code> annotation on the <code>Property</code> can be used define the label of the column.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:label=\"My Customer\"/&gt;\n</pre>"
					},
					{
						"name": "columnVisible",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "FieldControlType/Hidden",
						"defaultValue": "false",
						"appliesTo": [
							"columns/#/visible"
						],
						"since": "1.28.1",
						"description": "Defines whether the column is visible.\nThe SmartTable control interprets the <code>EnumMember</code> <code>FieldControlType/Hidden</code> of the <code>FieldControl</code> annotation for setting the visibility.\nIf a <code>Property</code> is set to hidden in OData annotation, then the SmartTable control ignores processing this <code>Property</code>.\n\n<b>Note:</b> Currently only <code>FieldControlType/Hidden</code> is supported for statically hiding the columns.\n\n<i>XML Example of OData V4 with Hidden Customer and CompanyCode Properties</i>\n<pre>\n   &lt;Property Name=\"Customer\"&gt;\n     &lt;Annotation Term=\"UI.FieldControlType/Hidden\"/&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CompanyCode\"&gt;\n     &lt;Annotation Term=\"UI.FieldControlTpye/Hidden\"/&gt;\n   &lt;/Property&gt;\n</pre>\n\nFor OData v2 the <code>sap:visible</code> annotation on the <code>Property</code> can be used to assign visibility.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:visible=\"false\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:visible=\"false\"/&gt;\n</pre>"
					},
					{
						"name": "columnCurrencyCode",
						"namespace": "Org.OData.Measures.V1",
						"target": [
							"Property"
						],
						"annotation": "ISOCurrency",
						"defaultValue": "null",
						"appliesTo": [
							"columns/#/cellContent"
						],
						"since": "1.28.1",
						"description": "Defines a currency code for an amount according to the ISO 4217 standard.\n<code>ISOCurrency</code> annotation can point to a <code>Property</code>, which can also be <code>null</code>.\n\n<i>XML Example of OData V4 with CurrencyCode Associated to Price Property</i>\n<pre>\n   &lt;Property Name=\"Price\"&gt;\n      &lt;Annotation Term=\"Measures.ISOCurrency\" Path=\"CurrencyCode\" /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CurrencyCode\" type=\"Edm.String\" /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"currency-code\"</code> along with <code>sap:unit</code> annotations on the <code>Property</code> can be used to assign a currency code to the field.\n<pre>\n   &lt;Property Name=\"Price\" ... sap:ubit=\"CurrencyCode\"/&gt;\n   &lt;Property Name=\"CurrencyCode\" ... sap:semantics=\"currency-code\"/&gt;\n</pre>"
					},
					{
						"name": "columnUnitOfMeasure",
						"namespace": "Org.OData.Measures.V1",
						"target": [
							"Property"
						],
						"annotation": "Unit",
						"defaultValue": "null",
						"appliesTo": [
							"columns/#/cellContent"
						],
						"since": "1.28.1",
						"description": "The unit of measure for a measured quantity, for example, cm for centimeters.\nRenders the value associated with the unit annotation of a <code>Property</code>, which can be <code>null</code>.\n\n<i>XML Example of OData V4 with OrderedUnit Associated to OrderedQuantity Property</i>\n<pre>\n  &lt;Property Name=\"OrderedQuantity\"&gt;\n    &lt;Annotation Term=\"Measures.Unit\" Path=\"OrderedUnit\" /&gt;\n  &lt;/Property&gt;\n  &lt;Property Name=\"OrderedUnit\" type=\"Edm.String\" /&gt;\n</pre>\n\nFor OData v2 the <code>sap:semantics=\"unit-of-measure\"</code> along with <code>sap:unit</code> annotations on the <code>Property</code> can be used to assign unit of measure to the field.\n<pre>\n   &lt;Property Name=\"OrderedQuantity\" ... sap:unit=\"OrderedUnit\"/&gt;\n   &lt;Property Name=\"OrderedUnit\" ... sap:semantics=\"unit-of-measure\"/&gt;\n</pre>"
					},
					{
						"name": "columnUpperCase",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property",
							"Parameter"
						],
						"annotation": "IsUpperCase",
						"defaultValue": "true",
						"appliesTo": [
							"columns/#",
							"columns/#/cellContent"
						],
						"since": "1.28.1",
						"description": "Defines whether a string is capitalized.\n\n<i>XML Example of OData V4 with Capitalized Customer and CompanyCode Properties</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.IsUpperCase\"&gt;\n       &lt;Collection&gt;\n          &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n          &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>\n\nFor OData v2 the <code>sap:display-format=\"UpperCase\"</code> annotation on the <code>Property</code> can be used to render the text in upper case format.\n<pre>\n   &lt;Property Name=\"Customer\" ... sap:display-format=\"UpperCase\"/&gt;\n   &lt;Property Name=\"CompanyCode\" ... sap:display-format=\"UpperCase\"/&gt;\n</pre>"
					},
					{
						"name": "lineItem",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntityType"
						],
						"annotation": "LineItem",
						"defaultValue": "null",
						"appliesTo": [
							"columns"
						],
						"since": "1.28.1",
						"description": "Renders the initial columns for the SmartTable control.\n\n<i>XML Example of OData V4 Customer and CompanyCode Properties as LineItem</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.LineItem\"&gt;\n       &lt;Collection&gt;\n         &lt;Record&gt;\n            &lt;PropertyValue Property=\"Value\" Path=\"Customer\" /&gt;\n            &lt;PropertyValue Property=\"Value\" Path=\"CompanyCode\" /&gt;\n          &lt;/Record&gt;\n       &lt;/Collection&gt;\n   &lt;/Annotation&gt;\n</pre>"
					},
					{
						"name": "presentationVariant",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"EntitySet",
							"EntityType"
						],
						"annotation": "PresentationVariant",
						"defaultValue": "null",
						"appliesTo": [
							"columns"
						],
						"since": "1.28.1",
						"description": "Renders the initial columns for the SmartTable control.\nA <code>PropertyPath</code> and an <code>AnnotationPath</code> can be used for constructing PresentationVariant annotation.\n\n<i>XML Example of OData V4 with Customer and CompanyCode Properties as PresentationVariant</i>\n<pre>\n   &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.PresentationVariant\"&gt;\n     &lt;Record&gt;\n       &lt;PropertyValue Property=\"Visualizations\"&gt;\n         &lt;Collection&gt;\n           &lt;AnnotationPath&gt;@UI.LineItem&lt;/AnnotationPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n       &lt;PropertyValue Property=\"RequestAtLeast\"&gt;\n         &lt;Collection&gt;\n           &lt;PropertyPath&gt;Customer&lt;/PropertyPath&gt;\n           &lt;PropertyPath&gt;CompanyCode&lt;/PropertyPath&gt;\n         &lt;/Collection&gt;\n       &lt;/PropertyValue&gt;\n         &lt;PropertyValue Property=\"SortOrder\"&gt;\n           &lt;Collection&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=\"Property\" PropertyPath=\"CompanyCode\"/&gt;\n               &lt;PropertyValue Property=\"Descending\" Bool=\"true\"/&gt;\n             &lt;/Record&gt;\n             &lt;Record&gt;\n               &lt;PropertyValue Property=\"Property\" PropertyPath=\"Customer\"/&gt;\n             &lt;/Record&gt;\n           &lt;/Collection&gt;\n         &lt;/PropertyValue&gt;\n       &lt;/Record&gt;\n     &lt;/Annotation&gt;\n</pre>"
					},
					{
						"name": "columnImportance",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"Record",
							"Annotation"
						],
						"annotation": "Importance",
						"defaultValue": "null",
						"appliesTo": [
							"columns/#/visible"
						],
						"since": "1.28.1",
						"description": "Shows columns with priority high on phones, with priority medium or high on tablets, and with all priorities on the desktop.\n\n<b>Note:</b> Currently the <code>Importance</code> annotation is only evaluated in the <code>LineItem DataField</code> annotation.\n\n<i>XML Example of OData V4 with the Importance Annotation</i>\n<pre>\n   &lt;Property Name=\"Customer\"&gt;\n     &lt;Annotation Term=\"UI.Importance\" EnumMember=\"UI.ImportanceType/High\" /&gt;\n   &lt;/Property&gt;\n   &lt;Property Name=\"CompanyCode\"&gt;\n     &lt;Annotation Term=\"UI.Importance\" EnumMember=\"UI.ImportanceType/Medium\" /&gt;\n   &lt;/Property&gt;\n</pre>"
					},
					{
						"name": "columnDataFieldWithUrl",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"Record"
						],
						"annotation": "LineItem/DataFieldWithUrl",
						"defaultValue": "null",
						"appliesTo": [
							"columns/cellContent"
						],
						"since": "1.38.1",
						"description": "Renders the value as a URL, if a URL parameter path is present.\nThis annotation must be specified along with the <code>LineItem</code> annotation.\n\n<b>Note:</b> Currently only <code>odata.fillUriTemplate</code> with LabeledElement for filling the URL parameter is support\nin the <code>Apply Function</code>.\n\n<i>XML Example for OData V4 with DataFieldWithUrl Annotation</i>\n<pre>\n   &lt;Record Type=\"com.sap.vocabularies.UI.v1.DataFieldWithUrl\"&gt;\n     &lt;PropertyValue Property=\"Label\" String=\"Link to\"/&gt;\n     &lt;PropertyValue Property=\"Value\" String=\"Google Maps\"/&gt;\n     &lt;PropertyValue Property=\"Url\"&gt;\n       &lt;Apply Function=\"odata.fillUriTemplate\"&gt;\n         &lt;String&gt;https://www.google.de/maps/{city1}/{street},{city2}&lt;/String&gt;\n           &lt;LabeledElement Name=\"street\"&gt;\n             &lt;Path&gt;Address/Street&lt;/Path&gt;\n           &lt;/LabeledElement&gt;\n           &lt;LabeledElement Name=\"city1\"&gt;\n             &lt;Path&gt;Address/City&lt;/Path&gt;\n           &lt;/LabeledElement&gt;\n           &lt;LabeledElement Name=\"city2\"&gt;\n             &lt;Path&gt;Address/City&lt;/Path&gt;\n           &lt;/LabeledElement&gt;\n       &lt;/Apply&gt;\n     &lt;/PropertyValue&gt;\n   &lt;/Record&gt;\n</pre>"
					},
					{
						"name": "columnCriticality",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"PropertyPath"
						],
						"annotation": "CriticalityType",
						"defaultValue": "null",
						"appliesTo": [
							"columns/criticality"
						],
						"since": "1.38.1",
						"description": "Represents the criticality state of the data that is present inside the column.\nThis annotation must be specified along with the <code>LineItem</code> annotation.\nColor coding is also applied to the criticality state based on the provided <code>EnumMember</code>.\n\n<i>XML Example for OData V4 with CriticalityType Annotation</i>\n<pre>\n   &lt;Record Type=\"UI.DataField\"&gt;\n     &lt;PropertyValue Property=\"Criticality\"\n       Path=\"to_StockAvailability/StockAvailability\" /&gt;\n     &lt;PropertyValue Property=\"CriticalityRepresentation\"\n       EnumMember=\"com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon\" /&gt;\n     &lt;PropertyValue Property=\"Value\" Path=\"to_StockAvailability/StockAvailability\" /&gt;\n   &lt;/Record&gt;\n</pre>"
					},
					{
						"name": "columnCriticalityRepresentationType",
						"namespace": "com.sap.vocabularies.UI.v1",
						"target": [
							"Property"
						],
						"annotation": "CriticalityRepresentationType/WithoutIcon",
						"defaultValue": "null",
						"appliesTo": [
							"columns/criticalityIcon"
						],
						"since": "1.38.1",
						"description": "Determines if criticality is visualized by means of an icon.\nThe <code>CriticalityRepresentation</code> contains <code>EnumMember</code> that can be used to control the visibility of the icon.\nAn icon is added along with the criticality state by default.\nIf <code>PropertyPath</code> is to be excluded from having an icon,\nthen <code>PropertyPath</code> must be annotated with the <code>CriticalityRepresentationType/WithoutIcon</code> annotation.\n\n<i>XML Example for OData V4 with CriticalityRepresentationType/WithoutIcon Annotation</i>\n<pre>\n   &lt;Record Type=\"UI.DataField\"&gt;\n     &lt;PropertyValue Property=\"Criticality\"\n       Path=\"to_StockAvailability/StockAvailability\" /&gt;\n     &lt;PropertyValue Property=\"CriticalityRepresentation\"\n       EnumMember=\"com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon\" /&gt;\n     &lt;PropertyValue Property=\"Value\" Path=\"to_StockAvailability/StockAvailability\" /&gt;\n   &lt;/Record&gt;\n</pre>"
					},
					{
						"name": "semanticKey",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"EntityType"
						],
						"annotation": "SemanticKey",
						"defaultValue": "null",
						"appliesTo": [
							"columns/cellContent"
						],
						"since": "1.38.1",
						"description": "Defines whether a property is a semantic key which is used for key columns (rendering sap.m.ObjectIdentifier).\n\n<i>XML Example of OData V4 with SemanticKey Annotation</i>\n<pre>\n   &lt;Annotations Target=\"SalesOrderType\" xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.SemanticKey\"&gt;\n       &lt;Collection&gt;\n         &lt;PropertyPath&gt;SalesOrderID&lt;/PropertyPath&gt;\n         &lt;PropertyPath&gt;SalesOrderItemID&lt;/PropertyPath&gt;\n       &lt;/Collection&gt;\n     &lt;/Annotation&gt;\n   &lt;/Annotations&gt;\n</pre>"
					},
					{
						"name": "columnIsImageUrl",
						"namespace": "com.sap.vocabularies.Common.v1",
						"target": [
							"Property"
						],
						"annotation": "IsImageUrl",
						"defaultValue": "true",
						"appliesTo": [
							"columns/image"
						],
						"since": "1.38.1",
						"description": "Renders an image in the cell if the annotation is present.\n\n<i>XML Example of OData V4 with the IsImageUrl Annotation</i>\n<pre>\n   &lt;Property Name=\"Product\"&gt;\n     &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.IsImageUrl\" Bool=\"true\" /&gt;\n   &lt;/Property&gt;\n</pre>"
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smarttable/SmartTable.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterVariantApply",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired after a variant has been applied."
				},
				{
					"name": "afterVariantInitialise",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired after variant management in the SmartTable has been initialized."
				},
				{
					"name": "afterVariantSave",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
				},
				{
					"name": "beforeRebindTable",
					"visibility": "public",
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired just before the binding is being done."
				},
				{
					"name": "dataReceived",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself."
				},
				{
					"name": "editToggled",
					"visibility": "public",
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired when display/edit button is clicked."
				},
				{
					"name": "fieldChange",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired when an editable field, created internally by the SmartTable control, is changed."
				},
				{
					"name": "initialise",
					"visibility": "public",
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired once the control has been initialized."
				},
				{
					"name": "showOverlay",
					"visibility": "public",
					"since": "1.32.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired just before the overlay is being shown."
				}
			],
			"methods": [
				{
					"name": "applyVariant",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVariantJSON",
							"type": "Object",
							"optional": false,
							"description": "the variants json"
						},
						{
							"name": "sContext",
							"type": "string",
							"optional": false,
							"description": "describes the context in which the apply was executed"
						}
					],
					"description": "Interface function for SmartVariantManagment control, sets the current variant"
				},
				{
					"name": "attachAfterVariantApply",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantApply</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired after a variant has been applied."
				},
				{
					"name": "attachAfterVariantInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantInitialise</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired after variant management in the SmartTable has been initialized."
				},
				{
					"name": "attachAfterVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterVariantSave</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
				},
				{
					"name": "attachBeforeRebindTable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeRebindTable</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired just before the binding is being done."
				},
				{
					"name": "attachDataReceived",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>dataReceived</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself."
				},
				{
					"name": "attachEditToggled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>editToggled</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired when display/edit button is clicked."
				},
				{
					"name": "attachFieldChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>fieldChange</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired when an editable field, created internally by the SmartTable control, is changed."
				},
				{
					"name": "attachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialise</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired once the control has been initialized."
				},
				{
					"name": "attachShowOverlay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>showOverlay</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable</code> itself.\n\nEvent fired just before the overlay is being shown."
				},
				{
					"name": "destroyCustomToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"description": "Destroys the customToolbar in the aggregation <code>customToolbar</code>."
				},
				{
					"name": "destroyNoData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"description": "Destroys the noData in the aggregation <code>noData</code>."
				},
				{
					"name": "destroySemanticKeyAdditionalControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"description": "Destroys the semanticKeyAdditionalControl in the aggregation <code>semanticKeyAdditionalControl</code>."
				},
				{
					"name": "destroySemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"description": "Destroys the semanticObjectController in the aggregation <code>semanticObjectController</code>."
				},
				{
					"name": "detachAfterVariantApply",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantApply</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterVariantInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantInitialise</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterVariantSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterVariantSave</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeforeRebindTable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeRebindTable</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachDataReceived",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>dataReceived</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachEditToggled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>editToggled</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFieldChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>fieldChange</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialise</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachShowOverlay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>showOverlay</code> event of this <code>sap.ui.comp.smarttable.SmartTable</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "exit",
					"visibility": "public",
					"description": "Cleans up the control"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smarttable.SmartTable with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.VBox.extend}."
				},
				{
					"name": "fetchVariant",
					"visibility": "public",
					"returnValue": {
						"type": "json",
						"description": "The currently set variant"
					},
					"description": "Interface function for SmartVariantManagment control, returns the current used variant data"
				},
				{
					"name": "fireAfterVariantApply",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterVariantApply</code> to attached listeners."
				},
				{
					"name": "fireAfterVariantInitialise",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterVariantInitialise</code> to attached listeners."
				},
				{
					"name": "fireAfterVariantSave",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterVariantSave</code> to attached listeners."
				},
				{
					"name": "fireBeforeRebindTable",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>beforeRebindTable</code> to attached listeners."
				},
				{
					"name": "fireDataReceived",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>dataReceived</code> to attached listeners."
				},
				{
					"name": "fireEditToggled",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>editToggled</code> to attached listeners."
				},
				{
					"name": "fireFieldChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>fieldChange</code> to attached listeners."
				},
				{
					"name": "fireInitialise",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialise</code> to attached listeners."
				},
				{
					"name": "fireShowOverlay",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>showOverlay</code> to attached listeners."
				},
				{
					"name": "getCurrentVariantId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "id of the currently selected variant"
					},
					"description": "returns the id of the currently selected variant."
				},
				{
					"name": "getCustomToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Toolbar"
					},
					"since": "1.26.0",
					"description": "Gets content of aggregation <code>customToolbar</code>.\n\nA toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartTable\ncontrol does not create an additional toolbar, but makes use of this one."
				},
				{
					"name": "getDemandPopin",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>demandPopin</code>"
					},
					"since": "1.30.0",
					"description": "Gets current value of property <code>demandPopin</code>.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive\ntable\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>editable</code>.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEditTogglable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editTogglable</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>editTogglable</code>.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only\nfor the SmartField scenario)\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableAutoBinding</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>enableAutoBinding</code>.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This\nhappens just after the <code>initialise</code> event has been fired.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEnableCustomFilter",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableCustomFilter</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>enableCustomFilter</code>.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When\npressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>entitySet</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>entitySet</code>.\n\nThe entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property"
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>header</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>header</code>.\n\nSpecifies header text that is shown in table"
				},
				{
					"name": "getIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ignoredFields</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>ignoredFields</code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartTable control.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getIgnoreFromPersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ignoreFromPersonalisation</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>ignoreFromPersonalisation</code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getInitiallyVisibleFields",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>initiallyVisibleFields</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>initiallyVisibleFields</code>.\n\nCSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br>\nThis property is mainly meant to be used when no LineItem annotation exists.<br>\nIf you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and\nfinally based on this property.<br>\n<i>Note:</i><br>\nIf both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smarttable.SmartTable."
				},
				{
					"name": "getNoData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control|string"
					},
					"since": "1.32.0",
					"description": "Gets content of aggregation <code>noData</code>.\n\nThe value for the noData aggregation can be either a string value or a control instance.<br>\nThe control is shown, in case there is no data for the Table available. In case of a string value this will simply replace the no\ndata text.<br>\nCurrently the Responsive Table only supports string values."
				},
				{
					"name": "getPersistencyKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>persistencyKey</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>persistencyKey</code>.\n\nKey used to access personalization data."
				},
				{
					"name": "getRequestAtLeastFields",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>requestAtLeastFields</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>requestAtLeastFields</code>.\n\nCSV of fields that must be always requested from the backend<br>\nThis property is mainly meant to be used when there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<i>Note:</i><br>\nThis property has no effect when AnalyticalTable is used.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters."
				},
				{
					"name": "getSemanticKeyAdditionalControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"since": "1.38.0",
					"description": "Gets content of aggregation <code>semanticKeyAdditionalControl</code>.\n\nAllows users to specify an additional control that will be added to a VBox for the first semantic key field.<br>\n<i>Note:</i><br>\nThis property is not meant for public use."
				},
				{
					"name": "getSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.navpopover.SemanticObjectController"
					},
					"since": "1.28.0",
					"description": "Gets content of aggregation <code>semanticObjectController</code>.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation."
				},
				{
					"name": "getShowFullScreenButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showFullScreenButton</code>"
					},
					"since": "1.38",
					"description": "Gets current value of property <code>showFullScreenButton</code>.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowRowCount",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showRowCount</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>showRowCount</code>.\n\nIf the showRowCount attribute is set to true number of rows is shown along with the header text.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowTablePersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showTablePersonalisation</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>showTablePersonalisation</code>.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation\nbutton.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showVariantManagement</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>showVariantManagement</code>.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSmartFilterId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>smartFilterId</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>smartFilterId</code>.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest\nparent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc."
				},
				{
					"name": "getSmartVariant",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"since": "1.38",
					"description": "ID of the element which is the current target of the association <code>smartVariant</code>, or <code>null</code>."
				},
				{
					"name": "getTable",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the table"
					},
					"description": "returns the internally used table object"
				},
				{
					"name": "getTableBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>tableBindingPath</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>tableBindingPath</code>.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet\nattribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)"
				},
				{
					"name": "getTableType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.TableType",
						"description": "Value of property <code>tableType</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>tableType</code>.\n\nSpecifies the type of table to be created in the SmartTable control.<br>\n<i>Note:</i><br>\nIf you add a table to the content of the SmartTable in the view, this property has no effect."
				},
				{
					"name": "getToolbarStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>toolbarStyleClass</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>toolbarStyleClass</code>.\n\nA style class which is defined for the toolbar of the table."
				},
				{
					"name": "getUseExportToExcel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useExportToExcel</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>useExportToExcel</code>.\n\nCan be set to true or false depending on whether you want to export data to MS Excel®.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUseOnlyOneSolidToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useOnlyOneSolidToolbar</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>useOnlyOneSolidToolbar</code>.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid\nstyle.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.29",
						"text": "This property has no effect"
					}
				},
				{
					"name": "getUseTablePersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useTablePersonalisation</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>useTablePersonalisation</code>.\n\nThe useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table\nsettings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUseVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useVariantManagement</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>useVariantManagement</code>.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you\nneed to specify the persistencyKey property.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "rebindTable",
					"visibility": "protected",
					"parameters": [
						{
							"name": "bForceRebind",
							"type": "boolean",
							"optional": false,
							"description": "force bind call to be triggered on the inner table"
						}
					],
					"description": "This can be used to trigger binding on the table used in the SmartTable"
				},
				{
					"name": "setCurrentVariantId",
					"visibility": "public",
					"parameters": [
						{
							"name": "sVariantId",
							"type": "string",
							"optional": false,
							"description": "id of the currently selected variant"
						}
					],
					"description": "Set the current variant according to the sVariantId. In case an empty string or null or undefined was passed the STANDARD will be set. STANDARD\nwill also be set, in case the passed sVariantId could not be found. In case neither a flexibility variant, nor the content for the standard\nvariant could not be obtained, nor the personalisable control obtained nothing will be executed/changed"
				},
				{
					"name": "setCustomToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oCustomToolbar",
							"type": "sap.m.Toolbar",
							"optional": false,
							"description": "The customToolbar to set"
						}
					],
					"description": "Sets the aggregated <code>customToolbar</code>."
				},
				{
					"name": "setDemandPopin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "bDemandPopin",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>demandPopin</code>"
						}
					],
					"description": "Sets a new value for property <code>demandPopin</code>.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive\ntable\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEditTogglable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bEditTogglable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editTogglable</code>"
						}
					],
					"description": "Sets a new value for property <code>editTogglable</code>.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only\nfor the SmartField scenario)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEnableAutoBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bEnableAutoBinding",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableAutoBinding</code>"
						}
					],
					"description": "Sets a new value for property <code>enableAutoBinding</code>.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This\nhappens just after the <code>initialise</code> event has been fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEnableCustomFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bEnableCustomFilter",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableCustomFilter</code>"
						}
					],
					"description": "Sets a new value for property <code>enableCustomFilter</code>.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When\npressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"parameters": [
						{
							"name": "sEntitySetName",
							"type": "string",
							"optional": false,
							"description": "The entity set"
						}
					],
					"description": "The entity set name from OData metadata, with which the table should be bound to"
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sHeader",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>header</code>"
						}
					],
					"description": "Sets a new value for property <code>header</code>.\n\nSpecifies header text that is shown in table\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoredFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sIgnoredFields",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ignoredFields</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoredFields</code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartTable control.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIgnoreFromPersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sIgnoreFromPersonalisation",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ignoreFromPersonalisation</code>"
						}
					],
					"description": "Sets a new value for property <code>ignoreFromPersonalisation</code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<i>Note:</i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setInitiallyVisibleFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sInitiallyVisibleFields",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>initiallyVisibleFields</code>"
						}
					],
					"description": "Sets a new value for property <code>initiallyVisibleFields</code>.\n\nCSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br>\nThis property is mainly meant to be used when no LineItem annotation exists.<br>\nIf you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and\nfinally based on this property.<br>\n<i>Note:</i><br>\nIf both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setNoData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "vNoData",
							"type": "sap.ui.core.Control|string",
							"optional": false,
							"description": "The noData to set"
						}
					],
					"description": "Sets the aggregated <code>noData</code>."
				},
				{
					"name": "setPersistencyKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sPersistencyKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>persistencyKey</code>"
						}
					],
					"description": "Sets a new value for property <code>persistencyKey</code>.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRequestAtLeastFields",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sRequestAtLeastFields",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>requestAtLeastFields</code>"
						}
					],
					"description": "Sets a new value for property <code>requestAtLeastFields</code>.\n\nCSV of fields that must be always requested from the backend<br>\nThis property is mainly meant to be used when there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<i>Note:</i><br>\nThis property has no effect when AnalyticalTable is used.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSemanticKeyAdditionalControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oSemanticKeyAdditionalControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The semanticKeyAdditionalControl to set"
						}
					],
					"description": "Sets the aggregated <code>semanticKeyAdditionalControl</code>."
				},
				{
					"name": "setSemanticObjectController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oSemanticObjectController",
							"type": "sap.ui.comp.navpopover.SemanticObjectController",
							"optional": false,
							"description": "The semanticObjectController to set"
						}
					],
					"description": "Sets the aggregated <code>semanticObjectController</code>."
				},
				{
					"name": "setShowFullScreenButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "bShowFullScreenButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showFullScreenButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showFullScreenButton</code>.\n\nControls the visibility of the FullScreen button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowRowCount",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bShowRowCount",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showRowCount</code>"
						}
					],
					"description": "Sets a new value for property <code>showRowCount</code>.\n\nIf the showRowCount attribute is set to true number of rows is shown along with the header text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowTablePersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bShowTablePersonalisation",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showTablePersonalisation</code>"
						}
					],
					"description": "Sets a new value for property <code>showTablePersonalisation</code>.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation\nbutton.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bShowVariantManagement",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showVariantManagement</code>"
						}
					],
					"description": "Sets a new value for property <code>showVariantManagement</code>.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSmartFilterId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sSmartFilterId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>smartFilterId</code>"
						}
					],
					"description": "Sets a new value for property <code>smartFilterId</code>.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest\nparent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSmartVariant",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "oSmartVariant",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>smartVariant</code>."
				},
				{
					"name": "setTableBindingPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sTableBindingPath",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>tableBindingPath</code>"
						}
					],
					"description": "Sets a new value for property <code>tableBindingPath</code>.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet\nattribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTableType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sTableType",
							"type": "sap.ui.comp.smarttable.TableType",
							"optional": false,
							"description": "New value for property <code>tableType</code>"
						}
					],
					"description": "Sets a new value for property <code>tableType</code>.\n\nSpecifies the type of table to be created in the SmartTable control.<br>\n<i>Note:</i><br>\nIf you add a table to the content of the SmartTable in the view, this property has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setToolbarStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sToolbarStyleClass",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>toolbarStyleClass</code>"
						}
					],
					"description": "Sets a new value for property <code>toolbarStyleClass</code>.\n\nA style class which is defined for the toolbar of the table.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUseExportToExcel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bUseExportToExcel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useExportToExcel</code>"
						}
					],
					"description": "Sets a new value for property <code>useExportToExcel</code>.\n\nCan be set to true or false depending on whether you want to export data to MS Excel®.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUseOnlyOneSolidToolbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bUseOnlyOneSolidToolbar",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useOnlyOneSolidToolbar</code>"
						}
					],
					"description": "Sets a new value for property <code>useOnlyOneSolidToolbar</code>.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid\nstyle.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.29",
						"text": "This property has no effect"
					}
				},
				{
					"name": "setUseTablePersonalisation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bUseTablePersonalisation",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useTablePersonalisation</code>"
						}
					],
					"description": "Sets a new value for property <code>useTablePersonalisation</code>.\n\nThe useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table\nsettings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUseVariantManagement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smarttable.SmartTable",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bUseVariantManagement",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useVariantManagement</code>"
						}
					],
					"description": "Sets a new value for property <code>useVariantManagement</code>.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you\nneed to specify the persistencyKey property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "updateTableHeaderState",
					"visibility": "public",
					"description": "This can be called once data is received to update table header (count) and toolbar buttons(e.g. Excel Export) enabled state"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.smarttable.TableType",
			"basename": "TableType",
			"resource": "sap/ui/comp/library.js",
			"module": "sap/ui/comp/library",
			"static": true,
			"visibility": "public",
			"description": "Provides enumeration sap.ui.comp.smarttable.TableType A subset of table types that fit to a simple API returning one string.",
			"properties": [
				{
					"name": "AnalyticalTable",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "An analytical table (sap.ui.table.AnalyticalTable) control shall be created as the content of the SmartTable, if no table already exists"
				},
				{
					"name": "ResponsiveTable",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A responsive table (sap.m.Table) control that can be used on mobile devices shall be created as the content of the SmartTable, if no table\nalready exists"
				},
				{
					"name": "Table",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A table (sap.ui.table.Table) control shall be created as the content of the SmartTable, if no table already exists (default)"
				},
				{
					"name": "TreeTable",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A tree table (sap.ui.table.TreeTable) control shall be created as the content of the SmartTable, if no table already exists (TODO)"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartvariants.PersonalizableInfo",
			"basename": "PersonalizableInfo",
			"resource": "sap/ui/comp/smartvariants/PersonalizableInfo.js",
			"module": "sap/ui/comp/smartvariants/PersonalizableInfo",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The PersonalizableInfo class describes the personalizable control associated with the SmartVariantManagement control.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "type",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Describes the type of variant management.",
						"methods": [
							"getType",
							"setType"
						]
					},
					{
						"name": "dataSource",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Name of the data service",
						"methods": [
							"getDataSource",
							"setDataSource"
						]
					},
					{
						"name": "keyName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the property name of the personalization key.",
						"methods": [
							"getKeyName",
							"setKeyName"
						]
					}
				],
				"associations": [
					{
						"name": "control",
						"singularName": "control",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Contains the control that can be personalized.",
						"methods": [
							"getControl",
							"setControl"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new smartvariants/PersonalizableInfo.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartvariants.PersonalizableInfo with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>control</code>, or <code>null</code>."
				},
				{
					"name": "getDataSource",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>dataSource</code>"
					},
					"description": "Gets current value of property <code>dataSource</code>.\n\nName of the data service"
				},
				{
					"name": "getKeyName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>keyName</code>"
					},
					"description": "Gets current value of property <code>keyName</code>.\n\nDefines the property name of the personalization key."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartvariants.PersonalizableInfo."
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>type</code>"
					},
					"description": "Gets current value of property <code>type</code>.\n\nDescribes the type of variant management."
				},
				{
					"name": "setControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this control association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>control</code>."
				},
				{
					"name": "setDataSource",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDataSource",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>dataSource</code>"
						}
					],
					"description": "Sets a new value for property <code>dataSource</code>.\n\nName of the data service\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setKeyName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKeyName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>keyName</code>"
						}
					],
					"description": "Sets a new value for property <code>keyName</code>.\n\nDefines the property name of the personalization key.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>type</code>"
						}
					],
					"description": "Sets a new value for property <code>type</code>.\n\nDescribes the type of variant management.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartvariants.SmartVariantManagement",
			"basename": "SmartVariantManagement",
			"resource": "sap/ui/comp/smartvariants/SmartVariantManagement.js",
			"module": "sap/ui/comp/smartvariants/SmartVariantManagement",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.comp.variants.VariantManagement",
			"description": "The SmartVariantManagement control is a specialization of the {@link sap.ui.comp.variants.VariantManagement VariantManagement} control\n       and communicates with the layer that offers SAPUI5 flexibility services to manage the variants.<br>\n       For more information about SAPUI5 flexibility, refer to the Developer Guide.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "persistencyKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Key used to access personalization data.",
						"methods": [
							"getPersistencyKey",
							"setPersistencyKey"
						]
					}
				],
				"aggregations": [
					{
						"name": "personalizableControls",
						"singularName": "personalizableControl",
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "All controls that rely on variant handling have to be added to this aggregation.",
						"methods": [
							"getPersonalizableControls",
							"destroyPersonalizableControls",
							"insertPersonalizableControl",
							"addPersonalizableControl",
							"removePersonalizableControl",
							"indexOfPersonalizableControl",
							"removeAllPersonalizableControls"
						]
					}
				],
				"events": [
					{
						"name": "initialise",
						"visibility": "public",
						"description": "This event is fired when the SmartVariantManagement control is initialized.",
						"deprecated": {
							"since": "1.38.0",
							"text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
						},
						"methods": [
							"attachInitialise",
							"detachInitialise",
							"fireInitialise"
						]
					},
					{
						"name": "afterSave",
						"visibility": "public",
						"description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.",
						"methods": [
							"attachAfterSave",
							"detachAfterSave",
							"fireAfterSave"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new SmartVariantManagement.<br>\nThe call sequence is as follows:<br>\nA control for which personalization is used has to be registered first via the <code>personalizableControls</code> association. Then it has\nto call the <code>initialise</code> method with the arguments <code>fCallback</code> function which will be called once the personalization\ndata has been retrieved and <code>oPersoControl</code>, the control itself.<BR>\n<b>Note:</b> the function callback has to be defined in the personalizable control.<BR>\nThe old behavior, where the control has to register to the <code>initialise</code> event, before the <code>initialise</code> method call,\nshould not be used any longer and is not supported at all for the page variant scenarios.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
				},
				{
					"name": "initialise",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when the SmartVariantManagement control is initialized.",
					"deprecated": {
						"since": "1.38.0",
						"text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
					}
				}
			],
			"methods": [
				{
					"name": "addPersonalizableControl",
					"visibility": "public",
					"parameters": [
						{
							"name": "oCurrentControlInfo",
							"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
							"optional": false,
							"description": "Provides information about the personalizable control."
						}
					],
					"description": "Registers all controls interested and relying on variant handling."
				},
				{
					"name": "attachAfterSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterSave</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant."
				},
				{
					"name": "attachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialise</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code> itself.\n\nThis event is fired when the SmartVariantManagement control is initialized.",
					"deprecated": {
						"since": "1.38.0",
						"text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
					}
				},
				{
					"name": "destroyPersonalizableControls",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the personalizableControls in the aggregation <code>personalizableControls</code>."
				},
				{
					"name": "detachAfterSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterSave</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialise</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration.",
					"deprecated": {
						"since": "1.38.0",
						"text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
					}
				},
				{
					"name": "exit",
					"visibility": "public",
					"description": "Destroys the control."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagement with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}."
				},
				{
					"name": "fireAfterSave",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterSave</code> to attached listeners."
				},
				{
					"name": "fireInitialise",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialise</code> to attached listeners.",
					"deprecated": {
						"since": "1.38.0",
						"text": "Replaced by providing the personalizable control and the callback via the <code>initialise</code>-method."
					}
				},
				{
					"name": "fireManage",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVariantInfo",
							"type": "object",
							"optional": false,
							"description": "Describes the variants that will be deleted/renamed"
						}
					],
					"description": "Eventhandler for the manage event of the VariantManagement control. Raises the base class event for spacial handlings like save tile."
				},
				{
					"name": "fireSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVariantInfo",
							"type": "object",
							"optional": false,
							"description": "Describes the variant to be saved"
						}
					],
					"description": "Eventhandler for the save event of the VariantManagement control."
				},
				{
					"name": "fireSelect",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVariantInfo",
							"type": "object",
							"optional": false,
							"description": "Describes the selected variant"
						}
					],
					"description": "Eventhandler for the select event of the VariantManagement control."
				},
				{
					"name": "getCurrentVariantId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Current variant ID"
					},
					"since": "1.28.1",
					"description": "Retrieves the current variant ID. For a standard variant, an empty string is returned."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagement."
				},
				{
					"name": "getPersistencyKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>persistencyKey</code>"
					},
					"description": "Gets current value of property <code>persistencyKey</code>.\n\nKey used to access personalization data."
				},
				{
					"name": "getPersonalizableControls",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo[]"
					},
					"description": "Gets content of aggregation <code>personalizableControls</code>.\n\nAll controls that rely on variant handling have to be added to this aggregation."
				},
				{
					"name": "getStandardVariant",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "The standard variant."
					},
					"parameters": [
						{
							"name": "oCurrentControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Current personalizable control"
						}
					],
					"description": "Returns the standard variant."
				},
				{
					"name": "getVariantContent",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "JSON Representing the content of the variant"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Current personalizable control"
						},
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "The variant key"
						}
					],
					"description": "Retrieves the variant content."
				},
				{
					"name": "indexOfPersonalizableControl",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oPersonalizableControl",
							"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
							"optional": false,
							"description": "The personalizableControl whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.smartvariants.PersonalizableInfo</code> in the aggregation <code>personalizableControls</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "init",
					"visibility": "public",
					"since": "1.26.1",
					"description": "control initialization"
				},
				{
					"name": "initialise",
					"visibility": "public",
					"parameters": [
						{
							"name": "fCallback",
							"type": "function",
							"optional": false,
							"description": "Function will be called whenever the data for the personalizable control is received"
						},
						{
							"name": "oPersoControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Current control that can be personalized"
						}
					],
					"description": "Initializes the SAPUI5 layer with the flexibility services by retrieving the list of variants. Once the initialization has been completed, the\ncontrol for personalization is informed via the initialise event."
				},
				{
					"name": "insertPersonalizableControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPersonalizableControl",
							"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
							"optional": false,
							"description": "the personalizableControl to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the personalizableControl should be inserted at; for\n             a negative value of <code>iIndex</code>, the personalizableControl is inserted at position 0; for a value\n             greater than the current size of the aggregation, the personalizableControl is inserted at\n             the last position"
						}
					],
					"description": "Inserts a personalizableControl into the aggregation <code>personalizableControls</code>."
				},
				{
					"name": "isPageVariant",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if it is a page variant, otherwise <code>false</code>"
					},
					"description": "Determines if the SmartVariantManagement instance is a page variant."
				},
				{
					"name": "removeAllPersonalizableControls",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>personalizableControls</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removePersonalizableControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
						"description": "The removed personalizableControl or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vPersonalizableControl",
							"type": "int|string|sap.ui.comp.smartvariants.PersonalizableInfo",
							"optional": false,
							"description": "The personalizableControlto remove or its index or id"
						}
					],
					"description": "Removes a personalizableControl from the aggregation <code>personalizableControls</code>."
				},
				{
					"name": "setCurrentVariantId",
					"visibility": "public",
					"since": "1.28.1",
					"parameters": [
						{
							"name": "sVariantKey",
							"type": "string",
							"optional": false,
							"description": "The variant key"
						},
						{
							"name": "bDoNotApplyVariant",
							"type": "boolean",
							"optional": false,
							"description": "If set to <code>true</code>, the <code>applyVariant</code> method is not executed yet. Relevant during\n       navigation, when called before the initialise event has been executed."
						}
					],
					"description": "Sets the current variant ID."
				},
				{
					"name": "setPersistencyKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPersistencyKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>persistencyKey</code>"
						}
					],
					"description": "Sets a new value for property <code>persistencyKey</code>.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
			"basename": "SmartVariantManagementUi2",
			"resource": "sap/ui/comp/smartvariants/SmartVariantManagementUi2.js",
			"module": "sap/ui/comp/smartvariants/SmartVariantManagementUi2",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.comp.variants.VariantManagement",
			"description": "The SmartVariantManagementUi2 control is a specialization of the {@link \"sap.ui.comp.variants.VariantManagement VariantManagement}\n       control and communicates with the Ui2 personalization layer to manage the variants.",
			"ui5-metadata": {
				"stereotype": "control",
				"aggregations": [
					{
						"name": "personalizableControl",
						"singularName": "personalizableControl",
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "All controls that rely on variant handling have to be added to this aggregation. The only consumer currently known is the FilterBar\ncontrol.",
						"methods": [
							"getPersonalizableControl",
							"destroyPersonalizableControl",
							"setPersonalizableControl"
						]
					}
				],
				"events": [
					{
						"name": "initialise",
						"visibility": "public",
						"description": "Once the SmartVariantManagement control has been initialized, and especially after retrieving the variants via the UI2\npersonalization service, the registered consumer will be notified that this phase has completed",
						"methods": [
							"attachInitialise",
							"detachInitialise",
							"fireInitialise"
						]
					},
					{
						"name": "afterSave",
						"visibility": "public",
						"description": "Fired after a variant is saved. This event can be used to retrieve the id of the saved variant.",
						"methods": [
							"attachAfterSave",
							"detachAfterSave",
							"fireAfterSave"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new SmartVariantManagementUi2.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired after a variant is saved. This event can be used to retrieve the id of the saved variant."
				},
				{
					"name": "initialise",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Once the SmartVariantManagement control has been initialized, and especially after retrieving the variants via the UI2\npersonalization service, the registered consumer will be notified that this phase has completed"
				}
			],
			"methods": [
				{
					"name": "addPersonalizableControl",
					"visibility": "public",
					"parameters": [
						{
							"name": "oCurrentControlInfo",
							"type": "sap.ui.comp/smartvariants/PersonalizableInfo",
							"optional": false,
							"description": "control providing the required aggregation for flex-layer"
						}
					],
					"description": "Registers all controls interested and relying on variant handling."
				},
				{
					"name": "attachAfterSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterSave</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself.\n\nFired after a variant is saved. This event can be used to retrieve the id of the saved variant."
				},
				{
					"name": "attachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>initialise</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code> itself.\n\nOnce the SmartVariantManagement control has been initialized, and especially after retrieving the variants via the UI2\npersonalization service, the registered consumer will be notified that this phase has completed"
				},
				{
					"name": "destroyPersonalizableControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the personalizableControl in the aggregation <code>personalizableControl</code>."
				},
				{
					"name": "detachAfterSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterSave</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachInitialise",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>initialise</code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "exit",
					"visibility": "public",
					"description": "Destroys the control."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementUi2 with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}."
				},
				{
					"name": "fireAfterSave",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>afterSave</code> to attached listeners."
				},
				{
					"name": "fireInitialise",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>initialise</code> to attached listeners."
				},
				{
					"name": "getCurrentVariantId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Current variant ID"
					},
					"description": "Retrieves the current variant ID. For a standard variant, an empty string is returned."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementUi2."
				},
				{
					"name": "getPersonalizableControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.PersonalizableInfo"
					},
					"description": "Gets content of aggregation <code>personalizableControl</code>.\n\nAll controls that rely on variant handling have to be added to this aggregation. The only consumer currently known is the FilterBar\ncontrol."
				},
				{
					"name": "getVariantContent",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "json object representing the content of the variant"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "current control"
						},
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "the variant key"
						}
					],
					"description": "Retrieves the variant content."
				},
				{
					"name": "init",
					"visibility": "public",
					"since": "1.28.0",
					"description": "Control initialization."
				},
				{
					"name": "initialise",
					"visibility": "public",
					"description": "Initializes the UI2 personalization layer by retrieving the list of variants. Once the initialization has been completed, the control for\npersonalization is informed via the initialise event."
				},
				{
					"name": "isPageVariant",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "always returns <code>false</code>"
					},
					"description": "Determines if the SmartVariantManagement instance is a page variant."
				},
				{
					"name": "setCurrentVariantId",
					"visibility": "public",
					"parameters": [
						{
							"name": "sVariantId",
							"type": "string",
							"optional": false,
							"description": "ID of the variant"
						},
						{
							"name": "bDoNotApplyVariant",
							"type": "boolean",
							"optional": false,
							"description": "If set to <code>true</code>, the <code>applyVariant</code> method is not executed yet. Relevant during\n       navigation, when called before the initialise event has been executed"
						}
					],
					"description": "Sets the current variant ID."
				},
				{
					"name": "setPersonalizableControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.smartvariants.SmartVariantManagementUi2",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPersonalizableControl",
							"type": "sap.ui.comp.smartvariants.PersonalizableInfo",
							"optional": false,
							"description": "The personalizableControl to set"
						}
					],
					"description": "Sets the aggregated <code>personalizableControl</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.transport.TransportDialog",
			"basename": "TransportDialog",
			"resource": "sap/ui/comp/transport/TransportDialog.js",
			"module": "sap/ui/comp/transport/TransportDialog",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.fl.transport.FlTransportDialog",
			"description": "The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.",
			"deprecated": {},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new transport/TransportDialog."
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
			"basename": "ValueHelpDialog",
			"resource": "sap/ui/comp/valuehelpdialog/ValueHelpDialog.js",
			"module": "sap/ui/comp/valuehelpdialog/ValueHelpDialog",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Dialog",
			"description": "The ValueHelpDialog control can be used to implement a value help for an input field.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "basicSearchText",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Defines the value for the basic search field.\rThe value is set into the basic search field of the filter bar used.",
						"methods": [
							"getBasicSearchText",
							"setBasicSearchText"
						]
					},
					{
						"name": "supportMultiselect",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Enables multi-selection in the table used.",
						"methods": [
							"getSupportMultiselect",
							"setSupportMultiselect"
						]
					},
					{
						"name": "supportRanges",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Enables the ranges (conditions) feature in the dialog.",
						"methods": [
							"getSupportRanges",
							"setSupportRanges"
						]
					},
					{
						"name": "supportRangesOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "If this property is set to true, the value help dialog only supports the ranges (conditions) feature.",
						"methods": [
							"getSupportRangesOnly",
							"setSupportRangesOnly"
						]
					},
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Defines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "keys",
						"type": "string[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Defines the list of additional keys of the column used for the internal key handling.",
						"methods": [
							"getKeys",
							"setKeys"
						]
					},
					{
						"name": "descriptionKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Defines the key of the column used for the token text.",
						"methods": [
							"getDescriptionKey",
							"setDescriptionKey"
						]
					},
					{
						"name": "maxIncludeRanges",
						"type": "string",
						"defaultValue": "-1",
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Defines the maximum number of include ranges.",
						"methods": [
							"getMaxIncludeRanges",
							"setMaxIncludeRanges"
						]
					},
					{
						"name": "maxExcludeRanges",
						"type": "string",
						"defaultValue": "-1",
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Defines the maximum number of exclude ranges.",
						"methods": [
							"getMaxExcludeRanges",
							"setMaxExcludeRanges"
						]
					},
					{
						"name": "displayFormat",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Represents the display format of the range values. With the <code>displayFormat</code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.",
						"methods": [
							"getDisplayFormat",
							"setDisplayFormat"
						]
					},
					{
						"name": "tokenDisplayBehaviour",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Represents how the item token text should be displayed in ValueHelpDialog.\rUse one of the valid sap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR values.",
						"methods": [
							"getTokenDisplayBehaviour",
							"setTokenDisplayBehaviour"
						]
					},
					{
						"name": "filterMode",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24",
						"description": "Sets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.",
						"methods": [
							"getFilterMode",
							"setFilterMode"
						]
					}
				],
				"aggregations": [
					{
						"name": "filterBar",
						"singularName": "filterBar",
						"type": "sap.ui.comp.filterbar.FilterBar",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Allows you to add a {@link sap.ui.comp.filterbar.FilterBar FilterBar} or {@link sap.ui.comp.smartfilterbar.SmartFilterBar SmartFilterBar} control to the value help dialog.",
						"methods": [
							"getFilterBar",
							"destroyFilterBar",
							"setFilterBar"
						]
					}
				],
				"events": [
					{
						"name": "ok",
						"visibility": "public",
						"since": "1.24",
						"description": "This event is fired when the OK button is pressed.",
						"parameters": {
							"tokens": {
								"name": "tokens",
								"type": "sap.m.Token[]",
								"description": "The array of tokens created or modified on the ValueHelpDialog."
							}
						},
						"methods": [
							"attachOk",
							"detachOk",
							"fireOk"
						]
					},
					{
						"name": "cancel",
						"visibility": "public",
						"since": "1.24",
						"description": "This event is fired when the Cancel button is pressed.",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					},
					{
						"name": "selectionChange",
						"visibility": "public",
						"since": "1.32",
						"description": "This event is fired when the user selects an item in the items table.\rThe event will only be raised when the dialog gets a table instance from outside via setTable.",
						"parameters": {
							"tableSelectionParams": {
								"name": "tableSelectionParams",
								"type": "object",
								"description": "The RowSelectionChange event parameter from the hosted table that contains the selected items."
							},
							"updateTokens": {
								"name": "updateTokens",
								"type": "object[]",
								"description": "Returns an array of objects which represents all selected row tokens.\r The object contains the token key, the row object data from the model, and the information if the token is selected.\r <code>\r [{sKey, oRow, bSelect}, ...]\r </code>"
							},
							"useDefault": {
								"name": "useDefault",
								"type": "boolean",
								"description": "Can be set to true to execute the default behaviour of the ValueHelpDialog."
							}
						},
						"methods": [
							"attachSelectionChange",
							"detachSelectionChange",
							"fireSelectionChange"
						]
					},
					{
						"name": "tokenRemove",
						"visibility": "public",
						"since": "1.32",
						"description": "This event is fired when the user removes one or multiple existing token(s) from the dialog.\rThe event will only be raised when the dialog gets a table instance from outside via setTable.",
						"parameters": {
							"tokenKeys": {
								"name": "tokenKeys",
								"type": "string[]",
								"description": "The array of token keys that has been removed."
							},
							"useDefault": {
								"name": "useDefault",
								"type": "boolean",
								"description": "Can be set to true to execute the default behaviour of ValueHelpDialog."
							}
						},
						"methods": [
							"attachTokenRemove",
							"detachTokenRemove",
							"fireTokenRemove"
						]
					},
					{
						"name": "updateSelection",
						"visibility": "public",
						"since": "1.32",
						"description": "This event is fired when the table gets an update and all existing tokens must be selected in the table.\rThe event will only be raised when the dialog gets a table instance from outside via setTable.",
						"parameters": {
							"tokenKeys": {
								"name": "tokenKeys",
								"type": "string[]",
								"description": "The array of existing token keys for which the selection in the table has to be updated."
							},
							"useDefault": {
								"name": "useDefault",
								"type": "boolean",
								"description": "Can be set to true to execute the default behavior of ValueHelpDialog."
							}
						},
						"methods": [
							"attachUpdateSelection",
							"detachUpdateSelection",
							"fireUpdateSelection"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new valuehelpdialog/ValueHelpDialog.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "cancel",
					"visibility": "public",
					"since": "1.24",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when the Cancel button is pressed."
				},
				{
					"name": "ok",
					"visibility": "public",
					"since": "1.24",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"tokens": {
											"name": "tokens",
											"type": "sap.m.Token[]",
											"optional": false,
											"description": "The array of tokens created or modified on the ValueHelpDialog."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the OK button is pressed."
				},
				{
					"name": "selectionChange",
					"visibility": "public",
					"since": "1.32",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"tableSelectionParams": {
											"name": "tableSelectionParams",
											"type": "object",
											"optional": false,
											"description": "The RowSelectionChange event parameter from the hosted table that contains the selected items."
										},
										"updateTokens": {
											"name": "updateTokens",
											"type": "object[]",
											"optional": false,
											"description": "Returns an array of objects which represents all selected row tokens.\n The object contains the token key, the row object data from the model, and the information if the token is selected.\n <code>\n [{sKey, oRow, bSelect}, ...]\n </code>"
										},
										"useDefault": {
											"name": "useDefault",
											"type": "boolean",
											"optional": false,
											"description": "Can be set to true to execute the default behaviour of the ValueHelpDialog."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the user selects an item in the items table.\nThe event will only be raised when the dialog gets a table instance from outside via setTable."
				},
				{
					"name": "tokenRemove",
					"visibility": "public",
					"since": "1.32",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"tokenKeys": {
											"name": "tokenKeys",
											"type": "string[]",
											"optional": false,
											"description": "The array of token keys that has been removed."
										},
										"useDefault": {
											"name": "useDefault",
											"type": "boolean",
											"optional": false,
											"description": "Can be set to true to execute the default behaviour of ValueHelpDialog."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the user removes one or multiple existing token(s) from the dialog.\nThe event will only be raised when the dialog gets a table instance from outside via setTable."
				},
				{
					"name": "updateSelection",
					"visibility": "public",
					"since": "1.32",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"tokenKeys": {
											"name": "tokenKeys",
											"type": "string[]",
											"optional": false,
											"description": "The array of existing token keys for which the selection in the table has to be updated."
										},
										"useDefault": {
											"name": "useDefault",
											"type": "boolean",
											"optional": false,
											"description": "Can be set to true to execute the default behavior of ValueHelpDialog."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the table gets an update and all existing tokens must be selected in the table.\nThe event will only be raised when the dialog gets a table instance from outside via setTable."
				}
			],
			"methods": [
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>cancel</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the Cancel button is pressed."
				},
				{
					"name": "attachOk",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>ok</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the OK button is pressed."
				},
				{
					"name": "attachSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selectionChange</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the user selects an item in the items table.\nThe event will only be raised when the dialog gets a table instance from outside via setTable."
				},
				{
					"name": "attachTokenRemove",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>tokenRemove</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the user removes one or multiple existing token(s) from the dialog.\nThe event will only be raised when the dialog gets a table instance from outside via setTable."
				},
				{
					"name": "attachUpdateSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>updateSelection</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code> itself.\n\nThis event is fired when the table gets an update and all existing tokens must be selected in the table.\nThe event will only be raised when the dialog gets a table instance from outside via setTable."
				},
				{
					"name": "destroyFilterBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the filterBar in the aggregation <code>filterBar</code>."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>cancel</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachOk",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>ok</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selectionChange</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachTokenRemove",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>tokenRemove</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachUpdateSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>updateSelection</code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.valuehelpdialog.ValueHelpDialog with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>cancel</code> to attached listeners."
				},
				{
					"name": "fireOk",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>ok</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tokens</code> of type <code>sap.m.Token[]</code>The array of tokens created or modified on the ValueHelpDialog.</li>\n</ul>"
				},
				{
					"name": "fireSelectionChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selectionChange</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tableSelectionParams</code> of type <code>object</code>The RowSelectionChange event parameter from the hosted table that contains the selected items.</li>\n<li><code>updateTokens</code> of type <code>object[]</code>Returns an array of objects which represents all selected row tokens.\n The object contains the token key, the row object data from the model, and the information if the token is selected.\n <code>\n [{sKey, oRow, bSelect}, ...]\n </code></li>\n<li><code>useDefault</code> of type <code>boolean</code>Can be set to true to execute the default behaviour of the ValueHelpDialog.</li>\n</ul>"
				},
				{
					"name": "fireTokenRemove",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>tokenRemove</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tokenKeys</code> of type <code>string[]</code>The array of token keys that has been removed.</li>\n<li><code>useDefault</code> of type <code>boolean</code>Can be set to true to execute the default behaviour of ValueHelpDialog.</li>\n</ul>"
				},
				{
					"name": "fireUpdateSelection",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>updateSelection</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tokenKeys</code> of type <code>string[]</code>The array of existing token keys for which the selection in the table has to be updated.</li>\n<li><code>useDefault</code> of type <code>boolean</code>Can be set to true to execute the default behavior of ValueHelpDialog.</li>\n</ul>"
				},
				{
					"name": "getBasicSearchText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>basicSearchText</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>basicSearchText</code>.\n\nDefines the value for the basic search field.\nThe value is set into the basic search field of the filter bar used."
				},
				{
					"name": "getDescriptionKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>descriptionKey</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>descriptionKey</code>.\n\nDefines the key of the column used for the token text."
				},
				{
					"name": "getDisplayFormat",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>displayFormat</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>displayFormat</code>.\n\nRepresents the display format of the range values. With the <code>displayFormat</code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters."
				},
				{
					"name": "getFilterBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.filterbar.FilterBar"
					},
					"description": "Gets content of aggregation <code>filterBar</code>.\n\nAllows you to add a {@link sap.ui.comp.filterbar.FilterBar FilterBar} or {@link sap.ui.comp.smartfilterbar.SmartFilterBar SmartFilterBar} control to the value help dialog."
				},
				{
					"name": "getFilterMode",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>filterMode</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>filterMode</code>.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>key</code>.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table."
				},
				{
					"name": "getKeys",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>keys</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>keys</code>.\n\nDefines the list of additional keys of the column used for the internal key handling."
				},
				{
					"name": "getMaxExcludeRanges",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>maxExcludeRanges</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>maxExcludeRanges</code>.\n\nDefines the maximum number of exclude ranges.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "getMaxIncludeRanges",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>maxIncludeRanges</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>maxIncludeRanges</code>.\n\nDefines the maximum number of include ranges.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.valuehelpdialog.ValueHelpDialog."
				},
				{
					"name": "getSupportMultiselect",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>supportMultiselect</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>supportMultiselect</code>.\n\nEnables multi-selection in the table used.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSupportRanges",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>supportRanges</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>supportRanges</code>.\n\nEnables the ranges (conditions) feature in the dialog.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSupportRangesOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>supportRangesOnly</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>supportRangesOnly</code>.\n\nIf this property is set to true, the value help dialog only supports the ranges (conditions) feature.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getTable",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the used table instance"
					},
					"since": "1.28",
					"description": "Gives access to the internal table instance."
				},
				{
					"name": "getTokenDisplayBehaviour",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>tokenDisplayBehaviour</code>"
					},
					"since": "1.24",
					"description": "Gets current value of property <code>tokenDisplayBehaviour</code>.\n\nRepresents how the item token text should be displayed in ValueHelpDialog.\nUse one of the valid sap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR values."
				},
				{
					"name": "setBasicSearchText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sBasicSearchText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>basicSearchText</code>"
						}
					],
					"description": "Sets a new value for property <code>basicSearchText</code>.\n\nDefines the value for the basic search field.\nThe value is set into the basic search field of the filter bar used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDescriptionKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sDescriptionKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>descriptionKey</code>"
						}
					],
					"description": "Sets a new value for property <code>descriptionKey</code>.\n\nDefines the key of the column used for the token text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDisplayFormat",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sDisplayFormat",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>displayFormat</code>"
						}
					],
					"description": "Sets a new value for property <code>displayFormat</code>.\n\nRepresents the display format of the range values. With the <code>displayFormat</code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setExcludeRangeOperations",
					"visibility": "public",
					"since": "1.24",
					"parameters": [
						{
							"name": "aOperation",
							"type": "sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[]",
							"optional": false,
							"description": "An array of range operations"
						},
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the type for which the operations are defined"
						}
					],
					"description": "Sets the array for the supported exclude range operations."
				},
				{
					"name": "setFilterBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilterBar",
							"type": "sap.ui.comp.filterbar.FilterBar",
							"optional": false,
							"description": "The filterBar to set"
						}
					],
					"description": "Sets the aggregated <code>filterBar</code>."
				},
				{
					"name": "setFilterMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "bFilterMode",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>filterMode</code>"
						}
					],
					"description": "Sets a new value for property <code>filterMode</code>.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setIncludeRangeOperations",
					"visibility": "public",
					"since": "1.24",
					"parameters": [
						{
							"name": "aOperation",
							"type": "sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[]",
							"optional": false,
							"description": "An array of range operations"
						},
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the type for which the operations are defined"
						}
					],
					"description": "Sets the array for the supported include range operations."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setKeys",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sKeys",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>keys</code>"
						}
					],
					"description": "Sets a new value for property <code>keys</code>.\n\nDefines the list of additional keys of the column used for the internal key handling.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMaxExcludeRanges",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sMaxExcludeRanges",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>maxExcludeRanges</code>"
						}
					],
					"description": "Sets a new value for property <code>maxExcludeRanges</code>.\n\nDefines the maximum number of exclude ranges.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "setMaxIncludeRanges",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sMaxIncludeRanges",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>maxIncludeRanges</code>"
						}
					],
					"description": "Sets a new value for property <code>maxIncludeRanges</code>.\n\nDefines the maximum number of include ranges.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "setRangeKeyFields",
					"visibility": "public",
					"since": "1.24",
					"parameters": [
						{
							"name": "aRangeKeyFields",
							"type": "object[]",
							"optional": false,
							"description": "An array of range KeyFields <code>[{key: \"CompanyCode\", label: \"ID\"}, {key:\"CompanyName\", label : \"Name\"}]</code>"
						}
					],
					"description": "Sets a RangeKeyFields array.\nThis method allows you to specify the KeyFields for the ranges. You can set an array of objects with Key and Label properties to define the key fields."
				},
				{
					"name": "setSupportMultiselect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "bSupportMultiselect",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>supportMultiselect</code>"
						}
					],
					"description": "Sets a new value for property <code>supportMultiselect</code>.\n\nEnables multi-selection in the table used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSupportRanges",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "bSupportRanges",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>supportRanges</code>"
						}
					],
					"description": "Sets a new value for property <code>supportRanges</code>.\n\nEnables the ranges (conditions) feature in the dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSupportRangesOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "bSupportRangesOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>supportRangesOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>supportRangesOnly</code>.\n\nIf this property is set to true, the value help dialog only supports the ranges (conditions) feature.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setTable",
					"visibility": "public",
					"since": "1.32",
					"parameters": [
						{
							"name": "aTable",
							"type": "object",
							"optional": false,
							"description": "The used table control instance"
						}
					],
					"description": "Sets the table used in the value help dialog. If not used, the dialog creates a sap.ui.table.Table or sap.m.Table instance internally."
				},
				{
					"name": "setTokenDisplayBehaviour",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.valuehelpdialog.ValueHelpDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sTokenDisplayBehaviour",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>tokenDisplayBehaviour</code>"
						}
					],
					"description": "Sets a new value for property <code>tokenDisplayBehaviour</code>.\n\nRepresents how the item token text should be displayed in ValueHelpDialog.\nUse one of the valid sap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTokens",
					"visibility": "public",
					"since": "1.24",
					"parameters": [
						{
							"name": "aTokens",
							"type": "sap.m.Token[]",
							"optional": false,
							"description": "An array of token controls"
						}
					],
					"description": "Sets the array of tokens. The sap.m.Tokens are added to the dialog tokenizer Selected Items or Excluded Items.\nNormal tokens are added to the Selected Items tokenizer only and are selected in the table.\n\n<code>\nnew sap.m.Token({key: \"0001\", text:\"SAP A.G. (0001)\"});\n</code>\n\nTokens with the extra data with value 'range' are handled as range tokens or exclude range tokens.\n\n<code>\nnew sap.m.Token({key: \"i1\", text: \"ID: a..z\"}).data(\"range\", { \"exclude\": false, \"operation\": sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation.BT, \"keyField\": \"CompanyCode\", \"value1\": \"a\", \"value2\": \"z\"});\n</code>\n\nThe selected items or range tokens are returned in the event parameters of the Ok event."
				},
				{
					"name": "update",
					"visibility": "public",
					"since": "1.24",
					"description": "Updates the selection of rows in the table. This function must be called after a first binding or binding update of the table.\nIt will set a table row as selected if a token for this row exists."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation",
			"basename": "ValueHelpRangeOperation",
			"resource": "sap/ui/comp/valuehelpdialog/ValueHelpDialog.js",
			"module": "sap/ui/comp/valuehelpdialog/ValueHelpDialog",
			"static": true,
			"visibility": "public",
			"description": "The range operations supported by the ValueHelpDialog control.",
			"properties": [
				{
					"name": "BT",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Between operation for the ranges."
				},
				{
					"name": "Contains",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Contains operation for the ranges."
				},
				{
					"name": "EndsWith",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The EndsWith operation for the ranges."
				},
				{
					"name": "EQ",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Equals operation for the ranges."
				},
				{
					"name": "GE",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Between or equals operation for the ranges."
				},
				{
					"name": "GT",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Greater operation for the ranges."
				},
				{
					"name": "LE",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Less or equals operation for the ranges."
				},
				{
					"name": "LT",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Less operation for the ranges."
				},
				{
					"name": "StartsWith",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The StartsWith operation for the ranges."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.variants.EditableVariantItem",
			"basename": "EditableVariantItem",
			"resource": "sap/ui/comp/variants/EditableVariantItem.js",
			"module": "sap/ui/comp/variants/EditableVariantItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.ColumnListItem",
			"description": "The EditableVariantItem class describes an editable variant list item for the Manage Variants popup.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.22.0",
						"description": "Key of the List Item",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "global",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Indicator if a variant is visible for all users.",
						"methods": [
							"getGlobal",
							"setGlobal"
						]
					},
					{
						"name": "lifecyclePackage",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "ABAP Package the variant is assigned. Used for transport functionality",
						"methods": [
							"getLifecyclePackage",
							"setLifecyclePackage"
						]
					},
					{
						"name": "lifecycleTransportId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Identifier of the transport object the variant is assigned to.",
						"methods": [
							"getLifecycleTransportId",
							"setLifecycleTransportId"
						]
					},
					{
						"name": "namespace",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Variant namespace",
						"methods": [
							"getNamespace",
							"setNamespace"
						]
					},
					{
						"name": "readOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Indication if variant can be changed",
						"methods": [
							"getReadOnly",
							"setReadOnly"
						]
					},
					{
						"name": "accessOptions",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Flags for a variant to indicate why it might be read-only",
						"deprecated": {
							"since": "1.28.0",
							"text": "Replaced by property <code>labelReadOnly</code>"
						},
						"methods": [
							"getAccessOptions",
							"setAccessOptions"
						]
					},
					{
						"name": "labelReadOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Indicates if the variant label can be changed",
						"methods": [
							"getLabelReadOnly",
							"setLabelReadOnly"
						]
					},
					{
						"name": "author",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Author of the variant",
						"methods": [
							"getAuthor",
							"setAuthor"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new variants/EditableVariantItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.variants.EditableVariantItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.ColumnListItem.extend}."
				},
				{
					"name": "getAccessOptions",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>accessOptions</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>accessOptions</code>.\n\nFlags for a variant to indicate why it might be read-only",
					"deprecated": {
						"since": "1.28.0",
						"text": "Replaced by property <code>labelReadOnly</code>"
					}
				},
				{
					"name": "getAuthor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>author</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>author</code>.\n\nAuthor of the variant"
				},
				{
					"name": "getGlobal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>global</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>global</code>.\n\nIndicator if a variant is visible for all users."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"since": "1.22.0",
					"description": "Gets current value of property <code>key</code>.\n\nKey of the List Item"
				},
				{
					"name": "getLabelReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>labelReadOnly</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>labelReadOnly</code>.\n\nIndicates if the variant label can be changed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLifecyclePackage",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>lifecyclePackage</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>lifecyclePackage</code>.\n\nABAP Package the variant is assigned. Used for transport functionality"
				},
				{
					"name": "getLifecycleTransportId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>lifecycleTransportId</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>lifecycleTransportId</code>.\n\nIdentifier of the transport object the variant is assigned to."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.variants.EditableVariantItem."
				},
				{
					"name": "getNamespace",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>namespace</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>namespace</code>.\n\nVariant namespace"
				},
				{
					"name": "getReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>readOnly</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>readOnly</code>.\n\nIndication if variant can be changed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setAccessOptions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sAccessOptions",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>accessOptions</code>"
						}
					],
					"description": "Sets a new value for property <code>accessOptions</code>.\n\nFlags for a variant to indicate why it might be read-only\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"since": "1.28.0",
						"text": "Replaced by property <code>labelReadOnly</code>"
					}
				},
				{
					"name": "setAuthor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "sAuthor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>author</code>"
						}
					],
					"description": "Sets a new value for property <code>author</code>.\n\nAuthor of the variant\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setGlobal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bGlobal",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>global</code>"
						}
					],
					"description": "Sets a new value for property <code>global</code>.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\n\nKey of the List Item\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabelReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "bLabelReadOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>labelReadOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>labelReadOnly</code>.\n\nIndicates if the variant label can be changed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLifecyclePackage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sLifecyclePackage",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>lifecyclePackage</code>"
						}
					],
					"description": "Sets a new value for property <code>lifecyclePackage</code>.\n\nABAP Package the variant is assigned. Used for transport functionality\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLifecycleTransportId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sLifecycleTransportId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>lifecycleTransportId</code>"
						}
					],
					"description": "Sets a new value for property <code>lifecycleTransportId</code>.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setNamespace",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sNamespace",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>namespace</code>"
						}
					],
					"description": "Sets a new value for property <code>namespace</code>.\n\nVariant namespace\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.EditableVariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bReadOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>readOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>readOnly</code>.\n\nIndication if variant can be changed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.variants.VariantItem",
			"basename": "VariantItem",
			"resource": "sap/ui/comp/variants/VariantItem.js",
			"module": "sap/ui/comp/variants/VariantItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Item",
			"description": "The VariantItem class describes a variant item.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "executeOnSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Attribute for usage in Smart Filter Bar",
						"methods": [
							"getExecuteOnSelection",
							"setExecuteOnSelection"
						]
					},
					{
						"name": "readOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Is the user allowed to change the item's data",
						"methods": [
							"getReadOnly",
							"setReadOnly"
						]
					},
					{
						"name": "lifecycleTransportId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Identifier of the transport object the variant is assigned to.",
						"methods": [
							"getLifecycleTransportId",
							"setLifecycleTransportId"
						]
					},
					{
						"name": "global",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Indicator if a variant is visible for all users.",
						"methods": [
							"getGlobal",
							"setGlobal"
						]
					},
					{
						"name": "lifecyclePackage",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "ABAP package the variant is assigned to. Used for transport functionality.",
						"methods": [
							"getLifecyclePackage",
							"setLifecyclePackage"
						]
					},
					{
						"name": "namespace",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Variant namespace",
						"methods": [
							"getNamespace",
							"setNamespace"
						]
					},
					{
						"name": "accessOptions",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Flags for a variant to indicate why it might be read-only.",
						"deprecated": {
							"since": "1.28.0",
							"text": "Replaced by property <code>labelReadOnly</code>"
						},
						"methods": [
							"getAccessOptions",
							"setAccessOptions"
						]
					},
					{
						"name": "labelReadOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Indicates if the variant title can be changed.",
						"methods": [
							"getLabelReadOnly",
							"setLabelReadOnly"
						]
					},
					{
						"name": "author",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Author of the variant",
						"methods": [
							"getAuthor",
							"setAuthor"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new variants/VariantItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.variants.VariantItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}."
				},
				{
					"name": "getAccessOptions",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>accessOptions</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>accessOptions</code>.\n\nFlags for a variant to indicate why it might be read-only.",
					"deprecated": {
						"since": "1.28.0",
						"text": "Replaced by property <code>labelReadOnly</code>"
					}
				},
				{
					"name": "getAuthor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>author</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>author</code>.\n\nAuthor of the variant"
				},
				{
					"name": "getExecuteOnSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>executeOnSelection</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>executeOnSelection</code>.\n\nAttribute for usage in Smart Filter Bar\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getGlobal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>global</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>global</code>.\n\nIndicator if a variant is visible for all users."
				},
				{
					"name": "getLabelReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>labelReadOnly</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>labelReadOnly</code>.\n\nIndicates if the variant title can be changed.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLifecyclePackage",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>lifecyclePackage</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>lifecyclePackage</code>.\n\nABAP package the variant is assigned to. Used for transport functionality."
				},
				{
					"name": "getLifecycleTransportId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>lifecycleTransportId</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>lifecycleTransportId</code>.\n\nIdentifier of the transport object the variant is assigned to."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.variants.VariantItem."
				},
				{
					"name": "getNamespace",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>namespace</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>namespace</code>.\n\nVariant namespace"
				},
				{
					"name": "getReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>readOnly</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>readOnly</code>.\n\nIs the user allowed to change the item's data\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setAccessOptions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sAccessOptions",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>accessOptions</code>"
						}
					],
					"description": "Sets a new value for property <code>accessOptions</code>.\n\nFlags for a variant to indicate why it might be read-only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"since": "1.28.0",
						"text": "Replaced by property <code>labelReadOnly</code>"
					}
				},
				{
					"name": "setAuthor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "sAuthor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>author</code>"
						}
					],
					"description": "Sets a new value for property <code>author</code>.\n\nAuthor of the variant\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setExecuteOnSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bExecuteOnSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>executeOnSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>executeOnSelection</code>.\n\nAttribute for usage in Smart Filter Bar\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setGlobal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bGlobal",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>global</code>"
						}
					],
					"description": "Sets a new value for property <code>global</code>.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabelReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bLabelReadOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>labelReadOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>labelReadOnly</code>.\n\nIndicates if the variant title can be changed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLifecyclePackage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sLifecyclePackage",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>lifecyclePackage</code>"
						}
					],
					"description": "Sets a new value for property <code>lifecyclePackage</code>.\n\nABAP package the variant is assigned to. Used for transport functionality.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLifecycleTransportId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sLifecycleTransportId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>lifecycleTransportId</code>"
						}
					],
					"description": "Sets a new value for property <code>lifecycleTransportId</code>.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setNamespace",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sNamespace",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>namespace</code>"
						}
					],
					"description": "Sets a new value for property <code>namespace</code>.\n\nVariant namespace\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bReadOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>readOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>readOnly</code>.\n\nIs the user allowed to change the item's data\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.comp.variants.VariantManagement",
			"basename": "VariantManagement",
			"resource": "sap/ui/comp/variants/VariantManagement.js",
			"module": "sap/ui/comp/variants/VariantManagement",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The VariantManagement control can be used to manage variants, such as filter bar variants or table variants.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "initialSelectionKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.22.0",
						"description": "Enables the setting of the initially selected variant.",
						"methods": [
							"getInitialSelectionKey",
							"setInitialSelectionKey"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.22.0",
						"description": "Can be set to true or false depending on whether you want to enable or disable the control.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "defaultVariantKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.22.0",
						"description": "Provides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.",
						"methods": [
							"getDefaultVariantKey",
							"setDefaultVariantKey"
						]
					},
					{
						"name": "selectionKey",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.24.0",
						"description": "The key of the currently selected item. Returns null if the default item list is selected.",
						"methods": [
							"getSelectionKey",
							"setSelectionKey"
						]
					},
					{
						"name": "showCreateTile",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Indicates that a Create Tile is visible in the Create dialog.",
						"deprecated": {
							"since": "1.32.0"
						},
						"methods": [
							"getShowCreateTile",
							"setShowCreateTile"
						]
					},
					{
						"name": "showExecuteOnSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.",
						"methods": [
							"getShowExecuteOnSelection",
							"setShowExecuteOnSelection"
						]
					},
					{
						"name": "showShare",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Indicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other\nusers.",
						"methods": [
							"getShowShare",
							"setShowShare"
						]
					},
					{
						"name": "lifecycleSupport",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Enables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.",
						"methods": [
							"getLifecycleSupport",
							"setLifecycleSupport"
						]
					},
					{
						"name": "standardItemText",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Overwrites the default Standard variant title.",
						"methods": [
							"getStandardItemText",
							"setStandardItemText"
						]
					},
					{
						"name": "industrySolutionMode",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.32.0",
						"description": "If set to<code>true</code>, the scenario is an industry-specific solution. This flag is only used internally in the app variant\nscenarios.",
						"methods": [
							"getIndustrySolutionMode",
							"setIndustrySolutionMode"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.core.Item",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.22.0",
						"description": "Items displayed by the VariantManagement control.",
						"deprecated": {
							"since": "1.26.0",
							"text": "Replaced by association <code>variantItems</code>"
						},
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					},
					{
						"name": "variantItems",
						"singularName": "variantItem",
						"type": "sap.ui.comp.variants.VariantItem",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Variant items displayed by the VariantManagement control.",
						"methods": [
							"getVariantItems",
							"destroyVariantItems",
							"insertVariantItem",
							"addVariantItem",
							"removeVariantItem",
							"indexOfVariantItem",
							"removeAllVariantItems"
						]
					}
				],
				"defaultAggregation": "items",
				"events": [
					{
						"name": "save",
						"visibility": "public",
						"since": "1.22.0",
						"description": "This event is fired when the Save Variant dialog is closed with OK for a variant.",
						"parameters": {
							"name": {
								"name": "name",
								"type": "string",
								"description": "The variant title"
							},
							"overwrite": {
								"name": "overwrite",
								"type": "boolean",
								"description": "Indicates if an existing variant is overwritten or if a new variant is created"
							},
							"key": {
								"name": "key",
								"type": "string",
								"description": "The variant key"
							},
							"exe": {
								"name": "exe",
								"type": "boolean",
								"description": "The Execute on Selection indicator"
							},
							"def": {
								"name": "def",
								"type": "boolean",
								"description": "The default variant indicator"
							},
							"global": {
								"name": "global",
								"type": "boolean",
								"description": "The shared variant indicator"
							},
							"lifecyclePackage": {
								"name": "lifecyclePackage",
								"type": "string",
								"description": "The package name"
							},
							"lifecycleTransportId": {
								"name": "lifecycleTransportId",
								"type": "string",
								"description": "The transport ID"
							}
						},
						"methods": [
							"attachSave",
							"detachSave",
							"fireSave"
						]
					},
					{
						"name": "manage",
						"visibility": "public",
						"since": "1.22.0",
						"description": "This event is fired when users apply changes to variants in the Manage Variants dialog.",
						"parameters": {
							"renamed": {
								"name": "renamed",
								"type": "string[]",
								"description": "List of changed variant keys"
							},
							"deleted": {
								"name": "deleted",
								"type": "string[]",
								"description": "List of deleted variant keys"
							},
							"exe": {
								"name": "exe",
								"type": "object[]",
								"description": "List of variant keys and the associated Execute on Selection indicator"
							},
							"def": {
								"name": "def",
								"type": "boolean",
								"description": "The default variant key"
							}
						},
						"methods": [
							"attachManage",
							"detachManage",
							"fireManage"
						]
					},
					{
						"name": "select",
						"visibility": "public",
						"since": "1.22.0",
						"description": "This event is fired when a new variant is selected.",
						"parameters": {
							"key": {
								"name": "key",
								"type": "string",
								"description": "The variant key"
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new VariantManagement.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "manage",
					"visibility": "public",
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"renamed": {
											"name": "renamed",
											"type": "string[]",
											"optional": false,
											"description": "List of changed variant keys"
										},
										"deleted": {
											"name": "deleted",
											"type": "string[]",
											"optional": false,
											"description": "List of deleted variant keys"
										},
										"exe": {
											"name": "exe",
											"type": "object[]",
											"optional": false,
											"description": "List of variant keys and the associated Execute on Selection indicator"
										},
										"def": {
											"name": "def",
											"type": "boolean",
											"optional": false,
											"description": "The default variant key"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when users apply changes to variants in the Manage Variants dialog."
				},
				{
					"name": "save",
					"visibility": "public",
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The variant title"
										},
										"overwrite": {
											"name": "overwrite",
											"type": "boolean",
											"optional": false,
											"description": "Indicates if an existing variant is overwritten or if a new variant is created"
										},
										"key": {
											"name": "key",
											"type": "string",
											"optional": false,
											"description": "The variant key"
										},
										"exe": {
											"name": "exe",
											"type": "boolean",
											"optional": false,
											"description": "The Execute on Selection indicator"
										},
										"def": {
											"name": "def",
											"type": "boolean",
											"optional": false,
											"description": "The default variant indicator"
										},
										"global": {
											"name": "global",
											"type": "boolean",
											"optional": false,
											"description": "The shared variant indicator"
										},
										"lifecyclePackage": {
											"name": "lifecyclePackage",
											"type": "string",
											"optional": false,
											"description": "The package name"
										},
										"lifecycleTransportId": {
											"name": "lifecycleTransportId",
											"type": "string",
											"optional": false,
											"description": "The transport ID"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the Save Variant dialog is closed with OK for a variant."
				},
				{
					"name": "select",
					"visibility": "public",
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"key": {
											"name": "key",
											"type": "string",
											"optional": false,
											"description": "The variant key"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when a new variant is selected."
				}
			],
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>.",
					"deprecated": {
						"since": "1.26.0",
						"text": "Replaced by association <code>variantItems</code>"
					}
				},
				{
					"name": "addVariantItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oVariantItem",
							"type": "sap.ui.comp.variants.VariantItem",
							"optional": false,
							"description": "the variantItem to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some variantItem to the aggregation <code>variantItems</code>."
				},
				{
					"name": "attachManage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>manage</code> event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement</code> itself.\n\nThis event is fired when users apply changes to variants in the Manage Variants dialog."
				},
				{
					"name": "attachSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>save</code> event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement</code> itself.\n\nThis event is fired when the Save Variant dialog is closed with OK for a variant."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement</code> itself.\n\nThis event is fired when a new variant is selected."
				},
				{
					"name": "clearVariantSelection",
					"visibility": "public",
					"since": "1.22.0",
					"description": "Removes the current variant selection and resets to default value."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"description": "Destroys all the items in the aggregation <code>items</code>.",
					"deprecated": {
						"since": "1.26.0",
						"text": "Replaced by association <code>variantItems</code>"
					}
				},
				{
					"name": "destroyVariantItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"description": "Destroys all the variantItems in the aggregation <code>variantItems</code>."
				},
				{
					"name": "detachManage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>manage</code> event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSave",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>save</code> event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.comp.variants.VariantManagement</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.comp.variants.VariantManagement with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireManage",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>manage</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>renamed</code> of type <code>string[]</code>List of changed variant keys</li>\n<li><code>deleted</code> of type <code>string[]</code>List of deleted variant keys</li>\n<li><code>exe</code> of type <code>object[]</code>List of variant keys and the associated Execute on Selection indicator</li>\n<li><code>def</code> of type <code>boolean</code>The default variant key</li>\n</ul>"
				},
				{
					"name": "fireSave",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>save</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>name</code> of type <code>string</code>The variant title</li>\n<li><code>overwrite</code> of type <code>boolean</code>Indicates if an existing variant is overwritten or if a new variant is created</li>\n<li><code>key</code> of type <code>string</code>The variant key</li>\n<li><code>exe</code> of type <code>boolean</code>The Execute on Selection indicator</li>\n<li><code>def</code> of type <code>boolean</code>The default variant indicator</li>\n<li><code>global</code> of type <code>boolean</code>The shared variant indicator</li>\n<li><code>lifecyclePackage</code> of type <code>string</code>The package name</li>\n<li><code>lifecycleTransportId</code> of type <code>string</code>The transport ID</li>\n</ul>"
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>key</code> of type <code>string</code>The variant key</li>\n</ul>"
				},
				{
					"name": "getDefaultVariantKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>defaultVariantKey</code>"
					},
					"since": "1.22.0",
					"description": "Gets current value of property <code>defaultVariantKey</code>.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"since": "1.22.0",
					"description": "Gets current value of property <code>enabled</code>.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getIndustrySolutionMode",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>industrySolutionMode</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>industrySolutionMode</code>.\n\nIf set to<code>true</code>, the scenario is an industry-specific solution. This flag is only used internally in the app variant\nscenarios.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getInitialSelectionKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>initialSelectionKey</code>"
					},
					"since": "1.22.0",
					"description": "Gets current value of property <code>initialSelectionKey</code>.\n\nEnables the setting of the initially selected variant."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item[]"
					},
					"since": "1.22.0",
					"description": "Gets content of aggregation <code>items</code>.\n\nItems displayed by the VariantManagement control.",
					"deprecated": {
						"since": "1.26.0",
						"text": "Replaced by association <code>variantItems</code>"
					}
				},
				{
					"name": "getLifecycleSupport",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>lifecycleSupport</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>lifecycleSupport</code>.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.comp.variants.VariantManagement."
				},
				{
					"name": "getSelectionKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>selectionKey</code>"
					},
					"since": "1.24.0",
					"description": "Gets current value of property <code>selectionKey</code>.\n\nThe key of the currently selected item. Returns null if the default item list is selected."
				},
				{
					"name": "getShowCreateTile",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showCreateTile</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>showCreateTile</code>.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.32.0"
					}
				},
				{
					"name": "getShowExecuteOnSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showExecuteOnSelection</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>showExecuteOnSelection</code>.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowShare",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showShare</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>showShare</code>.\n\nIndicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other\nusers.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getStandardItemText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>standardItemText</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>standardItemText</code>.\n\nOverwrites the default Standard variant title."
				},
				{
					"name": "getVariantItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem[]"
					},
					"since": "1.26.0",
					"description": "Gets content of aggregation <code>variantItems</code>.\n\nVariant items displayed by the VariantManagement control."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise.",
					"deprecated": {
						"since": "1.26.0",
						"text": "Replaced by association <code>variantItems</code>"
					}
				},
				{
					"name": "indexOfVariantItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oVariantItem",
							"type": "sap.ui.comp.variants.VariantItem",
							"optional": false,
							"description": "The variantItem whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.comp.variants.VariantItem</code> in the aggregation <code>variantItems</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>.",
					"deprecated": {
						"since": "1.26.0",
						"text": "Replaced by association <code>variantItems</code>"
					}
				},
				{
					"name": "insertVariantItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "oVariantItem",
							"type": "sap.ui.comp.variants.VariantItem",
							"optional": false,
							"description": "the variantItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the variantItem should be inserted at; for\n             a negative value of <code>iIndex</code>, the variantItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the variantItem is inserted at\n             the last position"
						}
					],
					"description": "Inserts a variantItem into the aggregation <code>variantItems</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.22.0",
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea.",
					"deprecated": {
						"since": "1.26.0",
						"text": "Replaced by association <code>variantItems</code>"
					}
				},
				{
					"name": "removeAllVariantItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.26.0",
					"description": "Removes all the controls from the aggregation <code>variantItems</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "The removed item or <code>null</code>"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.core.Item",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>.",
					"deprecated": {
						"since": "1.26.0",
						"text": "Replaced by association <code>variantItems</code>"
					}
				},
				{
					"name": "removeVariantItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantItem",
						"description": "The removed variantItem or <code>null</code>"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "vVariantItem",
							"type": "int|string|sap.ui.comp.variants.VariantItem",
							"optional": false,
							"description": "The variantItemto remove or its index or id"
						}
					],
					"description": "Removes a variantItem from the aggregation <code>variantItems</code>."
				},
				{
					"name": "setDefaultVariantKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "sDefaultVariantKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>defaultVariantKey</code>"
						}
					],
					"description": "Sets a new value for property <code>defaultVariantKey</code>.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setIndustrySolutionMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "bIndustrySolutionMode",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>industrySolutionMode</code>"
						}
					],
					"description": "Sets a new value for property <code>industrySolutionMode</code>.\n\nIf set to<code>true</code>, the scenario is an industry-specific solution. This flag is only used internally in the app variant\nscenarios.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setInitialSelectionKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "sInitialSelectionKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>initialSelectionKey</code>"
						}
					],
					"description": "Sets a new value for property <code>initialSelectionKey</code>.\n\nEnables the setting of the initially selected variant.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLifecycleSupport",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bLifecycleSupport",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>lifecycleSupport</code>"
						}
					],
					"description": "Sets a new value for property <code>lifecycleSupport</code>.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSelectionKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "sSelectionKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>selectionKey</code>"
						}
					],
					"description": "Sets a new value for property <code>selectionKey</code>.\n\nThe key of the currently selected item. Returns null if the default item list is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setShowCreateTile",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bShowCreateTile",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showCreateTile</code>"
						}
					],
					"description": "Sets a new value for property <code>showCreateTile</code>.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.32.0"
					}
				},
				{
					"name": "setShowExecuteOnSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bShowExecuteOnSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showExecuteOnSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>showExecuteOnSelection</code>.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowShare",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bShowShare",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showShare</code>"
						}
					],
					"description": "Sets a new value for property <code>showShare</code>.\n\nIndicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other\nusers.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setStandardItemText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.comp.variants.VariantManagement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "sStandardItemText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>standardItemText</code>"
						}
					],
					"description": "Sets a new value for property <code>standardItemText</code>.\n\nOverwrites the default Standard variant title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		}
	]
}