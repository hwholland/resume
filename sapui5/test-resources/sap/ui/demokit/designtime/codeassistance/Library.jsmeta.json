{"!name":"sap.ui.demokit","!version":"1.17.0","!define":{"sap.ui.demokit.FileUploadIntrospector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.FileUploadIntrospector with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.FileUploadIntrospector"},"sap.ui.demokit.UIAreaSubstitute":{"!description":"A substitute for an UIArea that can be embedded in the control tree.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.UIAreaSubstitute.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent Area used for the running sample code","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Element","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.demokit.UIAreaSubstitute","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UIAreaSubstitute with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new UIAreaSubstitute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/demokit/UIAreaSubstitute","!helpDescription":"A substitute for an UIArea that can be embedded in the control tree.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.demokit.UIAreaSubstitute","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.demokit.UIAreaSubstitute"}},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.demokit.HexagonButton":{"!description":"A custom button with a 'hexagon' shape","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.HexagonButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe color of the hexagon\n\nDefault value is <code>blue<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setPosition":{"!description":"Sets a new value for property <code>position<\/code>.\n\nThe position. If set, the button is rendered with an absolute position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPosition: String) -> sap.ui.demokit.HexagonButton","parameters":{"sPosition":"type: string, description: New value for property <code>position<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to display","!static":false,"!category":"function","!type":"fn() -> String"},"getImagePosition":{"!description":"Gets current value of property <code>imagePosition<\/code>.\n\nThe position of the contained image. If not set the image is rendered with a fixed relative position.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to display\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ui.demokit.HexagonButton","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.demokit.HexagonButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.HexagonButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.demokit.HexagonButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhether the button is enabled or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.demokit.HexagonButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new HexagonButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getColor color} : string (default: blue)<\/li>\n<li>{@link #getPosition position} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getImagePosition imagePosition} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getPosition":{"!description":"Gets current value of property <code>position<\/code>.\n\nThe position. If set, the button is rendered with an absolute position.","!static":false,"!category":"function","!type":"fn() -> String"},"setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe color of the hexagon\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>blue<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: String) -> sap.ui.demokit.HexagonButton","parameters":{"sColor":"type: string, description: New value for property <code>color<\/code>"}},"!module":"sap/ui/demokit/HexagonButton","!helpDescription":"A custom button with a 'hexagon' shape","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhether the button is enabled or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setImagePosition":{"!description":"Sets a new value for property <code>imagePosition<\/code>.\n\nThe position of the contained image. If not set the image is rendered with a fixed relative position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sImagePosition: String) -> sap.ui.demokit.HexagonButton","parameters":{"sImagePosition":"type: string, description: New value for property <code>imagePosition<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.demokit.HexagonButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.demokit.HexagonButton<\/code> itself.\n\nFired when the user clicks the hex button","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.HexagonButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.HexagonButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.demokit.CodeSampleContainer":{"!description":"A container for both the source and the runtime results of a CodeSample. By default, only the runtime results are shown. There are additional controls that allow the user to display the source, modify and run it.\n\nThe container provides a sub container that can be used in calls to sap.ui.setRoot() as if it would be a normal UIArea. So the sample code doesn't have to know that it runs in a CodeSample container.","getUiAreaId":{"!description":"Gets current value of property <code>uiAreaId<\/code>.\n\nId of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.CodeSampleContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>apply<\/code> event of this <code>sap.ui.demokit.CodeSampleContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.demokit.CodeSampleContainer<\/code> itself.\n\nFired when the user decides to apply his/her changes to the sample code","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeSampleContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.CodeSampleContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","setScriptElementId":{"!description":"Sets a new value for property <code>scriptElementId<\/code>.\n\nId of the script element that contains the initial sample code for this code sample.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sScriptElementId: String) -> sap.ui.demokit.CodeSampleContainer","parameters":{"sScriptElementId":"type: string, description: New value for property <code>scriptElementId<\/code>"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nA title to be displayed above the code.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.demokit.CodeSampleContainer","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the CodeSample container.\n\nDefault value is <code>90%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the CodeSample container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>90%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeSampleContainer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeSampleContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireApply":{"!description":"Fires event <code>apply<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>code<\/code> of type <code>string<\/code>the current code that will be applied<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.demokit.CodeSampleContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new CodeSampleContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScriptElementId scriptElementId} : string<\/li>\n<li>{@link #getUiAreaId uiAreaId} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSourceVisible sourceVisible} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 90%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:apply apply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nA title to be displayed above the code.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/demokit/CodeSampleContainer","!helpDescription":"A container for both the source and the runtime results of a CodeSample. By default, only the runtime results are shown. There are additional controls that allow the user to display the source, modify and run it.\n\nThe container provides a sub container that can be used in calls to sap.ui.setRoot() as if it would be a normal UIArea. So the sample code doesn't have to know that it runs in a CodeSample container.","getSourceVisible":{"!description":"Gets current value of property <code>sourceVisible<\/code>.\n\nWhether the source code is visible or not.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUiAreaId":{"!description":"Sets a new value for property <code>uiAreaId<\/code>.\n\nId of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUiAreaId: String) -> sap.ui.demokit.CodeSampleContainer","parameters":{"sUiAreaId":"type: string, description: New value for property <code>uiAreaId<\/code>"}},"detachApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>apply<\/code> event of this <code>sap.ui.demokit.CodeSampleContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeSampleContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getScriptElementId":{"!description":"Gets current value of property <code>scriptElementId<\/code>.\n\nId of the script element that contains the initial sample code for this code sample.","!static":false,"!category":"function","!type":"fn() -> String"},"setSourceVisible":{"!description":"Sets a new value for property <code>sourceVisible<\/code>.\n\nWhether the source code is visible or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSourceVisible: Boolean) -> sap.ui.demokit.CodeSampleContainer","parameters":{"bSourceVisible":"type: boolean, description: New value for property <code>sourceVisible<\/code>"}}},"sap.ui.demokit.CodeViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeViewer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.CodeViewer"},"sap.ui":{"!category":"namespace","demokit":"sap.ui.demokit"},"sap.ui.demokit":{"uiAreaId":{"!description":"Id of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.","!category":"enum","!type":"String"},"color":{"!description":"The color of the hexagon","!category":"enum","!type":"String"},"HexagonButton":"sap.ui.demokit.HexagonButton_obj","navigable":{"!description":"Whether type information is navigable. Also see event 'navigate'.","!category":"enum","!type":"Boolean"},"UI5EntityCueCard":"sap.ui.demokit.UI5EntityCueCard_obj","scriptElementId":{"!description":"Id of the script element that contains the initial sample code for this code sample.","!category":"enum","!type":"String"},"itemHeight":{"!description":"The height of a content item. Only px values are allowed.","!category":"enum","!type":"sap.ui.core.CSSSize"},"icon":{"!description":"Icon to display","!category":"enum","!type":"String"},"lineNumbering":{"!description":"Whether the code to have line numbering or not","!category":"enum","!type":"Boolean"},"!category":"namespace","source":{"!description":"The source code to display.","!category":"enum","!type":"String"},"title":{"!description":"A title to be displayed above the code.","!category":"enum","!type":"String"},"collapsible":{"!description":"Whether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Whether the button is enabled or not.","!category":"enum","!type":"Boolean"},"colspan":{"!description":"How many buttons might be placed in the same row of the grid","!category":"enum","!type":"Number"},"expanded":{"!description":"Whether the cue card is currently expanded.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"entityName":{"!description":"Qualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"CodeViewer":"sap.ui.demokit.CodeViewer_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"itemWidth":{"!description":"The width of a content item. Only px values are allowed.","!category":"enum","!type":"sap.ui.core.CSSSize"},"maxFontSize":{"!description":"Maximum font size that may be chosen for a tag in this cloud","!category":"enum","!type":"Number"},"enableScaling":{"!description":"Whether the given item width/height should be scaled according to the screen size.","!category":"enum","!type":"Boolean"},"text":{"!description":"The text to be disaplyed for this tag.","!category":"enum","!type":"String"},"TagCloud":"sap.ui.demokit.TagCloud_obj","height":{"!description":"(CSS) Height of the control","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"SAPUI5 library with non-public controls, used in the UI5 demokit (SDK)","FileUploadIntrospector":"sap.ui.demokit.FileUploadIntrospector_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"sourceVisible":{"!description":"Whether the source code is visible or not.","!category":"enum","!type":"Boolean"},"HexagonButtonGroup":"sap.ui.demokit.HexagonButtonGroup_obj","editable":{"!description":"Whether the code can be edited or not","!category":"enum","!type":"Boolean"},"imagePosition":{"!description":"The position of the contained image. If not set the image is rendered with a fixed relative position.","!category":"enum","!type":"String"},"weight":{"!description":"The weight for this tag. Can be any integer value.","!category":"enum","!type":"Number"},"minFontSize":{"!description":"Minimum font size that must be used for a tag in this cloud","!category":"enum","!type":"Number"},"!module":"sap/ui/demokit/library","uploadUrl":{"!description":"The URL to check the upload content with....","!category":"enum","!type":"String"},"!helpDescription":"SAPUI5 library with non-public controls, used in the UI5 demokit (SDK)","UIAreaSubstitute":"sap.ui.demokit.UIAreaSubstitute_obj","width":{"!description":"Width of the file list","!category":"enum","!type":"sap.ui.core.CSSSize"},"autoRefreshInterval":{"!description":"Interval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.","!category":"enum","!type":"String"},"style":{"!description":"Style of the cue card.","!category":"enum","!type":"sap.ui.demokit.UI5EntityCueCardStyle"},"Tag":"sap.ui.demokit.Tag_obj","position":{"!description":"The position. If set, the button is rendered with an absolute position.","!category":"enum","!type":"String"},"CodeSampleContainer":"sap.ui.demokit.CodeSampleContainer_obj","IndexLayout":"sap.ui.demokit.IndexLayout_obj"},"sap.ui.demokit.Tag_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.Tag with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.Tag"},"sap.ui.demokit.UIAreaSubstitute_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UIAreaSubstitute with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.UIAreaSubstitute"},"sap.ui.demokit.IndexLayout":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.IndexLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getItemWidth":{"!description":"Gets current value of property <code>itemWidth<\/code>.\n\nThe width of a content item. Only px values are allowed.\n\nDefault value is <code>200px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content items","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.demokit.IndexLayout","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"getItemHeight":{"!description":"Gets current value of property <code>itemHeight<\/code>.\n\nThe height of a content item. Only px values are allowed.\n\nDefault value is <code>200px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.IndexLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getEnableScaling":{"!description":"Gets current value of property <code>enableScaling<\/code>.\n\nWhether the given item width/height should be scaled according to the screen size.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new IndexLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getItemWidth itemWidth} : sap.ui.core.CSSSize (default: 200px)<\/li>\n<li>{@link #getItemHeight itemHeight} : sap.ui.core.CSSSize (default: 200px)<\/li>\n<li>{@link #getEnableScaling enableScaling} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/IndexLayout","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setEnableScaling":{"!description":"Sets a new value for property <code>enableScaling<\/code>.\n\nWhether the given item width/height should be scaled according to the screen size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableScaling: Boolean) -> sap.ui.demokit.IndexLayout","parameters":{"bEnableScaling":"type: boolean, description: New value for property <code>enableScaling<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.demokit.IndexLayout","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"setItemWidth":{"!description":"Sets a new value for property <code>itemWidth<\/code>.\n\nThe width of a content item. Only px values are allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200px<\/code>.","!static":false,"!category":"function","!type":"fn(sItemWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.IndexLayout","parameters":{"sItemWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>itemWidth<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.demokit.IndexLayout"},"setItemHeight":{"!description":"Sets a new value for property <code>itemHeight<\/code>.\n\nThe height of a content item. Only px values are allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200px<\/code>.","!static":false,"!category":"function","!type":"fn(sItemHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.IndexLayout","parameters":{"sItemHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>itemHeight<\/code>"}}},"sap.ui.demokit.HexagonButtonGroup":{"!description":"A group of HexagonButtons, aligned in a packed grid","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.HexagonButtonGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nThe buttons to layout in a grid","!static":false,"!category":"function","!type":"fn() -> [sap.ui.demokit.HexagonButton]"},"!proto":"sap.ui.core.Control","!category":"class","addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.demokit.HexagonButton) -> sap.ui.demokit.HexagonButtonGroup","parameters":{"oButton":"type: sap.ui.demokit.HexagonButton, description: the button to add; if empty, nothing is inserted"}},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.demokit.HexagonButtonGroup"},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.demokit.HexagonButton<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.demokit.HexagonButton) -> Number","parameters":{"oButton":"type: sap.ui.demokit.HexagonButton, description: The button whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setColspan":{"!description":"Sets a new value for property <code>colspan<\/code>.\n\nHow many buttons might be placed in the same row of the grid\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn(iColspan: Number) -> sap.ui.demokit.HexagonButtonGroup","parameters":{"iColspan":"type: int, description: New value for property <code>colspan<\/code>"}},"!constructorDescription":"Constructor for a new HexagonButtonGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColspan colspan} : int (default: 3)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.ui.demokit.HexagonButton[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getColspan":{"!description":"Gets current value of property <code>colspan<\/code>.\n\nHow many buttons might be placed in the same row of the grid\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!module":"sap/ui/demokit/HexagonButtonGroup","insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.demokit.HexagonButton, iIndex: Number) -> sap.ui.demokit.HexagonButtonGroup","parameters":{"oButton":"type: sap.ui.demokit.HexagonButton, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"!helpDescription":"A group of HexagonButtons, aligned in a packed grid","removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.ui.demokit.HexagonButton) -> sap.ui.demokit.HexagonButton","parameters":{"vButton":"type: int|string|sap.ui.demokit.HexagonButton, description: The buttonto remove or its index or id"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.demokit.HexagonButton]"}},"sap.ui.demokit.TagCloud_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.TagCloud with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.TagCloud"},"sap.ui.demokit.FileUploadIntrospector":{"!description":"Control that allows to monitor uploaded files in a demo scenario. This is not a general purpose monitor but only works with the demo fileupload service.","getAutoRefreshInterval":{"!description":"Gets current value of property <code>autoRefreshInterval<\/code>.\n\nInterval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.FileUploadIntrospector.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","refresh":{"!description":"Trigger an explicit refresh of the displayed information","!static":false,"!category":"function","!type":"fn()"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the file list","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\n(CSS) Height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.FileUploadIntrospector","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the file list\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.FileUploadIntrospector","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setAutoRefreshInterval":{"!description":"Sets a new value for property <code>autoRefreshInterval<\/code>.\n\nInterval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(sAutoRefreshInterval: String) -> sap.ui.demokit.FileUploadIntrospector","parameters":{"sAutoRefreshInterval":"type: string, description: New value for property <code>autoRefreshInterval<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.FileUploadIntrospector with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getUploadUrl":{"!description":"Gets current value of property <code>uploadUrl<\/code>.\n\nThe URL to check the upload content with....","!static":false,"!category":"function","!type":"fn() -> String"},"setUploadUrl":{"!description":"Sets a new value for property <code>uploadUrl<\/code>.\n\nThe URL to check the upload content with....\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUploadUrl: String) -> sap.ui.demokit.FileUploadIntrospector","parameters":{"sUploadUrl":"type: string, description: New value for property <code>uploadUrl<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\n(CSS) Height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new FileUploadIntrospector.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUploadUrl uploadUrl} : string<\/li>\n<li>{@link #getAutoRefreshInterval autoRefreshInterval} : string (default: 0)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/FileUploadIntrospector","!helpDescription":"Control that allows to monitor uploaded files in a demo scenario. This is not a general purpose monitor but only works with the demo fileupload service."},"sap.ui.demokit.Tag":{"!description":"A Tag in a TagCloud","extend":{"!description":"Creates a new subclass of class sap.ui.demokit.Tag with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.Tag.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new Tag.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getWeight weight} : int (default: 1)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/demokit/Tag","!helpDescription":"A Tag in a TagCloud","getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe text to be disaplyed for this tag.","!static":false,"!category":"function","!type":"fn() -> String"},"getWeight":{"!description":"Gets current value of property <code>weight<\/code>.\n\nThe weight for this tag. Can be any integer value.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setWeight":{"!description":"Sets a new value for property <code>weight<\/code>.\n\nThe weight for this tag. Can be any integer value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iWeight: Number) -> sap.ui.demokit.Tag","parameters":{"iWeight":"type: int, description: New value for property <code>weight<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe text to be disaplyed for this tag.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.demokit.Tag","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.demokit.CodeViewer":{"setLineNumbering":{"!description":"Sets a new value for property <code>lineNumbering<\/code>.\n\nWhether the code to have line numbering or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLineNumbering: Boolean) -> sap.ui.demokit.CodeViewer","parameters":{"bLineNumbering":"type: boolean, description: New value for property <code>lineNumbering<\/code>"}},"setSource":{"!description":"Sets a new value for property <code>source<\/code>.\n\nThe source code to display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSource: String) -> sap.ui.demokit.CodeViewer","parameters":{"sSource":"type: string, description: New value for property <code>source<\/code>"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nWhether the code can be edited or not\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>save<\/code> event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.demokit.CodeViewer<\/code> itself.\n\nCalled when the editor is active and should be saved","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeViewer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.CodeViewer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe CSS width property","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe CSS height property","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new CodeViewer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSource source} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<li>{@link #getLineNumbering lineNumbering} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.demokit.CodeViewer<\/code> itself.\n\nCalled when the mouse button is clicked over the non-editable(!) control","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeViewer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.CodeViewer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Shows a piece of (Javascript) code and allows to edit it","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nWhether the code viewer should be visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.demokit.CodeViewer","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.CodeViewer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nWhether the code viewer should be visible\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLineNumbering":{"!description":"Gets current value of property <code>lineNumbering<\/code>.\n\nWhether the code to have line numbering or not\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe CSS height property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeViewer","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe CSS width property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeViewer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeViewer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeViewer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.demokit.CodeViewer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nWhether the code can be edited or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.demokit.CodeViewer","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/ui/demokit/CodeViewer","!helpDescription":"Shows a piece of (Javascript) code and allows to edit it","detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>save<\/code> event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeViewer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireSave":{"!description":"Fires event <code>save<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.demokit.CodeViewer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSource":{"!description":"Gets current value of property <code>source<\/code>.\n\nThe source code to display.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.demokit.IndexLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.IndexLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.IndexLayout"},"sap.ui.demokit.CodeSampleContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeSampleContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.CodeSampleContainer"},"sap.ui.demokit.HexagonButtonGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.HexagonButtonGroup"},"sap.ui.demokit.UI5EntityCueCard_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UI5EntityCueCard with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.UI5EntityCueCard"},"sap.ui.demokit.UI5EntityCueCard":{"!description":"Displays documentation for a UI5 entity (control or type).\n\nThe documentation will be read from a UI5 metamodel file that by default is loaded from the same resource location\nwhere the control or type would be loaded from (using the UI5 resource loading). This control displays all properties,\naggregations, associations, events and methods that are described in the metamodel. For each part, it lists the name,\ntype (where applicable) and documentation. If the navigable property is set to true, all types are shown as links\nand when pressed, the navigate event is fired. This allows consumers to react on a user click on such a type\n(and to e.g. navigate to the underlying type of a property or aggregation)","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.UI5EntityCueCard.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setExpanded":{"!description":"Sets a new value for property <code>expanded<\/code>.\n\nWhether the cue card is currently expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.ui.demokit.UI5EntityCueCard","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"!proto":"sap.ui.core.Control","getNavigable":{"!description":"Gets current value of property <code>navigable<\/code>.\n\nWhether type information is navigable. Also see event 'navigate'.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getCollapsible":{"!description":"Gets current value of property <code>collapsible<\/code>.\n\nWhether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nWhether the cue card is currently expanded.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCollapsible":{"!description":"Sets a new value for property <code>collapsible<\/code>.\n\nWhether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bCollapsible: Boolean) -> sap.ui.demokit.UI5EntityCueCard","parameters":{"bCollapsible":"type: boolean, description: New value for property <code>collapsible<\/code>"}},"setEntityName":{"!description":"Sets a new value for property <code>entityName<\/code>.\n\nQualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntityName: String) -> sap.ui.demokit.UI5EntityCueCard","parameters":{"sEntityName":"type: string, description: New value for property <code>entityName<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UI5EntityCueCard with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event <code>navigate<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>entityName<\/code> of type <code>string<\/code>Name of the entity (control or type) that has been clicked.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new UI5EntityCueCard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCollapsible collapsible} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getNavigable navigable} : boolean (default: false)<\/li>\n<li>{@link #getEntityName entityName} : string<\/li>\n<li>{@link #getStyle style} : sap.ui.demokit.UI5EntityCueCardStyle<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getStyle":{"!description":"Gets current value of property <code>style<\/code>.\n\nStyle of the cue card.","!static":false,"!category":"function","!type":"fn() -> sap.ui.demokit.UI5EntityCueCardStyle"},"!module":"sap/ui/demokit/UI5EntityCueCard","!helpDescription":"Displays documentation for a UI5 entity (control or type).\n\nThe documentation will be read from a UI5 metamodel file that by default is loaded from the same resource location\nwhere the control or type would be loaded from (using the UI5 resource loading). This control displays all properties,\naggregations, associations, events and methods that are described in the metamodel. For each part, it lists the name,\ntype (where applicable) and documentation. If the navigable property is set to true, all types are shown as links\nand when pressed, the navigate event is fired. This allows consumers to react on a user click on such a type\n(and to e.g. navigate to the underlying type of a property or aggregation)","attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigate<\/code> event of this <code>sap.ui.demokit.UI5EntityCueCard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.demokit.UI5EntityCueCard<\/code> itself.\n\nFired when a link for a type is activated (clicked) by the user.\n\nWhen property \"navigable\" is set to true, type links are created for the types of properties, aggregations and associations, for the types of event or method parameters and for the return types of methods (if not void).\n\nThe default behavior for this event is to set the entityName property to the clicked entityName. Applications can prevent the default by calling the corresponding method on the event object.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.UI5EntityCueCard","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.UI5EntityCueCard<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setNavigable":{"!description":"Sets a new value for property <code>navigable<\/code>.\n\nWhether type information is navigable. Also see event 'navigate'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bNavigable: Boolean) -> sap.ui.demokit.UI5EntityCueCard","parameters":{"bNavigable":"type: boolean, description: New value for property <code>navigable<\/code>"}},"setStyle":{"!description":"Sets a new value for property <code>style<\/code>.\n\nStyle of the cue card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStyle: sap.ui.demokit.UI5EntityCueCardStyle) -> sap.ui.demokit.UI5EntityCueCard","parameters":{"sStyle":"type: sap.ui.demokit.UI5EntityCueCardStyle, description: New value for property <code>style<\/code>"}},"getEntityName":{"!description":"Gets current value of property <code>entityName<\/code>.\n\nQualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).","!static":false,"!category":"function","!type":"fn() -> String"},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigate<\/code> event of this <code>sap.ui.demokit.UI5EntityCueCard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.UI5EntityCueCard","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.demokit.TagCloud":{"!description":"A simple TagCloud representing a set of weighted tags","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.TagCloud.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyTags":{"!description":"Destroys all the tags in the aggregation <code>tags<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.demokit.TagCloud"},"setMinFontSize":{"!description":"Sets a new value for property <code>minFontSize<\/code>.\n\nMinimum font size that must be used for a tag in this cloud\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn(iMinFontSize: Number) -> sap.ui.demokit.TagCloud","parameters":{"iMinFontSize":"type: int, description: New value for property <code>minFontSize<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getTags":{"!description":"Gets content of aggregation <code>tags<\/code>.\n\nThe tags displayed in this tag cloud","!static":false,"!category":"function","!type":"fn() -> [sap.ui.demokit.Tag]"},"addTag":{"!description":"Adds some tag to the aggregation <code>tags<\/code>.","!static":false,"!category":"function","!type":"fn(oTag: sap.ui.demokit.Tag) -> sap.ui.demokit.TagCloud","parameters":{"oTag":"type: sap.ui.demokit.Tag, description: the tag to add; if empty, nothing is inserted"}},"getMinFontSize":{"!description":"Gets current value of property <code>minFontSize<\/code>.\n\nMinimum font size that must be used for a tag in this cloud\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.TagCloud with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.demokit.TagCloud<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.TagCloud","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tagId<\/code> of type <code>string<\/code>Id of the selected Tag.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.demokit.TagCloud","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfTag":{"!description":"Checks for the provided <code>sap.ui.demokit.Tag<\/code> in the aggregation <code>tags<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTag: sap.ui.demokit.Tag) -> Number","parameters":{"oTag":"type: sap.ui.demokit.Tag, description: The tag whose index is looked for"}},"!constructorDescription":"Constructor for a new TagCloud.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxFontSize maxFontSize} : int (default: 30)<\/li>\n<li>{@link #getMinFontSize minFontSize} : int (default: 10)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTags tags} : sap.ui.demokit.Tag[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/TagCloud","insertTag":{"!description":"Inserts a tag into the aggregation <code>tags<\/code>.","!static":false,"!category":"function","!type":"fn(oTag: sap.ui.demokit.Tag, iIndex: Number) -> sap.ui.demokit.TagCloud","parameters":{"oTag":"type: sap.ui.demokit.Tag, description: the tag to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the tag should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the tag is inserted at position 0; for a value\n             greater than the current size of the aggregation, the tag is inserted at\n             the last position"}},"!helpDescription":"A simple TagCloud representing a set of weighted tags","removeAllTags":{"!description":"Removes all the controls from the aggregation <code>tags<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.demokit.Tag]"},"removeTag":{"!description":"Removes a tag from the aggregation <code>tags<\/code>.","!static":false,"!category":"function","!type":"fn(vTag: Number | String | sap.ui.demokit.Tag) -> sap.ui.demokit.Tag","parameters":{"vTag":"type: int|string|sap.ui.demokit.Tag, description: The tagto remove or its index or id"}},"setMaxFontSize":{"!description":"Sets a new value for property <code>maxFontSize<\/code>.\n\nMaximum font size that may be chosen for a tag in this cloud\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>30<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxFontSize: Number) -> sap.ui.demokit.TagCloud","parameters":{"iMaxFontSize":"type: int, description: New value for property <code>maxFontSize<\/code>"}},"getMaxFontSize":{"!description":"Gets current value of property <code>maxFontSize<\/code>.\n\nMaximum font size that may be chosen for a tag in this cloud\n\nDefault value is <code>30<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.demokit.TagCloud<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.demokit.TagCloud<\/code> itself.\n\nFired when a Tag is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.TagCloud","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.TagCloud<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.demokit.HexagonButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.HexagonButton"}}}