{"!name":"sap.ui.unified","!version":"1.17.0","!define":{"sap.ui.unified.CalendarDateInterval_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarDateInterval with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Calendar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.CalendarDateInterval"},"sap.ui.unified.DateRange_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.DateRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.DateRange"},"sap.ui.unified.CalendarAppointment":{"!description":"An appointment for use in a <code>PlanningCalendar<\/code> or similar. The rendering must be done in the Row collecting the appointments.\n(Because there are different visualizations possible.)\n\nApplications could inherit from this element to add own fields.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nCan be used as identifier of the appointment","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.CalendarAppointment.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nIndicates if the icon is selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.ui.unified.CalendarAppointment","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nText of the appointment.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.unified.DateTypeRange","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle of the appointment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.unified.CalendarAppointment","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","getTentative":{"!description":"Gets current value of property <code>tentative<\/code>.\n\nIndicates if the icon is tentative.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTentative":{"!description":"Sets a new value for property <code>tentative<\/code>.\n\nIndicates if the icon is tentative.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bTentative: Boolean) -> sap.ui.unified.CalendarAppointment","parameters":{"bTentative":"type: boolean, description: New value for property <code>tentative<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarAppointment with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.DateTypeRange.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.unified.CalendarAppointment","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nIndicates if the icon is selected.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>CalendarAppointment<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTentative tentative} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.unified.DateTypeRange#constructor sap.ui.unified.DateTypeRange}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle of the appointment.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/unified/CalendarAppointment","!helpDescription":"An appointment for use in a <code>PlanningCalendar<\/code> or similar. The rendering must be done in the Row collecting the appointments.\n(Because there are different visualizations possible.)\n\nApplications could inherit from this element to add own fields.","setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nCan be used as identifier of the appointment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.unified.CalendarAppointment","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nText of the appointment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.unified.CalendarAppointment","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.unified.calendar.YearPicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.YearPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.calendar.YearPicker"},"sap.ui.unified.FileUploaderParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.FileUploaderParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.FileUploaderParameter"},"sap.ui.unified.CalendarDateInterval":{"!description":"Calendar with dates displayed in one line.","setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date of the Interval\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.CalendarDateInterval","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.CalendarDateInterval.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.unified.Calendar","setFirstDayOfWeek":{"!description":"Setter for property <code>firstDayOfWeek<\/code>.\n\nProperty <code>firstDayOfWeek<\/code> is not supported in <code>sap.ui.unified.CalendarDateInterval<\/code> control.","!static":false,"!category":"function","!type":"fn(iFirstDayOfWeek?: Number)","parameters":{"iFirstDayOfWeek":"type: int, description: first day of the week"}},"setMonths":{"!description":"Setter for property <code>months<\/code>.\n\nProperty <code>months<\/code> is not supported in <code>sap.ui.unified.CalendarDateInterval<\/code> control.","!static":false,"!category":"function","!type":"fn(iMonths?: Number)","parameters":{"iMonths":"type: int, description: months"}},"!category":"class","setPickerPopup":{"!description":"Sets a new value for property <code>pickerPopup<\/code>.\n\nIf set, the month- and yearPicker opens on a popup\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPickerPopup: Boolean) -> sap.ui.unified.CalendarDateInterval","parameters":{"bPickerPopup":"type: boolean, description: New value for property <code>pickerPopup<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarDateInterval with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Calendar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDays":{"!description":"Sets a new value for property <code>days<\/code>.\n\nnumber of days displayed\non phones the maximum rendered number of days is 8.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn(iDays: Number) -> sap.ui.unified.CalendarDateInterval","parameters":{"iDays":"type: int, description: New value for property <code>days<\/code>"}},"!constructorDescription":"Constructor for a new <code>CalendarDateInterval<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getDays days} : int (default: 7)<\/li>\n<li>{@link #getShowDayNamesLine showDayNamesLine} : boolean (default: true)<\/li>\n<li>{@link #getPickerPopup pickerPopup} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.unified.Calendar#constructor sap.ui.unified.Calendar}\ncan be used as well.","getDays":{"!description":"Gets current value of property <code>days<\/code>.\n\nnumber of days displayed\non phones the maximum rendered number of days is 8.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!module":"sap/ui/unified/CalendarDateInterval","!helpDescription":"Calendar with dates displayed in one line.","getPickerPopup":{"!description":"Gets current value of property <code>pickerPopup<\/code>.\n\nIf set, the month- and yearPicker opens on a popup\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowDayNamesLine":{"!description":"Gets current value of property <code>showDayNamesLine<\/code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowDayNamesLine":{"!description":"Sets a new value for property <code>showDayNamesLine<\/code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDayNamesLine: Boolean) -> sap.ui.unified.CalendarDateInterval","parameters":{"bShowDayNamesLine":"type: boolean, description: New value for property <code>showDayNamesLine<\/code>"}}},"sap.ui.unified.CalendarMonthInterval_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarMonthInterval with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.CalendarMonthInterval"},"sap.ui.unified.MenuTextFieldItem":{"!description":"Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.MenuTextFieldItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nDefines the label of the text field of the item.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nDefines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.unified.MenuTextFieldItem","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"!proto":"sap.ui.unified.MenuItemBase","!category":"class","getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"destroySubmenu":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined The aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.<br>The aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.MenuTextFieldItem"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.MenuTextFieldItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.unified.MenuTextFieldItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getSubmenu":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined The aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.<br>The aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Menu"},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nDefines the value of the text field of the item.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new MenuTextFieldItem element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.unified.MenuItemBase#constructor sap.ui.unified.MenuItemBase}\ncan be used as well.","!module":"sap/ui/unified/MenuTextFieldItem","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nDefines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","setSubmenu":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined The aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.<br>The aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","!static":false,"!category":"function","!type":"fn(oSubmenu: sap.ui.unified.Menu) -> sap.ui.unified.MenuTextFieldItem","parameters":{"oSubmenu":"type: sap.ui.unified.Menu, description: undefined"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nDefines the value of the text field of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.unified.MenuTextFieldItem","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nDefines the label of the text field of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.unified.MenuTextFieldItem","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.ui.unified.DateRange":{"!description":"Date range for use in DatePicker","extend":{"!description":"Creates a new subclass of class sap.ui.unified.DateRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date for a date range. This must be a JavaScript date object.","!static":false,"!category":"function","!type":"fn() -> Object"},"setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date for a date range. This must be a JavaScript date object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.DateRange","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.DateRange.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new DateRange.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getEndDate endDate} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/unified/DateRange","!helpDescription":"Date range for use in DatePicker","!proto":"sap.ui.core.Element","!category":"class","getEndDate":{"!description":"Gets current value of property <code>endDate<\/code>.\n\nStart date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object.","!static":false,"!category":"function","!type":"fn() -> Object"},"setEndDate":{"!description":"Sets a new value for property <code>endDate<\/code>.\n\nStart date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oEndDate: Object) -> sap.ui.unified.DateRange","parameters":{"oEndDate":"type: object, description: New value for property <code>endDate<\/code>"}}},"sap.ui.unified.Menu":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.unified.MenuItemBase) -> sap.ui.unified.MenuItemBase","parameters":{"vItem":"type: int|string|sap.ui.unified.MenuItemBase, description: The itemto remove or its index or id"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Menu"},"getAriaDescription":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.0 Please use association <code>ariaLabelledBy<\/code> instead.<br>Gets current value of property <code>ariaDescription<\/code>.\n\nAccessible label / description of the menu for assistive technologies like screenreaders.","!static":false,"!category":"function","!type":"fn() -> String"},"getMaxVisibleItems":{"!description":"Gets current value of property <code>maxVisibleItems<\/code>.\n\nThe maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!category":"class","addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.MenuItemBase) -> sap.ui.unified.Menu","parameters":{"oItem":"type: sap.ui.unified.MenuItemBase, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe available actions to be displayed as items of the menu.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.MenuItemBase]"},"!constructorDescription":"Constructor for a new Menu control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getAriaDescription ariaDescription} : string<\/li>\n<li>{@link #getMaxVisibleItems maxVisibleItems} : int (default: 0)<\/li>\n<li>{@link #getPageSize pageSize} : int (default: 5)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.unified.MenuItemBase[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.Menu","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.unified.MenuItemBase<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.MenuItemBase) -> Number","parameters":{"oItem":"type: sap.ui.unified.MenuItemBase, description: The item whose index is looked for"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhen a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"close":{"!description":"Closes the menu.","!static":false,"!category":"function","!type":"fn()"},"!description":"A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"fireItemSelect":{"!description":"Fires event <code>itemSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.ui.unified.MenuItemBase<\/code>The action (item) which was selected by the user.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.Menu","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.Menu.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemSelect<\/code> event of this <code>sap.ui.unified.Menu<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.Menu","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.MenuItemBase]"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhen a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.unified.Menu","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getPageSize":{"!description":"Gets current value of property <code>pageSize<\/code>.\n\nThe keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home<\/i> / <i>End<\/i> keys for jumping\nto the first / last item, the <i>Page Up<\/i> / <i>Page Down<\/i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize<\/code> property.\nFor values smaller than 1, paging behaves in a similar way to when using the <i>Home<\/i> / <i>End<\/i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemSelect<\/code> event of this <code>sap.ui.unified.Menu<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Menu<\/code> itself.\n\nFired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\n<b>Note:<\/b> There is also a select event available for each single menu item. This event and the event of the menu items are redundant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.Menu","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Menu<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/unified/Menu","!helpDescription":"A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.","setAriaDescription":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.0 Please use association <code>ariaLabelledBy<\/code> instead.<br>Sets a new value for property <code>ariaDescription<\/code>.\n\nAccessible label / description of the menu for assistive technologies like screenreaders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAriaDescription: String) -> sap.ui.unified.Menu","parameters":{"sAriaDescription":"type: string, description: New value for property <code>ariaDescription<\/code>"}},"setMaxVisibleItems":{"!description":"Sets a new value for property <code>maxVisibleItems<\/code>.\n\nThe maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxVisibleItems: Number) -> sap.ui.unified.Menu","parameters":{"iMaxVisibleItems":"type: int, description: New value for property <code>maxVisibleItems<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.MenuItemBase, iIndex: Number) -> sap.ui.unified.Menu","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.unified.MenuItemBase, description: the item to insert; if empty, nothing is inserted"}},"open":{"!description":"Opens the menu at the specified position.\n\nThe position of the menu is defined relative to an element in the visible DOM by specifying\nthe docking location of the menu and of the related element.\n\nSee {@link sap.ui.core.Popup#open Popup#open} for further details about popup positioning.","!static":false,"!category":"function","!type":"fn(bWithKeyboard: Boolean, oOpenerRef: sap.ui.core.Element | DOMRef, sMy: sap.ui.core.Dock, sAt: sap.ui.core.Dock, oOf: sap.ui.core.Element | DOMRef, sOffset?: String, sCollision?: sap.ui.core.Collision)","parameters":{"bWithKeyboard":"type: boolean, description: Indicates whether or not the first item shall be highlighted when the menu is opened (keyboard case)","oOpenerRef":"type: sap.ui.core.Element|DOMRef, description: The element which will get the focus back again after the menu was closed","sAt":"type: sap.ui.core.Dock, description: The 'of' element's reference docking location for positioning the menu on the screen","oOf":"type: sap.ui.core.Element|DOMRef, description: The menu is positioned relatively to this element based on the given dock locations","sCollision":"type: sap.ui.core.Collision, description: The collision defines how the position of the menu should be adjusted in case it overflows the window in some direction","sMy":"type: sap.ui.core.Dock, description: The reference docking location of the menu for positioning the menu on the screen","sOffset":"type: string, description: The offset relative to the docking point, specified as a string with space-separated pixel values (e.g. \"0 10\" to move the popup 10 pixels to the right)"}},"setPageSize":{"!description":"Sets a new value for property <code>pageSize<\/code>.\n\nThe keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home<\/i> / <i>End<\/i> keys for jumping\nto the first / last item, the <i>Page Up<\/i> / <i>Page Down<\/i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize<\/code> property.\nFor values smaller than 1, paging behaves in a similar way to when using the <i>Home<\/i> / <i>End<\/i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn(iPageSize: Number) -> sap.ui.unified.Menu","parameters":{"iPageSize":"type: int, description: New value for property <code>pageSize<\/code>"}}},"sap.ui.unified.CalendarDayType":{"!description":"Type of a calendar day used for visualization.","Type02":{"!description":"Type 02: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"Type03":{"!description":"Type 03: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"!category":"static class","Type04":{"!description":"Type 04: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"Type05":{"!description":"Type 05: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"Type10":{"!description":"Type 10: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"Type01":{"!description":"Type 01: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"!module":"sap/ui/unified/library","Type06":{"!description":"Type 06: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"Type07":{"!description":"Type 07: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"Type08":{"!description":"Type 08: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"Type09":{"!description":"Type 09: The semantic meaning must be defined by the application. It can be shown in a legend.","!category":"enum","!type":"String"},"None":{"!description":"None: No special type is used","!category":"enum","!type":"String"}},"sap.ui.unified.calendar.TimesRow":{"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date, as JavaScript Date object, of the row.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.TimesRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.calendar.TimesRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.TimesRow<\/code> itself.\n\nTime selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.TimesRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.TimesRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addSelectedDate":{"!description":"Adds some selectedDate to the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> sap.ui.unified.calendar.TimesRow","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to add; if empty, nothing is inserted"}},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateTypeRange<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> Number","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The specialDate whose index is looked for"}},"getItems":{"!description":"Gets current value of property <code>items<\/code>.\n\nNumber of time items displayed\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getIntervalSelection":{"!description":"Gets current value of property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySelectedDates":{"!description":"Destroys all the selectedDates in the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.TimesRow"},"setIntervalSelection":{"!description":"Sets a new value for property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIntervalSelection: Boolean) -> sap.ui.unified.calendar.TimesRow","parameters":{"bIntervalSelection":"type: boolean, description: New value for property <code>intervalSelection<\/code>"}},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.ui.unified.calendar.TimesRow","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"!description":"Renders a row of time items using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarTimeInterval.\nIf used inside the CalendarTimeInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...).\n\nThe TimesRow works with JavaScript Date objects.","getLegend":{"!description":"ID of the element which is the current target of the association <code>legend<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarLegend"},"setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date, as JavaScript Date object, of the row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.calendar.TimesRow","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.calendar.TimesRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllSelectedDates":{"!description":"Removes all the controls from the aggregation <code>selectedDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"insertSpecialDate":{"!description":"Inserts a specialDate into the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.ui.unified.calendar.TimesRow","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.TimesRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/unified/calendar/TimesRow","!helpDescription":"Renders a row of time items using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarTimeInterval.\nIf used inside the CalendarTimeInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...).\n\nThe TimesRow works with JavaScript Date objects.","checkDateFocusable":{"!description":"Checks if a date is focusable in the current rendered output.\nThis means that if it is not rendered, it is not focusable.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> Boolean","parameters":{"oDate":"type: object, description: JavaScript Date object for focused date."}},"detachFocus":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>focus<\/code> event of this <code>sap.ui.unified.calendar.TimesRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.TimesRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"displayDate":{"!description":"Displays the given date without setting the focus","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.TimesRow","parameters":{"oDate":"type: object, description: JavaScript Date object for focused date."}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.calendar.TimesRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.TimesRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSingleSelection":{"!description":"Gets current value of property <code>singleSelection<\/code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachFocus":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>focus<\/code> event of this <code>sap.ui.unified.calendar.TimesRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.TimesRow<\/code> itself.\n\nTime focus changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.TimesRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.TimesRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSingleSelection":{"!description":"Sets a new value for property <code>singleSelection<\/code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleSelection: Boolean) -> sap.ui.unified.calendar.TimesRow","parameters":{"bSingleSelection":"type: boolean, description: New value for property <code>singleSelection<\/code>"}},"removeSpecialDate":{"!description":"Removes a specialDate from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSpecialDate: Number | String | sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"vSpecialDate":"type: int|string|sap.ui.unified.DateTypeRange, description: The specialDateto remove or its index or id"}},"!proto":"sap.ui.core.Control","!category":"class","fireFocus":{"!description":"Fires event <code>focus<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>date<\/code> of type <code>object<\/code>date, as JavaScript Date object, of the focused time.<\/li>\n<li><code>notVisible<\/code> of type <code>boolean<\/code>If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.TimesRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate ranges with type to visualize special item in the row.\nIf one day is assigned to more than one type, only the first one will be used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"setIntervalMinutes":{"!description":"Sets a new value for property <code>intervalMinutes<\/code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:<\/b> the start of the interval calculation is always <code>startDat<\/code> at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>DatesRow<\/code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>60<\/code>.","!static":false,"!category":"function","!type":"fn(iIntervalMinutes: Number) -> sap.ui.unified.calendar.TimesRow","parameters":{"iIntervalMinutes":"type: int, description: New value for property <code>intervalMinutes<\/code>"}},"!constructorDescription":"Constructor for a new <code>TimesRow<\/code>.\nIt shows a calendar with time granularity (normally hours)\n\n<b>Note:<\/b> This is used inside the CalendarTimeInterval, not for standalone usage.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDate date} : object<\/li>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getItems items} : int (default: 12)<\/li>\n<li>{@link #getIntervalMinutes intervalMinutes} : int (default: 60)<\/li>\n<li>{@link #getIntervalSelection intervalSelection} : boolean (default: false)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSelectedDates selectedDates} : sap.ui.unified.DateRange[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:focus focus} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.calendar.TimesRow","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getIntervalMinutes":{"!description":"Gets current value of property <code>intervalMinutes<\/code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:<\/b> the start of the interval calculation is always <code>startDat<\/code> at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>DatesRow<\/code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nDefault value is <code>60<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setItems":{"!description":"Sets a new value for property <code>items<\/code>.\n\nNumber of time items displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn(iItems: Number) -> sap.ui.unified.calendar.TimesRow","parameters":{"iItems":"type: int, description: New value for property <code>items<\/code>"}},"addSpecialDate":{"!description":"Adds some specialDate to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.ui.unified.calendar.TimesRow","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is inserted"}},"getSelectedDates":{"!description":"Gets content of aggregation <code>selectedDates<\/code>.\n\nDate ranges for selected dates.\nIf <code>singleSelection<\/code> is set, only the first entry is used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"setLegend":{"!description":"Sets the associated <code>legend<\/code>.","!static":false,"!category":"function","!type":"fn(oLegend: sap.ui.unified.CalendarLegend) -> sap.ui.unified.calendar.TimesRow","parameters":{"oLegend":"type: sap.ui.unified.CalendarLegend, description: Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"}},"getDate":{"!description":"Gets current value of property <code>date<\/code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate<\/code> + <code>items<\/code> in the rendering phase,\nit is set to the <code>startDate<\/code>.\nSo after setting the <code>startDate<\/code> the date should be set to be in the visible range.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSelectedDate":{"!description":"Removes a selectedDate from the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSelectedDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vSelectedDate":"type: int|string|sap.ui.unified.DateRange, description: The selectedDateto remove or its index or id"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.TimesRow"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"setDate":{"!description":"Sets a new value for property <code>date<\/code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate<\/code> + <code>items<\/code> in the rendering phase,\nit is set to the <code>startDate<\/code>.\nSo after setting the <code>startDate<\/code> the date should be set to be in the visible range.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.TimesRow","parameters":{"oDate":"type: object, description: New value for property <code>date<\/code>"}},"indexOfSelectedDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>selectedDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> Number","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: The selectedDate whose index is looked for"}},"insertSelectedDate":{"!description":"Inserts a selectedDate into the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.calendar.TimesRow","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"}}},"sap.ui.unified.calendar":{"date":{"!description":"Date as JavaScript Date object. For this date a <code>YearPicker<\/code> is rendered. If a Year is selected the\ndate is updated with the start date of the selected year (depending on the calendar type).","!category":"enum","!type":"Object"},"textButton1":{"!description":"Text of the second button (normally month)","!category":"enum","!type":"String"},"MonthsRow":"sap.ui.unified.calendar.MonthsRow_obj","textButton2":{"!description":"Text of the third button (normally year)","!category":"enum","!type":"String"},"TimesRow":"sap.ui.unified.calendar.TimesRow_obj","textButton0":{"!description":"Text of the first button (normally day)","!category":"enum","!type":"String"},"year":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 Use <code>date<\/code> instead<br>The year is initial focused and selected\nThe value must be between 0 and 9999","!category":"enum","!type":"Number"},"columns":{"!description":"number of years in each row\n0 means just to have all years in one row, independent of the number","!category":"enum","!type":"Number"},"intervalSelection":{"!description":"If set, interval selection is allowed","!category":"enum","!type":"Boolean"},"!category":"namespace","singleSelection":{"!description":"If set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.","!category":"enum","!type":"Boolean"},"additionalTextButton0":{"!description":"Additional text of the first button (normally day)","!category":"enum","!type":"String"},"intervalMinutes":{"!description":"Size of on time interval in minutes, default is 60 minutes.\n\n<b>Note:<\/b> the start of the interval calculation is always <code>startDat<\/code> at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>DatesRow<\/code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.","!category":"enum","!type":"Number"},"additionalTextButton1":{"!description":"Additional text of the second button (normally month)","!category":"enum","!type":"String"},"additionalTextButton2":{"!description":"Additional text of the third button (normally year)","!category":"enum","!type":"String"},"years":{"!description":"number of displayed years","!category":"enum","!type":"Number"},"Month":"sap.ui.unified.calendar.Month_obj","YearPicker":"sap.ui.unified.calendar.YearPicker_obj","nonWorkingDays":{"!description":"If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.","!category":"enum","!type":"[Number]"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"MonthPicker":"sap.ui.unified.calendar.MonthPicker_obj","primaryCalendarType":{"!description":"If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.","!category":"enum","!type":"sap.ui.core.CalendarType"},"enabledNext":{"!description":"Enables the Next button","!category":"enum","!type":"Boolean"},"!description":"Calendar Utility Class","ariaLabelButton0":{"!description":"aria-label of the first button (normally day)","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"months":{"!description":"Number of months displayed","!category":"enum","!type":"Number"},"secondaryCalendarType":{"!description":"If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type","!category":"enum","!type":"sap.ui.core.CalendarType"},"showHeader":{"!description":"If set, a header with the years is shown to visualize what month belongs to what year.","!category":"enum","!type":"Boolean"},"ariaLabelButton2":{"!description":"aria-label of the third button (normally year)","!category":"enum","!type":"String"},"ariaLabelButton1":{"!description":"aria-label of the second button (normally month)","!category":"enum","!type":"String"},"visibleButton1":{"!description":"If set, the second button will be displayed","!category":"enum","!type":"Boolean"},"visibleButton0":{"!description":"If set, the first button will be displayed\n\n<b>Note:<\/b> The default is set to false to be compatible to older versions","!category":"enum","!type":"Boolean"},"visibleButton2":{"!description":"If set, the third button will be displayed","!category":"enum","!type":"Boolean"},"showDayNamesLine":{"!description":"If set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.","!category":"enum","!type":"Boolean"},"Header":"sap.ui.unified.calendar.Header_obj","!module":"sap/ui/unified/calendar/CalendarUtils","month":{"!description":"The month is initial focused and selected\nThe value must be between 0 and 11","!category":"enum","!type":"Number"},"!helpDescription":"Calendar Utility Class","DatesRow":"sap.ui.unified.calendar.DatesRow_obj","firstDayOfWeek":{"!description":"If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.","!category":"enum","!type":"Number"},"width":{"!description":"Width of Month","!category":"enum","!type":"sap.ui.core.CSSSize"},"days":{"!description":"number of days displayed","!category":"enum","!type":"Number"},"enabledPrevious":{"!description":"Enables the previous button","!category":"enum","!type":"Boolean"},"items":{"!description":"Number of time items displayed","!category":"enum","!type":"Number"},"startDate":{"!description":"Start date, as JavaScript Date object, of the row.","!category":"enum","!type":"Object"}},"sap.ui.unified.Shell":{"addCurtainPaneContent":{"!description":"Adds some curtainPaneContent to the aggregation <code>curtainPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCurtainPaneContent: sap.ui.core.Control) -> sap.ui.unified.Shell","parameters":{"oCurtainPaneContent":"type: sap.ui.core.Control, description: the curtainPaneContent to add; if empty, nothing is inserted"}},"indexOfCurtainContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>curtainContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCurtainContent: sap.ui.core.Control) -> Number","parameters":{"oCurtainContent":"type: sap.ui.core.Control, description: The curtainContent whose index is looked for"}},"setHeader":{"!description":"Setter for the aggregated <code>header<\/code>.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.unified.Shell","parameters":{"oHeader":"type: sap.ui.core.Control, description: The Control which should be rendered within the Shell header or <code>null<\/code> to render the default Shell header."}},"getSearch":{"!description":"Gets content of aggregation <code>search<\/code>.\n\nExperimental (This aggregation might change in future!): The search control which should be displayed in the shell header. If a custom header is set this aggregation has no effect.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getCurtainPaneContent":{"!description":"Gets content of aggregation <code>curtainPaneContent<\/code>.\n\nThe content to appear in the pane area of the curtain.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowCurtain":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Curtain is deprecated and replaced by ShellOverlay mechanism.<br>Sets a new value for property <code>showCurtain<\/code>.\n\nShows / Hides the curtain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowCurtain: Boolean) -> sap.ui.unified.Shell","parameters":{"bShowCurtain":"type: boolean, description: New value for property <code>showCurtain<\/code>"}},"setUser":{"!description":"Sets the aggregated <code>user<\/code>.","!static":false,"!category":"function","!type":"fn(oUser: sap.ui.unified.ShellHeadUserItem) -> sap.ui.unified.Shell","parameters":{"oUser":"type: sap.ui.unified.ShellHeadUserItem, description: The user to set"}},"addHeadEndItem":{"!description":"Adds some headEndItem to the aggregation <code>headEndItems<\/code>.","!static":false,"!category":"function","!type":"fn(oHeadEndItem: sap.ui.unified.ShellHeadItem) -> sap.ui.unified.Shell","parameters":{"oHeadEndItem":"type: sap.ui.unified.ShellHeadItem, description: the headEndItem to add; if empty, nothing is inserted"}},"!description":"The shell control is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.Shell.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllCurtainPaneContent":{"!description":"Removes all the controls from the aggregation <code>curtainPaneContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeadItems":{"!description":"Gets content of aggregation <code>headItems<\/code>.\n\nThe buttons shown in the begin (left in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported. If a custom header is set this aggregation has no effect.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.ShellHeadItem]"},"indexOfHeadEndItem":{"!description":"Checks for the provided <code>sap.ui.unified.ShellHeadItem<\/code> in the aggregation <code>headEndItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeadEndItem: sap.ui.unified.ShellHeadItem) -> Number","parameters":{"oHeadEndItem":"type: sap.ui.unified.ShellHeadItem, description: The headEndItem whose index is looked for"}},"removeAllHeadItems":{"!description":"Removes all the controls from the aggregation <code>headItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.ShellHeadItem]"},"removeAllHeadEndItems":{"!description":"Removes all the controls from the aggregation <code>headEndItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.ShellHeadItem]"},"destroyHeadEndItems":{"!description":"Destroys all the headEndItems in the aggregation <code>headEndItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Shell"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.Shell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.ShellLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe application icon. If a custom header is set this property has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.unified.Shell","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"destroyUser":{"!description":"Destroys the user in the aggregation <code>user<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Shell"},"addHeadItem":{"!description":"Adds some headItem to the aggregation <code>headItems<\/code>.","!static":false,"!category":"function","!type":"fn(oHeadItem: sap.ui.unified.ShellHeadItem) -> sap.ui.unified.Shell","parameters":{"oHeadItem":"type: sap.ui.unified.ShellHeadItem, description: the headItem to add; if empty, nothing is inserted"}},"removeHeadEndItem":{"!description":"Removes a headEndItem from the aggregation <code>headEndItems<\/code>.","!static":false,"!category":"function","!type":"fn(vHeadEndItem: Number | String | sap.ui.unified.ShellHeadItem) -> sap.ui.unified.ShellHeadItem","parameters":{"vHeadEndItem":"type: int|string|sap.ui.unified.ShellHeadItem, description: The headEndItemto remove or its index or id"}},"!module":"sap/ui/unified/Shell","!helpDescription":"The shell control is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase.","destroyCurtainContent":{"!description":"Destroys all the curtainContent in the aggregation <code>curtainContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Shell"},"removeCurtainContent":{"!description":"Removes a curtainContent from the aggregation <code>curtainContent<\/code>.","!static":false,"!category":"function","!type":"fn(vCurtainContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vCurtainContent":"type: int|string|sap.ui.core.Control, description: The curtainContentto remove or its index or id"}},"getShowCurtain":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Curtain is deprecated and replaced by ShellOverlay mechanism.<br>Gets current value of property <code>showCurtain<\/code>.\n\nShows / Hides the curtain.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertHeadItem":{"!description":"Inserts a headItem into the aggregation <code>headItems<\/code>.","!static":false,"!category":"function","!type":"fn(oHeadItem: sap.ui.unified.ShellHeadItem, iIndex: Number) -> sap.ui.unified.Shell","parameters":{"oHeadItem":"type: sap.ui.unified.ShellHeadItem, description: the headItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the headItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the headItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headItem is inserted at\n             the last position"}},"removeCurtainPaneContent":{"!description":"Removes a curtainPaneContent from the aggregation <code>curtainPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(vCurtainPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vCurtainPaneContent":"type: int|string|sap.ui.core.Control, description: The curtainPaneContentto remove or its index or id"}},"indexOfCurtainPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>curtainPaneContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCurtainPaneContent: sap.ui.core.Control) -> Number","parameters":{"oCurtainPaneContent":"type: sap.ui.core.Control, description: The curtainPaneContent whose index is looked for"}},"addCurtainContent":{"!description":"Adds some curtainContent to the aggregation <code>curtainContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCurtainContent: sap.ui.core.Control) -> sap.ui.unified.Shell","parameters":{"oCurtainContent":"type: sap.ui.core.Control, description: the curtainContent to add; if empty, nothing is inserted"}},"getUser":{"!description":"Gets content of aggregation <code>user<\/code>.\n\nThe user item which is rendered in the shell header beside the items. If a custom header is set this aggregation has no effect.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ShellHeadUserItem"},"removeHeadItem":{"!description":"Removes a headItem from the aggregation <code>headItems<\/code>.","!static":false,"!category":"function","!type":"fn(vHeadItem: Number | String | sap.ui.unified.ShellHeadItem) -> sap.ui.unified.ShellHeadItem","parameters":{"vHeadItem":"type: int|string|sap.ui.unified.ShellHeadItem, description: The headItemto remove or its index or id"}},"!proto":"sap.ui.unified.ShellLayout","!category":"class","setShowCurtainPane":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Curtain is deprecated and replaced by ShellOverlay mechanism.<br>Sets a new value for property <code>showCurtainPane<\/code>.\n\nShows / Hides the side pane on the curtain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowCurtainPane: Boolean) -> sap.ui.unified.Shell","parameters":{"bShowCurtainPane":"type: boolean, description: New value for property <code>showCurtainPane<\/code>"}},"insertHeadEndItem":{"!description":"Inserts a headEndItem into the aggregation <code>headEndItems<\/code>.","!static":false,"!category":"function","!type":"fn(oHeadEndItem: sap.ui.unified.ShellHeadItem, iIndex: Number) -> sap.ui.unified.Shell","parameters":{"oHeadEndItem":"type: sap.ui.unified.ShellHeadItem, description: the headEndItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the headEndItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the headEndItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headEndItem is inserted at\n             the last position"}},"!constructorDescription":"Constructor for a new Shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getShowCurtain showCurtain} : boolean<\/li>\n<li>{@link #getShowCurtainPane showCurtainPane} : boolean<\/li>\n<li>{@link #getSearchVisible searchVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCurtainContent curtainContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getCurtainPaneContent curtainPaneContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getHeadItems headItems} : sap.ui.unified.ShellHeadItem[]<\/li>\n<li>{@link #getHeadEndItems headEndItems} : sap.ui.unified.ShellHeadItem[]<\/li>\n<li>{@link #getSearch search} : sap.ui.core.Control<\/li>\n<li>{@link #getUser user} : sap.ui.unified.ShellHeadUserItem<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.unified.ShellLayout#constructor sap.ui.unified.ShellLayout}\ncan be used as well.","destroySearch":{"!description":"Destroys the search in the aggregation <code>search<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Shell"},"getSearchVisible":{"!description":"Gets current value of property <code>searchVisible<\/code>.\n\nIf set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowCurtainPane":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Curtain is deprecated and replaced by ShellOverlay mechanism.<br>Gets current value of property <code>showCurtainPane<\/code>.\n\nShows / Hides the side pane on the curtain.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllCurtainContent":{"!description":"Removes all the controls from the aggregation <code>curtainContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyHeadItems":{"!description":"Destroys all the headItems in the aggregation <code>headItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Shell"},"insertCurtainContent":{"!description":"Inserts a curtainContent into the aggregation <code>curtainContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCurtainContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.Shell","parameters":{"oCurtainContent":"type: sap.ui.core.Control, description: the curtainContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the curtainContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the curtainContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the curtainContent is inserted at\n             the last position"}},"setSearchVisible":{"!description":"Sets a new value for property <code>searchVisible<\/code>.\n\nIf set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSearchVisible: Boolean) -> sap.ui.unified.Shell","parameters":{"bSearchVisible":"type: boolean, description: New value for property <code>searchVisible<\/code>"}},"getCurtainContent":{"!description":"Gets content of aggregation <code>curtainContent<\/code>.\n\nThe content to appear in the curtain area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSearch":{"!description":"Sets the aggregated <code>search<\/code>.","!static":false,"!category":"function","!type":"fn(oSearch: sap.ui.core.Control) -> sap.ui.unified.Shell","parameters":{"oSearch":"type: sap.ui.core.Control, description: The search to set"}},"destroyCurtainPaneContent":{"!description":"Destroys all the curtainPaneContent in the aggregation <code>curtainPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Shell"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe application icon. If a custom header is set this property has no effect.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"insertCurtainPaneContent":{"!description":"Inserts a curtainPaneContent into the aggregation <code>curtainPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCurtainPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.Shell","parameters":{"oCurtainPaneContent":"type: sap.ui.core.Control, description: the curtainPaneContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the curtainPaneContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the curtainPaneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the curtainPaneContent is inserted at\n             the last position"}},"destroyHeader":{"!description":"Destroys the header in the aggregation named <code>header<\/code>, but only if a custom header is set.\nThe default header can not be destroyed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Shell"},"indexOfHeadItem":{"!description":"Checks for the provided <code>sap.ui.unified.ShellHeadItem<\/code> in the aggregation <code>headItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeadItem: sap.ui.unified.ShellHeadItem) -> Number","parameters":{"oHeadItem":"type: sap.ui.unified.ShellHeadItem, description: The headItem whose index is looked for"}},"getHeadEndItems":{"!description":"Gets content of aggregation <code>headEndItems<\/code>.\n\nThe buttons shown in the end (right in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported (when user is set only 1). If a custom header is set this aggregation has no effect.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.ShellHeadItem]"}},"sap.ui.unified.CalendarRow":{"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date, as JavaScript Date object, of the row. As default, the current date is used.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>appointment<\/code> of type <code>sap.ui.unified.CalendarAppointment<\/code>selected appointment<\/li>\n<li><code>appointments<\/code> of type <code>sap.ui.unified.CalendarAppointment[]<\/code>selected appointments in case a group appointment is selected<\/li>\n<li><code>multiSelect<\/code> of type <code>boolean<\/code>If set, the appointment was selected by multiple selection (e.g. shift + mouse click).\nSo more than the current appointment could be selected.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow<\/code> itself.\n\nFired if an appointment was selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setIntervalType":{"!description":"Sets a new value for property <code>intervalType<\/code>.\n\nType of the intervals of the row. The default is one hour.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hour<\/code>.","!static":false,"!category":"function","!type":"fn(sIntervalType: sap.ui.unified.CalendarIntervalType) -> sap.ui.unified.CalendarRow","parameters":{"sIntervalType":"type: sap.ui.unified.CalendarIntervalType, description: New value for property <code>intervalType<\/code>"}},"getShowIntervalHeaders":{"!description":"Gets current value of property <code>showIntervalHeaders<\/code>.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders<\/code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders<\/code> are assigned.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNonWorkingDays":{"!description":"Sets a new value for property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:<\/b> The non working days are only visualized if <code>intervalType<\/code> is set to day.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNonWorkingDays: [Number]) -> sap.ui.unified.CalendarRow","parameters":{"sNonWorkingDays":"type: int[], description: New value for property <code>nonWorkingDays<\/code>"}},"setNonWorkingHours":{"!description":"Sets a new value for property <code>nonWorkingHours<\/code>.\n\nIf set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:<\/b> The non working hours are only visualized if <code>intervalType<\/code> is set to hour.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNonWorkingHours: [Number]) -> sap.ui.unified.CalendarRow","parameters":{"sNonWorkingHours":"type: int[], description: New value for property <code>nonWorkingHours<\/code>"}},"fireStartDateChange":{"!description":"Fires event <code>startDateChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"focusAppointment":{"!description":"Focus the given <code>CalendarAppointment<\/code> in the <code>CalendarRow<\/code>.","!static":false,"!category":"function","!type":"fn(oAppointment: CalendarAppointment) -> sap.ui.unified.CalendarRow","parameters":{"oAppointment":"type: CalendarAppointment, description: Appointment to be focused."}},"getFocusedAppointment":{"!description":"Returns the focused <code>CalendarAppointment<\/code> of the <code>CalendarRow<\/code>.\n\nThe focus must not really be on the <code>CalendarAppointment<\/code>, it have just to\nbe the one that has the focus when the <code>CalendarRow<\/code> was focused last time.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarAppointment"},"indexOfAppointment":{"!description":"Checks for the provided <code>sap.ui.unified.CalendarAppointment<\/code> in the aggregation <code>appointments<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAppointment: sap.ui.unified.CalendarAppointment) -> Number","parameters":{"oAppointment":"type: sap.ui.unified.CalendarAppointment, description: The appointment whose index is looked for"}},"setCheckResize":{"!description":"Sets a new value for property <code>checkResize<\/code>.\n\nIf set, the <code>CalendarRow<\/code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow<\/code> controls are used in one container control (like <code>PlanningCalendar<\/code>).\nthe resize checks should be done only by this container control. Then the container control should\ncall <code>handleResize<\/code> of the <code>CalendarRow<\/code> if a resize happens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bCheckResize: Boolean) -> sap.ui.unified.CalendarRow","parameters":{"bCheckResize":"type: boolean, description: New value for property <code>checkResize<\/code>"}},"!description":"A calendar row with an header and appointments. The Appointments will be placed in the defined interval.","setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date, as JavaScript Date object, of the row. As default, the current date is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.CalendarRow","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"getAppointments":{"!description":"Gets content of aggregation <code>appointments<\/code>.\n\nAppointments to be displayed in the row. Appointments outside the visible time frame are not rendered.\n\n<b>Note:<\/b> For performance reasons, only appointments in the visible time range or nearby should be assigned.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.CalendarRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachIntervalSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>intervalSelect<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow<\/code> itself.\n\nFired if an interval was selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addAppointment":{"!description":"Adds some appointment to the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn(oAppointment: sap.ui.unified.CalendarAppointment) -> sap.ui.unified.CalendarRow","parameters":{"oAppointment":"type: sap.ui.unified.CalendarAppointment, description: the appointment to add; if empty, nothing is inserted"}},"updateCurrentTimeVisualization":{"!description":"If the current time is in the visible output of the <code>CalendarRow<\/code>,\nthe indicator for the current time must be positioned.\n\nFor this, each <code>CalendarRow<\/code> can trigger a timer.\nBut if multiple <code>CalendarRow<\/code>s are used in one container (e.G. <code>PlanningCalendar<\/code>),\nit is better if the container triggers the interval once an then calls this function\nof each <code>CalendarRow<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarRow"},"setUpdateCurrentTime":{"!description":"Sets a new value for property <code>updateCurrentTime<\/code>.\n\nIf set the <code>CalendarRow<\/code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow<\/code> controls are used in one container control (like <code>PlanningCalendar<\/code>)\nthe periodic update should be triggered only by this container control. Then the container control should\ncall <code>updateCurrentTimeVisualization<\/code> of the <code>CalendarRow<\/code> to update the visualization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUpdateCurrentTime: Boolean) -> sap.ui.unified.CalendarRow","parameters":{"bUpdateCurrentTime":"type: boolean, description: New value for property <code>updateCurrentTime<\/code>"}},"getIntervalHeaders":{"!description":"Gets content of aggregation <code>intervalHeaders<\/code>.\n\nAppointments to be displayed in the top of the intervals. The <code>intervalHeaders<\/code> are used to visualize\npublic holidays and similar things.\n\nAppointments outside the visible time frame are not rendered.\n\nThe <code>intervalHeaders<\/code> always fill whole intervals. If they are shorter than one interval, they are not displayed.\n\n<b>Note:<\/b> For performance reasons, only appointments in the visible time range or nearby should be assigned.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"getAppointmentsReducedHeight":{"!description":"Gets current value of property <code>appointmentsReducedHeight<\/code>.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:<\/b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addIntervalHeader":{"!description":"Adds some intervalHeader to the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn(oIntervalHeader: sap.ui.unified.CalendarAppointment) -> sap.ui.unified.CalendarRow","parameters":{"oIntervalHeader":"type: sap.ui.unified.CalendarAppointment, description: the intervalHeader to add; if empty, nothing is inserted"}},"attachLeaveRow":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>leaveRow<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow<\/code> itself.\n\nThe <code>CalendarRow<\/code> should be left while navigating. (Arrow up or arrow down.)\nThe caller should determine the next control to be focused","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the row\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.unified.CalendarRow","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getNonWorkingDays":{"!description":"Gets current value of property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:<\/b> The non working days are only visualized if <code>intervalType<\/code> is set to day.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"setIntervals":{"!description":"Sets a new value for property <code>intervals<\/code>.\n\nNumber of displayed intervals. The size of the intervals is defined with <code>intervalType<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn(iIntervals: Number) -> sap.ui.unified.CalendarRow","parameters":{"iIntervals":"type: int, description: New value for property <code>intervals<\/code>"}},"!module":"sap/ui/unified/CalendarRow","!helpDescription":"A calendar row with an header and appointments. The Appointments will be placed in the defined interval.","setShowSubIntervals":{"!description":"Sets a new value for property <code>showSubIntervals<\/code>.\n\nIf set, subintervals are shown.\n\nIf the interval type is <code>Hour<\/code>, quarter hours are shown.\n\nIf the interval type is <code>Day<\/code>, hours are shown.\n\nIf the interval type is <code>Month<\/code>, days are shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSubIntervals: Boolean) -> sap.ui.unified.CalendarRow","parameters":{"bShowSubIntervals":"type: boolean, description: New value for property <code>showSubIntervals<\/code>"}},"destroyIntervalHeaders":{"!description":"Destroys all the intervalHeaders in the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarRow"},"getCheckResize":{"!description":"Gets current value of property <code>checkResize<\/code>.\n\nIf set, the <code>CalendarRow<\/code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow<\/code> controls are used in one container control (like <code>PlanningCalendar<\/code>).\nthe resize checks should be done only by this container control. Then the container control should\ncall <code>handleResize<\/code> of the <code>CalendarRow<\/code> if a resize happens.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAppointment":{"!description":"Removes a appointment from the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn(vAppointment: Number | String | sap.ui.unified.CalendarAppointment) -> sap.ui.unified.CalendarAppointment","parameters":{"vAppointment":"type: int|string|sap.ui.unified.CalendarAppointment, description: The appointmentto remove or its index or id"}},"getNonWorkingHours":{"!description":"Gets current value of property <code>nonWorkingHours<\/code>.\n\nIf set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:<\/b> The non working hours are only visualized if <code>intervalType<\/code> is set to hour.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"removeIntervalHeader":{"!description":"Removes a intervalHeader from the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn(vIntervalHeader: Number | String | sap.ui.unified.CalendarAppointment) -> sap.ui.unified.CalendarAppointment","parameters":{"vIntervalHeader":"type: int|string|sap.ui.unified.CalendarAppointment, description: The intervalHeaderto remove or its index or id"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getUpdateCurrentTime":{"!description":"Gets current value of property <code>updateCurrentTime<\/code>.\n\nIf set the <code>CalendarRow<\/code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow<\/code> controls are used in one container control (like <code>PlanningCalendar<\/code>)\nthe periodic update should be triggered only by this container control. Then the container control should\ncall <code>updateCurrentTimeVisualization<\/code> of the <code>CalendarRow<\/code> to update the visualization.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachStartDateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>startDateChange<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow<\/code> itself.\n\n<code>startDate<\/code> was changed while navigating in <code>CalendarRow<\/code>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowSubIntervals":{"!description":"Gets current value of property <code>showSubIntervals<\/code>.\n\nIf set, subintervals are shown.\n\nIf the interval type is <code>Hour<\/code>, quarter hours are shown.\n\nIf the interval type is <code>Day<\/code>, hours are shown.\n\nIf the interval type is <code>Month<\/code>, days are shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachLeaveRow":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>leaveRow<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the row","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowIntervalHeaders":{"!description":"Sets a new value for property <code>showIntervalHeaders<\/code>.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders<\/code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders<\/code> are assigned.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIntervalHeaders: Boolean) -> sap.ui.unified.CalendarRow","parameters":{"bShowIntervalHeaders":"type: boolean, description: New value for property <code>showIntervalHeaders<\/code>"}},"setAppointmentsReducedHeight":{"!description":"Sets a new value for property <code>appointmentsReducedHeight<\/code>.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:<\/b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAppointmentsReducedHeight: Boolean) -> sap.ui.unified.CalendarRow","parameters":{"bAppointmentsReducedHeight":"type: boolean, description: New value for property <code>appointmentsReducedHeight<\/code>"}},"setShowEmptyIntervalHeaders":{"!description":"Sets a new value for property <code>showEmptyIntervalHeaders<\/code>.\n\nIf set, interval headers are shown even if no <code>intervalHeaders<\/code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders<\/code> are assigned.\n\n<b>Note:<\/b> This property is only used if <code>showIntervalHeaders<\/code> is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEmptyIntervalHeaders: Boolean) -> sap.ui.unified.CalendarRow","parameters":{"bShowEmptyIntervalHeaders":"type: boolean, description: New value for property <code>showEmptyIntervalHeaders<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the row","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>CalendarRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getIntervals intervals} : int (default: 12)<\/li>\n<li>{@link #getIntervalType intervalType} : sap.ui.unified.CalendarIntervalType (default: Hour)<\/li>\n<li>{@link #getShowSubIntervals showSubIntervals} : boolean (default: false)<\/li>\n<li>{@link #getShowIntervalHeaders showIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getShowEmptyIntervalHeaders showEmptyIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getNonWorkingDays nonWorkingDays} : int[]<\/li>\n<li>{@link #getNonWorkingHours nonWorkingHours} : int[]<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getCheckResize checkResize} : boolean (default: true)<\/li>\n<li>{@link #getUpdateCurrentTime updateCurrentTime} : boolean (default: true)<\/li>\n<li>{@link #getAppointmentsReducedHeight appointmentsReducedHeight} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAppointments appointments} : sap.ui.unified.CalendarAppointment[]<\/li>\n<li>{@link #getIntervalHeaders intervalHeaders} : sap.ui.unified.CalendarAppointment[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:startDateChange startDateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:leaveRow leaveRow} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:intervalSelect intervalSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.CalendarRow","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"fireLeaveRow":{"!description":"Fires event <code>leaveRow<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>type<\/code> of type <code>string<\/code>The type of the event that triggers this <code>leaveRow<\/code><\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireIntervalSelect":{"!description":"Fires event <code>intervalSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>startDate<\/code> of type <code>object<\/code>Interval start date as JavaScript date object<\/li>\n<li><code>endDate<\/code> of type <code>object<\/code>Interval end date as JavaScript date object<\/li>\n<li><code>subInterval<\/code> of type <code>boolean<\/code>If set, the selected interval is a subinterval<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeAllAppointments":{"!description":"Removes all the controls from the aggregation <code>appointments<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"detachIntervalSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>intervalSelect<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertIntervalHeader":{"!description":"Inserts a intervalHeader into the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn(oIntervalHeader: sap.ui.unified.CalendarAppointment, iIndex: Number) -> sap.ui.unified.CalendarRow","parameters":{"oIntervalHeader":"type: sap.ui.unified.CalendarAppointment, description: the intervalHeader to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the intervalHeader should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the intervalHeader is inserted at position 0; for a value\n             greater than the current size of the aggregation, the intervalHeader is inserted at\n             the last position"}},"handleResize":{"!description":"After a resize of the <code>CalendarRow<\/code>, some calculations for appointment\nsizes are needed.\n\nFor this, each <code>CalendarRow<\/code> can trigger the resize check for it's own DOM.\nBut if multiple <code>CalendarRow<\/code>s are used in one container (e.g. <code>PlanningCalendar<\/code>),\nit is better if the container triggers the resize check once an then calls this function\nof each <code>CalendarRow<\/code>.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event) -> sap.ui.unified.CalendarRow","parameters":{"oEvent":"type: jQuery.Event, description: The event object of the resize handler."}},"indexOfIntervalHeader":{"!description":"Checks for the provided <code>sap.ui.unified.CalendarAppointment<\/code> in the aggregation <code>intervalHeaders<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oIntervalHeader: sap.ui.unified.CalendarAppointment) -> Number","parameters":{"oIntervalHeader":"type: sap.ui.unified.CalendarAppointment, description: The intervalHeader whose index is looked for"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"removeAllIntervalHeaders":{"!description":"Removes all the controls from the aggregation <code>intervalHeaders<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"insertAppointment":{"!description":"Inserts a appointment into the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn(oAppointment: sap.ui.unified.CalendarAppointment, iIndex: Number) -> sap.ui.unified.CalendarRow","parameters":{"oAppointment":"type: sap.ui.unified.CalendarAppointment, description: the appointment to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the appointment should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the appointment is inserted at position 0; for a value\n             greater than the current size of the aggregation, the appointment is inserted at\n             the last position"}},"focusNearestAppointment":{"!description":"Focus the <code>CalendarAppointment<\/code> in the <code>CalendarRow<\/code> that is nearest to\nthe given date.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.CalendarRow","parameters":{"oDate":"type: object, description: Javascript Date object."}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the row\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.unified.CalendarRow","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIntervals":{"!description":"Gets current value of property <code>intervals<\/code>.\n\nNumber of displayed intervals. The size of the intervals is defined with <code>intervalType<\/code>\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getShowEmptyIntervalHeaders":{"!description":"Gets current value of property <code>showEmptyIntervalHeaders<\/code>.\n\nIf set, interval headers are shown even if no <code>intervalHeaders<\/code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders<\/code> are assigned.\n\n<b>Note:<\/b> This property is only used if <code>showIntervalHeaders<\/code> is set to true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIntervalType":{"!description":"Gets current value of property <code>intervalType<\/code>.\n\nType of the intervals of the row. The default is one hour.\n\nDefault value is <code>Hour<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarIntervalType"},"detachStartDateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>startDateChange<\/code> event of this <code>sap.ui.unified.CalendarRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyAppointments":{"!description":"Destroys all the appointments in the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarRow"}},"sap.ui.unified.Currency":{"!description":"A text view which displays currency values and aligns them at the separator","getCurrency":{"!description":"Gets current value of property <code>currency<\/code>.\n\nDetermines the displayed currency code (ISO 4217).\n<b>Note: <\/b>If a * character is set instead of currency code,\nonly the character itself will be rendered, ignoring the <code>value<\/code> property.","!static":false,"!category":"function","!type":"fn() -> String"},"init":{"!description":"Initializes the control.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.Currency.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getMaxPrecision":{"!description":"Gets current value of property <code>maxPrecision<\/code>.\n\nDefines the space that is available for the precision of the various currencies.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getUseSymbol":{"!description":"Gets current value of property <code>useSymbol<\/code>.\n\nShow the currency symbol instead of the ISO currency code\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrencySymbol":{"!description":"Get symbol of the currency, if available","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","getFormattedValue":{"!description":"The formatted value","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.unified.Currency with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe currency value\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new Currency.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getCurrency currency} : string<\/li>\n<li>{@link #getMaxPrecision maxPrecision} : int (default: 3)<\/li>\n<li>{@link #getUseSymbol useSymbol} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/unified/Currency","!helpDescription":"A text view which displays currency values and aligns them at the separator"},"sap.ui.unified.MenuTextFieldItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.MenuTextFieldItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.MenuTextFieldItem"},"sap.ui.unified.SplitContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.SplitContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.SplitContainer"},"sap.ui.unified.calendar.MonthsRow":{"attachFocus":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>focus<\/code> event of this <code>sap.ui.unified.calendar.MonthsRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthsRow<\/code> itself.\n\nMonth focus changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthsRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSingleSelection":{"!description":"Sets a new value for property <code>singleSelection<\/code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleSelection: Boolean) -> sap.ui.unified.calendar.MonthsRow","parameters":{"bSingleSelection":"type: boolean, description: New value for property <code>singleSelection<\/code>"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.MonthsRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeSpecialDate":{"!description":"Removes a specialDate from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSpecialDate: Number | String | sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"vSpecialDate":"type: int|string|sap.ui.unified.DateTypeRange, description: The specialDateto remove or its index or id"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.calendar.MonthsRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthsRow<\/code> itself.\n\nMonth selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthsRow<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","getMonths":{"!description":"Gets current value of property <code>months<\/code>.\n\nNumber of months displayed\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"addSelectedDate":{"!description":"Adds some selectedDate to the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to add; if empty, nothing is inserted"}},"fireFocus":{"!description":"Fires event <code>focus<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>date<\/code> of type <code>object<\/code>First date, as JavaScript Date object, of the month that is focused.<\/li>\n<li><code>notVisible<\/code> of type <code>boolean<\/code>If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.MonthsRow","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate ranges with type to visualize special months in the row.\nIf one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:<\/b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateTypeRange<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> Number","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The specialDate whose index is looked for"}},"getIntervalSelection":{"!description":"Gets current value of property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>MonthsRow<\/code>.\nIt shows a calendar with month granularity\n\n<b>Note:<\/b> This is used inside the CalendarMonthInterval, not for standalone usage.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDate date} : object<\/li>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getMonths months} : int (default: 12)<\/li>\n<li>{@link #getIntervalSelection intervalSelection} : boolean (default: false)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSelectedDates selectedDates} : sap.ui.unified.DateRange[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:focus focus} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.calendar.MonthsRow","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"addSpecialDate":{"!description":"Adds some specialDate to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is inserted"}},"getSelectedDates":{"!description":"Gets content of aggregation <code>selectedDates<\/code>.\n\nDate ranges for selected dates.\nIf <code>singleSelection<\/code> is set, only the first entry is used.\n\n<b>Note:<\/b> Even if only one day is selected, the whole corresponding month is selected.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"setLegend":{"!description":"Sets the associated <code>legend<\/code>.","!static":false,"!category":"function","!type":"fn(oLegend: sap.ui.unified.CalendarLegend) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oLegend":"type: sap.ui.unified.CalendarLegend, description: Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"}},"destroySelectedDates":{"!description":"Destroys all the selectedDates in the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.MonthsRow"},"getDate":{"!description":"Gets current value of property <code>date<\/code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate<\/code> + <code>months<\/code> in the rendering phase,\nit is set to the <code>startDate<\/code>.\nSo after setting the <code>startDate<\/code> the date should be set to be in the visible range.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSelectedDate":{"!description":"Removes a selectedDate from the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSelectedDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vSelectedDate":"type: int|string|sap.ui.unified.DateRange, description: The selectedDateto remove or its index or id"}},"setIntervalSelection":{"!description":"Sets a new value for property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIntervalSelection: Boolean) -> sap.ui.unified.calendar.MonthsRow","parameters":{"bIntervalSelection":"type: boolean, description: New value for property <code>intervalSelection<\/code>"}},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.ui.unified.calendar.MonthsRow","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.MonthsRow"},"!description":"Renders a row of months using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarMonthInterval.\nIf used inside the CalendarMonthInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...).\n\nThe MontsRow works with JavaScript Date objects, but only the month and the year are used to display and interact.\nAs representation for a month, the 1st of the month will always be returned in the API.","getLegend":{"!description":"ID of the element which is the current target of the association <code>legend<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarLegend"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.calendar.MonthsRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllSelectedDates":{"!description":"Removes all the controls from the aggregation <code>selectedDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"setMonths":{"!description":"Sets a new value for property <code>months<\/code>.\n\nNumber of months displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn(iMonths: Number) -> sap.ui.unified.calendar.MonthsRow","parameters":{"iMonths":"type: int, description: New value for property <code>months<\/code>"}},"insertSpecialDate":{"!description":"Inserts a specialDate into the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.MonthsRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/unified/calendar/MonthsRow","!helpDescription":"Renders a row of months using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarMonthInterval.\nIf used inside the CalendarMonthInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...).\n\nThe MontsRow works with JavaScript Date objects, but only the month and the year are used to display and interact.\nAs representation for a month, the 1st of the month will always be returned in the API.","checkDateFocusable":{"!description":"Checks if a date is focusable in the current rendered output.\nThis means that if it is not rendered, it is not focusable.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> Boolean","parameters":{"oDate":"type: object, description: JavaScript Date object for focused date."}},"detachFocus":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>focus<\/code> event of this <code>sap.ui.unified.calendar.MonthsRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"displayDate":{"!description":"Displays the month of a given date without setting the focus","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oDate":"type: object, description: JavaScript Date object for focused date."}},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"setDate":{"!description":"Sets a new value for property <code>date<\/code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate<\/code> + <code>months<\/code> in the rendering phase,\nit is set to the <code>startDate<\/code>.\nSo after setting the <code>startDate<\/code> the date should be set to be in the visible range.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oDate":"type: object, description: New value for property <code>date<\/code>"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.calendar.MonthsRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfSelectedDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>selectedDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> Number","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: The selectedDate whose index is looked for"}},"insertSelectedDate":{"!description":"Inserts a selectedDate into the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.calendar.MonthsRow","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"}},"getSingleSelection":{"!description":"Gets current value of property <code>singleSelection<\/code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.unified.ContentSwitcher":{"switchContent":{"!description":"Changes the currently active content to the other one. If content 1 is active, content 2 will\nbe activated and the other way around.","!static":false,"!category":"function","!type":"fn()"},"addContent1":{"!description":"Adds some content1 to the aggregation <code>content1<\/code>.","!static":false,"!category":"function","!type":"fn(oContent1: sap.ui.core.Control) -> sap.ui.unified.ContentSwitcher","parameters":{"oContent1":"type: sap.ui.core.Control, description: the content1 to add; if empty, nothing is inserted"}},"getContent2":{"!description":"Gets content of aggregation <code>content2<\/code>.\n\nThe controls that should be shown in the second content","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent2":{"!description":"Adds some content2 to the aggregation <code>content2<\/code>.","!static":false,"!category":"function","!type":"fn(oContent2: sap.ui.core.Control) -> sap.ui.unified.ContentSwitcher","parameters":{"oContent2":"type: sap.ui.core.Control, description: the content2 to add; if empty, nothing is inserted"}},"getContent1":{"!description":"Gets content of aggregation <code>content1<\/code>.\n\nThe controls that should be shown in the first content","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","removeAllContent1":{"!description":"Removes all the controls from the aggregation <code>content1<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllContent2":{"!description":"Removes all the controls from the aggregation <code>content2<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyContent1":{"!description":"Destroys all the content1 in the aggregation <code>content1<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ContentSwitcher"},"destroyContent2":{"!description":"Destroys all the content2 in the aggregation <code>content2<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ContentSwitcher"},"!constructorDescription":"Constructor for a new ContentSwitcher.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnimation animation} : string (default: None)<\/li>\n<li>{@link #getActiveContent activeContent} : int (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent1 content1} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent2 content2} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getAnimation":{"!description":"Gets current value of property <code>animation<\/code>.\n\nSet the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class.\nSee the types sap.ui.unified.ContentSwitcherAnimation for default implementations.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getActiveContent":{"!description":"Gets current value of property <code>activeContent<\/code>.\n\nThe number of the currently active content (1 or 2).\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeContent2":{"!description":"Removes a content2 from the aggregation <code>content2<\/code>.","!static":false,"!category":"function","!type":"fn(vContent2: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent2":"type: int|string|sap.ui.core.Control, description: The content2to remove or its index or id"}},"removeContent1":{"!description":"Removes a content1 from the aggregation <code>content1<\/code>.","!static":false,"!category":"function","!type":"fn(vContent1: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent1":"type: int|string|sap.ui.core.Control, description: The content1to remove or its index or id"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.ContentSwitcher.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setAnimation":{"!description":"Sets a new value for property <code>animation<\/code>.\n\nSet the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class.\nSee the types sap.ui.unified.ContentSwitcherAnimation for default implementations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sAnimation: String) -> sap.ui.unified.ContentSwitcher","parameters":{"sAnimation":"type: string, description: New value for property <code>animation<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ContentSwitcher with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setActiveContent":{"!description":"Sets a new value for property <code>activeContent<\/code>.\n\nThe number of the currently active content (1 or 2).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iActiveContent: Number) -> sap.ui.unified.ContentSwitcher","parameters":{"iActiveContent":"type: int, description: New value for property <code>activeContent<\/code>"}},"!module":"sap/ui/unified/ContentSwitcher","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","indexOfContent2":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content2<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent2: sap.ui.core.Control) -> Number","parameters":{"oContent2":"type: sap.ui.core.Control, description: The content2 whose index is looked for"}},"indexOfContent1":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content1<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent1: sap.ui.core.Control) -> Number","parameters":{"oContent1":"type: sap.ui.core.Control, description: The content1 whose index is looked for"}},"insertContent1":{"!description":"Inserts a content1 into the aggregation <code>content1<\/code>.","!static":false,"!category":"function","!type":"fn(oContent1: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.ContentSwitcher","parameters":{"oContent1":"type: sap.ui.core.Control, description: the content1 to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content1 should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content1 is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content1 is inserted at\n             the last position"}},"insertContent2":{"!description":"Inserts a content2 into the aggregation <code>content2<\/code>.","!static":false,"!category":"function","!type":"fn(oContent2: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.ContentSwitcher","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the content2 should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content2 is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content2 is inserted at\n             the last position","oContent2":"type: sap.ui.core.Control, description: the content2 to insert; if empty, nothing is inserted"}}},"sap.ui.unified.MenuItem":{"!description":"Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically.","extend":{"!description":"Creates a new subclass of class sap.ui.unified.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.unified.MenuItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.MenuItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MenuItem element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.unified.MenuItemBase#constructor sap.ui.unified.MenuItemBase}\ncan be used as well.","!module":"sap/ui/unified/MenuItem","!helpDescription":"Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically.","getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text which should be displayed on the item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.unified.MenuItemBase","!category":"class","getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text which should be displayed on the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.unified.MenuItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.unified.MenuItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.MenuItem"},"sap.ui.unified.CalendarIntervalType":{"!description":"Type of a interval in a <code>CalendarRow<\/code>.","Month":{"!description":"one code>CalendarRow<\/code> interval has the size of one Month","!category":"enum","!type":"String"},"!module":"sap/ui/unified/library","Hour":{"!description":"one code>CalendarRow<\/code> interval has the size of one hour","!category":"enum","!type":"String"},"!category":"static class","Day":{"!description":"one code>CalendarRow<\/code> interval has the size of one day","!category":"enum","!type":"String"}},"sap.ui.unified.calendar.YearPicker":{"setColumns":{"!description":"Sets a new value for property <code>columns<\/code>.\n\nnumber of years in each row\n0 means just to have all years in one row, independent of the number\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn(iColumns: Number) -> sap.ui.unified.calendar.YearPicker","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"previousPage":{"!description":"displays the previous page","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.YearPicker"},"detachPageChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pageChange<\/code> event of this <code>sap.ui.unified.calendar.YearPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.YearPicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.YearPicker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"nextPage":{"!description":"displays the next page","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.YearPicker"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.calendar.YearPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.YearPicker<\/code> itself.\n\nMonth selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.YearPicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.YearPicker<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","firePageChange":{"!description":"Fires event <code>pageChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.YearPicker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getColumns":{"!description":"Gets current value of property <code>columns<\/code>.\n\nnumber of years in each row\n0 means just to have all years in one row, independent of the number\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getPrimaryCalendarType":{"!description":"Gets current value of property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"setYears":{"!description":"Sets a new value for property <code>years<\/code>.\n\nnumber of displayed years\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn(iYears: Number) -> sap.ui.unified.calendar.YearPicker","parameters":{"iYears":"type: int, description: New value for property <code>years<\/code>"}},"!constructorDescription":"Constructor for a new YearPicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getYear year} : int (default: 2000)<\/li>\n<li>{@link #getYears years} : int (default: 20)<\/li>\n<li>{@link #getColumns columns} : int (default: 4)<\/li>\n<li>{@link #getDate date} : object<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pageChange pageChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getYears":{"!description":"Gets current value of property <code>years<\/code>.\n\nnumber of displayed years\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getDate":{"!description":"Gets current value of property <code>date<\/code>.\n\nDate as JavaScript Date object. For this date a <code>YearPicker<\/code> is rendered. If a Year is selected the\ndate is updated with the start date of the selected year (depending on the calendar type).","!static":false,"!category":"function","!type":"fn() -> Object"},"!description":"renders a YearPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage","setPrimaryCalendarType":{"!description":"Sets a new value for property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.unified.calendar.YearPicker","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.calendar.YearPicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFirstRenderedDate":{"!description":"return the first date of the first rendered year\n<b>Note:<\/b> If the YearPicker is not rendered no date is returned","!static":false,"!category":"function","!type":"fn() -> Object"},"setYear":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 Use <code>date<\/code> instead<br>Sets a new value for property <code>year<\/code>.\n\nThe year is initial focused and selected\nThe value must be between 0 and 9999\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>2000<\/code>.","!static":false,"!category":"function","!type":"fn(iYear: Number) -> sap.ui.unified.calendar.YearPicker","parameters":{"iYear":"type: int, description: New value for property <code>year<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.YearPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/unified/calendar/YearPicker","getYear":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 Use <code>date<\/code> instead<br>Gets current value of property <code>year<\/code>.\n\nThe year is initial focused and selected\nThe value must be between 0 and 9999\n\nDefault value is <code>2000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!helpDescription":"renders a YearPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage","attachPageChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pageChange<\/code> event of this <code>sap.ui.unified.calendar.YearPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.YearPicker<\/code> itself.\n\nThe <code>pageChange<\/code> event is fired if the displayed years are changed by user navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.YearPicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.YearPicker<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDate":{"!description":"Sets a new value for property <code>date<\/code>.\n\nDate as JavaScript Date object. For this date a <code>YearPicker<\/code> is rendered. If a Year is selected the\ndate is updated with the start date of the selected year (depending on the calendar type).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.YearPicker","parameters":{"oDate":"type: object, description: New value for property <code>date<\/code>"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.calendar.YearPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.YearPicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.unified.ShellHeadUserItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellHeadUserItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.ShellHeadUserItem"},"sap.ui.unified.calendar.Header":{"setTextButton0":{"!description":"Sets a new value for property <code>textButton0<\/code>.\n\nText of the first button (normally day)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTextButton0: String) -> sap.ui.unified.calendar.Header","parameters":{"sTextButton0":"type: string, description: New value for property <code>textButton0<\/code>"}},"setTextButton1":{"!description":"Sets a new value for property <code>textButton1<\/code>.\n\nText of the second button (normally month)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTextButton1: String) -> sap.ui.unified.calendar.Header","parameters":{"sTextButton1":"type: string, description: New value for property <code>textButton1<\/code>"}},"setTextButton2":{"!description":"Sets a new value for property <code>textButton2<\/code>.\n\nText of the third button (normally year)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTextButton2: String) -> sap.ui.unified.calendar.Header","parameters":{"sTextButton2":"type: string, description: New value for property <code>textButton2<\/code>"}},"!description":"renders a calendar header\n\nThe calendar header consists of 3 buttons where the text can be set and a previous and a next button.\nIn the normal calendar the first button contains the displayed day, the second button the displayed month and the third button the displayed year.\n\n<b>Note:<\/b> This is used inside the calendar. Not for standalone usage","detachPressButton2":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pressButton2<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.calendar.Header.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getEnabledPrevious":{"!description":"Gets current value of property <code>enabledPrevious<\/code>.\n\nEnables the previous button\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPressButton2":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pressButton2<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header<\/code> itself.\n\nThird button pressed (normally year)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachPressButton1":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pressButton1<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header<\/code> itself.\n\nSecond button pressed (normally month)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachPressButton0":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pressButton0<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header<\/code> itself.\n\nFirst button pressed (normally day)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.Header with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getTextButton0":{"!description":"Gets current value of property <code>textButton0<\/code>.\n\nText of the first button (normally day)","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/unified/calendar/Header","firePressButton2":{"!description":"Fires event <code>pressButton2<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.Header","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getTextButton1":{"!description":"Gets current value of property <code>textButton1<\/code>.\n\nText of the second button (normally month)","!static":false,"!category":"function","!type":"fn() -> String"},"setAdditionalTextButton2":{"!description":"Sets a new value for property <code>additionalTextButton2<\/code>.\n\nAdditional text of the third button (normally year)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalTextButton2: String) -> sap.ui.unified.calendar.Header","parameters":{"sAdditionalTextButton2":"type: string, description: New value for property <code>additionalTextButton2<\/code>"}},"!helpDescription":"renders a calendar header\n\nThe calendar header consists of 3 buttons where the text can be set and a previous and a next button.\nIn the normal calendar the first button contains the displayed day, the second button the displayed month and the third button the displayed year.\n\n<b>Note:<\/b> This is used inside the calendar. Not for standalone usage","firePressButton1":{"!description":"Fires event <code>pressButton1<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.Header","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getTextButton2":{"!description":"Gets current value of property <code>textButton2<\/code>.\n\nText of the third button (normally year)","!static":false,"!category":"function","!type":"fn() -> String"},"firePressButton0":{"!description":"Fires event <code>pressButton0<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.Header","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setAdditionalTextButton0":{"!description":"Sets a new value for property <code>additionalTextButton0<\/code>.\n\nAdditional text of the first button (normally day)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalTextButton0: String) -> sap.ui.unified.calendar.Header","parameters":{"sAdditionalTextButton0":"type: string, description: New value for property <code>additionalTextButton0<\/code>"}},"setAdditionalTextButton1":{"!description":"Sets a new value for property <code>additionalTextButton1<\/code>.\n\nAdditional text of the second button (normally month)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalTextButton1: String) -> sap.ui.unified.calendar.Header","parameters":{"sAdditionalTextButton1":"type: string, description: New value for property <code>additionalTextButton1<\/code>"}},"getAdditionalTextButton0":{"!description":"Gets current value of property <code>additionalTextButton0<\/code>.\n\nAdditional text of the first button (normally day)","!static":false,"!category":"function","!type":"fn() -> String"},"getAdditionalTextButton1":{"!description":"Gets current value of property <code>additionalTextButton1<\/code>.\n\nAdditional text of the second button (normally month)","!static":false,"!category":"function","!type":"fn() -> String"},"getAdditionalTextButton2":{"!description":"Gets current value of property <code>additionalTextButton2<\/code>.\n\nAdditional text of the third button (normally year)","!static":false,"!category":"function","!type":"fn() -> String"},"detachPressButton1":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pressButton1<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachPressButton0":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pressButton0<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getAriaLabelButton0":{"!description":"Gets current value of property <code>ariaLabelButton0<\/code>.\n\naria-label of the first button (normally day)","!static":false,"!category":"function","!type":"fn() -> String"},"getAriaLabelButton1":{"!description":"Gets current value of property <code>ariaLabelButton1<\/code>.\n\naria-label of the second button (normally month)","!static":false,"!category":"function","!type":"fn() -> String"},"detachPressPrevious":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pressPrevious<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getAriaLabelButton2":{"!description":"Gets current value of property <code>ariaLabelButton2<\/code>.\n\naria-label of the third button (normally year)","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","setEnabledPrevious":{"!description":"Sets a new value for property <code>enabledPrevious<\/code>.\n\nEnables the previous button\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabledPrevious: Boolean) -> sap.ui.unified.calendar.Header","parameters":{"bEnabledPrevious":"type: boolean, description: New value for property <code>enabledPrevious<\/code>"}},"!constructorDescription":"Constructor for a new Header.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTextButton0 textButton0} : string<\/li>\n<li>{@link #getAdditionalTextButton0 additionalTextButton0} : string<\/li>\n<li>{@link #getAriaLabelButton0 ariaLabelButton0} : string<\/li>\n<li>{@link #getVisibleButton0 visibleButton0} : boolean (default: false)<\/li>\n<li>{@link #getTextButton1 textButton1} : string<\/li>\n<li>{@link #getAdditionalTextButton1 additionalTextButton1} : string<\/li>\n<li>{@link #getAriaLabelButton1 ariaLabelButton1} : string<\/li>\n<li>{@link #getVisibleButton1 visibleButton1} : boolean (default: true)<\/li>\n<li>{@link #getTextButton2 textButton2} : string<\/li>\n<li>{@link #getAdditionalTextButton2 additionalTextButton2} : string<\/li>\n<li>{@link #getAriaLabelButton2 ariaLabelButton2} : string<\/li>\n<li>{@link #getVisibleButton2 visibleButton2} : boolean (default: true)<\/li>\n<li>{@link #getEnabledPrevious enabledPrevious} : boolean (default: true)<\/li>\n<li>{@link #getEnabledNext enabledNext} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:pressPrevious pressPrevious} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pressNext pressNext} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pressButton0 pressButton0} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pressButton1 pressButton1} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pressButton2 pressButton2} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setEnabledNext":{"!description":"Sets a new value for property <code>enabledNext<\/code>.\n\nEnables the Next button\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabledNext: Boolean) -> sap.ui.unified.calendar.Header","parameters":{"bEnabledNext":"type: boolean, description: New value for property <code>enabledNext<\/code>"}},"firePressNext":{"!description":"Fires event <code>pressNext<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.Header","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachPressPrevious":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pressPrevious<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header<\/code> itself.\n\nPrevious button pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachPressNext":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pressNext<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header<\/code> itself.\n\nNext button pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setAriaLabelButton0":{"!description":"Sets a new value for property <code>ariaLabelButton0<\/code>.\n\naria-label of the first button (normally day)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAriaLabelButton0: String) -> sap.ui.unified.calendar.Header","parameters":{"sAriaLabelButton0":"type: string, description: New value for property <code>ariaLabelButton0<\/code>"}},"setAriaLabelButton1":{"!description":"Sets a new value for property <code>ariaLabelButton1<\/code>.\n\naria-label of the second button (normally month)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAriaLabelButton1: String) -> sap.ui.unified.calendar.Header","parameters":{"sAriaLabelButton1":"type: string, description: New value for property <code>ariaLabelButton1<\/code>"}},"setAriaLabelButton2":{"!description":"Sets a new value for property <code>ariaLabelButton2<\/code>.\n\naria-label of the third button (normally year)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAriaLabelButton2: String) -> sap.ui.unified.calendar.Header","parameters":{"sAriaLabelButton2":"type: string, description: New value for property <code>ariaLabelButton2<\/code>"}},"setVisibleButton1":{"!description":"Sets a new value for property <code>visibleButton1<\/code>.\n\nIf set, the second button will be displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleButton1: Boolean) -> sap.ui.unified.calendar.Header","parameters":{"bVisibleButton1":"type: boolean, description: New value for property <code>visibleButton1<\/code>"}},"setVisibleButton0":{"!description":"Sets a new value for property <code>visibleButton0<\/code>.\n\nIf set, the first button will be displayed\n\n<b>Note:<\/b> The default is set to false to be compatible to older versions\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleButton0: Boolean) -> sap.ui.unified.calendar.Header","parameters":{"bVisibleButton0":"type: boolean, description: New value for property <code>visibleButton0<\/code>"}},"detachPressNext":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pressNext<\/code> event of this <code>sap.ui.unified.calendar.Header<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.Header","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePressPrevious":{"!description":"Fires event <code>pressPrevious<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.Header","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getVisibleButton1":{"!description":"Gets current value of property <code>visibleButton1<\/code>.\n\nIf set, the second button will be displayed\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVisibleButton0":{"!description":"Gets current value of property <code>visibleButton0<\/code>.\n\nIf set, the first button will be displayed\n\n<b>Note:<\/b> The default is set to false to be compatible to older versions\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVisibleButton2":{"!description":"Gets current value of property <code>visibleButton2<\/code>.\n\nIf set, the third button will be displayed\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabledNext":{"!description":"Gets current value of property <code>enabledNext<\/code>.\n\nEnables the Next button\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisibleButton2":{"!description":"Sets a new value for property <code>visibleButton2<\/code>.\n\nIf set, the third button will be displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleButton2: Boolean) -> sap.ui.unified.calendar.Header","parameters":{"bVisibleButton2":"type: boolean, description: New value for property <code>visibleButton2<\/code>"}}},"sap.ui.unified.CalendarTimeInterval":{"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date of the Interval as JavaScript Date object.\nThe time interval corresponding to this Date and <code>items<\/code> and <code>intervalMinutes<\/code>\nwill be the first time in the displayed row.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarTimeInterval","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.CalendarTimeInterval<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval<\/code> itself.\n\nTime selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setPickerPopup":{"!description":"Sets a new value for property <code>pickerPopup<\/code>.\n\nIf set, the day-, month- and yearPicker opens on a popup\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPickerPopup: Boolean) -> sap.ui.unified.CalendarTimeInterval","parameters":{"bPickerPopup":"type: boolean, description: New value for property <code>pickerPopup<\/code>"}},"addSelectedDate":{"!description":"Adds some selectedDate to the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to add; if empty, nothing is inserted"}},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateTypeRange<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> Number","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The specialDate whose index is looked for"}},"getItems":{"!description":"Gets current value of property <code>items<\/code>.\n\nNumber of time items displayed. Default is 12.\n\n<b>Note:<\/b> On phones, the maximum number of items displayed in the row is always 6.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireStartDateChange":{"!description":"Fires event <code>startDateChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarTimeInterval","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getIntervalSelection":{"!description":"Gets current value of property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySelectedDates":{"!description":"Destroys all the selectedDates in the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarTimeInterval"},"getPickerPopup":{"!description":"Gets current value of property <code>pickerPopup<\/code>.\n\nIf set, the day-, month- and yearPicker opens on a popup\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIntervalSelection":{"!description":"Sets a new value for property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIntervalSelection: Boolean) -> sap.ui.unified.CalendarTimeInterval","parameters":{"bIntervalSelection":"type: boolean, description: New value for property <code>intervalSelection<\/code>"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarTimeInterval","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"Calendar with granularity of time items displayed in one line.","getLegend":{"!description":"ID of the element which is the current target of the association <code>legend<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarLegend"},"setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date of the Interval as JavaScript Date object.\nThe time interval corresponding to this Date and <code>items<\/code> and <code>intervalMinutes<\/code>\nwill be the first time in the displayed row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.ui.unified.CalendarTimeInterval<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.CalendarTimeInterval.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllSelectedDates":{"!description":"Removes all the controls from the aggregation <code>selectedDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"insertSpecialDate":{"!description":"Inserts a specialDate into the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"}},"focusDate":{"!description":"Sets the focused item of the <code>CalendarTimeInterval<\/code>.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.Calendar","parameters":{"oDate":"type: object, description: JavaScript date object for focused item."}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarTimeInterval with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/unified/CalendarTimeInterval","!helpDescription":"Calendar with granularity of time items displayed in one line.","displayDate":{"!description":"Displays a item in the <code>CalendarTimeInterval<\/code> but doesn't set the focus.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.Calendar","parameters":{"oDate":"type: object, description: JavaScript date object for displayed item."}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.CalendarTimeInterval<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachStartDateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>startDateChange<\/code> event of this <code>sap.ui.unified.CalendarTimeInterval<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval<\/code> itself.\n\n<code>startDate<\/code> was changed while navigation in <code>CalendarTimeInterval<\/code>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.ui.unified.CalendarTimeInterval<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval<\/code> itself.\n\nTime selection was cancelled","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSingleSelection":{"!description":"Gets current value of property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if <code>intervalSelection<\/code> is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSingleSelection":{"!description":"Sets a new value for property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if <code>intervalSelection<\/code> is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleSelection: Boolean) -> sap.ui.unified.CalendarTimeInterval","parameters":{"bSingleSelection":"type: boolean, description: New value for property <code>singleSelection<\/code>"}},"getMinDate":{"!description":"Gets current value of property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSpecialDate":{"!description":"Removes a specialDate from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSpecialDate: Number | String | sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"vSpecialDate":"type: int|string|sap.ui.unified.DateTypeRange, description: The specialDateto remove or its index or id"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the <code>CalendarTimeInterval<\/code>. The width of the single months depends on this width.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate ranges with type to visualize special items in the <code>CalendarTimeInterval<\/code>.\nIf one interval is assigned to more than one type, only the first one will be used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"setIntervalMinutes":{"!description":"Sets a new value for property <code>intervalMinutes<\/code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:<\/b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>CalendarDateInterval<\/code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>60<\/code>.","!static":false,"!category":"function","!type":"fn(iIntervalMinutes: Number) -> sap.ui.unified.CalendarTimeInterval","parameters":{"iIntervalMinutes":"type: int, description: New value for property <code>intervalMinutes<\/code>"}},"!constructorDescription":"Constructor for a new <code>CalendarTimeInterval<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getIntervalSelection intervalSelection} : boolean (default: false)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getItems items} : int (default: 12)<\/li>\n<li>{@link #getIntervalMinutes intervalMinutes} : int (default: 60)<\/li>\n<li>{@link #getPickerPopup pickerPopup} : boolean (default: false)<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSelectedDates selectedDates} : sap.ui.unified.DateRange[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:startDateChange startDateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.CalendarTimeInterval","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getIntervalMinutes":{"!description":"Gets current value of property <code>intervalMinutes<\/code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:<\/b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>CalendarDateInterval<\/code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nDefault value is <code>60<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setItems":{"!description":"Sets a new value for property <code>items<\/code>.\n\nNumber of time items displayed. Default is 12.\n\n<b>Note:<\/b> On phones, the maximum number of items displayed in the row is always 6.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn(iItems: Number) -> sap.ui.unified.CalendarTimeInterval","parameters":{"iItems":"type: int, description: New value for property <code>items<\/code>"}},"addSpecialDate":{"!description":"Adds some specialDate to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is inserted"}},"getSelectedDates":{"!description":"Gets content of aggregation <code>selectedDates<\/code>.\n\nDate ranges for selected items of the <code>CalendarTimeInterval<\/code>.\n\nIf <code>singleSelection<\/code> is set, only the first entry is used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"setLegend":{"!description":"Sets the associated <code>legend<\/code>.","!static":false,"!category":"function","!type":"fn(oLegend: sap.ui.unified.CalendarLegend) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oLegend":"type: sap.ui.unified.CalendarLegend, description: Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"}},"removeSelectedDate":{"!description":"Removes a selectedDate from the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSelectedDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vSelectedDate":"type: int|string|sap.ui.unified.DateRange, description: The selectedDateto remove or its index or id"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarTimeInterval"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMaxDate":{"!description":"Gets current value of property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the <code>CalendarTimeInterval<\/code>. The width of the single months depends on this width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.unified.CalendarTimeInterval","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setMaxDate":{"!description":"Sets a new value for property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMaxDate: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oMaxDate":"type: object, description: New value for property <code>maxDate<\/code>"}},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"detachStartDateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>startDateChange<\/code> event of this <code>sap.ui.unified.CalendarTimeInterval<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfSelectedDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>selectedDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> Number","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: The selectedDate whose index is looked for"}},"insertSelectedDate":{"!description":"Inserts a selectedDate into the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"}},"setMinDate":{"!description":"Sets a new value for property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMinDate: Object) -> sap.ui.unified.CalendarTimeInterval","parameters":{"oMinDate":"type: object, description: New value for property <code>minDate<\/code>"}}},"sap.ui.unified.ShellHeadItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellHeadItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.ShellHeadItem"},"sap.ui.unified.Calendar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.Calendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.Calendar"},"sap.ui.unified.calendar.Header_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.Header with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.calendar.Header"},"sap.ui.unified.calendar.DatesRow":{"!description":"renders a row of days with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)","getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date of the row\nIf in rendering phase the date property is not in the range startDate + days,\nit is set to the start date\nSo after setting the start date the date should be set to be in the range of the start date","!static":false,"!category":"function","!type":"fn() -> Object"},"setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date of the row\nIf in rendering phase the date property is not in the range startDate + days,\nit is set to the start date\nSo after setting the start date the date should be set to be in the range of the start date\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.calendar.DatesRow","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.calendar.DatesRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.unified.calendar.Month","setFirstDayOfWeek":{"!description":"Setter for property <code>firstDayOfWeek<\/code>.\n\nProperty <code>firstDayOfWeek<\/code> is not supported in <code>sap.ui.unified.calendar.DatesRow<\/code> control.","!static":false,"!category":"function","!type":"fn(iFirstDayOfWeek?: Number)","parameters":{"iFirstDayOfWeek":"type: int, description: first day of the week"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.DatesRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.calendar.Month.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDays":{"!description":"Sets a new value for property <code>days<\/code>.\n\nnumber of days displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn(iDays: Number) -> sap.ui.unified.calendar.DatesRow","parameters":{"iDays":"type: int, description: New value for property <code>days<\/code>"}},"!constructorDescription":"Constructor for a new calendar/DatesRow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getDays days} : int (default: 7)<\/li>\n<li>{@link #getShowDayNamesLine showDayNamesLine} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.unified.calendar.Month#constructor sap.ui.unified.calendar.Month}\ncan be used as well.","getDays":{"!description":"Gets current value of property <code>days<\/code>.\n\nnumber of days displayed\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!module":"sap/ui/unified/calendar/DatesRow","!helpDescription":"renders a row of days with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)","displayDate":{"!description":"displays the a given date without setting the focus\n\nProperty <code>date<\/code> date to be focused or displayed. It must be in the displayed date range\nbeginning with <code>startDate<\/code> and <code>days<\/code> days\nSo set this properties before setting the date.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.DatesRow","parameters":{"oDate":"type: object, description: JavaScript date object for focused date."}},"setDate":{"!description":"Setter for property <code>date<\/code>.\n\nProperty <code>date<\/code> date to be focused or displayed. It must be in the displayed date range\nbeginning with <code>startDate<\/code> and <code>days<\/code> days\nSo set this properties before setting the date.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.DatesRow","parameters":{"oDate":"type: object, description: JavaScript date object for start date."}},"getShowDayNamesLine":{"!description":"Gets current value of property <code>showDayNamesLine<\/code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowDayNamesLine":{"!description":"Sets a new value for property <code>showDayNamesLine<\/code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDayNamesLine: Boolean) -> sap.ui.unified.calendar.DatesRow","parameters":{"bShowDayNamesLine":"type: boolean, description: New value for property <code>showDayNamesLine<\/code>"}}},"sap.ui.unified.ShellHeadUserItem":{"!description":"User Header Action Item of the Shell.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.ShellHeadUserItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setUsername":{"!description":"Sets a new value for property <code>username<\/code>.\n\nThe name of the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sUsername: String) -> sap.ui.unified.ShellHeadUserItem","parameters":{"sUsername":"type: string, description: New value for property <code>username<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","getUsername":{"!description":"Gets current value of property <code>username<\/code>.\n\nThe name of the user.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellHeadUserItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.unified.ShellHeadUserItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.ShellHeadUserItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.ShellHeadUserItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getShowPopupIndicator":{"!description":"Gets current value of property <code>showPopupIndicator<\/code>.\n\nThe user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog.\nIf this property is set to true an indicator for such a popup mechanismn is shown in the item.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowPopupIndicator":{"!description":"Sets a new value for property <code>showPopupIndicator<\/code>.\n\nThe user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog.\nIf this property is set to true an indicator for such a popup mechanismn is shown in the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPopupIndicator: Boolean) -> sap.ui.unified.ShellHeadUserItem","parameters":{"bShowPopupIndicator":"type: boolean, description: New value for property <code>showPopupIndicator<\/code>"}},"!constructorDescription":"Constructor for a new ShellHeadUserItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUsername username} : string (default: )<\/li>\n<li>{@link #getShowPopupIndicator showPopupIndicator} : boolean (default: true)<\/li>\n<li>{@link #getImage image} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.ShellHeadUserItem","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"!module":"sap/ui/unified/ShellHeadUserItem","!helpDescription":"User Header Action Item of the Shell.","getImage":{"!description":"Gets current value of property <code>image<\/code>.\n\nAn image of the user, normally an URI to a image but also an icon from the sap.ui.core.IconPool is possible.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.unified.ShellHeadUserItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.ShellHeadUserItem<\/code> itself.\n\nEvent is fired when the user presses the button.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.ShellHeadUserItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellHeadUserItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setImage":{"!description":"Sets a new value for property <code>image<\/code>.\n\nAn image of the user, normally an URI to a image but also an icon from the sap.ui.core.IconPool is possible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sImage: sap.ui.core.URI) -> sap.ui.unified.ShellHeadUserItem","parameters":{"sImage":"type: sap.ui.core.URI, description: New value for property <code>image<\/code>"}}},"sap.ui.unified.CalendarLegendItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarLegendItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.CalendarLegendItem"},"sap.ui.unified.calendar.Month_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.Month with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.calendar.Month"},"sap.ui.unified.calendar.MonthPicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.MonthPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.calendar.MonthPicker"},"sap.ui.unified.ShellLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.ShellLayout"},"sap.ui.unified.calendar.DatesRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.DatesRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.calendar.Month.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.calendar.DatesRow"},"sap.ui.unified.calendar.MonthsRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.MonthsRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.calendar.MonthsRow"},"sap.ui.unified.CalendarTimeInterval_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarTimeInterval with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.CalendarTimeInterval"},"sap.ui.unified.FileUploaderParameter":{"!description":"Represents a parameter for the FileUploader which is rendered as a hidden inputfield.","extend":{"!description":"Creates a new subclass of class sap.ui.unified.FileUploaderParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe name of the hidden inputfield.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.unified.FileUploaderParameter","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe value of the hidden inputfield.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.FileUploaderParameter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FileUploaderParameter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe name of the hidden inputfield.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/unified/FileUploaderParameter","!helpDescription":"Represents a parameter for the FileUploader which is rendered as a hidden inputfield.","setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe value of the hidden inputfield.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.unified.FileUploaderParameter","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class"},"sap.ui.unified.ContentSwitcherAnimation":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","ZoomOut":{"!description":"The old content is \"zoomed out\", i.e. shrinks to a point at the center of the content area.","!category":"enum","!type":"String"},"SlideOver":{"!description":"The new content slides in from the left while the old content slides out to the left at the same time.","!category":"enum","!type":"String"},"!module":"sap/ui/unified/library","Rotate":{"!description":"The new content rotates in. (Just like one of those old newspaper-animations.)","!category":"enum","!type":"String"},"!category":"static class","SlideRight":{"!description":"The new slides in from the left (to the right).","!category":"enum","!type":"String"},"ZoomIn":{"!description":"The new content is \"zoomed in\" from the center and grows to fill the full content area.","!category":"enum","!type":"String"},"Fade":{"!description":"Content is faded (opacity change).","!category":"enum","!type":"String"},"None":{"!description":"No animation. Content is switched instantly.","!category":"enum","!type":"String"}},"sap.ui.unified.DateTypeRange_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.DateTypeRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.DateRange.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.DateTypeRange"},"sap.ui.unified.MenuItemBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.MenuItemBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.MenuItemBase"},"sap.ui.unified":{"ShellLayout":"sap.ui.unified.ShellLayout_obj","endDate":{"!description":"Start date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object.","!category":"enum","!type":"Object"},"pickerPopup":{"!description":"If set, the day-, month- and yearPicker opens on a popup","!category":"enum","!type":"Boolean"},"nonWorkingHours":{"!description":"If set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:<\/b> The non working hours are only visualized if <code>intervalType<\/code> is set to hour.","!category":"enum","!type":"[Number]"},"intervalSelection":{"!description":"If set, interval selection is allowed","!category":"enum","!type":"Boolean"},"maximumFileSize":{"!description":"A file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9.","!category":"enum","!type":"Number"},"pageSize":{"!description":"The keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home<\/i> / <i>End<\/i> keys for jumping\nto the first / last item, the <i>Page Up<\/i> / <i>Page Down<\/i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize<\/code> property.\nFor values smaller than 1, paging behaves in a similar way to when using the <i>Home<\/i> / <i>End<\/i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.","!category":"enum","!type":"Number"},"type":{"!description":"Type of the date range.","!category":"enum","!type":"sap.ui.unified.CalendarDayType"},"iconFirst":{"!description":"If set to true (default), the display sequence is 1. icon 2. control text.","!category":"enum","!type":"Boolean"},"secondaryContentWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Only available for backwards compatibility.<br>Do not use. Use secondaryContentSize instead.","!category":"enum","!type":"sap.ui.core.CSSSize"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"Currency":"sap.ui.unified.Currency_obj","text":{"!description":"Defines the text which should be displayed on the item.","!category":"enum","!type":"String"},"CalendarRow":"sap.ui.unified.CalendarRow_obj","FileUploaderParameter":"sap.ui.unified.FileUploaderParameter_obj","height":{"!description":"Height of the row","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"Unified controls intended for both, mobile and desktop scenarios","buttonText":{"!description":"The Button text can be overwritten using this property.","!category":"enum","!type":"String"},"CalendarDateInterval":"sap.ui.unified.CalendarDateInterval_obj","animation":{"!description":"Set the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class.\nSee the types sap.ui.unified.ContentSwitcherAnimation for default implementations.","!category":"enum","!type":"String"},"!module":"sap/ui/unified/library","style":{"!description":"Style of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed.","!category":"enum","!type":"String"},"items":{"!description":"Number of time items displayed. Default is 12.\n\n<b>Note:<\/b> On phones, the maximum number of items displayed in the row is always 6.","!category":"enum","!type":"Number"},"startDate":{"!description":"Start date for a date range. This must be a JavaScript date object.","!category":"enum","!type":"Object"},"useSymbol":{"!description":"Show the currency symbol instead of the ISO currency code","!category":"enum","!type":"Boolean"},"minDate":{"!description":"Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.","!category":"enum","!type":"Object"},"FileUploader":"sap.ui.unified.FileUploader_obj","showCurtainPane":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Curtain is deprecated and replaced by ShellOverlay mechanism.<br>Shows / Hides the side pane on the curtain.","!category":"enum","!type":"Boolean"},"CalendarTimeInterval":"sap.ui.unified.CalendarTimeInterval_obj","icon":{"!description":"The icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set.","!category":"enum","!type":"sap.ui.core.URI"},"headerHiding":{"!description":"Whether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.","!category":"enum","!type":"Boolean"},"intervalMinutes":{"!description":"Size of on time interval in minutes, default is 60 minutes.\n\n<b>Note:<\/b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>CalendarDateInterval<\/code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.","!category":"enum","!type":"Number"},"ShellHeadItem":"sap.ui.unified.ShellHeadItem_obj","enabled":{"!description":"When an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).","!category":"enum","!type":"Boolean"},"ContentSwitcherAnimation":"sap.ui.unified.ContentSwitcherAnimation","iconHovered":{"!description":"Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.","!category":"enum","!type":"sap.ui.core.URI"},"maxPrecision":{"!description":"Defines the space that is available for the precision of the various currencies.","!category":"enum","!type":"Number"},"currency":{"!description":"Determines the displayed currency code (ISO 4217).\n<b>Note: <\/b>If a * character is set instead of currency code,\nonly the character itself will be rendered, ignoring the <code>value<\/code> property.","!category":"enum","!type":"String"},"iconSelected":{"!description":"Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.","!category":"enum","!type":"sap.ui.core.URI"},"Menu":"sap.ui.unified.Menu_obj","primaryCalendarType":{"!description":"If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.","!category":"enum","!type":"sap.ui.core.CalendarType"},"key":{"!description":"Can be used as identifier of the appointment","!category":"enum","!type":"String"},"CalendarAppointment":"sap.ui.unified.CalendarAppointment_obj","calendar":"sap.ui.unified.calendar","CalendarLegendItem":"sap.ui.unified.CalendarLegendItem_obj","CalendarLegend":"sap.ui.unified.CalendarLegend_obj","secondaryCalendarType":{"!description":"If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type","!category":"enum","!type":"sap.ui.core.CalendarType"},"CalendarIntervalType":"sap.ui.unified.CalendarIntervalType","Calendar":"sap.ui.unified.Calendar_obj","showSeparator":{"!description":"If set to true, a separator is displayed after the item.","!category":"enum","!type":"Boolean"},"showPopupIndicator":{"!description":"The user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog.\nIf this property is set to true an indicator for such a popup mechanismn is shown in the item.","!category":"enum","!type":"Boolean"},"tentative":{"!description":"Indicates if the icon is tentative.","!category":"enum","!type":"Boolean"},"showSecondaryContent":{"!description":"Shows / Hides the secondary area.","!category":"enum","!type":"Boolean"},"uploadUrl":{"!description":"Used when URL address is on a remote server.","!category":"enum","!type":"sap.ui.core.URI"},"firstDayOfWeek":{"!description":"If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.","!category":"enum","!type":"Number"},"width":{"!description":"Specifies the displayed control width.","!category":"enum","!type":"sap.ui.core.CSSSize"},"days":{"!description":"number of days displayed\non phones the maximum rendered number of days is 8.","!category":"enum","!type":"Number"},"maxDate":{"!description":"Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.","!category":"enum","!type":"Object"},"valueState":{"!description":"Defines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.","!category":"enum","!type":"sap.ui.core.ValueState"},"mimeType":{"!description":"The chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"].","!category":"enum","!type":"[String]"},"uploadOnChange":{"!description":"If set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.","!category":"enum","!type":"Boolean"},"showIntervalHeaders":{"!description":"If set, interval headers are shown like specified in <code>showEmptyIntervalHeaders<\/code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders<\/code> are assigned.","!category":"enum","!type":"Boolean"},"useMultipart":{"!description":"If set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.","!category":"enum","!type":"Boolean"},"SplitContainer":"sap.ui.unified.SplitContainer_obj","nonWorkingDays":{"!description":"If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:<\/b> The non working days are only visualized if <code>intervalType<\/code> is set to day.","!category":"enum","!type":"[Number]"},"checkResize":{"!description":"If set, the <code>CalendarRow<\/code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow<\/code> controls are used in one container control (like <code>PlanningCalendar<\/code>).\nthe resize checks should be done only by this container control. Then the container control should\ncall <code>handleResize<\/code> of the <code>CalendarRow<\/code> if a resize happens.","!category":"enum","!type":"Boolean"},"showCurtain":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Curtain is deprecated and replaced by ShellOverlay mechanism.<br>Shows / Hides the curtain.","!category":"enum","!type":"Boolean"},"additionalData":{"!description":"Additional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data.","!category":"enum","!type":"String"},"selected":{"!description":"Defines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled<\/code>).","!category":"enum","!type":"Boolean"},"ariaDescription":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.0 Please use association <code>ariaLabelledBy<\/code> instead.<br>Accessible label / description of the menu for assistive technologies like screenreaders.","!category":"enum","!type":"String"},"maxVisibleItems":{"!description":"The maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached.","!category":"enum","!type":"Number"},"image":{"!description":"An image of the user, normally an URI to a image but also an icon from the sap.ui.core.IconPool is possible.","!category":"enum","!type":"sap.ui.core.URI"},"buttonOnly":{"!description":"If set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField.","!category":"enum","!type":"Boolean"},"MenuItemBase":"sap.ui.unified.MenuItemBase_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"months":{"!description":"Number of months displayed\n\n<b>Note:<\/b> On phones, the maximum number of months displayed in the row is always 6.","!category":"enum","!type":"Number"},"ShellOverlay":"sap.ui.unified.ShellOverlay_obj","sameFilenameAllowed":{"!description":"If the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths.","!category":"enum","!type":"Boolean"},"ContentSwitcher":"sap.ui.unified.ContentSwitcher_obj","DateTypeRange":"sap.ui.unified.DateTypeRange_obj","intervals":{"!description":"Number of displayed intervals. The size of the intervals is defined with <code>intervalType<\/code>","!category":"enum","!type":"Number"},"!helpDescription":"Unified controls intended for both, mobile and desktop scenarios","name":{"!description":"The name of the hidden inputfield.","!category":"enum","!type":"String"},"updateCurrentTime":{"!description":"If set the <code>CalendarRow<\/code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow<\/code> controls are used in one container control (like <code>PlanningCalendar<\/code>)\nthe periodic update should be triggered only by this container control. Then the container control should\ncall <code>updateCurrentTimeVisualization<\/code> of the <code>CalendarRow<\/code> to update the visualization.","!category":"enum","!type":"Boolean"},"toggleEnabled":{"!description":"If set to true, the item represents a toggle button. The <code>selected<\/code> property can the be used to\ndefine the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected<\/code> property\nis ignored.","!category":"enum","!type":"Boolean"},"CalendarDayType":"sap.ui.unified.CalendarDayType","iconOnly":{"!description":"If set to true, the button is displayed without any text.","!category":"enum","!type":"Boolean"},"maximumFilenameLength":{"!description":"The maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired.","!category":"enum","!type":"Number"},"!category":"namespace","singleSelection":{"!description":"If set, only a single date or interval, if <code>intervalSelection<\/code> is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.","!category":"enum","!type":"Boolean"},"title":{"!description":"Title of the appointment.","!category":"enum","!type":"String"},"showPane":{"!description":"Shows / Hides the side pane.","!category":"enum","!type":"Boolean"},"DateRange":"sap.ui.unified.DateRange_obj","Shell":"sap.ui.unified.Shell_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"sendXHR":{"!description":"If set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9.","!category":"enum","!type":"Boolean"},"columnWidth":{"!description":"Width of the columns created in which the items are arranged.","!category":"enum","!type":"sap.ui.core.CSSSize"},"placeholder":{"!description":"Placeholder for the text field.","!category":"enum","!type":"String"},"startsSection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Dividers are not supported anymore.<br>If set to true, a divider is displayed before the item.","!category":"enum","!type":"Boolean"},"headerVisible":{"!description":"If set to false, no header (and no items, search, ...) is shown.","!category":"enum","!type":"Boolean"},"value":{"!description":"Defines the value of the text field of the item.","!category":"enum","!type":"String"},"ShellHeadUserItem":"sap.ui.unified.ShellHeadUserItem_obj","appointmentsReducedHeight":{"!description":"If set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:<\/b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.","!category":"enum","!type":"Boolean"},"orientation":{"!description":"Whether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").","!category":"enum","!type":"sap.ui.core.Orientation"},"searchVisible":{"!description":"If set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.","!category":"enum","!type":"Boolean"},"multiple":{"!description":"Allows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9.","!category":"enum","!type":"Boolean"},"MenuItem":"sap.ui.unified.MenuItem_obj","CalendarMonthInterval":"sap.ui.unified.CalendarMonthInterval_obj","label":{"!description":"Defines the label of the text field of the item.","!category":"enum","!type":"String"},"showSubIntervals":{"!description":"If set, subintervals are shown.\n\nIf the interval type is <code>Hour<\/code>, quarter hours are shown.\n\nIf the interval type is <code>Day<\/code>, hours are shown.\n\nIf the interval type is <code>Month<\/code>, days are shown.","!category":"enum","!type":"Boolean"},"MenuTextFieldItem":"sap.ui.unified.MenuTextFieldItem_obj","showDayNamesLine":{"!description":"If set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.","!category":"enum","!type":"Boolean"},"intervalType":{"!description":"Type of the intervals of the row. The default is one hour.","!category":"enum","!type":"sap.ui.unified.CalendarIntervalType"},"showMarker":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Markers should not be used anymore.<br>If set to true, a theme dependent marker is shown on the item.","!category":"enum","!type":"Boolean"},"secondaryContentSize":{"!description":"The width if the secondary content. The height is always 100%.","!category":"enum","!type":"sap.ui.core.CSSSize"},"showEmptyIntervalHeaders":{"!description":"If set, interval headers are shown even if no <code>intervalHeaders<\/code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders<\/code> are assigned.\n\n<b>Note:<\/b> This property is only used if <code>showIntervalHeaders<\/code> is set to true.","!category":"enum","!type":"Boolean"},"activeContent":{"!description":"The number of the currently active content (1 or 2).","!category":"enum","!type":"Number"},"fileType":{"!description":"The chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"].","!category":"enum","!type":"[String]"},"username":{"!description":"The name of the user.","!category":"enum","!type":"String"}},"sap.ui.unified.Calendar":{"getStartDate":{"!description":"Returns the first day of the displayed month.\n\nThere might be some days of the previous month shown, but they can not be focused.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getSecondaryCalendarType":{"!description":"Gets current value of property <code>secondaryCalendarType<\/code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"removeAllDisabledDates":{"!description":"Removes all the controls from the aggregation <code>disabledDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"indexOfDisabledDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>disabledDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDisabledDate: sap.ui.unified.DateRange) -> Number","parameters":{"oDisabledDate":"type: sap.ui.unified.DateRange, description: The disabledDate whose index is looked for"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.Calendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.Calendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Calendar<\/code> itself.\n\nDate selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.Calendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setNonWorkingDays":{"!description":"Sets a new value for property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNonWorkingDays: [Number]) -> sap.ui.unified.Calendar","parameters":{"sNonWorkingDays":"type: int[], description: New value for property <code>nonWorkingDays<\/code>"}},"getMonths":{"!description":"Gets current value of property <code>months<\/code>.\n\nnumber of months displayed\non phones always only one month is displayed\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"addSelectedDate":{"!description":"Adds some selectedDate to the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> sap.ui.unified.Calendar","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to add; if empty, nothing is inserted"}},"getPrimaryCalendarType":{"!description":"Gets current value of property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateTypeRange<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> Number","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The specialDate whose index is looked for"}},"fireStartDateChange":{"!description":"Fires event <code>startDateChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.Calendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getIntervalSelection":{"!description":"Gets current value of property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySelectedDates":{"!description":"Destroys all the selectedDates in the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Calendar"},"setIntervalSelection":{"!description":"Sets a new value for property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIntervalSelection: Boolean) -> sap.ui.unified.Calendar","parameters":{"bIntervalSelection":"type: boolean, description: New value for property <code>intervalSelection<\/code>"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.Calendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"Basic Calendar.\nThis calendar is used for DatePickers","destroyDisabledDates":{"!description":"Destroys all the disabledDates in the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Calendar"},"getDisabledDates":{"!description":"Gets content of aggregation <code>disabledDates<\/code>.\n\nDate Ranges for disabled dates","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"getLegend":{"!description":"ID of the element which is the current target of the association <code>legend<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarLegend"},"setPrimaryCalendarType":{"!description":"Sets a new value for property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.unified.Calendar","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.ui.unified.Calendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.Calendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.Calendar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllSelectedDates":{"!description":"Removes all the controls from the aggregation <code>selectedDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"addDisabledDate":{"!description":"Adds some disabledDate to the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn(oDisabledDate: sap.ui.unified.DateRange) -> sap.ui.unified.Calendar","parameters":{"oDisabledDate":"type: sap.ui.unified.DateRange, description: the disabledDate to add; if empty, nothing is inserted"}},"insertSpecialDate":{"!description":"Inserts a specialDate into the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.ui.unified.Calendar","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"}},"focusDate":{"!description":"Sets the focused date of the calendar.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.Calendar","parameters":{"oDate":"type: object, description: JavaScript date object for focused date."}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.Calendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeDisabledDate":{"!description":"Removes a disabledDate from the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn(vDisabledDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vDisabledDate":"type: int|string|sap.ui.unified.DateRange, description: The disabledDateto remove or its index or id"}},"getNonWorkingDays":{"!description":"Gets current value of property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"!module":"sap/ui/unified/Calendar","!helpDescription":"Basic Calendar.\nThis calendar is used for DatePickers","displayDate":{"!description":"Displays a date in the calendar but don't set the focus.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.Calendar","parameters":{"oDate":"type: object, description: JavaScript date object for focused date."}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.Calendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.Calendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachStartDateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>startDateChange<\/code> event of this <code>sap.ui.unified.Calendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Calendar<\/code> itself.\n\n<code>startDate<\/code> was changed while navigation in <code>Calendar<\/code>\n\nUse <code>getStartDate<\/code> function to determine the current start date","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.Calendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.ui.unified.Calendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Calendar<\/code> itself.\n\nDate selection was cancelled","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.Calendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSingleSelection":{"!description":"Gets current value of property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSingleSelection":{"!description":"Sets a new value for property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleSelection: Boolean) -> sap.ui.unified.Calendar","parameters":{"bSingleSelection":"type: boolean, description: New value for property <code>singleSelection<\/code>"}},"getMinDate":{"!description":"Gets current value of property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSpecialDate":{"!description":"Removes a specialDate from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSpecialDate: Number | String | sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"vSpecialDate":"type: int|string|sap.ui.unified.DateTypeRange, description: The specialDateto remove or its index or id"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of Calendar\n\n<b>Note:<\/b> There is a theme depending minimum width, so the calendar can not be set smaller.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate Range with type to visualize special days in the Calendar.\nIf one day is assigned to more than one Type, only the first one will be used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"!constructorDescription":"Constructor for a new Calendar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIntervalSelection intervalSelection} : boolean (default: false)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getMonths months} : int (default: 1)<\/li>\n<li>{@link #getFirstDayOfWeek firstDayOfWeek} : int (default: -1)<\/li>\n<li>{@link #getNonWorkingDays nonWorkingDays} : int[]<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSelectedDates selectedDates} : sap.ui.unified.DateRange[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<li>{@link #getDisabledDates disabledDates} : sap.ui.unified.DateRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:startDateChange startDateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.Calendar","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"addSpecialDate":{"!description":"Adds some specialDate to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.ui.unified.Calendar","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is inserted"}},"getSelectedDates":{"!description":"Gets content of aggregation <code>selectedDates<\/code>.\n\nDate Ranges for selected dates of the DatePicker","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"setLegend":{"!description":"Sets the associated <code>legend<\/code>.","!static":false,"!category":"function","!type":"fn(oLegend: sap.ui.unified.CalendarLegend) -> sap.ui.unified.Calendar","parameters":{"oLegend":"type: sap.ui.unified.CalendarLegend, description: Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"}},"removeSelectedDate":{"!description":"Removes a selectedDate from the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSelectedDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vSelectedDate":"type: int|string|sap.ui.unified.DateRange, description: The selectedDateto remove or its index or id"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Calendar"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"insertDisabledDate":{"!description":"Inserts a disabledDate into the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn(oDisabledDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.Calendar","parameters":{"oDisabledDate":"type: sap.ui.unified.DateRange, description: the disabledDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the disabledDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the disabledDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the disabledDate is inserted at\n             the last position"}},"getMaxDate":{"!description":"Gets current value of property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setFirstDayOfWeek":{"!description":"Sets a new value for property <code>firstDayOfWeek<\/code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iFirstDayOfWeek: Number) -> sap.ui.unified.Calendar","parameters":{"iFirstDayOfWeek":"type: int, description: New value for property <code>firstDayOfWeek<\/code>"}},"setMonths":{"!description":"Sets a new value for property <code>months<\/code>.\n\nnumber of months displayed\non phones always only one month is displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iMonths: Number) -> sap.ui.unified.Calendar","parameters":{"iMonths":"type: int, description: New value for property <code>months<\/code>"}},"setSecondaryCalendarType":{"!description":"Sets a new value for property <code>secondaryCalendarType<\/code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSecondaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.unified.Calendar","parameters":{"sSecondaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>secondaryCalendarType<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of Calendar\n\n<b>Note:<\/b> There is a theme depending minimum width, so the calendar can not be set smaller.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.unified.Calendar","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getFirstDayOfWeek":{"!description":"Gets current value of property <code>firstDayOfWeek<\/code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMaxDate":{"!description":"Sets a new value for property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMaxDate: Object) -> sap.ui.unified.Calendar","parameters":{"oMaxDate":"type: object, description: New value for property <code>maxDate<\/code>"}},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"detachStartDateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>startDateChange<\/code> event of this <code>sap.ui.unified.Calendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.Calendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfSelectedDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>selectedDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> Number","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: The selectedDate whose index is looked for"}},"insertSelectedDate":{"!description":"Inserts a selectedDate into the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.Calendar","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"}},"setMinDate":{"!description":"Sets a new value for property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMinDate: Object) -> sap.ui.unified.Calendar","parameters":{"oMinDate":"type: object, description: New value for property <code>minDate<\/code>"}}},"sap.ui.unified.CalendarAppointment_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarAppointment with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.DateTypeRange.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.CalendarAppointment"},"sap.ui.unified.CalendarRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.CalendarRow"},"sap.ui.unified.ShellHeadItem":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getToggleEnabled":{"!description":"Gets current value of property <code>toggleEnabled<\/code>.\n\nIf set to true, the item represents a toggle button. The <code>selected<\/code> property can the be used to\ndefine the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected<\/code> property\nis ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nDefines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled<\/code>).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.ui.unified.ShellHeadItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","setShowMarker":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Markers should not be used anymore.<br>Sets a new value for property <code>showMarker<\/code>.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMarker: Boolean) -> sap.ui.unified.ShellHeadItem","parameters":{"bShowMarker":"type: boolean, description: New value for property <code>showMarker<\/code>"}},"!constructorDescription":"Constructor for a new ShellHeadItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartsSection startsSection} : boolean (default: false)<\/li>\n<li>{@link #getShowSeparator showSeparator} : boolean (default: true)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getToggleEnabled toggleEnabled} : boolean (default: true)<\/li>\n<li>{@link #getShowMarker showMarker} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.ShellHeadItem","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getShowSeparator":{"!description":"Gets current value of property <code>showSeparator<\/code>.\n\nIf set to true, a separator is displayed after the item.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.unified.ShellHeadItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.ShellHeadItem<\/code> itself.\n\nEvent is fired when the user presses the item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.ShellHeadItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellHeadItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Header Action item of the Shell.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible items are not shown on the UI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.unified.ShellHeadItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.ShellHeadItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setToggleEnabled":{"!description":"Sets a new value for property <code>toggleEnabled<\/code>.\n\nIf set to true, the item represents a toggle button. The <code>selected<\/code> property can the be used to\ndefine the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected<\/code> property\nis ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToggleEnabled: Boolean) -> sap.ui.unified.ShellHeadItem","parameters":{"bToggleEnabled":"type: boolean, description: New value for property <code>toggleEnabled<\/code>"}},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible items are not shown on the UI.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowSeparator":{"!description":"Sets a new value for property <code>showSeparator<\/code>.\n\nIf set to true, a separator is displayed after the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSeparator: Boolean) -> sap.ui.unified.ShellHeadItem","parameters":{"bShowSeparator":"type: boolean, description: New value for property <code>showSeparator<\/code>"}},"getShowMarker":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Markers should not be used anymore.<br>Gets current value of property <code>showMarker<\/code>.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setStartsSection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Dividers are not supported anymore.<br>Sets a new value for property <code>startsSection<\/code>.\n\nIf set to true, a divider is displayed before the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStartsSection: Boolean) -> sap.ui.unified.ShellHeadItem","parameters":{"bStartsSection":"type: boolean, description: New value for property <code>startsSection<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellHeadItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.unified.ShellHeadItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.unified.ShellHeadItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.ShellHeadItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.ShellHeadItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nDefines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled<\/code>).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/unified/ShellHeadItem","!helpDescription":"Header Action item of the Shell.","getStartsSection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Dividers are not supported anymore.<br>Gets current value of property <code>startsSection<\/code>.\n\nIf set to true, a divider is displayed before the item.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.unified.calendar.Month":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getSecondaryCalendarType":{"!description":"Gets current value of property <code>secondaryCalendarType<\/code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"removeAllDisabledDates":{"!description":"Removes all the controls from the aggregation <code>disabledDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"indexOfDisabledDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>disabledDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDisabledDate: sap.ui.unified.DateRange) -> Number","parameters":{"oDisabledDate":"type: sap.ui.unified.DateRange, description: The disabledDate whose index is looked for"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.Month","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.calendar.Month<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Month<\/code> itself.\n\nDate selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.Month","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Month<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setNonWorkingDays":{"!description":"Sets a new value for property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNonWorkingDays: [Number]) -> sap.ui.unified.calendar.Month","parameters":{"sNonWorkingDays":"type: int[], description: New value for property <code>nonWorkingDays<\/code>"}},"addSelectedDate":{"!description":"Adds some selectedDate to the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> sap.ui.unified.calendar.Month","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to add; if empty, nothing is inserted"}},"getPrimaryCalendarType":{"!description":"Gets current value of property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateTypeRange<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> Number","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The specialDate whose index is looked for"}},"getIntervalSelection":{"!description":"Gets current value of property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySelectedDates":{"!description":"Destroys all the selectedDates in the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.Month"},"setIntervalSelection":{"!description":"Sets a new value for property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIntervalSelection: Boolean) -> sap.ui.unified.calendar.Month","parameters":{"bIntervalSelection":"type: boolean, description: New value for property <code>intervalSelection<\/code>"}},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nIf set, a header with the month name is shown\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.ui.unified.calendar.Month","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"!description":"renders a month with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)","destroyDisabledDates":{"!description":"Destroys all the disabledDates in the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.Month"},"getDisabledDates":{"!description":"Gets content of aggregation <code>disabledDates<\/code>.\n\nDate Ranges for disabled dates","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"getLegend":{"!description":"ID of the element which is the current target of the association <code>legend<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarLegend"},"setPrimaryCalendarType":{"!description":"Sets a new value for property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.unified.calendar.Month","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.calendar.Month.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllSelectedDates":{"!description":"Removes all the controls from the aggregation <code>selectedDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"addDisabledDate":{"!description":"Adds some disabledDate to the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn(oDisabledDate: sap.ui.unified.DateRange) -> sap.ui.unified.calendar.Month","parameters":{"oDisabledDate":"type: sap.ui.unified.DateRange, description: the disabledDate to add; if empty, nothing is inserted"}},"insertSpecialDate":{"!description":"Inserts a specialDate into the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.ui.unified.calendar.Month","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nIf set, a header with the month name is shown\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.Month with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeDisabledDate":{"!description":"Removes a disabledDate from the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn(vDisabledDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vDisabledDate":"type: int|string|sap.ui.unified.DateRange, description: The disabledDateto remove or its index or id"}},"getNonWorkingDays":{"!description":"Gets current value of property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"!module":"sap/ui/unified/calendar/Month","!helpDescription":"renders a month with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)","checkDateFocusable":{"!description":"checks if a date is focusable in the current rendered output.\nSo if not rendered or in other month it is not focusable.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> Boolean","parameters":{"oDate":"type: object, description: JavaScript date object for focused date."}},"detachFocus":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>focus<\/code> event of this <code>sap.ui.unified.calendar.Month<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.Month","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"displayDate":{"!description":"displays the month of a given date without setting the focus","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.Month","parameters":{"oDate":"type: object, description: JavaScript date object for focused date."}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.calendar.Month<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.Month","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSingleSelection":{"!description":"Gets current value of property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachFocus":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>focus<\/code> event of this <code>sap.ui.unified.calendar.Month<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Month<\/code> itself.\n\nDate focus changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.Month","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Month<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSingleSelection":{"!description":"Sets a new value for property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleSelection: Boolean) -> sap.ui.unified.calendar.Month","parameters":{"bSingleSelection":"type: boolean, description: New value for property <code>singleSelection<\/code>"}},"removeSpecialDate":{"!description":"Removes a specialDate from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSpecialDate: Number | String | sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"vSpecialDate":"type: int|string|sap.ui.unified.DateTypeRange, description: The specialDateto remove or its index or id"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of Month","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"fireFocus":{"!description":"Fires event <code>focus<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>date<\/code> of type <code>object<\/code>focused date<\/li>\n<li><code>otherMonth<\/code> of type <code>boolean<\/code>focused date is in an other month that the displayed one<\/li>\n<li><code>restoreOldDate<\/code> of type <code>boolean<\/code>focused date is set to the same as before (date in other month clicked)<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.Month","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate Range with type to visualize special days in the Calendar.\nIf one day is assigned to more than one Type, only the first one will be used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"!constructorDescription":"Constructor for a new calendar/Month.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDate date} : object<\/li>\n<li>{@link #getIntervalSelection intervalSelection} : boolean (default: false)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: false)<\/li>\n<li>{@link #getFirstDayOfWeek firstDayOfWeek} : int (default: -1)<\/li>\n<li>{@link #getNonWorkingDays nonWorkingDays} : int[]<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSelectedDates selectedDates} : sap.ui.unified.DateRange[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<li>{@link #getDisabledDates disabledDates} : sap.ui.unified.DateRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:focus focus} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.calendar.Month","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"addSpecialDate":{"!description":"Adds some specialDate to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.ui.unified.calendar.Month","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is inserted"}},"getSelectedDates":{"!description":"Gets content of aggregation <code>selectedDates<\/code>.\n\nDate Ranges for selected dates of the DatePicker","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"setLegend":{"!description":"Sets the associated <code>legend<\/code>.","!static":false,"!category":"function","!type":"fn(oLegend: sap.ui.unified.CalendarLegend) -> sap.ui.unified.calendar.Month","parameters":{"oLegend":"type: sap.ui.unified.CalendarLegend, description: Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"}},"getDate":{"!description":"Gets current value of property <code>date<\/code>.\n\nthe month including this date is rendered and this date is initial focused (if no other focus set)","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSelectedDate":{"!description":"Removes a selectedDate from the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSelectedDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vSelectedDate":"type: int|string|sap.ui.unified.DateRange, description: The selectedDateto remove or its index or id"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.Month"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"insertDisabledDate":{"!description":"Inserts a disabledDate into the aggregation <code>disabledDates<\/code>.","!static":false,"!category":"function","!type":"fn(oDisabledDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.calendar.Month","parameters":{"oDisabledDate":"type: sap.ui.unified.DateRange, description: the disabledDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the disabledDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the disabledDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the disabledDate is inserted at\n             the last position"}},"setFirstDayOfWeek":{"!description":"Sets a new value for property <code>firstDayOfWeek<\/code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iFirstDayOfWeek: Number) -> sap.ui.unified.calendar.Month","parameters":{"iFirstDayOfWeek":"type: int, description: New value for property <code>firstDayOfWeek<\/code>"}},"setSecondaryCalendarType":{"!description":"Sets a new value for property <code>secondaryCalendarType<\/code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSecondaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.unified.calendar.Month","parameters":{"sSecondaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>secondaryCalendarType<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of Month\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.unified.calendar.Month","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getFirstDayOfWeek":{"!description":"Gets current value of property <code>firstDayOfWeek<\/code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"setDate":{"!description":"Sets a new value for property <code>date<\/code>.\n\nthe month including this date is rendered and this date is initial focused (if no other focus set)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.calendar.Month","parameters":{"oDate":"type: object, description: New value for property <code>date<\/code>"}},"indexOfSelectedDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>selectedDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> Number","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: The selectedDate whose index is looked for"}},"insertSelectedDate":{"!description":"Inserts a selectedDate into the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.calendar.Month","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"}}},"sap.ui.unified.DateTypeRange":{"!description":"Date range with calendar day type information. Used to visualize special days in the Calendar.","extend":{"!description":"Creates a new subclass of class sap.ui.unified.DateTypeRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.DateRange.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.DateTypeRange.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new DateTypeRange.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.unified.CalendarDayType (default: Type01)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.unified.DateRange#constructor sap.ui.unified.DateRange}\ncan be used as well.","!module":"sap/ui/unified/DateTypeRange","!helpDescription":"Date range with calendar day type information. Used to visualize special days in the Calendar.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType of the date range.\n\nDefault value is <code>Type01<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarDayType"},"!proto":"sap.ui.unified.DateRange","!category":"class","setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType of the date range.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Type01<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.unified.CalendarDayType) -> sap.ui.unified.DateTypeRange","parameters":{"sType":"type: sap.ui.unified.CalendarDayType, description: New value for property <code>type<\/code>"}}},"sap.ui.unified.SplitContainer":{"getSecondaryContentSize":{"!description":"Gets current value of property <code>secondaryContentSize<\/code>.\n\nThe width if the secondary content. The height is always 100%.\n\nDefault value is <code>250px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getSecondaryContent":{"!description":"Gets content of aggregation <code>secondaryContent<\/code>.\n\nThe content to appear in the secondary area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content to appear in the main area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","addSecondaryContent":{"!description":"Adds some secondaryContent to the aggregation <code>secondaryContent<\/code>.","!static":false,"!category":"function","!type":"fn(oSecondaryContent: sap.ui.core.Control) -> sap.ui.unified.SplitContainer","parameters":{"oSecondaryContent":"type: sap.ui.core.Control, description: the secondaryContent to add; if empty, nothing is inserted"}},"insertSecondaryContent":{"!description":"Inserts a secondaryContent into the aggregation <code>secondaryContent<\/code>.","!static":false,"!category":"function","!type":"fn(oSecondaryContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.SplitContainer","parameters":{"oSecondaryContent":"type: sap.ui.core.Control, description: the secondaryContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the secondaryContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the secondaryContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the secondaryContent is inserted at\n             the last position"}},"getShowSecondaryContent":{"!description":"Gets current value of property <code>showSecondaryContent<\/code>.\n\nShows / Hides the secondary area.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowSecondaryContent":{"!description":"Sets a new value for property <code>showSecondaryContent<\/code>.\n\nShows / Hides the secondary area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowSecondaryContent: Boolean) -> sap.ui.unified.SplitContainer","parameters":{"bShowSecondaryContent":"type: boolean, description: New value for property <code>showSecondaryContent<\/code>"}},"removeAllSecondaryContent":{"!description":"Removes all the controls from the aggregation <code>secondaryContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!constructorDescription":"Constructor for a new SplitContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSecondaryContent showSecondaryContent} : boolean<\/li>\n<li>{@link #getSecondaryContentSize secondaryContentSize} : sap.ui.core.CSSSize (default: 250px)<\/li>\n<li>{@link #getSecondaryContentWidth secondaryContentWidth} : sap.ui.core.CSSSize (default: 250px)<\/li>\n<li>{@link #getOrientation orientation} : sap.ui.core.Orientation (default: Horizontal)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSecondaryContent secondaryContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getOrientation":{"!description":"Gets current value of property <code>orientation<\/code>.\n\nWhether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").\n\nDefault value is <code>Horizontal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Orientation"},"setSecondaryContentSize":{"!description":"Sets a new value for property <code>secondaryContentSize<\/code>.\n\nThe width if the secondary content. The height is always 100%.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>250px<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondaryContentSize: sap.ui.core.CSSSize) -> sap.ui.unified.SplitContainer","parameters":{"sSecondaryContentSize":"type: sap.ui.core.CSSSize, description: New value for property <code>secondaryContentSize<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.SplitContainer"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","destroySecondaryContent":{"!description":"Destroys all the secondaryContent in the aggregation <code>secondaryContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.SplitContainer"},"setOrientation":{"!description":"Sets a new value for property <code>orientation<\/code>.\n\nWhether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Horizontal<\/code>.","!static":false,"!category":"function","!type":"fn(sOrientation: sap.ui.core.Orientation) -> sap.ui.unified.SplitContainer","parameters":{"sOrientation":"type: sap.ui.core.Orientation, description: New value for property <code>orientation<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.SplitContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.unified.SplitContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.SplitContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"indexOfSecondaryContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>secondaryContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSecondaryContent: sap.ui.core.Control) -> Number","parameters":{"oSecondaryContent":"type: sap.ui.core.Control, description: The secondaryContent whose index is looked for"}},"removeSecondaryContent":{"!description":"Removes a secondaryContent from the aggregation <code>secondaryContent<\/code>.","!static":false,"!category":"function","!type":"fn(vSecondaryContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vSecondaryContent":"type: int|string|sap.ui.core.Control, description: The secondaryContentto remove or its index or id"}},"!module":"sap/ui/unified/SplitContainer","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setSecondaryContentWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 \nOnly available for backwards compatibility.<br>Sets a new value for property <code>secondaryContentWidth<\/code>.\n\nDo not use. Use secondaryContentSize instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>250px<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondaryContentWidth: sap.ui.core.CSSSize) -> sap.ui.unified.SplitContainer","parameters":{"sSecondaryContentWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>secondaryContentWidth<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.SplitContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"getSecondaryContentWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 \nOnly available for backwards compatibility.<br>Gets current value of property <code>secondaryContentWidth<\/code>.\n\nDo not use. Use secondaryContentSize instead.\n\nDefault value is <code>250px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"}},"sap.ui.unified.Shell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.Shell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.ShellLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.Shell"},"sap.ui.unified.Menu_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.Menu"},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.unified.calendar.MonthPicker":{"setColumns":{"!description":"Sets a new value for property <code>columns<\/code>.\n\nnumber of months in each row\nThe value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn(iColumns: Number) -> sap.ui.unified.calendar.MonthPicker","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"previousPage":{"!description":"displays the previous page","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.MonthPicker"},"detachPageChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pageChange<\/code> event of this <code>sap.ui.unified.calendar.MonthPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.MonthPicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.MonthPicker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"nextPage":{"!description":"displays the next page","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.calendar.MonthPicker"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.calendar.MonthPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthPicker<\/code> itself.\n\nMonth selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.MonthPicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthPicker<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","firePageChange":{"!description":"Fires event <code>pageChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.calendar.MonthPicker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMonths":{"!description":"Gets current value of property <code>months<\/code>.\n\nnumber of displayed months\nThe value must be between 1 and 12\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getColumns":{"!description":"Gets current value of property <code>columns<\/code>.\n\nnumber of months in each row\nThe value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getPrimaryCalendarType":{"!description":"Gets current value of property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"!constructorDescription":"Constructor for a new MonthPicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMonth month} : int (default: 0)<\/li>\n<li>{@link #getMonths months} : int (default: 12)<\/li>\n<li>{@link #getColumns columns} : int (default: 3)<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pageChange pageChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getMonth":{"!description":"Gets current value of property <code>month<\/code>.\n\nThe month is initial focused and selected\nThe value must be between 0 and 11\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!description":"renders a MonthPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage","setMonth":{"!description":"Sets a new value for property <code>month<\/code>.\n\nThe month is initial focused and selected\nThe value must be between 0 and 11\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMonth: Number) -> sap.ui.unified.calendar.MonthPicker","parameters":{"iMonth":"type: int, description: New value for property <code>month<\/code>"}},"setPrimaryCalendarType":{"!description":"Sets a new value for property <code>primaryCalendarType<\/code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.unified.calendar.MonthPicker","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.calendar.MonthPicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMonths":{"!description":"Sets a new value for property <code>months<\/code>.\n\nnumber of displayed months\nThe value must be between 1 and 12\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn(iMonths: Number) -> sap.ui.unified.calendar.MonthPicker","parameters":{"iMonths":"type: int, description: New value for property <code>months<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.MonthPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setMinMax":{"!description":"sets a minimum an maximum month","!static":false,"!category":"function","!type":"fn(iMin?: Number, iMax?: Number) -> sap.ui.unified.calendar.MonthPicker","parameters":{"iMin":"type: int, description: minimum month as integer (starting with 0)","iMax":"type: int, description: maximum month as integer (starting with 0)"}},"!module":"sap/ui/unified/calendar/MonthPicker","!helpDescription":"renders a MonthPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage","attachPageChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pageChange<\/code> event of this <code>sap.ui.unified.calendar.MonthPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthPicker<\/code> itself.\n\nIf less than 12 months are displayed the <code>pageChange<\/code> event is fired\nif the displayed months are changed by user navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.calendar.MonthPicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthPicker<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.calendar.MonthPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.calendar.MonthPicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.unified.calendar.TimesRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.calendar.TimesRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.calendar.TimesRow"},"sap.ui.unified.ShellOverlay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellOverlay with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.ShellOverlay"},"sap.ui.unified.CalendarLegend_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarLegend with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.CalendarLegend"},"sap.ui":{"unified":"sap.ui.unified","!category":"namespace"},"sap.ui.unified.CalendarLegendItem":{"!description":"Item to be displayed in a CalendarLegend.","extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarLegendItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.CalendarLegendItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new CalendarLegendItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.ui.unified.CalendarDayType (default: None)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/unified/CalendarLegendItem","!helpDescription":"Item to be displayed in a CalendarLegend.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType of the item.\nIf not set the type is automatically determined from the order of the items in the CalendarLegend.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarDayType"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nText to be displayed for the item.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","!category":"class","setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType of the item.\nIf not set the type is automatically determined from the order of the items in the CalendarLegend.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.unified.CalendarDayType) -> sap.ui.unified.CalendarLegendItem","parameters":{"sType":"type: sap.ui.unified.CalendarDayType, description: New value for property <code>type<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nText to be displayed for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.unified.CalendarLegendItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.unified.ShellLayout":{"insertPaneContent":{"!description":"Inserts a paneContent into the aggregation <code>paneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.ShellLayout","parameters":{"oPaneContent":"type: sap.ui.core.Control, description: the paneContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the paneContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the paneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the paneContent is inserted at\n             the last position"}},"addPaneContent":{"!description":"Adds some paneContent to the aggregation <code>paneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oPaneContent: sap.ui.core.Control) -> sap.ui.unified.ShellLayout","parameters":{"oPaneContent":"type: sap.ui.core.Control, description: the paneContent to add; if empty, nothing is inserted"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content to appear in the main canvas.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","setHeaderVisible":{"!description":"Sets a new value for property <code>headerVisible<\/code>.\n\nIf set to false, no header (and no items, search, ...) is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderVisible: Boolean) -> sap.ui.unified.ShellLayout","parameters":{"bHeaderVisible":"type: boolean, description: New value for property <code>headerVisible<\/code>"}},"setHeader":{"!description":"Sets the aggregated <code>header<\/code>.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.unified.ShellLayout","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to set"}},"getHeader":{"!description":"Gets content of aggregation <code>header<\/code>.\n\nThe control to appear in the header area.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setHeaderHiding":{"!description":"Sets a new value for property <code>headerHiding<\/code>.\n\nWhether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderHiding: Boolean) -> sap.ui.unified.ShellLayout","parameters":{"bHeaderHiding":"type: boolean, description: New value for property <code>headerHiding<\/code>"}},"!constructorDescription":"Constructor for a new ShellLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPane showPane} : boolean (default: false)<\/li>\n<li>{@link #getHeaderHiding headerHiding} : boolean (default: false)<\/li>\n<li>{@link #getHeaderVisible headerVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getPaneContent paneContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getHeader header} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setShowPane":{"!description":"Sets a new value for property <code>showPane<\/code>.\n\nShows / Hides the side pane.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPane: Boolean) -> sap.ui.unified.ShellLayout","parameters":{"bShowPane":"type: boolean, description: New value for property <code>showPane<\/code>"}},"getPaneContent":{"!description":"Gets content of aggregation <code>paneContent<\/code>.\n\nThe content to appear in the pane area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getShowPane":{"!description":"Gets current value of property <code>showPane<\/code>.\n\nShows / Hides the side pane.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ShellLayout"},"!description":"The shell layout is the base for the shell control which is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.ShellLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllPaneContent":{"!description":"Removes all the controls from the aggregation <code>paneContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.unified.ShellLayout","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"indexOfPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>paneContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPaneContent: sap.ui.core.Control) -> Number","parameters":{"oPaneContent":"type: sap.ui.core.Control, description: The paneContent whose index is looked for"}},"destroyPaneContent":{"!description":"Destroys all the paneContent in the aggregation <code>paneContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ShellLayout"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removePaneContent":{"!description":"Removes a paneContent from the aggregation <code>paneContent<\/code>.","!static":false,"!category":"function","!type":"fn(vPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vPaneContent":"type: int|string|sap.ui.core.Control, description: The paneContentto remove or its index or id"}},"!module":"sap/ui/unified/ShellLayout","!helpDescription":"The shell layout is the base for the shell control which is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase.","destroyHeader":{"!description":"Destroys the header in the aggregation <code>header<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ShellLayout"},"getHeaderVisible":{"!description":"Gets current value of property <code>headerVisible<\/code>.\n\nIf set to false, no header (and no items, search, ...) is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeaderHiding":{"!description":"Gets current value of property <code>headerHiding<\/code>.\n\nWhether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.ShellLayout","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}}},"sap.ui.unified.ContentSwitcher_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ContentSwitcher with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.ContentSwitcher"},"sap.ui.unified.FileUploader":{"attachFileAllowed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>fileAllowed<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired when the file is allowed for upload on client side.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachUploadAborted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>uploadAborted<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired after the current upload has been aborted.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"upload":{"!description":"Starts the upload (as defined by uploadUrl)","!static":false,"!category":"function","!type":"fn()"},"fireUploadProgress":{"!description":"Fires event <code>uploadProgress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>lengthComputable<\/code> of type <code>boolean<\/code>Indicates whether or not the relative upload progress can be calculated out of loaded and total.<\/li>\n<li><code>loaded<\/code> of type <code>float<\/code>The number of bytes of the file which have been uploaded by to the time the event was fired.<\/li>\n<li><code>total<\/code> of type <code>float<\/code>The total size of the file to be uploaded in byte.<\/li>\n<li><code>fileName<\/code> of type <code>string<\/code>The name of a file to be uploaded.<\/li>\n<li><code>requestHeaders<\/code> of type <code>object[]<\/code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"addHeaderParameter":{"!description":"Adds some headerParameter to the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderParameter: sap.ui.unified.FileUploaderParameter) -> sap.ui.unified.FileUploader","parameters":{"oHeaderParameter":"type: sap.ui.unified.FileUploaderParameter, description: the headerParameter to add; if empty, nothing is inserted"}},"removeAllHeaderParameters":{"!description":"Removes all the controls from the aggregation <code>headerParameters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.FileUploaderParameter]"},"getSameFilenameAllowed":{"!description":"Gets current value of property <code>sameFilenameAllowed<\/code>.\n\nIf the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAdditionalData":{"!description":"Sets a new value for property <code>additionalData<\/code>.\n\nAdditional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalData: String) -> sap.ui.unified.FileUploader","parameters":{"sAdditionalData":"type: string, description: New value for property <code>additionalData<\/code>"}},"detachFilenameLengthExceed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filenameLengthExceed<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyHeaderParameters":{"!description":"Destroys all the headerParameters in the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.FileUploader"},"setIconFirst":{"!description":"Sets a new value for property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconFirst: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bIconFirst":"type: boolean, description: New value for property <code>iconFirst<\/code>"}},"setMaximumFileSize":{"!description":"Sets a new value for property <code>maximumFileSize<\/code>.\n\nA file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaximumFileSize: Number) -> sap.ui.unified.FileUploader","parameters":{"fMaximumFileSize":"type: float, description: New value for property <code>maximumFileSize<\/code>"}},"setMultiple":{"!description":"Sets a new value for property <code>multiple<\/code>.\n\nAllows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMultiple: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bMultiple":"type: boolean, description: New value for property <code>multiple<\/code>"}},"indexOfHeaderParameter":{"!description":"Checks for the provided <code>sap.ui.unified.FileUploaderParameter<\/code> in the aggregation <code>headerParameters<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderParameter: sap.ui.unified.FileUploaderParameter) -> Number","parameters":{"oHeaderParameter":"type: sap.ui.unified.FileUploaderParameter, description: The headerParameter whose index is looked for"}},"indexOfParameter":{"!description":"Checks for the provided <code>sap.ui.unified.FileUploaderParameter<\/code> in the aggregation <code>parameters<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oParameter: sap.ui.unified.FileUploaderParameter) -> Number","parameters":{"oParameter":"type: sap.ui.unified.FileUploaderParameter, description: The parameter whose index is looked for"}},"destroyParameters":{"!description":"Destroys all the parameters in the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.FileUploader"},"setUploadOnChange":{"!description":"Sets a new value for property <code>uploadOnChange<\/code>.\n\nIf set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUploadOnChange: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bUploadOnChange":"type: boolean, description: New value for property <code>uploadOnChange<\/code>"}},"getUploadOnChange":{"!description":"Gets current value of property <code>uploadOnChange<\/code>.\n\nIf set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIconSelected":{"!description":"Sets a new value for property <code>iconSelected<\/code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.unified.FileUploader","parameters":{"sIconSelected":"type: sap.ui.core.URI, description: New value for property <code>iconSelected<\/code>"}},"!description":"The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.","detachUploadStart":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>uploadStart<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireUploadComplete":{"!description":"Fires event <code>uploadComplete<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>The name of a file to be uploaded.<\/li>\n<li><code>response<\/code> of type <code>string<\/code>Response message which comes from the server. On the server side this response has to be put within the &quot;body&quot; tags of the response document of the iFrame.\nIt can consist of a return code and an optional message. This does not work in cross-domain scenarios.<\/li>\n<li><code>readyStateXHR<\/code> of type <code>string<\/code>ReadyState of the XHR request. Required for receiving a readyState is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.<\/li>\n<li><code>status<\/code> of type <code>string<\/code>Status of the XHR request. Required for receiving a status is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.<\/li>\n<li><code>responseRaw<\/code> of type <code>string<\/code>Http-Response which comes from the server. Required for receiving \"responseRaw\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9.<\/li>\n<li><code>headers<\/code> of type <code>object<\/code>Http-Response-Headers which come from the server. provided as a JSON-map, i.e. each header-field is reflected by a property in the header-object, with the property value reflecting the header-field's content.\nRequired for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.<\/li>\n<li><code>requestHeaders<\/code> of type <code>object[]<\/code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success, None.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.unified.FileUploader","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getIconFirst":{"!description":"Gets current value of property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMaximumFilenameLength":{"!description":"Gets current value of property <code>maximumFilenameLength<\/code>.\n\nThe maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>New file path value.<\/li>\n<li><code>files<\/code> of type <code>object[]<\/code>Files.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.FileUploader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDisabled controls have different colors, depending on customer settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/unified/FileUploader","getHeaderParameters":{"!description":"Gets content of aggregation <code>headerParameters<\/code>.\n\nThe header parameters for the FileUploader which are only submitted with XHR requests. Header parameters are not supported by Internet Explorer 9.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.FileUploaderParameter]"},"removeAllParameters":{"!description":"Removes all the controls from the aggregation <code>parameters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.FileUploaderParameter]"},"getUseMultipart":{"!description":"Gets current value of property <code>useMultipart<\/code>.\n\nIf set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nUnique control name for identification on the server side after sending data to the server.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.unified.FileUploader","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"setButtonText":{"!description":"Sets a new value for property <code>buttonText<\/code>.\n\nThe Button text can be overwritten using this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sButtonText: String) -> sap.ui.unified.FileUploader","parameters":{"sButtonText":"type: string, description: New value for property <code>buttonText<\/code>"}},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nPlaceholder for the text field.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaximumFilenameLength":{"!description":"Sets a new value for property <code>maximumFilenameLength<\/code>.\n\nThe maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaximumFilenameLength: Number) -> sap.ui.unified.FileUploader","parameters":{"iMaximumFilenameLength":"type: int, description: New value for property <code>maximumFilenameLength<\/code>"}},"attachTypeMissmatch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>typeMissmatch<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired when the type of a file does not match the mimeType or fileType property.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the displayed control width.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addParameter":{"!description":"Adds some parameter to the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn(oParameter: sap.ui.unified.FileUploaderParameter) -> sap.ui.unified.FileUploader","parameters":{"oParameter":"type: sap.ui.unified.FileUploaderParameter, description: the parameter to add; if empty, nothing is inserted"}},"detachTypeMissmatch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>typeMissmatch<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFileType":{"!description":"Gets current value of property <code>fileType<\/code>.\n\nThe chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"].","!static":false,"!category":"function","!type":"fn() -> [String]"},"getMultiple":{"!description":"Gets current value of property <code>multiple<\/code>.\n\nAllows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nPlaceholder for the text field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.ui.unified.FileUploader","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"setSendXHR":{"!description":"Sets a new value for property <code>sendXHR<\/code>.\n\nIf set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSendXHR: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bSendXHR":"type: boolean, description: New value for property <code>sendXHR<\/code>"}},"fireFileAllowed":{"!description":"Fires event <code>fileAllowed<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getButtonOnly":{"!description":"Gets current value of property <code>buttonOnly<\/code>.\n\nIf set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the displayed control width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.unified.FileUploader","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getSendXHR":{"!description":"Gets current value of property <code>sendXHR<\/code>.\n\nIf set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getParameters":{"!description":"Gets content of aggregation <code>parameters<\/code>.\n\nThe parameters for the FileUploader which are rendered as a hidden inputfield.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.FileUploaderParameter]"},"detachUploadAborted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>uploadAborted<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nUnique control name for identification on the server side after sending data to the server.","!static":false,"!category":"function","!type":"fn() -> String"},"detachUploadProgress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>uploadProgress<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMimeType":{"!description":"Sets a new value for property <code>mimeType<\/code>.\n\nThe chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"].\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMimeType: [String]) -> sap.ui.unified.FileUploader","parameters":{"sMimeType":"type: string[], description: New value for property <code>mimeType<\/code>"}},"detachFileAllowed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>fileAllowed<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireFilenameLengthExceed":{"!description":"Fires event <code>filenameLengthExceed<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>The filename, which is longer than specified by the value of the property maximumFilenameLength.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMaximumFileSize":{"!description":"Gets current value of property <code>maximumFileSize<\/code>.\n\nA file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9.","!static":false,"!category":"function","!type":"fn() -> Number"},"insertHeaderParameter":{"!description":"Inserts a headerParameter into the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderParameter: sap.ui.unified.FileUploaderParameter, iIndex: Number) -> sap.ui.unified.FileUploader","parameters":{"oHeaderParameter":"type: sap.ui.unified.FileUploaderParameter, description: the headerParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the headerParameter should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the headerParameter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headerParameter is inserted at\n             the last position"}},"attachUploadStart":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>uploadStart<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired before an upload is started.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.FileUploader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachFilenameLengthExceed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filenameLengthExceed<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired, if the filename of a chosen file is longer than the value specified with the maximumFilenameLength property.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachUploadProgress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>uploadProgress<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired after the upload has started and before the upload is completed and contains progress information related to the running upload.\nDepending on file size, band width and used browser the event is fired once or multiple times.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired when the value of the file path has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getUploadUrl":{"!description":"Gets current value of property <code>uploadUrl<\/code>.\n\nUsed when URL address is on a remote server.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.unified.FileUploader","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachFileSizeExceed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>fileSizeExceed<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.","abort":{"!description":"Aborts the currently running upload.","!static":false,"!category":"function","!type":"fn()"},"attachUploadComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>uploadComplete<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired as soon as the upload request is completed (either successful or unsuccessful). To see if the upload request was successful, check the 'state' parameter for a value 2xx.\nThe uploads actual progress can be retrieved via the 'uploadProgress' Event.\nHowever this covers only the client side of the Upload process and does not give any success status from the server.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIconHovered":{"!description":"Gets current value of property <code>iconHovered<\/code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"insertParameter":{"!description":"Inserts a parameter into the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn(oParameter: sap.ui.unified.FileUploaderParameter, iIndex: Number) -> sap.ui.unified.FileUploader","parameters":{"oParameter":"type: sap.ui.unified.FileUploaderParameter, description: the parameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the parameter should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the parameter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the parameter is inserted at\n             the last position"}},"setButtonOnly":{"!description":"Sets a new value for property <code>buttonOnly<\/code>.\n\nIf set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bButtonOnly: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bButtonOnly":"type: boolean, description: New value for property <code>buttonOnly<\/code>"}},"removeHeaderParameter":{"!description":"Removes a headerParameter from the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn(vHeaderParameter: Number | String | sap.ui.unified.FileUploaderParameter) -> sap.ui.unified.FileUploaderParameter","parameters":{"vHeaderParameter":"type: int|string|sap.ui.unified.FileUploaderParameter, description: The headerParameterto remove or its index or id"}},"fireUploadStart":{"!description":"Fires event <code>uploadStart<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>The name of a file to be uploaded.<\/li>\n<li><code>requestHeaders<\/code> of type <code>object[]<\/code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.Control","!category":"class","getIconSelected":{"!description":"Gets current value of property <code>iconSelected<\/code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"fireUploadAborted":{"!description":"Fires event <code>uploadAborted<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>The name of a file to be uploaded.<\/li>\n<li><code>requestHeaders<\/code> of type <code>object[]<\/code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new FileUploader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getUploadUrl uploadUrl} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getUploadOnChange uploadOnChange} : boolean (default: false)<\/li>\n<li>{@link #getAdditionalData additionalData} : string<\/li>\n<li>{@link #getSameFilenameAllowed sameFilenameAllowed} : boolean (default: false)<\/li>\n<li>{@link #getButtonText buttonText} : string<\/li>\n<li>{@link #getFileType fileType} : string[]<\/li>\n<li>{@link #getMultiple multiple} : boolean (default: false)<\/li>\n<li>{@link #getMaximumFileSize maximumFileSize} : float<\/li>\n<li>{@link #getMimeType mimeType} : string[]<\/li>\n<li>{@link #getSendXHR sendXHR} : boolean (default: false)<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getStyle style} : string<\/li>\n<li>{@link #getButtonOnly buttonOnly} : boolean (default: false)<\/li>\n<li>{@link #getUseMultipart useMultipart} : boolean (default: true)<\/li>\n<li>{@link #getMaximumFilenameLength maximumFilenameLength} : int<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)<\/li>\n<li>{@link #getIconOnly iconOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getParameters parameters} : sap.ui.unified.FileUploaderParameter[]<\/li>\n<li>{@link #getHeaderParameters headerParameters} : sap.ui.unified.FileUploaderParameter[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadComplete uploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:typeMissmatch typeMissmatch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileSizeExceed fileSizeExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileAllowed fileAllowed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadProgress uploadProgress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadAborted uploadAborted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filenameLengthExceed filenameLengthExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadStart uploadStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getStyle":{"!description":"Gets current value of property <code>style<\/code>.\n\nStyle of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed.","!static":false,"!category":"function","!type":"fn() -> String"},"setIconOnly":{"!description":"Sets a new value for property <code>iconOnly<\/code>.\n\nIf set to true, the button is displayed without any text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIconOnly: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bIconOnly":"type: boolean, description: New value for property <code>iconOnly<\/code>"}},"setIconHovered":{"!description":"Sets a new value for property <code>iconHovered<\/code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.unified.FileUploader","parameters":{"sIconHovered":"type: sap.ui.core.URI, description: New value for property <code>iconHovered<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDisabled controls have different colors, depending on customer settings.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUseMultipart":{"!description":"Sets a new value for property <code>useMultipart<\/code>.\n\nIf set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseMultipart: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bUseMultipart":"type: boolean, description: New value for property <code>useMultipart<\/code>"}},"setStyle":{"!description":"Sets a new value for property <code>style<\/code>.\n\nStyle of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStyle: String) -> sap.ui.unified.FileUploader","parameters":{"sStyle":"type: string, description: New value for property <code>style<\/code>"}},"removeParameter":{"!description":"Removes a parameter from the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn(vParameter: Number | String | sap.ui.unified.FileUploaderParameter) -> sap.ui.unified.FileUploaderParameter","parameters":{"vParameter":"type: int|string|sap.ui.unified.FileUploaderParameter, description: The parameterto remove or its index or id"}},"setFileType":{"!description":"Sets a new value for property <code>fileType<\/code>.\n\nThe chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"].\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileType: [String]) -> sap.ui.unified.FileUploader","parameters":{"sFileType":"type: string[], description: New value for property <code>fileType<\/code>"}},"getMimeType":{"!description":"Gets current value of property <code>mimeType<\/code>.\n\nThe chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"].","!static":false,"!category":"function","!type":"fn() -> [String]"},"getAdditionalData":{"!description":"Gets current value of property <code>additionalData<\/code>.\n\nAdditional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data.","!static":false,"!category":"function","!type":"fn() -> String"},"fireTypeMissmatch":{"!description":"Fires event <code>typeMissmatch<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>The name of a file to be uploaded.<\/li>\n<li><code>fileType<\/code> of type <code>string<\/code>The file ending of a file to be uploaded.<\/li>\n<li><code>mimeType<\/code> of type <code>string<\/code>The MIME type of a file to be uploaded.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getIconOnly":{"!description":"Gets current value of property <code>iconOnly<\/code>.\n\nIf set to true, the button is displayed without any text.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"clear":{"!description":"Clears the content of the FileUploader. The attached additional data however is retained.","!static":false,"!category":"function","!type":"fn()"},"fireFileSizeExceed":{"!description":"Fires event <code>fileSizeExceed<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>The name of a file to be uploaded.<\/li>\n<li><code>fileSize<\/code> of type <code>string<\/code>The size in MB of a file to be uploaded.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.FileUploader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getButtonText":{"!description":"Gets current value of property <code>buttonText<\/code>.\n\nThe Button text can be overwritten using this property.","!static":false,"!category":"function","!type":"fn() -> String"},"setSameFilenameAllowed":{"!description":"Sets a new value for property <code>sameFilenameAllowed<\/code>.\n\nIf the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSameFilenameAllowed: Boolean) -> sap.ui.unified.FileUploader","parameters":{"bSameFilenameAllowed":"type: boolean, description: New value for property <code>sameFilenameAllowed<\/code>"}},"setUploadUrl":{"!description":"Sets a new value for property <code>uploadUrl<\/code>.\n\nUsed when URL address is on a remote server.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sUploadUrl: sap.ui.core.URI) -> sap.ui.unified.FileUploader","parameters":{"sUploadUrl":"type: sap.ui.core.URI, description: New value for property <code>uploadUrl<\/code>"}},"attachFileSizeExceed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>fileSizeExceed<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader<\/code> itself.\n\nEvent is fired when the size of a file is above the maximumFileSize property.\nThis event is not supported by Internet Explorer 9 (same restriction as for the property maximumFileSize).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nValue of the path for file upload.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success, None.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nValue of the path for file upload.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.unified.FileUploader","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"detachUploadComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>uploadComplete<\/code> event of this <code>sap.ui.unified.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.unified.CalendarMonthInterval":{"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date of the Interval as JavaScript Date object.\nThe month of this Date will be the first month in the displayed row.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarMonthInterval","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.CalendarMonthInterval<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval<\/code> itself.\n\nMonth selection changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setPickerPopup":{"!description":"Sets a new value for property <code>pickerPopup<\/code>.\n\nIf set, the yearPicker opens on a popup\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPickerPopup: Boolean) -> sap.ui.unified.CalendarMonthInterval","parameters":{"bPickerPopup":"type: boolean, description: New value for property <code>pickerPopup<\/code>"}},"getMonths":{"!description":"Gets current value of property <code>months<\/code>.\n\nNumber of months displayed\n\n<b>Note:<\/b> On phones, the maximum number of months displayed in the row is always 6.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"addSelectedDate":{"!description":"Adds some selectedDate to the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to add; if empty, nothing is inserted"}},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateTypeRange<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> Number","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The specialDate whose index is looked for"}},"fireStartDateChange":{"!description":"Fires event <code>startDateChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarMonthInterval","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getIntervalSelection":{"!description":"Gets current value of property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySelectedDates":{"!description":"Destroys all the selectedDates in the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarMonthInterval"},"getPickerPopup":{"!description":"Gets current value of property <code>pickerPopup<\/code>.\n\nIf set, the yearPicker opens on a popup\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIntervalSelection":{"!description":"Sets a new value for property <code>intervalSelection<\/code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIntervalSelection: Boolean) -> sap.ui.unified.CalendarMonthInterval","parameters":{"bIntervalSelection":"type: boolean, description: New value for property <code>intervalSelection<\/code>"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.CalendarMonthInterval","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"Calendar with granularity of months displayed in one line.\n\n<b>Note:<\/b> JavaScript Date objects are used to set and return the months, mark them as selected or as a special type.\nBut the date part of the Date object is not used. If a Date object is returned the date will be set to the 1st of the corresponding month.","getLegend":{"!description":"ID of the element which is the current target of the association <code>legend<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarLegend"},"setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date of the Interval as JavaScript Date object.\nThe month of this Date will be the first month in the displayed row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.ui.unified.CalendarMonthInterval<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.CalendarMonthInterval.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllSelectedDates":{"!description":"Removes all the controls from the aggregation <code>selectedDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"insertSpecialDate":{"!description":"Inserts a specialDate into the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"}},"focusDate":{"!description":"Sets the focused month of the <code>CalendarMonthInterval<\/code>.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.Calendar","parameters":{"oDate":"type: object, description: JavaScript date object for focused date. (The month of this date will be focused.)"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarMonthInterval with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/unified/CalendarMonthInterval","!helpDescription":"Calendar with granularity of months displayed in one line.\n\n<b>Note:<\/b> JavaScript Date objects are used to set and return the months, mark them as selected or as a special type.\nBut the date part of the Date object is not used. If a Date object is returned the date will be set to the 1st of the corresponding month.","displayDate":{"!description":"Displays a month in the <code>CalendarMonthInterval<\/code> but doesn't set the focus.","!static":false,"!category":"function","!type":"fn(oDate: Object) -> sap.ui.unified.Calendar","parameters":{"oDate":"type: object, description: JavaScript date object for displayed date. (The month of this date will be displayed.)"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.CalendarMonthInterval<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachStartDateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>startDateChange<\/code> event of this <code>sap.ui.unified.CalendarMonthInterval<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval<\/code> itself.\n\n<code>startDate<\/code> was changed while navigation in <code>CalendarMonthInterval<\/code>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.ui.unified.CalendarMonthInterval<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval<\/code> itself.\n\nMonth selection was cancelled","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSingleSelection":{"!description":"Gets current value of property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if <code>intervalSelection<\/code> is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSingleSelection":{"!description":"Sets a new value for property <code>singleSelection<\/code>.\n\nIf set, only a single date or interval, if <code>intervalSelection<\/code> is enabled, can be selected\n\n<b>Note:<\/b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleSelection: Boolean) -> sap.ui.unified.CalendarMonthInterval","parameters":{"bSingleSelection":"type: boolean, description: New value for property <code>singleSelection<\/code>"}},"getMinDate":{"!description":"Gets current value of property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSpecialDate":{"!description":"Removes a specialDate from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSpecialDate: Number | String | sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"vSpecialDate":"type: int|string|sap.ui.unified.DateTypeRange, description: The specialDateto remove or its index or id"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the <code>CalendarMonthInterval<\/code>. The width of the single months depends on this width.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate ranges with type to visualize special months in the <code>CalendarMonthInterval<\/code>.\nIf one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:<\/b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"!constructorDescription":"Constructor for a new <code>CalendarMonthInterval<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getIntervalSelection intervalSelection} : boolean (default: false)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getMonths months} : int (default: 12)<\/li>\n<li>{@link #getPickerPopup pickerPopup} : boolean (default: false)<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSelectedDates selectedDates} : sap.ui.unified.DateRange[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:startDateChange startDateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.CalendarMonthInterval","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"addSpecialDate":{"!description":"Adds some specialDate to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is inserted"}},"getSelectedDates":{"!description":"Gets content of aggregation <code>selectedDates<\/code>.\n\nDate ranges for selected dates of the <code>CalendarMonthInterval<\/code>.\n\nIf <code>singleSelection<\/code> is set, only the first entry is used.\n\n<b>Note:<\/b> Even if only one day is selected, the whole corresponding month is selected.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateRange]"},"setLegend":{"!description":"Sets the associated <code>legend<\/code>.","!static":false,"!category":"function","!type":"fn(oLegend: sap.ui.unified.CalendarLegend) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oLegend":"type: sap.ui.unified.CalendarLegend, description: Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"}},"removeSelectedDate":{"!description":"Removes a selectedDate from the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSelectedDate: Number | String | sap.ui.unified.DateRange) -> sap.ui.unified.DateRange","parameters":{"vSelectedDate":"type: int|string|sap.ui.unified.DateRange, description: The selectedDateto remove or its index or id"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarMonthInterval"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMaxDate":{"!description":"Gets current value of property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setMonths":{"!description":"Sets a new value for property <code>months<\/code>.\n\nNumber of months displayed\n\n<b>Note:<\/b> On phones, the maximum number of months displayed in the row is always 6.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn(iMonths: Number) -> sap.ui.unified.CalendarMonthInterval","parameters":{"iMonths":"type: int, description: New value for property <code>months<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the <code>CalendarMonthInterval<\/code>. The width of the single months depends on this width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.unified.CalendarMonthInterval","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setMaxDate":{"!description":"Sets a new value for property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMaxDate: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oMaxDate":"type: object, description: New value for property <code>maxDate<\/code>"}},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"detachStartDateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>startDateChange<\/code> event of this <code>sap.ui.unified.CalendarMonthInterval<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfSelectedDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateRange<\/code> in the aggregation <code>selectedDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange) -> Number","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: The selectedDate whose index is looked for"}},"insertSelectedDate":{"!description":"Inserts a selectedDate into the aggregation <code>selectedDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedDate: sap.ui.unified.DateRange, iIndex: Number) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oSelectedDate":"type: sap.ui.unified.DateRange, description: the selectedDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"}},"setMinDate":{"!description":"Sets a new value for property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMinDate: Object) -> sap.ui.unified.CalendarMonthInterval","parameters":{"oMinDate":"type: object, description: New value for property <code>minDate<\/code>"}}},"sap.ui.unified.CalendarLegend":{"!description":"A legend for the Calendar Control. Displays special dates colors with their corresponding description. The aggregation specialDates can be set herefor.","removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.unified.CalendarLegendItem) -> sap.ui.unified.CalendarLegendItem","parameters":{"vItem":"type: int|string|sap.ui.unified.CalendarLegendItem, description: The itemto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.CalendarLegend.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getColumnWidth":{"!description":"Gets current value of property <code>columnWidth<\/code>.\n\nWidth of the columns created in which the items are arranged.\n\nDefault value is <code>120px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarLegend"},"!category":"class","setColumnWidth":{"!description":"Sets a new value for property <code>columnWidth<\/code>.\n\nWidth of the columns created in which the items are arranged.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>120px<\/code>.","!static":false,"!category":"function","!type":"fn(sColumnWidth: sap.ui.core.CSSSize) -> sap.ui.unified.CalendarLegend","parameters":{"sColumnWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>columnWidth<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarLegendItem]"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.CalendarLegend with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.CalendarLegendItem) -> sap.ui.unified.CalendarLegend","parameters":{"oItem":"type: sap.ui.unified.CalendarLegendItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nItems to be displayed.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarLegendItem]"},"!constructorDescription":"Constructor for a new CalendarLegend.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnWidth columnWidth} : sap.ui.core.CSSSize (default: 120px)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.unified.CalendarLegendItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/unified/CalendarLegend","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.unified.CalendarLegendItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.CalendarLegendItem) -> Number","parameters":{"oItem":"type: sap.ui.unified.CalendarLegendItem, description: The item whose index is looked for"}},"!helpDescription":"A legend for the Calendar Control. Displays special dates colors with their corresponding description. The aggregation specialDates can be set herefor.","insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.CalendarLegendItem, iIndex: Number) -> sap.ui.unified.CalendarLegend","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.unified.CalendarLegendItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.ui.unified.FileUploader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.FileUploader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.FileUploader"},"sap.ui.unified.MenuItemBase":{"!description":"Abstract base class for menu item which provides common properties and events for all concrete item implementations.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible items do not appear in the menu.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.unified.MenuItemBase","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.MenuItemBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible items do not appear in the menu.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.ui.unified.MenuItemBase<\/code>The current item<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.MenuItemBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.unified.MenuItemBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.MenuItemBase<\/code> itself.\n\nFired when the item is selected by the user.\n<b>Note:<\/b> The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.MenuItemBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.MenuItemBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Element","!category":"class","setStartsSection":{"!description":"Sets a new value for property <code>startsSection<\/code>.\n\nDefines whether a visual separator should be rendered before the item.\n<b>Note:<\/b> If an item is invisible also the separator of this item is not shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStartsSection: Boolean) -> sap.ui.unified.MenuItemBase","parameters":{"bStartsSection":"type: boolean, description: New value for property <code>startsSection<\/code>"}},"destroySubmenu":{"!description":"Destroys the submenu in the aggregation <code>submenu<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.MenuItemBase"},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.MenuItemBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSubmenu":{"!description":"Gets content of aggregation <code>submenu<\/code>.\n\nAn optional submenu of the item which is opened when the item is selected by the user.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Menu"},"hover":{"!description":"Changes the visual hover state of the menu item.\n\nSubclasses may override this function.","!static":false,"!category":"function","!type":"fn(bHovered: Boolean, oMenu: sap.ui.unified.Menu)","parameters":{"bHovered":"type: boolean, description: Specifies whether the item is currently hovered or not.","oMenu":"type: sap.ui.unified.Menu, description: The menu to which this item belongs"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhen an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.unified.MenuItemBase","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Abstract base class <code>MenuItemBase<\/code> for menu item elements. Please use concrete subclasses.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getStartsSection startsSection} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubmenu submenu} : sap.ui.unified.Menu (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/unified/MenuItemBase","!helpDescription":"Abstract base class for menu item which provides common properties and events for all concrete item implementations.","getStartsSection":{"!description":"Gets current value of property <code>startsSection<\/code>.\n\nDefines whether a visual separator should be rendered before the item.\n<b>Note:<\/b> If an item is invisible also the separator of this item is not shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhen an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSubmenu":{"!description":"Sets the aggregated <code>submenu<\/code>.","!static":false,"!category":"function","!type":"fn(oSubmenu: sap.ui.unified.Menu) -> sap.ui.unified.MenuItemBase","parameters":{"oSubmenu":"type: sap.ui.unified.Menu, description: The submenu to set"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.unified.MenuItemBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.MenuItemBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"onAfterRendering":{"!description":"Informs the item that the item HTML is now applied to the DOM.\n\nSubclasses may override this function.","!static":false,"!category":"function","!type":"fn()"},"render":{"!description":"Produces the HTML of an item and writes it to render-output-buffer during the rendering of the corresponding menu.\n\nSubclasses may override this function.","!static":false,"!category":"function","!type":"fn(oRenderManager: sap.ui.core.RenderManager, oItem: sap.ui.unified.MenuItemBase, oMenu: sap.ui.unified.Menu)","parameters":{"oRenderManager":"type: sap.ui.core.RenderManager, description: The <code>RenderManager<\/code> that can be used for writing to the render-output-buffer","oItem":"type: sap.ui.unified.MenuItemBase, description: The item which should be rendered","oMenu":"type: sap.ui.unified.Menu, description: The menu to which this item belongs"}},"onSubmenuToggle":{"!description":"Event handler which is called whenever the submenu of the item is opened or closed.\n\nSubclasses may override this function.","!static":false,"!category":"function","!type":"fn(bOpened: Boolean)","parameters":{"bOpened":"type: boolean, description: Specifies whether the submenu of the item is opened or closed"}}},"sap.ui.unified.ShellOverlay":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content to appear in the overlay.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getSearch":{"!description":"Gets content of aggregation <code>search<\/code>.\n\nExperimental (This aggregation might change in future!): The search control which should be displayed in the overlay header.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!constructorDescription":"Constructor for a new ShellOverlay.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSearch search} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.unified.ShellOverlay","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"destroySearch":{"!description":"Destroys the search in the aggregation <code>search<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ShellOverlay"},"getShell":{"!description":"ID of the element which is the current target of the association <code>shell<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ShellLayout"},"close":{"!description":"Closes the ShellOverlay.","!static":false,"!category":"function","!type":"fn()"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.ShellOverlay"},"setShell":{"!description":"Sets the associated <code>shell<\/code>.","!static":false,"!category":"function","!type":"fn(oShell: sap.ui.unified.ShellLayout) -> sap.ui.unified.ShellOverlay","parameters":{"oShell":"type: sap.ui.unified.ShellLayout, description: Id of an element which becomes the new target of this shell association; alternatively, an element instance may be given"}},"!description":"ShellOverlay to be opened in front of a sap.ui.unified.Shell","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.unified.ShellOverlay.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"fireClosed":{"!description":"Fires event <code>closed<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.unified.ShellOverlay","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.unified.ShellOverlay","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>closed<\/code> event of this <code>sap.ui.unified.ShellOverlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.ShellOverlay<\/code> itself.\n\nFired when the overlay was closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.unified.ShellOverlay","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellOverlay<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSearch":{"!description":"Sets the aggregated <code>search<\/code>.","!static":false,"!category":"function","!type":"fn(oSearch: sap.ui.core.Control) -> sap.ui.unified.ShellOverlay","parameters":{"oSearch":"type: sap.ui.core.Control, description: The search to set"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.unified.ShellOverlay with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/unified/ShellOverlay","detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>closed<\/code> event of this <code>sap.ui.unified.ShellOverlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.unified.ShellOverlay","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"ShellOverlay to be opened in front of a sap.ui.unified.Shell","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.unified.ShellOverlay","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"open":{"!description":"Opens the ShellOverlay.","!static":false,"!category":"function","!type":"fn()"}},"sap.ui.unified.Currency_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.unified.Currency with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.unified.Currency"}}}