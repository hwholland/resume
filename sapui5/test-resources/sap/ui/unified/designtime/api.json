{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.ui.unified",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.ui.unified",
			"basename": "unified",
			"resource": "sap/ui/unified/library.js",
			"module": "sap/ui/unified/library",
			"static": true,
			"visibility": "public",
			"description": "Unified controls intended for both, mobile and desktop scenarios"
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.Calendar",
			"basename": "Calendar",
			"resource": "sap/ui/unified/Calendar.js",
			"module": "sap/ui/unified/Calendar",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.core.Control",
			"description": "Basic Calendar.\nThis calendar is used for DatePickers",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "intervalSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, interval selection is allowed",
						"methods": [
							"getIntervalSelection",
							"setIntervalSelection"
						]
					},
					{
						"name": "singleSelection",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, only a single date or interval, if intervalSelection is enabled, can be selected",
						"methods": [
							"getSingleSelection",
							"setSingleSelection"
						]
					},
					{
						"name": "months",
						"type": "int",
						"defaultValue": 1,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.28.0",
						"description": "number of months displayed\non phones always only one month is displayed",
						"methods": [
							"getMonths",
							"setMonths"
						]
					},
					{
						"name": "firstDayOfWeek",
						"type": "int",
						"defaultValue": -1,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.28.9",
						"description": "If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.",
						"methods": [
							"getFirstDayOfWeek",
							"setFirstDayOfWeek"
						]
					},
					{
						"name": "nonWorkingDays",
						"type": "int[]",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.28.9",
						"description": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.",
						"methods": [
							"getNonWorkingDays",
							"setNonWorkingDays"
						]
					},
					{
						"name": "primaryCalendarType",
						"type": "sap.ui.core.CalendarType",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.",
						"methods": [
							"getPrimaryCalendarType",
							"setPrimaryCalendarType"
						]
					},
					{
						"name": "secondaryCalendarType",
						"type": "sap.ui.core.CalendarType",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type",
						"methods": [
							"getSecondaryCalendarType",
							"setSecondaryCalendarType"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Width of Calendar\n\n<b>Note:</b> There is a theme depending minimum width, so the calendar can not be set smaller.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "minDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.",
						"methods": [
							"getMinDate",
							"setMinDate"
						]
					},
					{
						"name": "maxDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.",
						"methods": [
							"getMaxDate",
							"setMaxDate"
						]
					}
				],
				"aggregations": [
					{
						"name": "selectedDates",
						"singularName": "selectedDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date Ranges for selected dates of the DatePicker",
						"methods": [
							"getSelectedDates",
							"destroySelectedDates",
							"insertSelectedDate",
							"addSelectedDate",
							"removeSelectedDate",
							"indexOfSelectedDate",
							"removeAllSelectedDates"
						]
					},
					{
						"name": "specialDates",
						"singularName": "specialDate",
						"type": "sap.ui.unified.DateTypeRange",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.24.0",
						"description": "Date Range with type to visualize special days in the Calendar.\nIf one day is assigned to more than one Type, only the first one will be used.",
						"methods": [
							"getSpecialDates",
							"destroySpecialDates",
							"insertSpecialDate",
							"addSpecialDate",
							"removeSpecialDate",
							"indexOfSpecialDate",
							"removeAllSpecialDates"
						]
					},
					{
						"name": "disabledDates",
						"singularName": "disabledDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Date Ranges for disabled dates",
						"methods": [
							"getDisabledDates",
							"destroyDisabledDates",
							"insertDisabledDate",
							"addDisabledDate",
							"removeDisabledDate",
							"indexOfDisabledDate",
							"removeAllDisabledDates"
						]
					},
					{
						"name": "header",
						"singularName": "header",
						"type": "sap.ui.unified.calendar.Header",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden, for internal use only.",
						"methods": [
							"getHeader",
							"destroyHeader",
							"setHeader"
						]
					},
					{
						"name": "month",
						"singularName": "month",
						"type": "sap.ui.unified.calendar.Month",
						"cardinality": "0..n",
						"visibility": "hidden",
						"methods": [
							"getMonth",
							"destroyMonth",
							"insertMonth",
							"addMonth",
							"removeMonth",
							"indexOfMonth",
							"removeAllMonth"
						]
					},
					{
						"name": "monthPicker",
						"singularName": "monthPicker",
						"type": "sap.ui.unified.calendar.MonthPicker",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getMonthPicker",
							"destroyMonthPicker",
							"setMonthPicker"
						]
					},
					{
						"name": "yearPicker",
						"singularName": "yearPicker",
						"type": "sap.ui.unified.calendar.YearPicker",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getYearPicker",
							"destroyYearPicker",
							"setYearPicker"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.28.0",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					},
					{
						"name": "legend",
						"singularName": "legend",
						"type": "sap.ui.unified.CalendarLegend",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.5",
						"description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
						"methods": [
							"getLegend",
							"setLegend"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Date selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "cancel",
						"visibility": "public",
						"description": "Date selection was cancelled",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					},
					{
						"name": "startDateChange",
						"visibility": "public",
						"since": "1.34.0",
						"description": "<code>startDate</code> was changed while navigation in <code>Calendar</code>\n\nUse <code>getStartDate</code> function to determine the current start date",
						"methods": [
							"attachStartDateChange",
							"detachStartDateChange",
							"fireStartDateChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Calendar.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "cancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Date selection was cancelled"
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Date selection changed"
				},
				{
					"name": "startDateChange",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "<code>startDate</code> was changed while navigation in <code>Calendar</code>\n\nUse <code>getStartDate</code> function to determine the current start date"
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oDisabledDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the disabledDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some disabledDate to the aggregation <code>disabledDates</code>."
				},
				{
					"name": "addSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some selectedDate to the aggregation <code>selectedDates</code>."
				},
				{
					"name": "addSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some specialDate to the aggregation <code>specialDates</code>."
				},
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>cancel</code> event of this <code>sap.ui.unified.Calendar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Calendar</code> itself.\n\nDate selection was cancelled"
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.Calendar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Calendar</code> itself.\n\nDate selection changed"
				},
				{
					"name": "attachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>startDateChange</code> event of this <code>sap.ui.unified.Calendar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Calendar</code> itself.\n\n<code>startDate</code> was changed while navigation in <code>Calendar</code>\n\nUse <code>getStartDate</code> function to determine the current start date"
				},
				{
					"name": "destroyDisabledDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"description": "Destroys all the disabledDates in the aggregation <code>disabledDates</code>."
				},
				{
					"name": "destroySelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the selectedDates in the aggregation <code>selectedDates</code>."
				},
				{
					"name": "destroySpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"description": "Destroys all the specialDates in the aggregation <code>specialDates</code>."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>cancel</code> event of this <code>sap.ui.unified.Calendar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.Calendar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>startDateChange</code> event of this <code>sap.ui.unified.Calendar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "displayDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for focused date."
						}
					],
					"description": "Displays a date in the calendar but don't set the focus."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.Calendar with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>cancel</code> to attached listeners."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "fireStartDateChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>startDateChange</code> to attached listeners."
				},
				{
					"name": "focusDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for focused date."
						}
					],
					"description": "Sets the focused date of the calendar."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"since": "1.28.0",
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getDisabledDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"since": "1.38.0",
					"description": "Gets content of aggregation <code>disabledDates</code>.\n\nDate Ranges for disabled dates"
				},
				{
					"name": "getFirstDayOfWeek",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>firstDayOfWeek</code>"
					},
					"since": "1.28.9",
					"description": "Gets current value of property <code>firstDayOfWeek</code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "getIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>intervalSelection</code>"
					},
					"description": "Gets current value of property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend"
					},
					"since": "1.38.5",
					"description": "ID of the element which is the current target of the association <code>legend</code>, or <code>null</code>."
				},
				{
					"name": "getMaxDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>maxDate</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>maxDate</code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.Calendar."
				},
				{
					"name": "getMinDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>minDate</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>minDate</code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>."
				},
				{
					"name": "getMonths",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>months</code>"
					},
					"since": "1.28.0",
					"description": "Gets current value of property <code>months</code>.\n\nnumber of months displayed\non phones always only one month is displayed\n\nDefault value is <code>1</code>."
				},
				{
					"name": "getNonWorkingDays",
					"visibility": "public",
					"returnValue": {
						"type": "int[]",
						"description": "Value of property <code>nonWorkingDays</code>"
					},
					"since": "1.28.9",
					"description": "Gets current value of property <code>nonWorkingDays</code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days."
				},
				{
					"name": "getPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CalendarType",
						"description": "Value of property <code>primaryCalendarType</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
				},
				{
					"name": "getSecondaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CalendarType",
						"description": "Value of property <code>secondaryCalendarType</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>secondaryCalendarType</code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
				},
				{
					"name": "getSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"description": "Gets content of aggregation <code>selectedDates</code>.\n\nDate Ranges for selected dates of the DatePicker"
				},
				{
					"name": "getSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>singleSelection</code>"
					},
					"description": "Gets current value of property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]"
					},
					"since": "1.24.0",
					"description": "Gets content of aggregation <code>specialDates</code>.\n\nDate Range with type to visualize special days in the Calendar.\nIf one day is assigned to more than one Type, only the first one will be used."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "JavaScript date object for start date."
					},
					"since": "1.34.1",
					"description": "Returns the first day of the displayed month.\n\nThere might be some days of the previous month shown, but they can not be focused."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>width</code>.\n\nWidth of Calendar\n\n<b>Note:</b> There is a theme depending minimum width, so the calendar can not be set smaller."
				},
				{
					"name": "indexOfDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oDisabledDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The disabledDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>disabledDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>selectedDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation <code>specialDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oDisabledDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the disabledDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the disabledDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the disabledDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the disabledDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a disabledDate into the aggregation <code>disabledDates</code>."
				},
				{
					"name": "insertSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a selectedDate into the aggregation <code>selectedDates</code>."
				},
				{
					"name": "insertSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a specialDate into the aggregation <code>specialDates</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.28.0",
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllDisabledDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.38.0",
					"description": "Removes all the controls from the aggregation <code>disabledDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>selectedDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.24.0",
					"description": "Removes all the controls from the aggregation <code>specialDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed disabledDate or <code>null</code>"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "vDisabledDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The disabledDateto remove or its index or id"
						}
					],
					"description": "Removes a disabledDate from the aggregation <code>disabledDates</code>."
				},
				{
					"name": "removeSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed selectedDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSelectedDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDateto remove or its index or id"
						}
					],
					"description": "Removes a selectedDate from the aggregation <code>selectedDates</code>."
				},
				{
					"name": "removeSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange",
						"description": "The removed specialDate or <code>null</code>"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "vSpecialDate",
							"type": "int|string|sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDateto remove or its index or id"
						}
					],
					"description": "Removes a specialDate from the aggregation <code>specialDates</code>."
				},
				{
					"name": "setFirstDayOfWeek",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.9",
					"parameters": [
						{
							"name": "iFirstDayOfWeek",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>firstDayOfWeek</code>"
						}
					],
					"description": "Sets a new value for property <code>firstDayOfWeek</code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "setIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIntervalSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>intervalSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.5",
					"parameters": [
						{
							"name": "oLegend",
							"type": "sap.ui.unified.CalendarLegend",
							"optional": false,
							"description": "Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>legend</code>."
				},
				{
					"name": "setMaxDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oMaxDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>maxDate</code>"
						}
					],
					"description": "Sets a new value for property <code>maxDate</code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMinDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oMinDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>minDate</code>"
						}
					],
					"description": "Sets a new value for property <code>minDate</code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMonths",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.0",
					"parameters": [
						{
							"name": "iMonths",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>months</code>"
						}
					],
					"description": "Sets a new value for property <code>months</code>.\n\nnumber of months displayed\non phones always only one month is displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "setNonWorkingDays",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.9",
					"parameters": [
						{
							"name": "sNonWorkingDays",
							"type": "int[]",
							"optional": false,
							"description": "New value for property <code>nonWorkingDays</code>"
						}
					],
					"description": "Sets a new value for property <code>nonWorkingDays</code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sPrimaryCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": false,
							"description": "New value for property <code>primaryCalendarType</code>"
						}
					],
					"description": "Sets a new value for property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSecondaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sSecondaryCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": false,
							"description": "New value for property <code>secondaryCalendarType</code>"
						}
					],
					"description": "Sets a new value for property <code>secondaryCalendarType</code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSingleSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>singleSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of Calendar\n\n<b>Note:</b> There is a theme depending minimum width, so the calendar can not be set smaller.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.unified.calendar",
			"basename": "calendar",
			"resource": "sap/ui/unified/calendar/CalendarUtils.js",
			"module": "sap/ui/unified/calendar/CalendarUtils",
			"static": true,
			"visibility": "public",
			"description": "Calendar Utility Class"
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.calendar.DatesRow",
			"basename": "DatesRow",
			"resource": "sap/ui/unified/calendar/DatesRow.js",
			"module": "sap/ui/unified/calendar/DatesRow",
			"static": true,
			"visibility": "public",
			"since": "1.30.0",
			"extends": "sap.ui.unified.calendar.Month",
			"description": "renders a row of days with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Start date of the row\nIf in rendering phase the date property is not in the range startDate + days,\nit is set to the start date\nSo after setting the start date the date should be set to be in the range of the start date",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "days",
						"type": "int",
						"defaultValue": 7,
						"group": "Appearance",
						"visibility": "public",
						"description": "number of days displayed",
						"methods": [
							"getDays",
							"setDays"
						]
					},
					{
						"name": "showDayNamesLine",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.",
						"methods": [
							"getShowDayNamesLine",
							"setShowDayNamesLine"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new calendar/DatesRow.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "displayDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.DatesRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for focused date."
						}
					],
					"description": "displays the a given date without setting the focus\n\nProperty <code>date</code> date to be focused or displayed. It must be in the displayed date range\nbeginning with <code>startDate</code> and <code>days</code> days\nSo set this properties before setting the date."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.calendar.DatesRow with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.calendar.Month.extend}."
				},
				{
					"name": "getDays",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>days</code>"
					},
					"description": "Gets current value of property <code>days</code>.\n\nnumber of days displayed\n\nDefault value is <code>7</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.calendar.DatesRow."
				},
				{
					"name": "getShowDayNamesLine",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showDayNamesLine</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>showDayNamesLine</code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>startDate</code>"
					},
					"description": "Gets current value of property <code>startDate</code>.\n\nStart date of the row\nIf in rendering phase the date property is not in the range startDate + days,\nit is set to the start date\nSo after setting the start date the date should be set to be in the range of the start date"
				},
				{
					"name": "setDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.DatesRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for start date."
						}
					],
					"description": "Setter for property <code>date</code>.\n\nProperty <code>date</code> date to be focused or displayed. It must be in the displayed date range\nbeginning with <code>startDate</code> and <code>days</code> days\nSo set this properties before setting the date."
				},
				{
					"name": "setDays",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.DatesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iDays",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>days</code>"
						}
					],
					"description": "Sets a new value for property <code>days</code>.\n\nnumber of days displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>7</code>."
				},
				{
					"name": "setFirstDayOfWeek",
					"visibility": "protected",
					"parameters": [
						{
							"name": "iFirstDayOfWeek",
							"type": "int",
							"optional": true,
							"description": "first day of the week"
						}
					],
					"description": "Setter for property <code>firstDayOfWeek</code>.\n\nProperty <code>firstDayOfWeek</code> is not supported in <code>sap.ui.unified.calendar.DatesRow</code> control."
				},
				{
					"name": "setShowDayNamesLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.DatesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bShowDayNamesLine",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showDayNamesLine</code>"
						}
					],
					"description": "Sets a new value for property <code>showDayNamesLine</code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.DatesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date of the row\nIf in rendering phase the date property is not in the range startDate + days,\nit is set to the start date\nSo after setting the start date the date should be set to be in the range of the start date\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.calendar.Header",
			"basename": "Header",
			"resource": "sap/ui/unified/calendar/Header.js",
			"module": "sap/ui/unified/calendar/Header",
			"static": true,
			"visibility": "public",
			"since": "1.28.0",
			"extends": "sap.ui.core.Control",
			"description": "renders a calendar header\n\nThe calendar header consists of 3 buttons where the text can be set and a previous and a next button.\nIn the normal calendar the first button contains the displayed day, the second button the displayed month and the third button the displayed year.\n\n<b>Note:</b> This is used inside the calendar. Not for standalone usage",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "textButton0",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.32.0",
						"description": "Text of the first button (normally day)",
						"methods": [
							"getTextButton0",
							"setTextButton0"
						]
					},
					{
						"name": "additionalTextButton0",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Additional text of the first button (normally day)",
						"methods": [
							"getAdditionalTextButton0",
							"setAdditionalTextButton0"
						]
					},
					{
						"name": "ariaLabelButton0",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.32.0",
						"description": "aria-label of the first button (normally day)",
						"methods": [
							"getAriaLabelButton0",
							"setAriaLabelButton0"
						]
					},
					{
						"name": "visibleButton0",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.32.0",
						"description": "If set, the first button will be displayed\n\n<b>Note:</b> The default is set to false to be compatible to older versions",
						"methods": [
							"getVisibleButton0",
							"setVisibleButton0"
						]
					},
					{
						"name": "textButton1",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Text of the second button (normally month)",
						"methods": [
							"getTextButton1",
							"setTextButton1"
						]
					},
					{
						"name": "additionalTextButton1",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Additional text of the second button (normally month)",
						"methods": [
							"getAdditionalTextButton1",
							"setAdditionalTextButton1"
						]
					},
					{
						"name": "ariaLabelButton1",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "aria-label of the second button (normally month)",
						"methods": [
							"getAriaLabelButton1",
							"setAriaLabelButton1"
						]
					},
					{
						"name": "visibleButton1",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.32.0",
						"description": "If set, the second button will be displayed",
						"methods": [
							"getVisibleButton1",
							"setVisibleButton1"
						]
					},
					{
						"name": "textButton2",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Text of the third button (normally year)",
						"methods": [
							"getTextButton2",
							"setTextButton2"
						]
					},
					{
						"name": "additionalTextButton2",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Additional text of the third button (normally year)",
						"methods": [
							"getAdditionalTextButton2",
							"setAdditionalTextButton2"
						]
					},
					{
						"name": "ariaLabelButton2",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "aria-label of the third button (normally year)",
						"methods": [
							"getAriaLabelButton2",
							"setAriaLabelButton2"
						]
					},
					{
						"name": "visibleButton2",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.32.0",
						"description": "If set, the third button will be displayed",
						"methods": [
							"getVisibleButton2",
							"setVisibleButton2"
						]
					},
					{
						"name": "enabledPrevious",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Enables the previous button",
						"methods": [
							"getEnabledPrevious",
							"setEnabledPrevious"
						]
					},
					{
						"name": "enabledNext",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Enables the Next button",
						"methods": [
							"getEnabledNext",
							"setEnabledNext"
						]
					}
				],
				"events": [
					{
						"name": "pressPrevious",
						"visibility": "public",
						"description": "Previous button pressed",
						"methods": [
							"attachPressPrevious",
							"detachPressPrevious",
							"firePressPrevious"
						]
					},
					{
						"name": "pressNext",
						"visibility": "public",
						"description": "Next button pressed",
						"methods": [
							"attachPressNext",
							"detachPressNext",
							"firePressNext"
						]
					},
					{
						"name": "pressButton0",
						"visibility": "public",
						"since": "1.32.0",
						"description": "First button pressed (normally day)",
						"methods": [
							"attachPressButton0",
							"detachPressButton0",
							"firePressButton0"
						]
					},
					{
						"name": "pressButton1",
						"visibility": "public",
						"description": "Second button pressed (normally month)",
						"methods": [
							"attachPressButton1",
							"detachPressButton1",
							"firePressButton1"
						]
					},
					{
						"name": "pressButton2",
						"visibility": "public",
						"description": "Third button pressed (normally year)",
						"methods": [
							"attachPressButton2",
							"detachPressButton2",
							"firePressButton2"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Header.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "pressButton0",
					"visibility": "public",
					"since": "1.32.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "First button pressed (normally day)"
				},
				{
					"name": "pressButton1",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Second button pressed (normally month)"
				},
				{
					"name": "pressButton2",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Third button pressed (normally year)"
				},
				{
					"name": "pressNext",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Next button pressed"
				},
				{
					"name": "pressPrevious",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Previous button pressed"
				}
			],
			"methods": [
				{
					"name": "attachPressButton0",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pressButton0</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nFirst button pressed (normally day)"
				},
				{
					"name": "attachPressButton1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pressButton1</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nSecond button pressed (normally month)"
				},
				{
					"name": "attachPressButton2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pressButton2</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nThird button pressed (normally year)"
				},
				{
					"name": "attachPressNext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pressNext</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nNext button pressed"
				},
				{
					"name": "attachPressPrevious",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pressPrevious</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nPrevious button pressed"
				},
				{
					"name": "detachPressButton0",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pressButton0</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPressButton1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pressButton1</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPressButton2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pressButton2</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPressNext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pressNext</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPressPrevious",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pressPrevious</code> event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.calendar.Header with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePressButton0",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pressButton0</code> to attached listeners."
				},
				{
					"name": "firePressButton1",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pressButton1</code> to attached listeners."
				},
				{
					"name": "firePressButton2",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pressButton2</code> to attached listeners."
				},
				{
					"name": "firePressNext",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pressNext</code> to attached listeners."
				},
				{
					"name": "firePressPrevious",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pressPrevious</code> to attached listeners."
				},
				{
					"name": "getAdditionalTextButton0",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>additionalTextButton0</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>additionalTextButton0</code>.\n\nAdditional text of the first button (normally day)"
				},
				{
					"name": "getAdditionalTextButton1",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>additionalTextButton1</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>additionalTextButton1</code>.\n\nAdditional text of the second button (normally month)"
				},
				{
					"name": "getAdditionalTextButton2",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>additionalTextButton2</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>additionalTextButton2</code>.\n\nAdditional text of the third button (normally year)"
				},
				{
					"name": "getAriaLabelButton0",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ariaLabelButton0</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>ariaLabelButton0</code>.\n\naria-label of the first button (normally day)"
				},
				{
					"name": "getAriaLabelButton1",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ariaLabelButton1</code>"
					},
					"description": "Gets current value of property <code>ariaLabelButton1</code>.\n\naria-label of the second button (normally month)"
				},
				{
					"name": "getAriaLabelButton2",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ariaLabelButton2</code>"
					},
					"description": "Gets current value of property <code>ariaLabelButton2</code>.\n\naria-label of the third button (normally year)"
				},
				{
					"name": "getEnabledNext",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabledNext</code>"
					},
					"description": "Gets current value of property <code>enabledNext</code>.\n\nEnables the Next button\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabledPrevious",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabledPrevious</code>"
					},
					"description": "Gets current value of property <code>enabledPrevious</code>.\n\nEnables the previous button\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.calendar.Header."
				},
				{
					"name": "getTextButton0",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>textButton0</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>textButton0</code>.\n\nText of the first button (normally day)"
				},
				{
					"name": "getTextButton1",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>textButton1</code>"
					},
					"description": "Gets current value of property <code>textButton1</code>.\n\nText of the second button (normally month)"
				},
				{
					"name": "getTextButton2",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>textButton2</code>"
					},
					"description": "Gets current value of property <code>textButton2</code>.\n\nText of the third button (normally year)"
				},
				{
					"name": "getVisibleButton0",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleButton0</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>visibleButton0</code>.\n\nIf set, the first button will be displayed\n\n<b>Note:</b> The default is set to false to be compatible to older versions\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getVisibleButton1",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleButton1</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>visibleButton1</code>.\n\nIf set, the second button will be displayed\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getVisibleButton2",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleButton2</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>visibleButton2</code>.\n\nIf set, the third button will be displayed\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setAdditionalTextButton0",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sAdditionalTextButton0",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>additionalTextButton0</code>"
						}
					],
					"description": "Sets a new value for property <code>additionalTextButton0</code>.\n\nAdditional text of the first button (normally day)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setAdditionalTextButton1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sAdditionalTextButton1",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>additionalTextButton1</code>"
						}
					],
					"description": "Sets a new value for property <code>additionalTextButton1</code>.\n\nAdditional text of the second button (normally month)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setAdditionalTextButton2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sAdditionalTextButton2",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>additionalTextButton2</code>"
						}
					],
					"description": "Sets a new value for property <code>additionalTextButton2</code>.\n\nAdditional text of the third button (normally year)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setAriaLabelButton0",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sAriaLabelButton0",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ariaLabelButton0</code>"
						}
					],
					"description": "Sets a new value for property <code>ariaLabelButton0</code>.\n\naria-label of the first button (normally day)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setAriaLabelButton1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAriaLabelButton1",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ariaLabelButton1</code>"
						}
					],
					"description": "Sets a new value for property <code>ariaLabelButton1</code>.\n\naria-label of the second button (normally month)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setAriaLabelButton2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAriaLabelButton2",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ariaLabelButton2</code>"
						}
					],
					"description": "Sets a new value for property <code>ariaLabelButton2</code>.\n\naria-label of the third button (normally year)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEnabledNext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabledNext",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabledNext</code>"
						}
					],
					"description": "Sets a new value for property <code>enabledNext</code>.\n\nEnables the Next button\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabledPrevious",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabledPrevious",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabledPrevious</code>"
						}
					],
					"description": "Sets a new value for property <code>enabledPrevious</code>.\n\nEnables the previous button\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setTextButton0",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sTextButton0",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>textButton0</code>"
						}
					],
					"description": "Sets a new value for property <code>textButton0</code>.\n\nText of the first button (normally day)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTextButton1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextButton1",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>textButton1</code>"
						}
					],
					"description": "Sets a new value for property <code>textButton1</code>.\n\nText of the second button (normally month)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTextButton2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextButton2",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>textButton2</code>"
						}
					],
					"description": "Sets a new value for property <code>textButton2</code>.\n\nText of the third button (normally year)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setVisibleButton0",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "bVisibleButton0",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visibleButton0</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleButton0</code>.\n\nIf set, the first button will be displayed\n\n<b>Note:</b> The default is set to false to be compatible to older versions\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setVisibleButton1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "bVisibleButton1",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visibleButton1</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleButton1</code>.\n\nIf set, the second button will be displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setVisibleButton2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Header",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "bVisibleButton2",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visibleButton2</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleButton2</code>.\n\nIf set, the third button will be displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.calendar.Month",
			"basename": "Month",
			"resource": "sap/ui/unified/calendar/Month.js",
			"module": "sap/ui/unified/calendar/Month",
			"static": true,
			"visibility": "public",
			"since": "1.28.0",
			"extends": "sap.ui.core.Control",
			"description": "renders a month with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "date",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "the month including this date is rendered and this date is initial focused (if no other focus set)",
						"methods": [
							"getDate",
							"setDate"
						]
					},
					{
						"name": "intervalSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, interval selection is allowed",
						"methods": [
							"getIntervalSelection",
							"setIntervalSelection"
						]
					},
					{
						"name": "singleSelection",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, only a single date or interval, if intervalSelection is enabled, can be selected",
						"methods": [
							"getSingleSelection",
							"setSingleSelection"
						]
					},
					{
						"name": "showHeader",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set, a header with the month name is shown",
						"methods": [
							"getShowHeader",
							"setShowHeader"
						]
					},
					{
						"name": "firstDayOfWeek",
						"type": "int",
						"defaultValue": -1,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.28.9",
						"description": "If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.",
						"methods": [
							"getFirstDayOfWeek",
							"setFirstDayOfWeek"
						]
					},
					{
						"name": "nonWorkingDays",
						"type": "int[]",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.28.9",
						"description": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.",
						"methods": [
							"getNonWorkingDays",
							"setNonWorkingDays"
						]
					},
					{
						"name": "primaryCalendarType",
						"type": "sap.ui.core.CalendarType",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.",
						"methods": [
							"getPrimaryCalendarType",
							"setPrimaryCalendarType"
						]
					},
					{
						"name": "secondaryCalendarType",
						"type": "sap.ui.core.CalendarType",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type",
						"methods": [
							"getSecondaryCalendarType",
							"setSecondaryCalendarType"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Width of Month",
						"methods": [
							"getWidth",
							"setWidth"
						]
					}
				],
				"aggregations": [
					{
						"name": "selectedDates",
						"singularName": "selectedDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date Ranges for selected dates of the DatePicker",
						"methods": [
							"getSelectedDates",
							"destroySelectedDates",
							"insertSelectedDate",
							"addSelectedDate",
							"removeSelectedDate",
							"indexOfSelectedDate",
							"removeAllSelectedDates"
						]
					},
					{
						"name": "specialDates",
						"singularName": "specialDate",
						"type": "sap.ui.unified.DateTypeRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date Range with type to visualize special days in the Calendar.\nIf one day is assigned to more than one Type, only the first one will be used.",
						"methods": [
							"getSpecialDates",
							"destroySpecialDates",
							"insertSpecialDate",
							"addSpecialDate",
							"removeSpecialDate",
							"indexOfSpecialDate",
							"removeAllSpecialDates"
						]
					},
					{
						"name": "disabledDates",
						"singularName": "disabledDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Date Ranges for disabled dates",
						"methods": [
							"getDisabledDates",
							"destroyDisabledDates",
							"insertDisabledDate",
							"addDisabledDate",
							"removeDisabledDate",
							"indexOfDisabledDate",
							"removeAllDisabledDates"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					},
					{
						"name": "legend",
						"singularName": "legend",
						"type": "sap.ui.unified.CalendarLegend",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.5",
						"description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
						"methods": [
							"getLegend",
							"setLegend"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Date selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "focus",
						"visibility": "public",
						"description": "Date focus changed",
						"parameters": {
							"date": {
								"name": "date",
								"type": "object",
								"description": "focused date"
							},
							"otherMonth": {
								"name": "otherMonth",
								"type": "boolean",
								"description": "focused date is in an other month that the displayed one"
							},
							"restoreOldDate": {
								"name": "restoreOldDate",
								"type": "boolean",
								"description": "focused date is set to the same as before (date in other month clicked)"
							}
						},
						"methods": [
							"attachFocus",
							"detachFocus",
							"fireFocus"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new calendar/Month.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "focus",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"date": {
											"name": "date",
											"type": "object",
											"optional": false,
											"description": "focused date"
										},
										"otherMonth": {
											"name": "otherMonth",
											"type": "boolean",
											"optional": false,
											"description": "focused date is in an other month that the displayed one"
										},
										"restoreOldDate": {
											"name": "restoreOldDate",
											"type": "boolean",
											"optional": false,
											"description": "focused date is set to the same as before (date in other month clicked)"
										}
									}
								}
							}
						}
					],
					"description": "Date focus changed"
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Date selection changed"
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oDisabledDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the disabledDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some disabledDate to the aggregation <code>disabledDates</code>."
				},
				{
					"name": "addSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some selectedDate to the aggregation <code>selectedDates</code>."
				},
				{
					"name": "addSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some specialDate to the aggregation <code>specialDates</code>."
				},
				{
					"name": "attachFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Month</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>focus</code> event of this <code>sap.ui.unified.calendar.Month</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Month</code> itself.\n\nDate focus changed"
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Month</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.calendar.Month</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.Month</code> itself.\n\nDate selection changed"
				},
				{
					"name": "checkDateFocusable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "flag if focusable"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for focused date."
						}
					],
					"description": "checks if a date is focusable in the current rendered output.\nSo if not rendered or in other month it is not focusable."
				},
				{
					"name": "destroyDisabledDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"description": "Destroys all the disabledDates in the aggregation <code>disabledDates</code>."
				},
				{
					"name": "destroySelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the selectedDates in the aggregation <code>selectedDates</code>."
				},
				{
					"name": "destroySpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the specialDates in the aggregation <code>specialDates</code>."
				},
				{
					"name": "detachFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>focus</code> event of this <code>sap.ui.unified.calendar.Month</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.calendar.Month</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "displayDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for focused date."
						}
					],
					"description": "displays the month of a given date without setting the focus"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.calendar.Month with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireFocus",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>focus</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>date</code> of type <code>object</code>focused date</li>\n<li><code>otherMonth</code> of type <code>boolean</code>focused date is in an other month that the displayed one</li>\n<li><code>restoreOldDate</code> of type <code>boolean</code>focused date is set to the same as before (date in other month clicked)</li>\n</ul>"
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>date</code>"
					},
					"description": "Gets current value of property <code>date</code>.\n\nthe month including this date is rendered and this date is initial focused (if no other focus set)"
				},
				{
					"name": "getDisabledDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"since": "1.38.0",
					"description": "Gets content of aggregation <code>disabledDates</code>.\n\nDate Ranges for disabled dates"
				},
				{
					"name": "getFirstDayOfWeek",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>firstDayOfWeek</code>"
					},
					"since": "1.28.9",
					"description": "Gets current value of property <code>firstDayOfWeek</code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "getIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>intervalSelection</code>"
					},
					"description": "Gets current value of property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend"
					},
					"since": "1.38.5",
					"description": "ID of the element which is the current target of the association <code>legend</code>, or <code>null</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.calendar.Month."
				},
				{
					"name": "getNonWorkingDays",
					"visibility": "public",
					"returnValue": {
						"type": "int[]",
						"description": "Value of property <code>nonWorkingDays</code>"
					},
					"since": "1.28.9",
					"description": "Gets current value of property <code>nonWorkingDays</code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days."
				},
				{
					"name": "getPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CalendarType",
						"description": "Value of property <code>primaryCalendarType</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
				},
				{
					"name": "getSecondaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CalendarType",
						"description": "Value of property <code>secondaryCalendarType</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>secondaryCalendarType</code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
				},
				{
					"name": "getSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"description": "Gets content of aggregation <code>selectedDates</code>.\n\nDate Ranges for selected dates of the DatePicker"
				},
				{
					"name": "getShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showHeader</code>"
					},
					"description": "Gets current value of property <code>showHeader</code>.\n\nIf set, a header with the month name is shown\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>singleSelection</code>"
					},
					"description": "Gets current value of property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]"
					},
					"description": "Gets content of aggregation <code>specialDates</code>.\n\nDate Range with type to visualize special days in the Calendar.\nIf one day is assigned to more than one Type, only the first one will be used."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>width</code>.\n\nWidth of Month"
				},
				{
					"name": "indexOfDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oDisabledDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The disabledDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>disabledDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>selectedDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation <code>specialDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oDisabledDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the disabledDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the disabledDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the disabledDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the disabledDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a disabledDate into the aggregation <code>disabledDates</code>."
				},
				{
					"name": "insertSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a selectedDate into the aggregation <code>selectedDates</code>."
				},
				{
					"name": "insertSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a specialDate into the aggregation <code>specialDates</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllDisabledDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.38.0",
					"description": "Removes all the controls from the aggregation <code>disabledDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>selectedDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>specialDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeDisabledDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed disabledDate or <code>null</code>"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "vDisabledDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The disabledDateto remove or its index or id"
						}
					],
					"description": "Removes a disabledDate from the aggregation <code>disabledDates</code>."
				},
				{
					"name": "removeSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed selectedDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSelectedDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDateto remove or its index or id"
						}
					],
					"description": "Removes a selectedDate from the aggregation <code>selectedDates</code>."
				},
				{
					"name": "removeSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange",
						"description": "The removed specialDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSpecialDate",
							"type": "int|string|sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDateto remove or its index or id"
						}
					],
					"description": "Removes a specialDate from the aggregation <code>specialDates</code>."
				},
				{
					"name": "setDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>date</code>"
						}
					],
					"description": "Sets a new value for property <code>date</code>.\n\nthe month including this date is rendered and this date is initial focused (if no other focus set)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setFirstDayOfWeek",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.9",
					"parameters": [
						{
							"name": "iFirstDayOfWeek",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>firstDayOfWeek</code>"
						}
					],
					"description": "Sets a new value for property <code>firstDayOfWeek</code>.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
				},
				{
					"name": "setIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIntervalSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>intervalSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.5",
					"parameters": [
						{
							"name": "oLegend",
							"type": "sap.ui.unified.CalendarLegend",
							"optional": false,
							"description": "Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>legend</code>."
				},
				{
					"name": "setNonWorkingDays",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.9",
					"parameters": [
						{
							"name": "sNonWorkingDays",
							"type": "int[]",
							"optional": false,
							"description": "New value for property <code>nonWorkingDays</code>"
						}
					],
					"description": "Sets a new value for property <code>nonWorkingDays</code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sPrimaryCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": false,
							"description": "New value for property <code>primaryCalendarType</code>"
						}
					],
					"description": "Sets a new value for property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSecondaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sSecondaryCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": false,
							"description": "New value for property <code>secondaryCalendarType</code>"
						}
					],
					"description": "Sets a new value for property <code>secondaryCalendarType</code>.\n\nIf set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeader",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showHeader</code>"
						}
					],
					"description": "Sets a new value for property <code>showHeader</code>.\n\nIf set, a header with the month name is shown\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSingleSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>singleSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.Month",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of Month\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.calendar.MonthPicker",
			"basename": "MonthPicker",
			"resource": "sap/ui/unified/calendar/MonthPicker.js",
			"module": "sap/ui/unified/calendar/MonthPicker",
			"static": true,
			"visibility": "public",
			"since": "1.28.0",
			"extends": "sap.ui.core.Control",
			"description": "renders a MonthPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "month",
						"type": "int",
						"defaultValue": 0,
						"group": "Data",
						"visibility": "public",
						"description": "The month is initial focused and selected\nThe value must be between 0 and 11",
						"methods": [
							"getMonth",
							"setMonth"
						]
					},
					{
						"name": "months",
						"type": "int",
						"defaultValue": 12,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.30.0",
						"description": "number of displayed months\nThe value must be between 1 and 12",
						"methods": [
							"getMonths",
							"setMonths"
						]
					},
					{
						"name": "columns",
						"type": "int",
						"defaultValue": 3,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.30.0",
						"description": "number of months in each row\nThe value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)",
						"methods": [
							"getColumns",
							"setColumns"
						]
					},
					{
						"name": "primaryCalendarType",
						"type": "sap.ui.core.CalendarType",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.",
						"methods": [
							"getPrimaryCalendarType",
							"setPrimaryCalendarType"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Month selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "pageChange",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If less than 12 months are displayed the <code>pageChange</code> event is fired\nif the displayed months are changed by user navigation.",
						"methods": [
							"attachPageChange",
							"detachPageChange",
							"firePageChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MonthPicker.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "pageChange",
					"visibility": "public",
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "If less than 12 months are displayed the <code>pageChange</code> event is fired\nif the displayed months are changed by user navigation."
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Month selection changed"
				}
			],
			"methods": [
				{
					"name": "attachPageChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthPicker</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pageChange</code> event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthPicker</code> itself.\n\nIf less than 12 months are displayed the <code>pageChange</code> event is fired\nif the displayed months are changed by user navigation."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthPicker</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthPicker</code> itself.\n\nMonth selection changed"
				},
				{
					"name": "detachPageChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pageChange</code> event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.calendar.MonthPicker with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePageChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pageChange</code> to attached listeners."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>columns</code>"
					},
					"since": "1.30.0",
					"description": "Gets current value of property <code>columns</code>.\n\nnumber of months in each row\nThe value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)\n\nDefault value is <code>3</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.calendar.MonthPicker."
				},
				{
					"name": "getMonth",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>month</code>"
					},
					"description": "Gets current value of property <code>month</code>.\n\nThe month is initial focused and selected\nThe value must be between 0 and 11\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getMonths",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>months</code>"
					},
					"since": "1.30.0",
					"description": "Gets current value of property <code>months</code>.\n\nnumber of displayed months\nThe value must be between 1 and 12\n\nDefault value is <code>12</code>."
				},
				{
					"name": "getPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CalendarType",
						"description": "Value of property <code>primaryCalendarType</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
				},
				{
					"name": "nextPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "displays the next page"
				},
				{
					"name": "previousPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "displays the previous page"
				},
				{
					"name": "setColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "iColumns",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>columns</code>"
						}
					],
					"description": "Sets a new value for property <code>columns</code>.\n\nnumber of months in each row\nThe value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>3</code>."
				},
				{
					"name": "setMinMax",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMin",
							"type": "int",
							"optional": true,
							"description": "minimum month as integer (starting with 0)"
						},
						{
							"name": "iMax",
							"type": "int",
							"optional": true,
							"description": "maximum month as integer (starting with 0)"
						}
					],
					"description": "sets a minimum an maximum month"
				},
				{
					"name": "setMonth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMonth",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>month</code>"
						}
					],
					"description": "Sets a new value for property <code>month</code>.\n\nThe month is initial focused and selected\nThe value must be between 0 and 11\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setMonths",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "iMonths",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>months</code>"
						}
					],
					"description": "Sets a new value for property <code>months</code>.\n\nnumber of displayed months\nThe value must be between 1 and 12\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "setPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sPrimaryCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": false,
							"description": "New value for property <code>primaryCalendarType</code>"
						}
					],
					"description": "Sets a new value for property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.calendar.MonthsRow",
			"basename": "MonthsRow",
			"resource": "sap/ui/unified/calendar/MonthsRow.js",
			"module": "sap/ui/unified/calendar/MonthsRow",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"extends": "sap.ui.core.Control",
			"description": "Renders a row of months using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarMonthInterval.\nIf used inside the CalendarMonthInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...).\n\nThe MontsRow works with JavaScript Date objects, but only the month and the year are used to display and interact.\nAs representation for a month, the 1st of the month will always be returned in the API.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "date",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "A date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate</code> + <code>months</code> in the rendering phase,\nit is set to the <code>startDate</code>.\nSo after setting the <code>startDate</code> the date should be set to be in the visible range.",
						"methods": [
							"getDate",
							"setDate"
						]
					},
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Start date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row.",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "months",
						"type": "int",
						"defaultValue": 12,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of months displayed",
						"methods": [
							"getMonths",
							"setMonths"
						]
					},
					{
						"name": "intervalSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, interval selection is allowed",
						"methods": [
							"getIntervalSelection",
							"setIntervalSelection"
						]
					},
					{
						"name": "singleSelection",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
						"methods": [
							"getSingleSelection",
							"setSingleSelection"
						]
					},
					{
						"name": "showHeader",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set, a header with the years is shown to visualize what month belongs to what year.",
						"methods": [
							"getShowHeader",
							"setShowHeader"
						]
					}
				],
				"aggregations": [
					{
						"name": "selectedDates",
						"singularName": "selectedDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges for selected dates.\nIf <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected.",
						"methods": [
							"getSelectedDates",
							"destroySelectedDates",
							"insertSelectedDate",
							"addSelectedDate",
							"removeSelectedDate",
							"indexOfSelectedDate",
							"removeAllSelectedDates"
						]
					},
					{
						"name": "specialDates",
						"singularName": "specialDate",
						"type": "sap.ui.unified.DateTypeRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges with type to visualize special months in the row.\nIf one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way.",
						"methods": [
							"getSpecialDates",
							"destroySpecialDates",
							"insertSpecialDate",
							"addSpecialDate",
							"removeSpecialDate",
							"indexOfSpecialDate",
							"removeAllSpecialDates"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					},
					{
						"name": "legend",
						"singularName": "legend",
						"type": "sap.ui.unified.CalendarLegend",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.5",
						"description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
						"methods": [
							"getLegend",
							"setLegend"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Month selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "focus",
						"visibility": "public",
						"description": "Month focus changed",
						"parameters": {
							"date": {
								"name": "date",
								"type": "object",
								"description": "First date, as JavaScript Date object, of the month that is focused."
							},
							"notVisible": {
								"name": "notVisible",
								"type": "boolean",
								"description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
							}
						},
						"methods": [
							"attachFocus",
							"detachFocus",
							"fireFocus"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>MonthsRow</code>.\nIt shows a calendar with month granularity\n\n<b>Note:</b> This is used inside the CalendarMonthInterval, not for standalone usage.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "focus",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"date": {
											"name": "date",
											"type": "object",
											"optional": false,
											"description": "First date, as JavaScript Date object, of the month that is focused."
										},
										"notVisible": {
											"name": "notVisible",
											"type": "boolean",
											"optional": false,
											"description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
										}
									}
								}
							}
						}
					],
					"description": "Month focus changed"
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Month selection changed"
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some selectedDate to the aggregation <code>selectedDates</code>."
				},
				{
					"name": "addSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some specialDate to the aggregation <code>specialDates</code>."
				},
				{
					"name": "attachFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthsRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>focus</code> event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthsRow</code> itself.\n\nMonth focus changed"
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthsRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.MonthsRow</code> itself.\n\nMonth selection changed"
				},
				{
					"name": "checkDateFocusable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "flag if focusable"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript Date object for focused date."
						}
					],
					"description": "Checks if a date is focusable in the current rendered output.\nThis means that if it is not rendered, it is not focusable."
				},
				{
					"name": "destroySelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the selectedDates in the aggregation <code>selectedDates</code>."
				},
				{
					"name": "destroySpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the specialDates in the aggregation <code>specialDates</code>."
				},
				{
					"name": "detachFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>focus</code> event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "displayDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript Date object for focused date."
						}
					],
					"description": "Displays the month of a given date without setting the focus"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.calendar.MonthsRow with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireFocus",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>focus</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>date</code> of type <code>object</code>First date, as JavaScript Date object, of the month that is focused.</li>\n<li><code>notVisible</code> of type <code>boolean</code>If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)</li>\n</ul>"
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>date</code>"
					},
					"description": "Gets current value of property <code>date</code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate</code> + <code>months</code> in the rendering phase,\nit is set to the <code>startDate</code>.\nSo after setting the <code>startDate</code> the date should be set to be in the visible range."
				},
				{
					"name": "getIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>intervalSelection</code>"
					},
					"description": "Gets current value of property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend"
					},
					"since": "1.38.5",
					"description": "ID of the element which is the current target of the association <code>legend</code>, or <code>null</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.calendar.MonthsRow."
				},
				{
					"name": "getMonths",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>months</code>"
					},
					"description": "Gets current value of property <code>months</code>.\n\nNumber of months displayed\n\nDefault value is <code>12</code>."
				},
				{
					"name": "getSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"description": "Gets content of aggregation <code>selectedDates</code>.\n\nDate ranges for selected dates.\nIf <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected."
				},
				{
					"name": "getShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showHeader</code>"
					},
					"description": "Gets current value of property <code>showHeader</code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>singleSelection</code>"
					},
					"description": "Gets current value of property <code>singleSelection</code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]"
					},
					"description": "Gets content of aggregation <code>specialDates</code>.\n\nDate ranges with type to visualize special months in the row.\nIf one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>startDate</code>"
					},
					"description": "Gets current value of property <code>startDate</code>.\n\nStart date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row."
				},
				{
					"name": "indexOfSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>selectedDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation <code>specialDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a selectedDate into the aggregation <code>selectedDates</code>."
				},
				{
					"name": "insertSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a specialDate into the aggregation <code>specialDates</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>selectedDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>specialDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed selectedDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSelectedDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDateto remove or its index or id"
						}
					],
					"description": "Removes a selectedDate from the aggregation <code>selectedDates</code>."
				},
				{
					"name": "removeSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange",
						"description": "The removed specialDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSpecialDate",
							"type": "int|string|sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDateto remove or its index or id"
						}
					],
					"description": "Removes a specialDate from the aggregation <code>specialDates</code>."
				},
				{
					"name": "setDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>date</code>"
						}
					],
					"description": "Sets a new value for property <code>date</code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate</code> + <code>months</code> in the rendering phase,\nit is set to the <code>startDate</code>.\nSo after setting the <code>startDate</code> the date should be set to be in the visible range.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIntervalSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>intervalSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.5",
					"parameters": [
						{
							"name": "oLegend",
							"type": "sap.ui.unified.CalendarLegend",
							"optional": false,
							"description": "Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>legend</code>."
				},
				{
					"name": "setMonths",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMonths",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>months</code>"
						}
					],
					"description": "Sets a new value for property <code>months</code>.\n\nNumber of months displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "setShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeader",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showHeader</code>"
						}
					],
					"description": "Sets a new value for property <code>showHeader</code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSingleSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>singleSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>singleSelection</code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.MonthsRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.calendar.TimesRow",
			"basename": "TimesRow",
			"resource": "sap/ui/unified/calendar/TimesRow.js",
			"module": "sap/ui/unified/calendar/TimesRow",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"extends": "sap.ui.core.Control",
			"description": "Renders a row of time items using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarTimeInterval.\nIf used inside the CalendarTimeInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...).\n\nThe TimesRow works with JavaScript Date objects.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "date",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "A date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate</code> + <code>items</code> in the rendering phase,\nit is set to the <code>startDate</code>.\nSo after setting the <code>startDate</code> the date should be set to be in the visible range.",
						"methods": [
							"getDate",
							"setDate"
						]
					},
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Start date, as JavaScript Date object, of the row.",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "items",
						"type": "int",
						"defaultValue": 12,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of time items displayed",
						"methods": [
							"getItems",
							"setItems"
						]
					},
					{
						"name": "intervalMinutes",
						"type": "int",
						"defaultValue": 60,
						"group": "Appearance",
						"visibility": "public",
						"description": "Size of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always <code>startDat</code> at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>DatesRow</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.",
						"methods": [
							"getIntervalMinutes",
							"setIntervalMinutes"
						]
					},
					{
						"name": "intervalSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, interval selection is allowed",
						"methods": [
							"getIntervalSelection",
							"setIntervalSelection"
						]
					},
					{
						"name": "singleSelection",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
						"methods": [
							"getSingleSelection",
							"setSingleSelection"
						]
					},
					{
						"name": "showHeader",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set, a header with the years is shown to visualize what month belongs to what year.",
						"methods": [
							"getShowHeader",
							"setShowHeader"
						]
					}
				],
				"aggregations": [
					{
						"name": "selectedDates",
						"singularName": "selectedDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges for selected dates.\nIf <code>singleSelection</code> is set, only the first entry is used.",
						"methods": [
							"getSelectedDates",
							"destroySelectedDates",
							"insertSelectedDate",
							"addSelectedDate",
							"removeSelectedDate",
							"indexOfSelectedDate",
							"removeAllSelectedDates"
						]
					},
					{
						"name": "specialDates",
						"singularName": "specialDate",
						"type": "sap.ui.unified.DateTypeRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges with type to visualize special item in the row.\nIf one day is assigned to more than one type, only the first one will be used.",
						"methods": [
							"getSpecialDates",
							"destroySpecialDates",
							"insertSpecialDate",
							"addSpecialDate",
							"removeSpecialDate",
							"indexOfSpecialDate",
							"removeAllSpecialDates"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					},
					{
						"name": "legend",
						"singularName": "legend",
						"type": "sap.ui.unified.CalendarLegend",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.5",
						"description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
						"methods": [
							"getLegend",
							"setLegend"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Time selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "focus",
						"visibility": "public",
						"description": "Time focus changed",
						"parameters": {
							"date": {
								"name": "date",
								"type": "object",
								"description": "date, as JavaScript Date object, of the focused time."
							},
							"notVisible": {
								"name": "notVisible",
								"type": "boolean",
								"description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
							}
						},
						"methods": [
							"attachFocus",
							"detachFocus",
							"fireFocus"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>TimesRow</code>.\nIt shows a calendar with time granularity (normally hours)\n\n<b>Note:</b> This is used inside the CalendarTimeInterval, not for standalone usage.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "focus",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"date": {
											"name": "date",
											"type": "object",
											"optional": false,
											"description": "date, as JavaScript Date object, of the focused time."
										},
										"notVisible": {
											"name": "notVisible",
											"type": "boolean",
											"optional": false,
											"description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
										}
									}
								}
							}
						}
					],
					"description": "Time focus changed"
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Time selection changed"
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some selectedDate to the aggregation <code>selectedDates</code>."
				},
				{
					"name": "addSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some specialDate to the aggregation <code>specialDates</code>."
				},
				{
					"name": "attachFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.TimesRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>focus</code> event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.TimesRow</code> itself.\n\nTime focus changed"
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.TimesRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.TimesRow</code> itself.\n\nTime selection changed"
				},
				{
					"name": "checkDateFocusable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "flag if focusable"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript Date object for focused date."
						}
					],
					"description": "Checks if a date is focusable in the current rendered output.\nThis means that if it is not rendered, it is not focusable."
				},
				{
					"name": "destroySelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the selectedDates in the aggregation <code>selectedDates</code>."
				},
				{
					"name": "destroySpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the specialDates in the aggregation <code>specialDates</code>."
				},
				{
					"name": "detachFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>focus</code> event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "displayDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript Date object for focused date."
						}
					],
					"description": "Displays the given date without setting the focus"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.calendar.TimesRow with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireFocus",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>focus</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>date</code> of type <code>object</code>date, as JavaScript Date object, of the focused time.</li>\n<li><code>notVisible</code> of type <code>boolean</code>If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)</li>\n</ul>"
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>date</code>"
					},
					"description": "Gets current value of property <code>date</code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate</code> + <code>items</code> in the rendering phase,\nit is set to the <code>startDate</code>.\nSo after setting the <code>startDate</code> the date should be set to be in the visible range."
				},
				{
					"name": "getIntervalMinutes",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>intervalMinutes</code>"
					},
					"description": "Gets current value of property <code>intervalMinutes</code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always <code>startDat</code> at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>DatesRow</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nDefault value is <code>60</code>."
				},
				{
					"name": "getIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>intervalSelection</code>"
					},
					"description": "Gets current value of property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>items</code>"
					},
					"description": "Gets current value of property <code>items</code>.\n\nNumber of time items displayed\n\nDefault value is <code>12</code>."
				},
				{
					"name": "getLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend"
					},
					"since": "1.38.5",
					"description": "ID of the element which is the current target of the association <code>legend</code>, or <code>null</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.calendar.TimesRow."
				},
				{
					"name": "getSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"description": "Gets content of aggregation <code>selectedDates</code>.\n\nDate ranges for selected dates.\nIf <code>singleSelection</code> is set, only the first entry is used."
				},
				{
					"name": "getShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showHeader</code>"
					},
					"description": "Gets current value of property <code>showHeader</code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>singleSelection</code>"
					},
					"description": "Gets current value of property <code>singleSelection</code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]"
					},
					"description": "Gets content of aggregation <code>specialDates</code>.\n\nDate ranges with type to visualize special item in the row.\nIf one day is assigned to more than one type, only the first one will be used."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>startDate</code>"
					},
					"description": "Gets current value of property <code>startDate</code>.\n\nStart date, as JavaScript Date object, of the row."
				},
				{
					"name": "indexOfSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>selectedDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation <code>specialDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a selectedDate into the aggregation <code>selectedDates</code>."
				},
				{
					"name": "insertSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a specialDate into the aggregation <code>specialDates</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>selectedDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>specialDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed selectedDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSelectedDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDateto remove or its index or id"
						}
					],
					"description": "Removes a selectedDate from the aggregation <code>selectedDates</code>."
				},
				{
					"name": "removeSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange",
						"description": "The removed specialDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSpecialDate",
							"type": "int|string|sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDateto remove or its index or id"
						}
					],
					"description": "Removes a specialDate from the aggregation <code>specialDates</code>."
				},
				{
					"name": "setDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>date</code>"
						}
					],
					"description": "Sets a new value for property <code>date</code>.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range <code>startDate</code> + <code>items</code> in the rendering phase,\nit is set to the <code>startDate</code>.\nSo after setting the <code>startDate</code> the date should be set to be in the visible range.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIntervalMinutes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iIntervalMinutes",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>intervalMinutes</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalMinutes</code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always <code>startDat</code> at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>DatesRow</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>60</code>."
				},
				{
					"name": "setIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIntervalSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>intervalSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>items</code>"
						}
					],
					"description": "Sets a new value for property <code>items</code>.\n\nNumber of time items displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "setLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.5",
					"parameters": [
						{
							"name": "oLegend",
							"type": "sap.ui.unified.CalendarLegend",
							"optional": false,
							"description": "Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>legend</code>."
				},
				{
					"name": "setShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeader",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showHeader</code>"
						}
					],
					"description": "Sets a new value for property <code>showHeader</code>.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSingleSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>singleSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>singleSelection</code>.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.TimesRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date, as JavaScript Date object, of the row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.calendar.YearPicker",
			"basename": "YearPicker",
			"resource": "sap/ui/unified/calendar/YearPicker.js",
			"module": "sap/ui/unified/calendar/YearPicker",
			"static": true,
			"visibility": "public",
			"since": "1.28.0",
			"extends": "sap.ui.core.Control",
			"description": "renders a YearPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "year",
						"type": "int",
						"defaultValue": 2000,
						"group": "Data",
						"visibility": "public",
						"description": "The year is initial focused and selected\nThe value must be between 0 and 9999",
						"deprecated": {
							"since": "1.34.0",
							"text": "Use <code>date</code> instead"
						},
						"methods": [
							"getYear",
							"setYear"
						]
					},
					{
						"name": "years",
						"type": "int",
						"defaultValue": 20,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.30.0",
						"description": "number of displayed years",
						"methods": [
							"getYears",
							"setYears"
						]
					},
					{
						"name": "columns",
						"type": "int",
						"defaultValue": 4,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.30.0",
						"description": "number of years in each row\n0 means just to have all years in one row, independent of the number",
						"methods": [
							"getColumns",
							"setColumns"
						]
					},
					{
						"name": "date",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Date as JavaScript Date object. For this date a <code>YearPicker</code> is rendered. If a Year is selected the\ndate is updated with the start date of the selected year (depending on the calendar type).",
						"methods": [
							"getDate",
							"setDate"
						]
					},
					{
						"name": "primaryCalendarType",
						"type": "sap.ui.core.CalendarType",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.",
						"methods": [
							"getPrimaryCalendarType",
							"setPrimaryCalendarType"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Month selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "pageChange",
						"visibility": "public",
						"since": "1.38.0",
						"description": "The <code>pageChange</code> event is fired if the displayed years are changed by user navigation.",
						"methods": [
							"attachPageChange",
							"detachPageChange",
							"firePageChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new YearPicker.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "pageChange",
					"visibility": "public",
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The <code>pageChange</code> event is fired if the displayed years are changed by user navigation."
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Month selection changed"
				}
			],
			"methods": [
				{
					"name": "attachPageChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.YearPicker</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>pageChange</code> event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.YearPicker</code> itself.\n\nThe <code>pageChange</code> event is fired if the displayed years are changed by user navigation."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.YearPicker</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.calendar.YearPicker</code> itself.\n\nMonth selection changed"
				},
				{
					"name": "detachPageChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>pageChange</code> event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.calendar.YearPicker with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePageChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>pageChange</code> to attached listeners."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>columns</code>"
					},
					"since": "1.30.0",
					"description": "Gets current value of property <code>columns</code>.\n\nnumber of years in each row\n0 means just to have all years in one row, independent of the number\n\nDefault value is <code>4</code>."
				},
				{
					"name": "getDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>date</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>date</code>.\n\nDate as JavaScript Date object. For this date a <code>YearPicker</code> is rendered. If a Year is selected the\ndate is updated with the start date of the selected year (depending on the calendar type)."
				},
				{
					"name": "getFirstRenderedDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "JavaScript Date Object"
					},
					"since": "1.38.0",
					"description": "return the first date of the first rendered year\n<b>Note:</b> If the YearPicker is not rendered no date is returned"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.calendar.YearPicker."
				},
				{
					"name": "getPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CalendarType",
						"description": "Value of property <code>primaryCalendarType</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
				},
				{
					"name": "getYear",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>year</code>"
					},
					"description": "Gets current value of property <code>year</code>.\n\nThe year is initial focused and selected\nThe value must be between 0 and 9999\n\nDefault value is <code>2000</code>.",
					"deprecated": {
						"since": "1.34.0",
						"text": "Use <code>date</code> instead"
					}
				},
				{
					"name": "getYears",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>years</code>"
					},
					"since": "1.30.0",
					"description": "Gets current value of property <code>years</code>.\n\nnumber of displayed years\n\nDefault value is <code>20</code>."
				},
				{
					"name": "nextPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "displays the next page"
				},
				{
					"name": "previousPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "displays the previous page"
				},
				{
					"name": "setColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "iColumns",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>columns</code>"
						}
					],
					"description": "Sets a new value for property <code>columns</code>.\n\nnumber of years in each row\n0 means just to have all years in one row, independent of the number\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>4</code>."
				},
				{
					"name": "setDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>date</code>"
						}
					],
					"description": "Sets a new value for property <code>date</code>.\n\nDate as JavaScript Date object. For this date a <code>YearPicker</code> is rendered. If a Year is selected the\ndate is updated with the start date of the selected year (depending on the calendar type).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPrimaryCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sPrimaryCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": false,
							"description": "New value for property <code>primaryCalendarType</code>"
						}
					],
					"description": "Sets a new value for property <code>primaryCalendarType</code>.\n\nIf set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setYear",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iYear",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>year</code>"
						}
					],
					"description": "Sets a new value for property <code>year</code>.\n\nThe year is initial focused and selected\nThe value must be between 0 and 9999\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>2000</code>.",
					"deprecated": {
						"since": "1.34.0",
						"text": "Use <code>date</code> instead"
					}
				},
				{
					"name": "setYears",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.calendar.YearPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "iYears",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>years</code>"
						}
					],
					"description": "Sets a new value for property <code>years</code>.\n\nnumber of displayed years\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>20</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.CalendarAppointment",
			"basename": "CalendarAppointment",
			"resource": "sap/ui/unified/CalendarAppointment.js",
			"module": "sap/ui/unified/CalendarAppointment",
			"static": true,
			"visibility": "public",
			"since": "1.34.0",
			"extends": "sap.ui.unified.DateTypeRange",
			"description": "An appointment for use in a <code>PlanningCalendar</code> or similar. The rendering must be done in the Row collecting the appointments.\n(Because there are different visualizations possible.)\n\nApplications could inherit from this element to add own fields.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Title of the appointment.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Text of the appointment.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Icon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "tentative",
						"type": "boolean",
						"defaultValue": false,
						"group": "Data",
						"visibility": "public",
						"description": "Indicates if the icon is tentative.",
						"methods": [
							"getTentative",
							"setTentative"
						]
					},
					{
						"name": "selected",
						"type": "boolean",
						"defaultValue": false,
						"group": "Data",
						"visibility": "public",
						"description": "Indicates if the icon is selected.",
						"methods": [
							"getSelected",
							"setSelected"
						]
					},
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Can be used as identifier of the appointment",
						"methods": [
							"getKey",
							"setKey"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>CalendarAppointment</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.CalendarAppointment with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.DateTypeRange.extend}."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nIcon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\n\nCan be used as identifier of the appointment"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.CalendarAppointment."
				},
				{
					"name": "getSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>selected</code>"
					},
					"description": "Gets current value of property <code>selected</code>.\n\nIndicates if the icon is selected.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getTentative",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>tentative</code>"
					},
					"description": "Gets current value of property <code>tentative</code>.\n\nIndicates if the icon is tentative.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nText of the appointment."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nTitle of the appointment."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nIcon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\n\nCan be used as identifier of the appointment\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSelected",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>selected</code>"
						}
					],
					"description": "Sets a new value for property <code>selected</code>.\n\nIndicates if the icon is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setTentative",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bTentative",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>tentative</code>"
						}
					],
					"description": "Sets a new value for property <code>tentative</code>.\n\nIndicates if the icon is tentative.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nText of the appointment.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nTitle of the appointment.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.CalendarDateInterval",
			"basename": "CalendarDateInterval",
			"resource": "sap/ui/unified/CalendarDateInterval.js",
			"module": "sap/ui/unified/CalendarDateInterval",
			"static": true,
			"visibility": "public",
			"since": "1.30.0",
			"extends": "sap.ui.unified.Calendar",
			"description": "Calendar with dates displayed in one line.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Start date of the Interval",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "days",
						"type": "int",
						"defaultValue": 7,
						"group": "Appearance",
						"visibility": "public",
						"description": "number of days displayed\non phones the maximum rendered number of days is 8.",
						"methods": [
							"getDays",
							"setDays"
						]
					},
					{
						"name": "showDayNamesLine",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.",
						"methods": [
							"getShowDayNamesLine",
							"setShowDayNamesLine"
						]
					},
					{
						"name": "pickerPopup",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the month- and yearPicker opens on a popup",
						"methods": [
							"getPickerPopup",
							"setPickerPopup"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>CalendarDateInterval</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.CalendarDateInterval with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.Calendar.extend}."
				},
				{
					"name": "getDays",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>days</code>"
					},
					"description": "Gets current value of property <code>days</code>.\n\nnumber of days displayed\non phones the maximum rendered number of days is 8.\n\nDefault value is <code>7</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.CalendarDateInterval."
				},
				{
					"name": "getPickerPopup",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>pickerPopup</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>pickerPopup</code>.\n\nIf set, the month- and yearPicker opens on a popup\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowDayNamesLine",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showDayNamesLine</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>showDayNamesLine</code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setDays",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarDateInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iDays",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>days</code>"
						}
					],
					"description": "Sets a new value for property <code>days</code>.\n\nnumber of days displayed\non phones the maximum rendered number of days is 8.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>7</code>."
				},
				{
					"name": "setFirstDayOfWeek",
					"visibility": "protected",
					"parameters": [
						{
							"name": "iFirstDayOfWeek",
							"type": "int",
							"optional": true,
							"description": "first day of the week"
						}
					],
					"description": "Setter for property <code>firstDayOfWeek</code>.\n\nProperty <code>firstDayOfWeek</code> is not supported in <code>sap.ui.unified.CalendarDateInterval</code> control."
				},
				{
					"name": "setMonths",
					"visibility": "protected",
					"parameters": [
						{
							"name": "iMonths",
							"type": "int",
							"optional": true,
							"description": "months"
						}
					],
					"description": "Setter for property <code>months</code>.\n\nProperty <code>months</code> is not supported in <code>sap.ui.unified.CalendarDateInterval</code> control."
				},
				{
					"name": "setPickerPopup",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarDateInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bPickerPopup",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>pickerPopup</code>"
						}
					],
					"description": "Sets a new value for property <code>pickerPopup</code>.\n\nIf set, the month- and yearPicker opens on a popup\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowDayNamesLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarDateInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bShowDayNamesLine",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showDayNamesLine</code>"
						}
					],
					"description": "Sets a new value for property <code>showDayNamesLine</code>.\n\nIf set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarDateInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date of the Interval\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.unified.CalendarDayType",
			"basename": "CalendarDayType",
			"resource": "sap/ui/unified/library.js",
			"module": "sap/ui/unified/library",
			"static": true,
			"visibility": "public",
			"since": "1.24.0",
			"description": "Type of a calendar day used for visualization.",
			"properties": [
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "None: No special type is used"
				},
				{
					"name": "Type01",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 01: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type02",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 02: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type03",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 03: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type04",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 04: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type05",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 05: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type06",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 06: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type07",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 07: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type08",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 08: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type09",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 09: The semantic meaning must be defined by the application. It can be shown in a legend."
				},
				{
					"name": "Type10",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type 10: The semantic meaning must be defined by the application. It can be shown in a legend."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.unified.CalendarIntervalType",
			"basename": "CalendarIntervalType",
			"resource": "sap/ui/unified/library.js",
			"module": "sap/ui/unified/library",
			"static": true,
			"visibility": "public",
			"since": "1.34.0",
			"description": "Type of a interval in a <code>CalendarRow</code>.",
			"properties": [
				{
					"name": "Day",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "one code>CalendarRow</code> interval has the size of one day"
				},
				{
					"name": "Hour",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "one code>CalendarRow</code> interval has the size of one hour"
				},
				{
					"name": "Month",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "one code>CalendarRow</code> interval has the size of one Month"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.CalendarLegend",
			"basename": "CalendarLegend",
			"resource": "sap/ui/unified/CalendarLegend.js",
			"module": "sap/ui/unified/CalendarLegend",
			"static": true,
			"visibility": "public",
			"since": "1.24.0",
			"extends": "sap.ui.core.Control",
			"description": "A legend for the Calendar Control. Displays special dates colors with their corresponding description. The aggregation specialDates can be set herefor.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "columnWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "120px",
						"group": "Misc",
						"visibility": "public",
						"description": "Width of the columns created in which the items are arranged.",
						"methods": [
							"getColumnWidth",
							"setColumnWidth"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.unified.CalendarLegendItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Items to be displayed.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					},
					{
						"name": "standardItems",
						"singularName": "standardItem",
						"type": "sap.ui.unified.CalendarLegendItem",
						"cardinality": "0..n",
						"visibility": "hidden",
						"methods": [
							"getStandardItems",
							"destroyStandardItems",
							"insertStandardItem",
							"addStandardItem",
							"removeStandardItem",
							"indexOfStandardItem",
							"removeAllStandardItems"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new CalendarLegend.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.CalendarLegendItem",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.CalendarLegend with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getColumnWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>columnWidth</code>"
					},
					"description": "Gets current value of property <code>columnWidth</code>.\n\nWidth of the columns created in which the items are arranged.\n\nDefault value is <code>120px</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegendItem[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\nItems to be displayed."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.CalendarLegend."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.CalendarLegendItem",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.CalendarLegendItem</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.CalendarLegendItem",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegendItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegendItem",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.unified.CalendarLegendItem",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "setColumnWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColumnWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>columnWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>columnWidth</code>.\n\nWidth of the columns created in which the items are arranged.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>120px</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.CalendarLegendItem",
			"basename": "CalendarLegendItem",
			"resource": "sap/ui/unified/CalendarLegendItem.js",
			"module": "sap/ui/unified/CalendarLegendItem",
			"static": true,
			"visibility": "public",
			"since": "1.24.0",
			"extends": "sap.ui.core.Element",
			"description": "Item to be displayed in a CalendarLegend.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text to be displayed for the item.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "type",
						"type": "sap.ui.unified.CalendarDayType",
						"defaultValue": "None",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.28.9",
						"description": "Type of the item.\nIf not set the type is automatically determined from the order of the items in the CalendarLegend.",
						"methods": [
							"getType",
							"setType"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new CalendarLegendItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.CalendarLegendItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.CalendarLegendItem."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nText to be displayed for the item."
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarDayType",
						"description": "Value of property <code>type</code>"
					},
					"since": "1.28.9",
					"description": "Gets current value of property <code>type</code>.\n\nType of the item.\nIf not set the type is automatically determined from the order of the items in the CalendarLegend.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegendItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nText to be displayed for the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegendItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.28.9",
					"parameters": [
						{
							"name": "sType",
							"type": "sap.ui.unified.CalendarDayType",
							"optional": false,
							"description": "New value for property <code>type</code>"
						}
					],
					"description": "Sets a new value for property <code>type</code>.\n\nType of the item.\nIf not set the type is automatically determined from the order of the items in the CalendarLegend.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.CalendarMonthInterval",
			"basename": "CalendarMonthInterval",
			"resource": "sap/ui/unified/CalendarMonthInterval.js",
			"module": "sap/ui/unified/CalendarMonthInterval",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"extends": "sap.ui.core.Control",
			"description": "Calendar with granularity of months displayed in one line.\n\n<b>Note:</b> JavaScript Date objects are used to set and return the months, mark them as selected or as a special type.\nBut the date part of the Date object is not used. If a Date object is returned the date will be set to the 1st of the corresponding month.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Width of the <code>CalendarMonthInterval</code>. The width of the single months depends on this width.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Start date of the Interval as JavaScript Date object.\nThe month of this Date will be the first month in the displayed row.",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "intervalSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, interval selection is allowed",
						"methods": [
							"getIntervalSelection",
							"setIntervalSelection"
						]
					},
					{
						"name": "singleSelection",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
						"methods": [
							"getSingleSelection",
							"setSingleSelection"
						]
					},
					{
						"name": "months",
						"type": "int",
						"defaultValue": 12,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of months displayed\n\n<b>Note:</b> On phones, the maximum number of months displayed in the row is always 6.",
						"methods": [
							"getMonths",
							"setMonths"
						]
					},
					{
						"name": "pickerPopup",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the yearPicker opens on a popup",
						"methods": [
							"getPickerPopup",
							"setPickerPopup"
						]
					},
					{
						"name": "minDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.",
						"methods": [
							"getMinDate",
							"setMinDate"
						]
					},
					{
						"name": "maxDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.",
						"methods": [
							"getMaxDate",
							"setMaxDate"
						]
					}
				],
				"aggregations": [
					{
						"name": "selectedDates",
						"singularName": "selectedDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges for selected dates of the <code>CalendarMonthInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected.",
						"methods": [
							"getSelectedDates",
							"destroySelectedDates",
							"insertSelectedDate",
							"addSelectedDate",
							"removeSelectedDate",
							"indexOfSelectedDate",
							"removeAllSelectedDates"
						]
					},
					{
						"name": "specialDates",
						"singularName": "specialDate",
						"type": "sap.ui.unified.DateTypeRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges with type to visualize special months in the <code>CalendarMonthInterval</code>.\nIf one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way.",
						"methods": [
							"getSpecialDates",
							"destroySpecialDates",
							"insertSpecialDate",
							"addSpecialDate",
							"removeSpecialDate",
							"indexOfSpecialDate",
							"removeAllSpecialDates"
						]
					},
					{
						"name": "header",
						"singularName": "header",
						"type": "sap.ui.unified.calendar.Header",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden, for internal use only.",
						"methods": [
							"getHeader",
							"destroyHeader",
							"setHeader"
						]
					},
					{
						"name": "monthsRow",
						"singularName": "monthsRow",
						"type": "sap.ui.unified.calendar.MonthsRow",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getMonthsRow",
							"destroyMonthsRow",
							"setMonthsRow"
						]
					},
					{
						"name": "yearPicker",
						"singularName": "yearPicker",
						"type": "sap.ui.unified.calendar.YearPicker",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getYearPicker",
							"destroyYearPicker",
							"setYearPicker"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					},
					{
						"name": "legend",
						"singularName": "legend",
						"type": "sap.ui.unified.CalendarLegend",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.5",
						"description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
						"methods": [
							"getLegend",
							"setLegend"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Month selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "cancel",
						"visibility": "public",
						"description": "Month selection was cancelled",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					},
					{
						"name": "startDateChange",
						"visibility": "public",
						"since": "1.34.0",
						"description": "<code>startDate</code> was changed while navigation in <code>CalendarMonthInterval</code>",
						"methods": [
							"attachStartDateChange",
							"detachStartDateChange",
							"fireStartDateChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>CalendarMonthInterval</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "cancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Month selection was cancelled"
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Month selection changed"
				},
				{
					"name": "startDateChange",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "<code>startDate</code> was changed while navigation in <code>CalendarMonthInterval</code>"
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some selectedDate to the aggregation <code>selectedDates</code>."
				},
				{
					"name": "addSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some specialDate to the aggregation <code>specialDates</code>."
				},
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>cancel</code> event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval</code> itself.\n\nMonth selection was cancelled"
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval</code> itself.\n\nMonth selection changed"
				},
				{
					"name": "attachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>startDateChange</code> event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval</code> itself.\n\n<code>startDate</code> was changed while navigation in <code>CalendarMonthInterval</code>"
				},
				{
					"name": "destroySelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the selectedDates in the aggregation <code>selectedDates</code>."
				},
				{
					"name": "destroySpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the specialDates in the aggregation <code>specialDates</code>."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>cancel</code> event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>startDateChange</code> event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "displayDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for displayed date. (The month of this date will be displayed.)"
						}
					],
					"description": "Displays a month in the <code>CalendarMonthInterval</code> but doesn't set the focus."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.CalendarMonthInterval with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>cancel</code> to attached listeners."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "fireStartDateChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>startDateChange</code> to attached listeners."
				},
				{
					"name": "focusDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for focused date. (The month of this date will be focused.)"
						}
					],
					"description": "Sets the focused month of the <code>CalendarMonthInterval</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>intervalSelection</code>"
					},
					"description": "Gets current value of property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend"
					},
					"since": "1.38.5",
					"description": "ID of the element which is the current target of the association <code>legend</code>, or <code>null</code>."
				},
				{
					"name": "getMaxDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>maxDate</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>maxDate</code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.CalendarMonthInterval."
				},
				{
					"name": "getMinDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>minDate</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>minDate</code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>."
				},
				{
					"name": "getMonths",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>months</code>"
					},
					"description": "Gets current value of property <code>months</code>.\n\nNumber of months displayed\n\n<b>Note:</b> On phones, the maximum number of months displayed in the row is always 6.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "getPickerPopup",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>pickerPopup</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>pickerPopup</code>.\n\nIf set, the yearPicker opens on a popup\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"description": "Gets content of aggregation <code>selectedDates</code>.\n\nDate ranges for selected dates of the <code>CalendarMonthInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected."
				},
				{
					"name": "getSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>singleSelection</code>"
					},
					"description": "Gets current value of property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]"
					},
					"description": "Gets content of aggregation <code>specialDates</code>.\n\nDate ranges with type to visualize special months in the <code>CalendarMonthInterval</code>.\nIf one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>startDate</code>"
					},
					"description": "Gets current value of property <code>startDate</code>.\n\nStart date of the Interval as JavaScript Date object.\nThe month of this Date will be the first month in the displayed row."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWidth of the <code>CalendarMonthInterval</code>. The width of the single months depends on this width."
				},
				{
					"name": "indexOfSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>selectedDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation <code>specialDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a selectedDate into the aggregation <code>selectedDates</code>."
				},
				{
					"name": "insertSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a specialDate into the aggregation <code>specialDates</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>selectedDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>specialDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed selectedDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSelectedDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDateto remove or its index or id"
						}
					],
					"description": "Removes a selectedDate from the aggregation <code>selectedDates</code>."
				},
				{
					"name": "removeSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange",
						"description": "The removed specialDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSpecialDate",
							"type": "int|string|sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDateto remove or its index or id"
						}
					],
					"description": "Removes a specialDate from the aggregation <code>specialDates</code>."
				},
				{
					"name": "setIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIntervalSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>intervalSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.5",
					"parameters": [
						{
							"name": "oLegend",
							"type": "sap.ui.unified.CalendarLegend",
							"optional": false,
							"description": "Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>legend</code>."
				},
				{
					"name": "setMaxDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oMaxDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>maxDate</code>"
						}
					],
					"description": "Sets a new value for property <code>maxDate</code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMinDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oMinDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>minDate</code>"
						}
					],
					"description": "Sets a new value for property <code>minDate</code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMonths",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMonths",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>months</code>"
						}
					],
					"description": "Sets a new value for property <code>months</code>.\n\nNumber of months displayed\n\n<b>Note:</b> On phones, the maximum number of months displayed in the row is always 6.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "setPickerPopup",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bPickerPopup",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>pickerPopup</code>"
						}
					],
					"description": "Sets a new value for property <code>pickerPopup</code>.\n\nIf set, the yearPicker opens on a popup\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSingleSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>singleSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date of the Interval as JavaScript Date object.\nThe month of this Date will be the first month in the displayed row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarMonthInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of the <code>CalendarMonthInterval</code>. The width of the single months depends on this width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.CalendarRow",
			"basename": "CalendarRow",
			"resource": "sap/ui/unified/CalendarRow.js",
			"module": "sap/ui/unified/CalendarRow",
			"static": true,
			"visibility": "public",
			"since": "1.34.0",
			"extends": "sap.ui.core.Control",
			"description": "A calendar row with an header and appointments. The Appointments will be placed in the defined interval.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Start date, as JavaScript Date object, of the row. As default, the current date is used.",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "intervals",
						"type": "int",
						"defaultValue": 12,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of displayed intervals. The size of the intervals is defined with <code>intervalType</code>",
						"methods": [
							"getIntervals",
							"setIntervals"
						]
					},
					{
						"name": "intervalType",
						"type": "sap.ui.unified.CalendarIntervalType",
						"defaultValue": "Hour",
						"group": "Appearance",
						"visibility": "public",
						"description": "Type of the intervals of the row. The default is one hour.",
						"methods": [
							"getIntervalType",
							"setIntervalType"
						]
					},
					{
						"name": "showSubIntervals",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set, subintervals are shown.\n\nIf the interval type is <code>Hour</code>, quarter hours are shown.\n\nIf the interval type is <code>Day</code>, hours are shown.\n\nIf the interval type is <code>Month</code>, days are shown.",
						"methods": [
							"getShowSubIntervals",
							"setShowSubIntervals"
						]
					},
					{
						"name": "showIntervalHeaders",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set, interval headers are shown like specified in <code>showEmptyIntervalHeaders</code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders</code> are assigned.",
						"methods": [
							"getShowIntervalHeaders",
							"setShowIntervalHeaders"
						]
					},
					{
						"name": "showEmptyIntervalHeaders",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If set, interval headers are shown even if no <code>intervalHeaders</code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders</code> are assigned.\n\n<b>Note:</b> This property is only used if <code>showIntervalHeaders</code> is set to true.",
						"methods": [
							"getShowEmptyIntervalHeaders",
							"setShowEmptyIntervalHeaders"
						]
					},
					{
						"name": "nonWorkingDays",
						"type": "int[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> The non working days are only visualized if <code>intervalType</code> is set to day.",
						"methods": [
							"getNonWorkingDays",
							"setNonWorkingDays"
						]
					},
					{
						"name": "nonWorkingHours",
						"type": "int[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:</b> The non working hours are only visualized if <code>intervalType</code> is set to hour.",
						"methods": [
							"getNonWorkingHours",
							"setNonWorkingHours"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Width of the row",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Height of the row",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "checkResize",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, the <code>CalendarRow</code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>).\nthe resize checks should be done only by this container control. Then the container control should\ncall <code>handleResize</code> of the <code>CalendarRow</code> if a resize happens.",
						"methods": [
							"getCheckResize",
							"setCheckResize"
						]
					},
					{
						"name": "updateCurrentTime",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set the <code>CalendarRow</code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>)\nthe periodic update should be triggered only by this container control. Then the container control should\ncall <code>updateCurrentTimeVisualization</code> of the <code>CalendarRow</code> to update the visualization.",
						"methods": [
							"getUpdateCurrentTime",
							"setUpdateCurrentTime"
						]
					},
					{
						"name": "appointmentsReducedHeight",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:</b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.",
						"methods": [
							"getAppointmentsReducedHeight",
							"setAppointmentsReducedHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "appointments",
						"singularName": "appointment",
						"type": "sap.ui.unified.CalendarAppointment",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Appointments to be displayed in the row. Appointments outside the visible time frame are not rendered.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned.",
						"methods": [
							"getAppointments",
							"destroyAppointments",
							"insertAppointment",
							"addAppointment",
							"removeAppointment",
							"indexOfAppointment",
							"removeAllAppointments"
						]
					},
					{
						"name": "intervalHeaders",
						"singularName": "intervalHeader",
						"type": "sap.ui.unified.CalendarAppointment",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Appointments to be displayed in the top of the intervals. The <code>intervalHeaders</code> are used to visualize\npublic holidays and similar things.\n\nAppointments outside the visible time frame are not rendered.\n\nThe <code>intervalHeaders</code> always fill whole intervals. If they are shorter than one interval, they are not displayed.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned.",
						"methods": [
							"getIntervalHeaders",
							"destroyIntervalHeaders",
							"insertIntervalHeader",
							"addIntervalHeader",
							"removeIntervalHeader",
							"indexOfIntervalHeader",
							"removeAllIntervalHeaders"
						]
					},
					{
						"name": "groupAppointments",
						"singularName": "groupAppointment",
						"type": "sap.ui.unified.CalendarAppointment",
						"cardinality": "0..n",
						"visibility": "hidden",
						"methods": [
							"getGroupAppointments",
							"destroyGroupAppointments",
							"insertGroupAppointment",
							"addGroupAppointment",
							"removeGroupAppointment",
							"indexOfGroupAppointment",
							"removeAllGroupAppointments"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Fired if an appointment was selected",
						"parameters": {
							"appointment": {
								"name": "appointment",
								"type": "sap.ui.unified.CalendarAppointment",
								"description": "selected appointment"
							},
							"appointments": {
								"name": "appointments",
								"type": "sap.ui.unified.CalendarAppointment[]",
								"description": "selected appointments in case a group appointment is selected"
							},
							"multiSelect": {
								"name": "multiSelect",
								"type": "boolean",
								"description": "If set, the appointment was selected by multiple selection (e.g. shift + mouse click).\nSo more than the current appointment could be selected."
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "startDateChange",
						"visibility": "public",
						"description": "<code>startDate</code> was changed while navigating in <code>CalendarRow</code>",
						"methods": [
							"attachStartDateChange",
							"detachStartDateChange",
							"fireStartDateChange"
						]
					},
					{
						"name": "leaveRow",
						"visibility": "public",
						"description": "The <code>CalendarRow</code> should be left while navigating. (Arrow up or arrow down.)\nThe caller should determine the next control to be focused",
						"parameters": {
							"type": {
								"name": "type",
								"type": "string",
								"description": "The type of the event that triggers this <code>leaveRow</code>"
							}
						},
						"methods": [
							"attachLeaveRow",
							"detachLeaveRow",
							"fireLeaveRow"
						]
					},
					{
						"name": "intervalSelect",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Fired if an interval was selected",
						"parameters": {
							"startDate": {
								"name": "startDate",
								"type": "object",
								"description": "Interval start date as JavaScript date object"
							},
							"endDate": {
								"name": "endDate",
								"type": "object",
								"description": "Interval end date as JavaScript date object"
							},
							"subInterval": {
								"name": "subInterval",
								"type": "boolean",
								"description": "If set, the selected interval is a subinterval"
							}
						},
						"methods": [
							"attachIntervalSelect",
							"detachIntervalSelect",
							"fireIntervalSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>CalendarRow</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "intervalSelect",
					"visibility": "public",
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"startDate": {
											"name": "startDate",
											"type": "object",
											"optional": false,
											"description": "Interval start date as JavaScript date object"
										},
										"endDate": {
											"name": "endDate",
											"type": "object",
											"optional": false,
											"description": "Interval end date as JavaScript date object"
										},
										"subInterval": {
											"name": "subInterval",
											"type": "boolean",
											"optional": false,
											"description": "If set, the selected interval is a subinterval"
										}
									}
								}
							}
						}
					],
					"description": "Fired if an interval was selected"
				},
				{
					"name": "leaveRow",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"type": {
											"name": "type",
											"type": "string",
											"optional": false,
											"description": "The type of the event that triggers this <code>leaveRow</code>"
										}
									}
								}
							}
						}
					],
					"description": "The <code>CalendarRow</code> should be left while navigating. (Arrow up or arrow down.)\nThe caller should determine the next control to be focused"
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"appointment": {
											"name": "appointment",
											"type": "sap.ui.unified.CalendarAppointment",
											"optional": false,
											"description": "selected appointment"
										},
										"appointments": {
											"name": "appointments",
											"type": "sap.ui.unified.CalendarAppointment[]",
											"optional": false,
											"description": "selected appointments in case a group appointment is selected"
										},
										"multiSelect": {
											"name": "multiSelect",
											"type": "boolean",
											"optional": false,
											"description": "If set, the appointment was selected by multiple selection (e.g. shift + mouse click).\nSo more than the current appointment could be selected."
										}
									}
								}
							}
						}
					],
					"description": "Fired if an appointment was selected"
				},
				{
					"name": "startDateChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "<code>startDate</code> was changed while navigating in <code>CalendarRow</code>"
				}
			],
			"methods": [
				{
					"name": "addAppointment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAppointment",
							"type": "sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "the appointment to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some appointment to the aggregation <code>appointments</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addIntervalHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIntervalHeader",
							"type": "sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "the intervalHeader to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some intervalHeader to the aggregation <code>intervalHeaders</code>."
				},
				{
					"name": "attachIntervalSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>intervalSelect</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\nFired if an interval was selected"
				},
				{
					"name": "attachLeaveRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>leaveRow</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\nThe <code>CalendarRow</code> should be left while navigating. (Arrow up or arrow down.)\nThe caller should determine the next control to be focused"
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\nFired if an appointment was selected"
				},
				{
					"name": "attachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>startDateChange</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\n<code>startDate</code> was changed while navigating in <code>CalendarRow</code>"
				},
				{
					"name": "destroyAppointments",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the appointments in the aggregation <code>appointments</code>."
				},
				{
					"name": "destroyIntervalHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the intervalHeaders in the aggregation <code>intervalHeaders</code>."
				},
				{
					"name": "detachIntervalSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>intervalSelect</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLeaveRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>leaveRow</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>startDateChange</code> event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.CalendarRow with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireIntervalSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>intervalSelect</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>startDate</code> of type <code>object</code>Interval start date as JavaScript date object</li>\n<li><code>endDate</code> of type <code>object</code>Interval end date as JavaScript date object</li>\n<li><code>subInterval</code> of type <code>boolean</code>If set, the selected interval is a subinterval</li>\n</ul>"
				},
				{
					"name": "fireLeaveRow",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>leaveRow</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>type</code> of type <code>string</code>The type of the event that triggers this <code>leaveRow</code></li>\n</ul>"
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>appointment</code> of type <code>sap.ui.unified.CalendarAppointment</code>selected appointment</li>\n<li><code>appointments</code> of type <code>sap.ui.unified.CalendarAppointment[]</code>selected appointments in case a group appointment is selected</li>\n<li><code>multiSelect</code> of type <code>boolean</code>If set, the appointment was selected by multiple selection (e.g. shift + mouse click).\nSo more than the current appointment could be selected.</li>\n</ul>"
				},
				{
					"name": "fireStartDateChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>startDateChange</code> to attached listeners."
				},
				{
					"name": "focusAppointment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAppointment",
							"type": "CalendarAppointment",
							"optional": false,
							"description": "Appointment to be focused."
						}
					],
					"description": "Focus the given <code>CalendarAppointment</code> in the <code>CalendarRow</code>."
				},
				{
					"name": "focusNearestAppointment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "Javascript Date object."
						}
					],
					"description": "Focus the <code>CalendarAppointment</code> in the <code>CalendarRow</code> that is nearest to\nthe given date."
				},
				{
					"name": "getAppointments",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment[]"
					},
					"description": "Gets content of aggregation <code>appointments</code>.\n\nAppointments to be displayed in the row. Appointments outside the visible time frame are not rendered.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned."
				},
				{
					"name": "getAppointmentsReducedHeight",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>appointmentsReducedHeight</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>appointmentsReducedHeight</code>.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:</b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getCheckResize",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>checkResize</code>"
					},
					"description": "Gets current value of property <code>checkResize</code>.\n\nIf set, the <code>CalendarRow</code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>).\nthe resize checks should be done only by this container control. Then the container control should\ncall <code>handleResize</code> of the <code>CalendarRow</code> if a resize happens.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getFocusedAppointment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "Focused Appointment"
					},
					"description": "Returns the focused <code>CalendarAppointment</code> of the <code>CalendarRow</code>.\n\nThe focus must not really be on the <code>CalendarAppointment</code>, it have just to\nbe the one that has the focus when the <code>CalendarRow</code> was focused last time."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nHeight of the row"
				},
				{
					"name": "getIntervalHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment[]"
					},
					"description": "Gets content of aggregation <code>intervalHeaders</code>.\n\nAppointments to be displayed in the top of the intervals. The <code>intervalHeaders</code> are used to visualize\npublic holidays and similar things.\n\nAppointments outside the visible time frame are not rendered.\n\nThe <code>intervalHeaders</code> always fill whole intervals. If they are shorter than one interval, they are not displayed.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned."
				},
				{
					"name": "getIntervals",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>intervals</code>"
					},
					"description": "Gets current value of property <code>intervals</code>.\n\nNumber of displayed intervals. The size of the intervals is defined with <code>intervalType</code>\n\nDefault value is <code>12</code>."
				},
				{
					"name": "getIntervalType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarIntervalType",
						"description": "Value of property <code>intervalType</code>"
					},
					"description": "Gets current value of property <code>intervalType</code>.\n\nType of the intervals of the row. The default is one hour.\n\nDefault value is <code>Hour</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.CalendarRow."
				},
				{
					"name": "getNonWorkingDays",
					"visibility": "public",
					"returnValue": {
						"type": "int[]",
						"description": "Value of property <code>nonWorkingDays</code>"
					},
					"description": "Gets current value of property <code>nonWorkingDays</code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> The non working days are only visualized if <code>intervalType</code> is set to day."
				},
				{
					"name": "getNonWorkingHours",
					"visibility": "public",
					"returnValue": {
						"type": "int[]",
						"description": "Value of property <code>nonWorkingHours</code>"
					},
					"description": "Gets current value of property <code>nonWorkingHours</code>.\n\nIf set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:</b> The non working hours are only visualized if <code>intervalType</code> is set to hour."
				},
				{
					"name": "getShowEmptyIntervalHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showEmptyIntervalHeaders</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>showEmptyIntervalHeaders</code>.\n\nIf set, interval headers are shown even if no <code>intervalHeaders</code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders</code> are assigned.\n\n<b>Note:</b> This property is only used if <code>showIntervalHeaders</code> is set to true.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowIntervalHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showIntervalHeaders</code>"
					},
					"description": "Gets current value of property <code>showIntervalHeaders</code>.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders</code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders</code> are assigned.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowSubIntervals",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSubIntervals</code>"
					},
					"description": "Gets current value of property <code>showSubIntervals</code>.\n\nIf set, subintervals are shown.\n\nIf the interval type is <code>Hour</code>, quarter hours are shown.\n\nIf the interval type is <code>Day</code>, hours are shown.\n\nIf the interval type is <code>Month</code>, days are shown.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>startDate</code>"
					},
					"description": "Gets current value of property <code>startDate</code>.\n\nStart date, as JavaScript Date object, of the row. As default, the current date is used."
				},
				{
					"name": "getUpdateCurrentTime",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>updateCurrentTime</code>"
					},
					"description": "Gets current value of property <code>updateCurrentTime</code>.\n\nIf set the <code>CalendarRow</code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>)\nthe periodic update should be triggered only by this container control. Then the container control should\ncall <code>updateCurrentTimeVisualization</code> of the <code>CalendarRow</code> to update the visualization.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWidth of the row"
				},
				{
					"name": "handleResize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object of the resize handler."
						}
					],
					"description": "After a resize of the <code>CalendarRow</code>, some calculations for appointment\nsizes are needed.\n\nFor this, each <code>CalendarRow</code> can trigger the resize check for it's own DOM.\nBut if multiple <code>CalendarRow</code>s are used in one container (e.g. <code>PlanningCalendar</code>),\nit is better if the container triggers the resize check once an then calls this function\nof each <code>CalendarRow</code>."
				},
				{
					"name": "indexOfAppointment",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oAppointment",
							"type": "sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "The appointment whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.CalendarAppointment</code> in the aggregation <code>appointments</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfIntervalHeader",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oIntervalHeader",
							"type": "sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "The intervalHeader whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.CalendarAppointment</code> in the aggregation <code>intervalHeaders</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertAppointment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAppointment",
							"type": "sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "the appointment to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the appointment should be inserted at; for\n             a negative value of <code>iIndex</code>, the appointment is inserted at position 0; for a value\n             greater than the current size of the aggregation, the appointment is inserted at\n             the last position"
						}
					],
					"description": "Inserts a appointment into the aggregation <code>appointments</code>."
				},
				{
					"name": "insertIntervalHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIntervalHeader",
							"type": "sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "the intervalHeader to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the intervalHeader should be inserted at; for\n             a negative value of <code>iIndex</code>, the intervalHeader is inserted at position 0; for a value\n             greater than the current size of the aggregation, the intervalHeader is inserted at\n             the last position"
						}
					],
					"description": "Inserts a intervalHeader into the aggregation <code>intervalHeaders</code>."
				},
				{
					"name": "removeAllAppointments",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>appointments</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllIntervalHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>intervalHeaders</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAppointment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "The removed appointment or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAppointment",
							"type": "int|string|sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "The appointmentto remove or its index or id"
						}
					],
					"description": "Removes a appointment from the aggregation <code>appointments</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeIntervalHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarAppointment",
						"description": "The removed intervalHeader or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vIntervalHeader",
							"type": "int|string|sap.ui.unified.CalendarAppointment",
							"optional": false,
							"description": "The intervalHeaderto remove or its index or id"
						}
					],
					"description": "Removes a intervalHeader from the aggregation <code>intervalHeaders</code>."
				},
				{
					"name": "setAppointmentsReducedHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bAppointmentsReducedHeight",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>appointmentsReducedHeight</code>"
						}
					],
					"description": "Sets a new value for property <code>appointmentsReducedHeight</code>.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:</b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setCheckResize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bCheckResize",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>checkResize</code>"
						}
					],
					"description": "Sets a new value for property <code>checkResize</code>.\n\nIf set, the <code>CalendarRow</code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>).\nthe resize checks should be done only by this container control. Then the container control should\ncall <code>handleResize</code> of the <code>CalendarRow</code> if a resize happens.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nHeight of the row\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIntervals",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iIntervals",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>intervals</code>"
						}
					],
					"description": "Sets a new value for property <code>intervals</code>.\n\nNumber of displayed intervals. The size of the intervals is defined with <code>intervalType</code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "setIntervalType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIntervalType",
							"type": "sap.ui.unified.CalendarIntervalType",
							"optional": false,
							"description": "New value for property <code>intervalType</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalType</code>.\n\nType of the intervals of the row. The default is one hour.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Hour</code>."
				},
				{
					"name": "setNonWorkingDays",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sNonWorkingDays",
							"type": "int[]",
							"optional": false,
							"description": "New value for property <code>nonWorkingDays</code>"
						}
					],
					"description": "Sets a new value for property <code>nonWorkingDays</code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> The non working days are only visualized if <code>intervalType</code> is set to day.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setNonWorkingHours",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sNonWorkingHours",
							"type": "int[]",
							"optional": false,
							"description": "New value for property <code>nonWorkingHours</code>"
						}
					],
					"description": "Sets a new value for property <code>nonWorkingHours</code>.\n\nIf set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:</b> The non working hours are only visualized if <code>intervalType</code> is set to hour.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setShowEmptyIntervalHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bShowEmptyIntervalHeaders",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showEmptyIntervalHeaders</code>"
						}
					],
					"description": "Sets a new value for property <code>showEmptyIntervalHeaders</code>.\n\nIf set, interval headers are shown even if no <code>intervalHeaders</code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders</code> are assigned.\n\n<b>Note:</b> This property is only used if <code>showIntervalHeaders</code> is set to true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowIntervalHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowIntervalHeaders",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showIntervalHeaders</code>"
						}
					],
					"description": "Sets a new value for property <code>showIntervalHeaders</code>.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders</code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders</code> are assigned.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowSubIntervals",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSubIntervals",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSubIntervals</code>"
						}
					],
					"description": "Sets a new value for property <code>showSubIntervals</code>.\n\nIf set, subintervals are shown.\n\nIf the interval type is <code>Hour</code>, quarter hours are shown.\n\nIf the interval type is <code>Day</code>, hours are shown.\n\nIf the interval type is <code>Month</code>, days are shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date, as JavaScript Date object, of the row. As default, the current date is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUpdateCurrentTime",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUpdateCurrentTime",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>updateCurrentTime</code>"
						}
					],
					"description": "Sets a new value for property <code>updateCurrentTime</code>.\n\nIf set the <code>CalendarRow</code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>)\nthe periodic update should be triggered only by this container control. Then the container control should\ncall <code>updateCurrentTimeVisualization</code> of the <code>CalendarRow</code> to update the visualization.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of the row\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "updateCurrentTimeVisualization",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarRow",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "If the current time is in the visible output of the <code>CalendarRow</code>,\nthe indicator for the current time must be positioned.\n\nFor this, each <code>CalendarRow</code> can trigger a timer.\nBut if multiple <code>CalendarRow</code>s are used in one container (e.G. <code>PlanningCalendar</code>),\nit is better if the container triggers the interval once an then calls this function\nof each <code>CalendarRow</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.CalendarTimeInterval",
			"basename": "CalendarTimeInterval",
			"resource": "sap/ui/unified/CalendarTimeInterval.js",
			"module": "sap/ui/unified/CalendarTimeInterval",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"extends": "sap.ui.core.Control",
			"description": "Calendar with granularity of time items displayed in one line.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Width of the <code>CalendarTimeInterval</code>. The width of the single months depends on this width.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Start date of the Interval as JavaScript Date object.\nThe time interval corresponding to this Date and <code>items</code> and <code>intervalMinutes</code>\nwill be the first time in the displayed row.",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "intervalSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, interval selection is allowed",
						"methods": [
							"getIntervalSelection",
							"setIntervalSelection"
						]
					},
					{
						"name": "singleSelection",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
						"methods": [
							"getSingleSelection",
							"setSingleSelection"
						]
					},
					{
						"name": "items",
						"type": "int",
						"defaultValue": 12,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of time items displayed. Default is 12.\n\n<b>Note:</b> On phones, the maximum number of items displayed in the row is always 6.",
						"methods": [
							"getItems",
							"setItems"
						]
					},
					{
						"name": "intervalMinutes",
						"type": "int",
						"defaultValue": 60,
						"group": "Appearance",
						"visibility": "public",
						"description": "Size of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>CalendarDateInterval</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.",
						"methods": [
							"getIntervalMinutes",
							"setIntervalMinutes"
						]
					},
					{
						"name": "pickerPopup",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "If set, the day-, month- and yearPicker opens on a popup",
						"methods": [
							"getPickerPopup",
							"setPickerPopup"
						]
					},
					{
						"name": "minDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.",
						"methods": [
							"getMinDate",
							"setMinDate"
						]
					},
					{
						"name": "maxDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"description": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.",
						"methods": [
							"getMaxDate",
							"setMaxDate"
						]
					}
				],
				"aggregations": [
					{
						"name": "selectedDates",
						"singularName": "selectedDate",
						"type": "sap.ui.unified.DateRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges for selected items of the <code>CalendarTimeInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used.",
						"methods": [
							"getSelectedDates",
							"destroySelectedDates",
							"insertSelectedDate",
							"addSelectedDate",
							"removeSelectedDate",
							"indexOfSelectedDate",
							"removeAllSelectedDates"
						]
					},
					{
						"name": "specialDates",
						"singularName": "specialDate",
						"type": "sap.ui.unified.DateTypeRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Date ranges with type to visualize special items in the <code>CalendarTimeInterval</code>.\nIf one interval is assigned to more than one type, only the first one will be used.",
						"methods": [
							"getSpecialDates",
							"destroySpecialDates",
							"insertSpecialDate",
							"addSpecialDate",
							"removeSpecialDate",
							"indexOfSpecialDate",
							"removeAllSpecialDates"
						]
					},
					{
						"name": "header",
						"singularName": "header",
						"type": "sap.ui.unified.calendar.Header",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden, for internal use only.",
						"methods": [
							"getHeader",
							"destroyHeader",
							"setHeader"
						]
					},
					{
						"name": "timesRow",
						"singularName": "timesRow",
						"type": "sap.ui.unified.calendar.TimesRow",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getTimesRow",
							"destroyTimesRow",
							"setTimesRow"
						]
					},
					{
						"name": "datesRow",
						"singularName": "datesRow",
						"type": "sap.ui.unified.calendar.Month",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getDatesRow",
							"destroyDatesRow",
							"setDatesRow"
						]
					},
					{
						"name": "monthPicker",
						"singularName": "monthPicker",
						"type": "sap.ui.unified.calendar.MonthPicker",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getMonthPicker",
							"destroyMonthPicker",
							"setMonthPicker"
						]
					},
					{
						"name": "yearPicker",
						"singularName": "yearPicker",
						"type": "sap.ui.unified.calendar.YearPicker",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"getYearPicker",
							"destroyYearPicker",
							"setYearPicker"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					},
					{
						"name": "legend",
						"singularName": "legend",
						"type": "sap.ui.unified.CalendarLegend",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.5",
						"description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
						"methods": [
							"getLegend",
							"setLegend"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Time selection changed",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "cancel",
						"visibility": "public",
						"description": "Time selection was cancelled",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					},
					{
						"name": "startDateChange",
						"visibility": "public",
						"since": "1.34.0",
						"description": "<code>startDate</code> was changed while navigation in <code>CalendarTimeInterval</code>",
						"methods": [
							"attachStartDateChange",
							"detachStartDateChange",
							"fireStartDateChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>CalendarTimeInterval</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "cancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Time selection was cancelled"
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Time selection changed"
				},
				{
					"name": "startDateChange",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "<code>startDate</code> was changed while navigation in <code>CalendarTimeInterval</code>"
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some selectedDate to the aggregation <code>selectedDates</code>."
				},
				{
					"name": "addSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some specialDate to the aggregation <code>specialDates</code>."
				},
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>cancel</code> event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval</code> itself.\n\nTime selection was cancelled"
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval</code> itself.\n\nTime selection changed"
				},
				{
					"name": "attachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>startDateChange</code> event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval</code> itself.\n\n<code>startDate</code> was changed while navigation in <code>CalendarTimeInterval</code>"
				},
				{
					"name": "destroySelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the selectedDates in the aggregation <code>selectedDates</code>."
				},
				{
					"name": "destroySpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the specialDates in the aggregation <code>specialDates</code>."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>cancel</code> event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStartDateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>startDateChange</code> event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "displayDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for displayed item."
						}
					],
					"description": "Displays a item in the <code>CalendarTimeInterval</code> but doesn't set the focus."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.CalendarTimeInterval with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>cancel</code> to attached listeners."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "fireStartDateChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>startDateChange</code> to attached listeners."
				},
				{
					"name": "focusDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Calendar",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "object",
							"optional": false,
							"description": "JavaScript date object for focused item."
						}
					],
					"description": "Sets the focused item of the <code>CalendarTimeInterval</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getIntervalMinutes",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>intervalMinutes</code>"
					},
					"description": "Gets current value of property <code>intervalMinutes</code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>CalendarDateInterval</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nDefault value is <code>60</code>."
				},
				{
					"name": "getIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>intervalSelection</code>"
					},
					"description": "Gets current value of property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>items</code>"
					},
					"description": "Gets current value of property <code>items</code>.\n\nNumber of time items displayed. Default is 12.\n\n<b>Note:</b> On phones, the maximum number of items displayed in the row is always 6.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "getLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarLegend"
					},
					"since": "1.38.5",
					"description": "ID of the element which is the current target of the association <code>legend</code>, or <code>null</code>."
				},
				{
					"name": "getMaxDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>maxDate</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>maxDate</code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.CalendarTimeInterval."
				},
				{
					"name": "getMinDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>minDate</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>minDate</code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>."
				},
				{
					"name": "getPickerPopup",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>pickerPopup</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>pickerPopup</code>.\n\nIf set, the day-, month- and yearPicker opens on a popup\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]"
					},
					"description": "Gets content of aggregation <code>selectedDates</code>.\n\nDate ranges for selected items of the <code>CalendarTimeInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used."
				},
				{
					"name": "getSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>singleSelection</code>"
					},
					"description": "Gets current value of property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]"
					},
					"description": "Gets content of aggregation <code>specialDates</code>.\n\nDate ranges with type to visualize special items in the <code>CalendarTimeInterval</code>.\nIf one interval is assigned to more than one type, only the first one will be used."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>startDate</code>"
					},
					"description": "Gets current value of property <code>startDate</code>.\n\nStart date of the Interval as JavaScript Date object.\nThe time interval corresponding to this Date and <code>items</code> and <code>intervalMinutes</code>\nwill be the first time in the displayed row."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWidth of the <code>CalendarTimeInterval</code>. The width of the single months depends on this width."
				},
				{
					"name": "indexOfSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation <code>selectedDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDate whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation <code>specialDates</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedDate",
							"type": "sap.ui.unified.DateRange",
							"optional": false,
							"description": "the selectedDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the selectedDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the selectedDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a selectedDate into the aggregation <code>selectedDates</code>."
				},
				{
					"name": "insertSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSpecialDate",
							"type": "sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "the specialDate to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"
						}
					],
					"description": "Inserts a specialDate into the aggregation <code>specialDates</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllSelectedDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>selectedDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSpecialDates",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>specialDates</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeSelectedDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "The removed selectedDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSelectedDate",
							"type": "int|string|sap.ui.unified.DateRange",
							"optional": false,
							"description": "The selectedDateto remove or its index or id"
						}
					],
					"description": "Removes a selectedDate from the aggregation <code>selectedDates</code>."
				},
				{
					"name": "removeSpecialDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange",
						"description": "The removed specialDate or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSpecialDate",
							"type": "int|string|sap.ui.unified.DateTypeRange",
							"optional": false,
							"description": "The specialDateto remove or its index or id"
						}
					],
					"description": "Removes a specialDate from the aggregation <code>specialDates</code>."
				},
				{
					"name": "setIntervalMinutes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iIntervalMinutes",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>intervalMinutes</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalMinutes</code>.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nA interval longer then 720 minutes is not allowed. Please use the <code>CalendarDateInterval</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>60</code>."
				},
				{
					"name": "setIntervalSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIntervalSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>intervalSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>intervalSelection</code>.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>items</code>"
						}
					],
					"description": "Sets a new value for property <code>items</code>.\n\nNumber of time items displayed. Default is 12.\n\n<b>Note:</b> On phones, the maximum number of items displayed in the row is always 6.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
				},
				{
					"name": "setLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.5",
					"parameters": [
						{
							"name": "oLegend",
							"type": "sap.ui.unified.CalendarLegend",
							"optional": false,
							"description": "Id of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>legend</code>."
				},
				{
					"name": "setMaxDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oMaxDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>maxDate</code>"
						}
					],
					"description": "Sets a new value for property <code>maxDate</code>.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>,\nthe <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMinDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oMinDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>minDate</code>"
						}
					],
					"description": "Sets a new value for property <code>minDate</code>.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>,\nthe <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPickerPopup",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bPickerPopup",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>pickerPopup</code>"
						}
					],
					"description": "Sets a new value for property <code>pickerPopup</code>.\n\nIf set, the day-, month- and yearPicker opens on a popup\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSingleSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSingleSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>singleSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>singleSelection</code>.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date of the Interval as JavaScript Date object.\nThe time interval corresponding to this Date and <code>items</code> and <code>intervalMinutes</code>\nwill be the first time in the displayed row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarTimeInterval",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of the <code>CalendarTimeInterval</code>. The width of the single months depends on this width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.ContentSwitcher",
			"basename": "ContentSwitcher",
			"resource": "sap/ui/unified/ContentSwitcher.js",
			"module": "sap/ui/unified/ContentSwitcher",
			"static": true,
			"visibility": "public",
			"since": "1.16.0",
			"extends": "sap.ui.core.Control",
			"description": "Switches between two control areas and animates it via CSS transitions",
			"experimental": {
				"since": "1.16.0",
				"text": "API is not yet finished and might change completely"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "animation",
						"type": "string",
						"defaultValue": "None",
						"group": "Appearance",
						"visibility": "public",
						"description": "Set the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class.\nSee the types sap.ui.unified.ContentSwitcherAnimation for default implementations.",
						"methods": [
							"getAnimation",
							"setAnimation"
						]
					},
					{
						"name": "activeContent",
						"type": "int",
						"defaultValue": 1,
						"group": "Behavior",
						"visibility": "public",
						"description": "The number of the currently active content (1 or 2).",
						"methods": [
							"getActiveContent",
							"setActiveContent"
						]
					}
				],
				"aggregations": [
					{
						"name": "content1",
						"singularName": "content1",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The controls that should be shown in the first content",
						"methods": [
							"getContent1",
							"destroyContent1",
							"insertContent1",
							"addContent1",
							"removeContent1",
							"indexOfContent1",
							"removeAllContent1"
						]
					},
					{
						"name": "content2",
						"singularName": "content2",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The controls that should be shown in the second content",
						"methods": [
							"getContent2",
							"destroyContent2",
							"insertContent2",
							"addContent2",
							"removeContent2",
							"indexOfContent2",
							"removeAllContent2"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ContentSwitcher.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent1",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content1 to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content1 to the aggregation <code>content1</code>."
				},
				{
					"name": "addContent2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent2",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content2 to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content2 to the aggregation <code>content2</code>."
				},
				{
					"name": "destroyContent1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content1 in the aggregation <code>content1</code>."
				},
				{
					"name": "destroyContent2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content2 in the aggregation <code>content2</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.ContentSwitcher with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getActiveContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>activeContent</code>"
					},
					"description": "Gets current value of property <code>activeContent</code>.\n\nThe number of the currently active content (1 or 2).\n\nDefault value is <code>1</code>."
				},
				{
					"name": "getAnimation",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>animation</code>"
					},
					"description": "Gets current value of property <code>animation</code>.\n\nSet the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class.\nSee the types sap.ui.unified.ContentSwitcherAnimation for default implementations.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getContent1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content1</code>.\n\nThe controls that should be shown in the first content"
				},
				{
					"name": "getContent2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content2</code>.\n\nThe controls that should be shown in the second content"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.ContentSwitcher."
				},
				{
					"name": "indexOfContent1",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent1",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content1 whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content1</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfContent2",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent2",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content2 whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content2</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent1",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content1 to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content1 should be inserted at; for\n             a negative value of <code>iIndex</code>, the content1 is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content1 is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content1 into the aggregation <code>content1</code>."
				},
				{
					"name": "insertContent2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent2",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content2 to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content2 should be inserted at; for\n             a negative value of <code>iIndex</code>, the content2 is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content2 is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content2 into the aggregation <code>content2</code>."
				},
				{
					"name": "removeAllContent1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content1</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllContent2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content2</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content1 or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent1",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The content1to remove or its index or id"
						}
					],
					"description": "Removes a content1 from the aggregation <code>content1</code>."
				},
				{
					"name": "removeContent2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content2 or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent2",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The content2to remove or its index or id"
						}
					],
					"description": "Removes a content2 from the aggregation <code>content2</code>."
				},
				{
					"name": "setActiveContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iActiveContent",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>activeContent</code>"
						}
					],
					"description": "Sets a new value for property <code>activeContent</code>.\n\nThe number of the currently active content (1 or 2).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "setAnimation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ContentSwitcher",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAnimation",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>animation</code>"
						}
					],
					"description": "Sets a new value for property <code>animation</code>.\n\nSet the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class.\nSee the types sap.ui.unified.ContentSwitcherAnimation for default implementations.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "switchContent",
					"visibility": "public",
					"description": "Changes the currently active content to the other one. If content 1 is active, content 2 will\nbe activated and the other way around."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.unified.ContentSwitcherAnimation",
			"basename": "ContentSwitcherAnimation",
			"resource": "sap/ui/unified/library.js",
			"module": "sap/ui/unified/library",
			"static": true,
			"visibility": "public",
			"since": "1.16.0",
			"description": "Predefined animations for the ContentSwitcher",
			"experimental": {
				"since": "1.16.0",
				"text": "API is not yet finished and might change completely"
			},
			"properties": [
				{
					"name": "Fade",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Content is faded (opacity change)."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No animation. Content is switched instantly."
				},
				{
					"name": "Rotate",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The new content rotates in. (Just like one of those old newspaper-animations.)"
				},
				{
					"name": "SlideOver",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The new content slides in from the left while the old content slides out to the left at the same time."
				},
				{
					"name": "SlideRight",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The new slides in from the left (to the right)."
				},
				{
					"name": "ZoomIn",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The new content is \"zoomed in\" from the center and grows to fill the full content area."
				},
				{
					"name": "ZoomOut",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The old content is \"zoomed out\", i.e. shrinks to a point at the center of the content area."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.Currency",
			"basename": "Currency",
			"resource": "sap/ui/unified/Currency.js",
			"module": "sap/ui/unified/Currency",
			"static": true,
			"visibility": "public",
			"since": "1.21.1",
			"extends": "sap.ui.core.Control",
			"description": "A text view which displays currency values and aligns them at the separator",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "float",
						"defaultValue": 0,
						"group": "Appearance",
						"visibility": "public",
						"description": "The currency value",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "currency",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the displayed currency code (ISO 4217).\n<b>Note: </b>If a * character is set instead of currency code,\nonly the character itself will be rendered, ignoring the <code>value</code> property.",
						"methods": [
							"getCurrency",
							"setCurrency"
						]
					},
					{
						"name": "maxPrecision",
						"type": "int",
						"defaultValue": 3,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the space that is available for the precision of the various currencies.",
						"methods": [
							"getMaxPrecision",
							"setMaxPrecision"
						]
					},
					{
						"name": "useSymbol",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Show the currency symbol instead of the ISO currency code",
						"methods": [
							"getUseSymbol",
							"setUseSymbol"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Currency.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.Currency with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getCurrency",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>currency</code>"
					},
					"description": "Gets current value of property <code>currency</code>.\n\nDetermines the displayed currency code (ISO 4217).\n<b>Note: </b>If a * character is set instead of currency code,\nonly the character itself will be rendered, ignoring the <code>value</code> property."
				},
				{
					"name": "getCurrencySymbol",
					"visibility": "public",
					"returnValue": {
						"type": "string"
					},
					"description": "Get symbol of the currency, if available"
				},
				{
					"name": "getFormattedValue",
					"visibility": "public",
					"returnValue": {
						"type": "string"
					},
					"description": "The formatted value"
				},
				{
					"name": "getMaxPrecision",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxPrecision</code>"
					},
					"description": "Gets current value of property <code>maxPrecision</code>.\n\nDefines the space that is available for the precision of the various currencies.\n\nDefault value is <code>3</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.Currency."
				},
				{
					"name": "getUseSymbol",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useSymbol</code>"
					},
					"description": "Gets current value of property <code>useSymbol</code>.\n\nShow the currency symbol instead of the ISO currency code\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nThe currency value\n\nDefault value is <code>0</code>."
				},
				{
					"name": "init",
					"visibility": "public",
					"description": "Initializes the control."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.DateRange",
			"basename": "DateRange",
			"resource": "sap/ui/unified/DateRange.js",
			"module": "sap/ui/unified/DateRange",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.core.Element",
			"description": "Date range for use in DatePicker",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "startDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Start date for a date range. This must be a JavaScript date object.",
						"methods": [
							"getStartDate",
							"setStartDate"
						]
					},
					{
						"name": "endDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Start date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object.",
						"methods": [
							"getEndDate",
							"setEndDate"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DateRange.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.DateRange with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getEndDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>endDate</code>"
					},
					"description": "Gets current value of property <code>endDate</code>.\n\nStart date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.DateRange."
				},
				{
					"name": "getStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>startDate</code>"
					},
					"description": "Gets current value of property <code>startDate</code>.\n\nStart date for a date range. This must be a JavaScript date object."
				},
				{
					"name": "setEndDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oEndDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>endDate</code>"
						}
					],
					"description": "Sets a new value for property <code>endDate</code>.\n\nStart date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setStartDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateRange",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStartDate",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>startDate</code>"
						}
					],
					"description": "Sets a new value for property <code>startDate</code>.\n\nStart date for a date range. This must be a JavaScript date object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.DateTypeRange",
			"basename": "DateTypeRange",
			"resource": "sap/ui/unified/DateTypeRange.js",
			"module": "sap/ui/unified/DateTypeRange",
			"static": true,
			"visibility": "public",
			"since": "1.24.0",
			"extends": "sap.ui.unified.DateRange",
			"description": "Date range with calendar day type information. Used to visualize special days in the Calendar.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "type",
						"type": "sap.ui.unified.CalendarDayType",
						"defaultValue": "Type01",
						"group": "Appearance",
						"visibility": "public",
						"description": "Type of the date range.",
						"methods": [
							"getType",
							"setType"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DateTypeRange.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.DateTypeRange with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.DateRange.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.DateTypeRange."
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.CalendarDayType",
						"description": "Value of property <code>type</code>"
					},
					"description": "Gets current value of property <code>type</code>.\n\nType of the date range.\n\nDefault value is <code>Type01</code>."
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.DateTypeRange",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "sap.ui.unified.CalendarDayType",
							"optional": false,
							"description": "New value for property <code>type</code>"
						}
					],
					"description": "Sets a new value for property <code>type</code>.\n\nType of the date range.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Type01</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.FileUploader",
			"basename": "FileUploader",
			"resource": "sap/ui/unified/FileUploader.js",
			"module": "sap/ui/unified/FileUploader",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "string",
						"defaultValue": "",
						"group": "Data",
						"visibility": "public",
						"description": "Value of the path for file upload.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Disabled controls have different colors, depending on customer settings.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "uploadUrl",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Data",
						"visibility": "public",
						"description": "Used when URL address is on a remote server.",
						"methods": [
							"getUploadUrl",
							"setUploadUrl"
						]
					},
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Unique control name for identification on the server side after sending data to the server.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the displayed control width.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "uploadOnChange",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.",
						"methods": [
							"getUploadOnChange",
							"setUploadOnChange"
						]
					},
					{
						"name": "additionalData",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Additional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data.",
						"methods": [
							"getAdditionalData",
							"setAdditionalData"
						]
					},
					{
						"name": "sameFilenameAllowed",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths.",
						"methods": [
							"getSameFilenameAllowed",
							"setSameFilenameAllowed"
						]
					},
					{
						"name": "buttonText",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The Button text can be overwritten using this property.",
						"methods": [
							"getButtonText",
							"setButtonText"
						]
					},
					{
						"name": "fileType",
						"type": "string[]",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"].",
						"methods": [
							"getFileType",
							"setFileType"
						]
					},
					{
						"name": "multiple",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Allows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9.",
						"methods": [
							"getMultiple",
							"setMultiple"
						]
					},
					{
						"name": "maximumFileSize",
						"type": "float",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "A file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9.",
						"methods": [
							"getMaximumFileSize",
							"setMaximumFileSize"
						]
					},
					{
						"name": "mimeType",
						"type": "string[]",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"].",
						"methods": [
							"getMimeType",
							"setMimeType"
						]
					},
					{
						"name": "sendXHR",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9.",
						"methods": [
							"getSendXHR",
							"setSendXHR"
						]
					},
					{
						"name": "placeholder",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Placeholder for the text field.",
						"methods": [
							"getPlaceholder",
							"setPlaceholder"
						]
					},
					{
						"name": "style",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Style of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed.",
						"methods": [
							"getStyle",
							"setStyle"
						]
					},
					{
						"name": "buttonOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField.",
						"methods": [
							"getButtonOnly",
							"setButtonOnly"
						]
					},
					{
						"name": "useMultipart",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "If set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.",
						"methods": [
							"getUseMultipart",
							"setUseMultipart"
						]
					},
					{
						"name": "maximumFilenameLength",
						"type": "int",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"since": "1.24.0",
						"description": "The maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired.",
						"methods": [
							"getMaximumFilenameLength",
							"setMaximumFilenameLength"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Data",
						"visibility": "public",
						"since": "1.24.0",
						"description": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success, None.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Icon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "iconHovered",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.",
						"methods": [
							"getIconHovered",
							"setIconHovered"
						]
					},
					{
						"name": "iconSelected",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.26.0",
						"description": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.",
						"methods": [
							"getIconSelected",
							"setIconSelected"
						]
					},
					{
						"name": "iconFirst",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.26.0",
						"description": "If set to true (default), the display sequence is 1. icon 2. control text.",
						"methods": [
							"getIconFirst",
							"setIconFirst"
						]
					},
					{
						"name": "iconOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.26.0",
						"description": "If set to true, the button is displayed without any text.",
						"methods": [
							"getIconOnly",
							"setIconOnly"
						]
					}
				],
				"aggregations": [
					{
						"name": "parameters",
						"singularName": "parameter",
						"type": "sap.ui.unified.FileUploaderParameter",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.12.2",
						"description": "The parameters for the FileUploader which are rendered as a hidden inputfield.",
						"methods": [
							"getParameters",
							"destroyParameters",
							"insertParameter",
							"addParameter",
							"removeParameter",
							"indexOfParameter",
							"removeAllParameters"
						]
					},
					{
						"name": "headerParameters",
						"singularName": "headerParameter",
						"type": "sap.ui.unified.FileUploaderParameter",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The header parameters for the FileUploader which are only submitted with XHR requests. Header parameters are not supported by Internet Explorer 9.",
						"methods": [
							"getHeaderParameters",
							"destroyHeaderParameters",
							"insertHeaderParameter",
							"addHeaderParameter",
							"removeHeaderParameter",
							"indexOfHeaderParameter",
							"removeAllHeaderParameters"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Event is fired when the value of the file path has been changed.",
						"parameters": {
							"newValue": {
								"name": "newValue",
								"type": "string",
								"description": "New file path value."
							},
							"files": {
								"name": "files",
								"type": "object[]",
								"description": "Files."
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "uploadComplete",
						"visibility": "public",
						"description": "Event is fired as soon as the upload request is completed (either successful or unsuccessful). To see if the upload request was successful, check the 'state' parameter for a value 2xx.\nThe uploads actual progress can be retrieved via the 'uploadProgress' Event.\nHowever this covers only the client side of the Upload process and does not give any success status from the server.",
						"parameters": {
							"fileName": {
								"name": "fileName",
								"type": "string",
								"description": "The name of a file to be uploaded."
							},
							"response": {
								"name": "response",
								"type": "string",
								"description": "Response message which comes from the server. On the server side this response has to be put within the &quot;body&quot; tags of the response document of the iFrame.\nIt can consist of a return code and an optional message. This does not work in cross-domain scenarios."
							},
							"readyStateXHR": {
								"name": "readyStateXHR",
								"type": "string",
								"description": "ReadyState of the XHR request. Required for receiving a readyState is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9."
							},
							"status": {
								"name": "status",
								"type": "string",
								"description": "Status of the XHR request. Required for receiving a status is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9."
							},
							"responseRaw": {
								"name": "responseRaw",
								"type": "string",
								"description": "Http-Response which comes from the server. Required for receiving \"responseRaw\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9."
							},
							"headers": {
								"name": "headers",
								"type": "object",
								"description": "Http-Response-Headers which come from the server. provided as a JSON-map, i.e. each header-field is reflected by a property in the header-object, with the property value reflecting the header-field's content.\nRequired for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
							},
							"requestHeaders": {
								"name": "requestHeaders",
								"type": "object[]",
								"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9."
							}
						},
						"methods": [
							"attachUploadComplete",
							"detachUploadComplete",
							"fireUploadComplete"
						]
					},
					{
						"name": "typeMissmatch",
						"visibility": "public",
						"description": "Event is fired when the type of a file does not match the mimeType or fileType property.",
						"parameters": {
							"fileName": {
								"name": "fileName",
								"type": "string",
								"description": "The name of a file to be uploaded."
							},
							"fileType": {
								"name": "fileType",
								"type": "string",
								"description": "The file ending of a file to be uploaded."
							},
							"mimeType": {
								"name": "mimeType",
								"type": "string",
								"description": "The MIME type of a file to be uploaded."
							}
						},
						"methods": [
							"attachTypeMissmatch",
							"detachTypeMissmatch",
							"fireTypeMissmatch"
						]
					},
					{
						"name": "fileSizeExceed",
						"visibility": "public",
						"description": "Event is fired when the size of a file is above the maximumFileSize property.\nThis event is not supported by Internet Explorer 9 (same restriction as for the property maximumFileSize).",
						"parameters": {
							"fileName": {
								"name": "fileName",
								"type": "string",
								"description": "The name of a file to be uploaded."
							},
							"fileSize": {
								"name": "fileSize",
								"type": "string",
								"description": "The size in MB of a file to be uploaded."
							}
						},
						"methods": [
							"attachFileSizeExceed",
							"detachFileSizeExceed",
							"fireFileSizeExceed"
						]
					},
					{
						"name": "fileAllowed",
						"visibility": "public",
						"description": "Event is fired when the file is allowed for upload on client side.",
						"methods": [
							"attachFileAllowed",
							"detachFileAllowed",
							"fireFileAllowed"
						]
					},
					{
						"name": "uploadProgress",
						"visibility": "public",
						"since": "1.24.0",
						"description": "Event is fired after the upload has started and before the upload is completed and contains progress information related to the running upload.\nDepending on file size, band width and used browser the event is fired once or multiple times.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9.",
						"parameters": {
							"lengthComputable": {
								"name": "lengthComputable",
								"type": "boolean",
								"description": "Indicates whether or not the relative upload progress can be calculated out of loaded and total."
							},
							"loaded": {
								"name": "loaded",
								"type": "float",
								"description": "The number of bytes of the file which have been uploaded by to the time the event was fired."
							},
							"total": {
								"name": "total",
								"type": "float",
								"description": "The total size of the file to be uploaded in byte."
							},
							"fileName": {
								"name": "fileName",
								"type": "string",
								"description": "The name of a file to be uploaded."
							},
							"requestHeaders": {
								"name": "requestHeaders",
								"type": "object[]",
								"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
							}
						},
						"methods": [
							"attachUploadProgress",
							"detachUploadProgress",
							"fireUploadProgress"
						]
					},
					{
						"name": "uploadAborted",
						"visibility": "public",
						"since": "1.24.0",
						"description": "Event is fired after the current upload has been aborted.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9.",
						"parameters": {
							"fileName": {
								"name": "fileName",
								"type": "string",
								"description": "The name of a file to be uploaded."
							},
							"requestHeaders": {
								"name": "requestHeaders",
								"type": "object[]",
								"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
							}
						},
						"methods": [
							"attachUploadAborted",
							"detachUploadAborted",
							"fireUploadAborted"
						]
					},
					{
						"name": "filenameLengthExceed",
						"visibility": "public",
						"since": "1.24.0",
						"description": "Event is fired, if the filename of a chosen file is longer than the value specified with the maximumFilenameLength property.",
						"parameters": {
							"fileName": {
								"name": "fileName",
								"type": "string",
								"description": "The filename, which is longer than specified by the value of the property maximumFilenameLength."
							}
						},
						"methods": [
							"attachFilenameLengthExceed",
							"detachFilenameLengthExceed",
							"fireFilenameLengthExceed"
						]
					},
					{
						"name": "uploadStart",
						"visibility": "public",
						"since": "1.30.0",
						"description": "Event is fired before an upload is started.",
						"parameters": {
							"fileName": {
								"name": "fileName",
								"type": "string",
								"description": "The name of a file to be uploaded."
							},
							"requestHeaders": {
								"name": "requestHeaders",
								"type": "object[]",
								"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
							}
						},
						"methods": [
							"attachUploadStart",
							"detachUploadStart",
							"fireUploadStart"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FileUploader.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"newValue": {
											"name": "newValue",
											"type": "string",
											"optional": false,
											"description": "New file path value."
										},
										"files": {
											"name": "files",
											"type": "object[]",
											"optional": false,
											"description": "Files."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the value of the file path has been changed."
				},
				{
					"name": "fileAllowed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the file is allowed for upload on client side."
				},
				{
					"name": "filenameLengthExceed",
					"visibility": "public",
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fileName": {
											"name": "fileName",
											"type": "string",
											"optional": false,
											"description": "The filename, which is longer than specified by the value of the property maximumFilenameLength."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired, if the filename of a chosen file is longer than the value specified with the maximumFilenameLength property."
				},
				{
					"name": "fileSizeExceed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fileName": {
											"name": "fileName",
											"type": "string",
											"optional": false,
											"description": "The name of a file to be uploaded."
										},
										"fileSize": {
											"name": "fileSize",
											"type": "string",
											"optional": false,
											"description": "The size in MB of a file to be uploaded."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the size of a file is above the maximumFileSize property.\nThis event is not supported by Internet Explorer 9 (same restriction as for the property maximumFileSize)."
				},
				{
					"name": "typeMissmatch",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fileName": {
											"name": "fileName",
											"type": "string",
											"optional": false,
											"description": "The name of a file to be uploaded."
										},
										"fileType": {
											"name": "fileType",
											"type": "string",
											"optional": false,
											"description": "The file ending of a file to be uploaded."
										},
										"mimeType": {
											"name": "mimeType",
											"type": "string",
											"optional": false,
											"description": "The MIME type of a file to be uploaded."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the type of a file does not match the mimeType or fileType property."
				},
				{
					"name": "uploadAborted",
					"visibility": "public",
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fileName": {
											"name": "fileName",
											"type": "string",
											"optional": false,
											"description": "The name of a file to be uploaded."
										},
										"requestHeaders": {
											"name": "requestHeaders",
											"type": "object[]",
											"optional": false,
											"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired after the current upload has been aborted.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
				},
				{
					"name": "uploadComplete",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fileName": {
											"name": "fileName",
											"type": "string",
											"optional": false,
											"description": "The name of a file to be uploaded."
										},
										"response": {
											"name": "response",
											"type": "string",
											"optional": false,
											"description": "Response message which comes from the server. On the server side this response has to be put within the &quot;body&quot; tags of the response document of the iFrame.\nIt can consist of a return code and an optional message. This does not work in cross-domain scenarios."
										},
										"readyStateXHR": {
											"name": "readyStateXHR",
											"type": "string",
											"optional": false,
											"description": "ReadyState of the XHR request. Required for receiving a readyState is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9."
										},
										"status": {
											"name": "status",
											"type": "string",
											"optional": false,
											"description": "Status of the XHR request. Required for receiving a status is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9."
										},
										"responseRaw": {
											"name": "responseRaw",
											"type": "string",
											"optional": false,
											"description": "Http-Response which comes from the server. Required for receiving \"responseRaw\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9."
										},
										"headers": {
											"name": "headers",
											"type": "object",
											"optional": false,
											"description": "Http-Response-Headers which come from the server. provided as a JSON-map, i.e. each header-field is reflected by a property in the header-object, with the property value reflecting the header-field's content.\nRequired for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
										},
										"requestHeaders": {
											"name": "requestHeaders",
											"type": "object[]",
											"optional": false,
											"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired as soon as the upload request is completed (either successful or unsuccessful). To see if the upload request was successful, check the 'state' parameter for a value 2xx.\nThe uploads actual progress can be retrieved via the 'uploadProgress' Event.\nHowever this covers only the client side of the Upload process and does not give any success status from the server."
				},
				{
					"name": "uploadProgress",
					"visibility": "public",
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"lengthComputable": {
											"name": "lengthComputable",
											"type": "boolean",
											"optional": false,
											"description": "Indicates whether or not the relative upload progress can be calculated out of loaded and total."
										},
										"loaded": {
											"name": "loaded",
											"type": "float",
											"optional": false,
											"description": "The number of bytes of the file which have been uploaded by to the time the event was fired."
										},
										"total": {
											"name": "total",
											"type": "float",
											"optional": false,
											"description": "The total size of the file to be uploaded in byte."
										},
										"fileName": {
											"name": "fileName",
											"type": "string",
											"optional": false,
											"description": "The name of a file to be uploaded."
										},
										"requestHeaders": {
											"name": "requestHeaders",
											"type": "object[]",
											"optional": false,
											"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired after the upload has started and before the upload is completed and contains progress information related to the running upload.\nDepending on file size, band width and used browser the event is fired once or multiple times.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
				},
				{
					"name": "uploadStart",
					"visibility": "public",
					"since": "1.30.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fileName": {
											"name": "fileName",
											"type": "string",
											"optional": false,
											"description": "The name of a file to be uploaded."
										},
										"requestHeaders": {
											"name": "requestHeaders",
											"type": "object[]",
											"optional": false,
											"description": "Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired before an upload is started."
				}
			],
			"methods": [
				{
					"name": "abort",
					"visibility": "public",
					"since": "1.24.0",
					"description": "Aborts the currently running upload."
				},
				{
					"name": "addHeaderParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeaderParameter",
							"type": "sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "the headerParameter to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some headerParameter to the aggregation <code>headerParameters</code>."
				},
				{
					"name": "addParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.12.2",
					"parameters": [
						{
							"name": "oParameter",
							"type": "sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "the parameter to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some parameter to the aggregation <code>parameters</code>."
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the value of the file path has been changed."
				},
				{
					"name": "attachFileAllowed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>fileAllowed</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the file is allowed for upload on client side."
				},
				{
					"name": "attachFilenameLengthExceed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>filenameLengthExceed</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired, if the filename of a chosen file is longer than the value specified with the maximumFilenameLength property."
				},
				{
					"name": "attachFileSizeExceed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>fileSizeExceed</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the size of a file is above the maximumFileSize property.\nThis event is not supported by Internet Explorer 9 (same restriction as for the property maximumFileSize)."
				},
				{
					"name": "attachTypeMissmatch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>typeMissmatch</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the type of a file does not match the mimeType or fileType property."
				},
				{
					"name": "attachUploadAborted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>uploadAborted</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired after the current upload has been aborted.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
				},
				{
					"name": "attachUploadComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>uploadComplete</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired as soon as the upload request is completed (either successful or unsuccessful). To see if the upload request was successful, check the 'state' parameter for a value 2xx.\nThe uploads actual progress can be retrieved via the 'uploadProgress' Event.\nHowever this covers only the client side of the Upload process and does not give any success status from the server."
				},
				{
					"name": "attachUploadProgress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>uploadProgress</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired after the upload has started and before the upload is completed and contains progress information related to the running upload.\nDepending on file size, band width and used browser the event is fired once or multiple times.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
				},
				{
					"name": "attachUploadStart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>uploadStart</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired before an upload is started."
				},
				{
					"name": "clear",
					"visibility": "public",
					"since": "1.25.0",
					"description": "Clears the content of the FileUploader. The attached additional data however is retained."
				},
				{
					"name": "destroyHeaderParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the headerParameters in the aggregation <code>headerParameters</code>."
				},
				{
					"name": "destroyParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.12.2",
					"description": "Destroys all the parameters in the aggregation <code>parameters</code>."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFileAllowed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>fileAllowed</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFilenameLengthExceed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>filenameLengthExceed</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFileSizeExceed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>fileSizeExceed</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachTypeMissmatch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>typeMissmatch</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachUploadAborted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>uploadAborted</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachUploadComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>uploadComplete</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachUploadProgress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>uploadProgress</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachUploadStart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>uploadStart</code> event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.FileUploader with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue</code> of type <code>string</code>New file path value.</li>\n<li><code>files</code> of type <code>object[]</code>Files.</li>\n</ul>"
				},
				{
					"name": "fireFileAllowed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>fileAllowed</code> to attached listeners."
				},
				{
					"name": "fireFilenameLengthExceed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>filenameLengthExceed</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName</code> of type <code>string</code>The filename, which is longer than specified by the value of the property maximumFilenameLength.</li>\n</ul>"
				},
				{
					"name": "fireFileSizeExceed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>fileSizeExceed</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName</code> of type <code>string</code>The name of a file to be uploaded.</li>\n<li><code>fileSize</code> of type <code>string</code>The size in MB of a file to be uploaded.</li>\n</ul>"
				},
				{
					"name": "fireTypeMissmatch",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>typeMissmatch</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName</code> of type <code>string</code>The name of a file to be uploaded.</li>\n<li><code>fileType</code> of type <code>string</code>The file ending of a file to be uploaded.</li>\n<li><code>mimeType</code> of type <code>string</code>The MIME type of a file to be uploaded.</li>\n</ul>"
				},
				{
					"name": "fireUploadAborted",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>uploadAborted</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName</code> of type <code>string</code>The name of a file to be uploaded.</li>\n<li><code>requestHeaders</code> of type <code>object[]</code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.</li>\n</ul>"
				},
				{
					"name": "fireUploadComplete",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>uploadComplete</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName</code> of type <code>string</code>The name of a file to be uploaded.</li>\n<li><code>response</code> of type <code>string</code>Response message which comes from the server. On the server side this response has to be put within the &quot;body&quot; tags of the response document of the iFrame.\nIt can consist of a return code and an optional message. This does not work in cross-domain scenarios.</li>\n<li><code>readyStateXHR</code> of type <code>string</code>ReadyState of the XHR request. Required for receiving a readyState is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.</li>\n<li><code>status</code> of type <code>string</code>Status of the XHR request. Required for receiving a status is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.</li>\n<li><code>responseRaw</code> of type <code>string</code>Http-Response which comes from the server. Required for receiving \"responseRaw\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9.</li>\n<li><code>headers</code> of type <code>object</code>Http-Response-Headers which come from the server. provided as a JSON-map, i.e. each header-field is reflected by a property in the header-object, with the property value reflecting the header-field's content.\nRequired for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.</li>\n<li><code>requestHeaders</code> of type <code>object[]</code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true. This property is not supported by Internet Explorer 9.</li>\n</ul>"
				},
				{
					"name": "fireUploadProgress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>uploadProgress</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>lengthComputable</code> of type <code>boolean</code>Indicates whether or not the relative upload progress can be calculated out of loaded and total.</li>\n<li><code>loaded</code> of type <code>float</code>The number of bytes of the file which have been uploaded by to the time the event was fired.</li>\n<li><code>total</code> of type <code>float</code>The total size of the file to be uploaded in byte.</li>\n<li><code>fileName</code> of type <code>string</code>The name of a file to be uploaded.</li>\n<li><code>requestHeaders</code> of type <code>object[]</code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.</li>\n</ul>"
				},
				{
					"name": "fireUploadStart",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>uploadStart</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName</code> of type <code>string</code>The name of a file to be uploaded.</li>\n<li><code>requestHeaders</code> of type <code>object[]</code>Http-Request-Headers. Required for receiving \"header\" is to set the property \"sendXHR\" to true.\nThis property is not supported by Internet Explorer 9.</li>\n</ul>"
				},
				{
					"name": "getAdditionalData",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>additionalData</code>"
					},
					"description": "Gets current value of property <code>additionalData</code>.\n\nAdditional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data."
				},
				{
					"name": "getButtonOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>buttonOnly</code>"
					},
					"description": "Gets current value of property <code>buttonOnly</code>.\n\nIf set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getButtonText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>buttonText</code>"
					},
					"description": "Gets current value of property <code>buttonText</code>.\n\nThe Button text can be overwritten using this property."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nDisabled controls have different colors, depending on customer settings.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getFileType",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>fileType</code>"
					},
					"description": "Gets current value of property <code>fileType</code>.\n\nThe chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"]."
				},
				{
					"name": "getHeaderParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter[]"
					},
					"description": "Gets content of aggregation <code>headerParameters</code>.\n\nThe header parameters for the FileUploader which are only submitted with XHR requests. Header parameters are not supported by Internet Explorer 9."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>icon</code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nDefault value is <code></code>."
				},
				{
					"name": "getIconFirst",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>iconFirst</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>iconFirst</code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconHovered</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>iconHovered</code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code></code>."
				},
				{
					"name": "getIconOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>iconOnly</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>iconOnly</code>.\n\nIf set to true, the button is displayed without any text.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconSelected</code>"
					},
					"since": "1.26.0",
					"description": "Gets current value of property <code>iconSelected</code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMaximumFilenameLength",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maximumFilenameLength</code>"
					},
					"since": "1.24.0",
					"description": "Gets current value of property <code>maximumFilenameLength</code>.\n\nThe maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired."
				},
				{
					"name": "getMaximumFileSize",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>maximumFileSize</code>"
					},
					"description": "Gets current value of property <code>maximumFileSize</code>.\n\nA file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.FileUploader."
				},
				{
					"name": "getMimeType",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>mimeType</code>"
					},
					"description": "Gets current value of property <code>mimeType</code>.\n\nThe chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"]."
				},
				{
					"name": "getMultiple",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>multiple</code>"
					},
					"description": "Gets current value of property <code>multiple</code>.\n\nAllows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nUnique control name for identification on the server side after sending data to the server."
				},
				{
					"name": "getParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter[]"
					},
					"since": "1.12.2",
					"description": "Gets content of aggregation <code>parameters</code>.\n\nThe parameters for the FileUploader which are rendered as a hidden inputfield."
				},
				{
					"name": "getPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>placeholder</code>"
					},
					"description": "Gets current value of property <code>placeholder</code>.\n\nPlaceholder for the text field."
				},
				{
					"name": "getSameFilenameAllowed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>sameFilenameAllowed</code>"
					},
					"description": "Gets current value of property <code>sameFilenameAllowed</code>.\n\nIf the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSendXHR",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>sendXHR</code>"
					},
					"description": "Gets current value of property <code>sendXHR</code>.\n\nIf set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getStyle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>style</code>"
					},
					"description": "Gets current value of property <code>style</code>.\n\nStyle of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed."
				},
				{
					"name": "getUploadOnChange",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>uploadOnChange</code>"
					},
					"description": "Gets current value of property <code>uploadOnChange</code>.\n\nIf set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getUploadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>uploadUrl</code>"
					},
					"description": "Gets current value of property <code>uploadUrl</code>.\n\nUsed when URL address is on a remote server.\n\nDefault value is <code></code>."
				},
				{
					"name": "getUseMultipart",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useMultipart</code>"
					},
					"description": "Gets current value of property <code>useMultipart</code>.\n\nIf set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nValue of the path for file upload.\n\nDefault value is <code></code>."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"since": "1.24.0",
					"description": "Gets current value of property <code>valueState</code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success, None.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nSpecifies the displayed control width.\n\nDefault value is <code></code>."
				},
				{
					"name": "indexOfHeaderParameter",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oHeaderParameter",
							"type": "sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "The headerParameter whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.FileUploaderParameter</code> in the aggregation <code>headerParameters</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfParameter",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.12.2",
					"parameters": [
						{
							"name": "oParameter",
							"type": "sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "The parameter whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.FileUploaderParameter</code> in the aggregation <code>parameters</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertHeaderParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeaderParameter",
							"type": "sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "the headerParameter to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the headerParameter should be inserted at; for\n             a negative value of <code>iIndex</code>, the headerParameter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headerParameter is inserted at\n             the last position"
						}
					],
					"description": "Inserts a headerParameter into the aggregation <code>headerParameters</code>."
				},
				{
					"name": "insertParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.12.2",
					"parameters": [
						{
							"name": "oParameter",
							"type": "sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "the parameter to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the parameter should be inserted at; for\n             a negative value of <code>iIndex</code>, the parameter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the parameter is inserted at\n             the last position"
						}
					],
					"description": "Inserts a parameter into the aggregation <code>parameters</code>."
				},
				{
					"name": "removeAllHeaderParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>headerParameters</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.12.2",
					"description": "Removes all the controls from the aggregation <code>parameters</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeHeaderParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter",
						"description": "The removed headerParameter or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vHeaderParameter",
							"type": "int|string|sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "The headerParameterto remove or its index or id"
						}
					],
					"description": "Removes a headerParameter from the aggregation <code>headerParameters</code>."
				},
				{
					"name": "removeParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter",
						"description": "The removed parameter or <code>null</code>"
					},
					"since": "1.12.2",
					"parameters": [
						{
							"name": "vParameter",
							"type": "int|string|sap.ui.unified.FileUploaderParameter",
							"optional": false,
							"description": "The parameterto remove or its index or id"
						}
					],
					"description": "Removes a parameter from the aggregation <code>parameters</code>."
				},
				{
					"name": "setAdditionalData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAdditionalData",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>additionalData</code>"
						}
					],
					"description": "Sets a new value for property <code>additionalData</code>.\n\nAdditional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setButtonOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bButtonOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>buttonOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>buttonOnly</code>.\n\nIf set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setButtonText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sButtonText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>buttonText</code>"
						}
					],
					"description": "Sets a new value for property <code>buttonText</code>.\n\nThe Button text can be overwritten using this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nDisabled controls have different colors, depending on customer settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setFileType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFileType",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>fileType</code>"
						}
					],
					"description": "Sets a new value for property <code>fileType</code>.\n\nThe chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"].\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setIconFirst",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bIconFirst",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>iconFirst</code>"
						}
					],
					"description": "Sets a new value for property <code>iconFirst</code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sIconHovered",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconHovered</code>"
						}
					],
					"description": "Sets a new value for property <code>iconHovered</code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setIconOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "bIconOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>iconOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>iconOnly</code>.\n\nIf set to true, the button is displayed without any text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.0",
					"parameters": [
						{
							"name": "sIconSelected",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconSelected</code>"
						}
					],
					"description": "Sets a new value for property <code>iconSelected</code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setMaximumFilenameLength",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "iMaximumFilenameLength",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maximumFilenameLength</code>"
						}
					],
					"description": "Sets a new value for property <code>maximumFilenameLength</code>.\n\nThe maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMaximumFileSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMaximumFileSize",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>maximumFileSize</code>"
						}
					],
					"description": "Sets a new value for property <code>maximumFileSize</code>.\n\nA file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMimeType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMimeType",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>mimeType</code>"
						}
					],
					"description": "Sets a new value for property <code>mimeType</code>.\n\nThe chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"].\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMultiple",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bMultiple",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>multiple</code>"
						}
					],
					"description": "Sets a new value for property <code>multiple</code>.\n\nAllows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nUnique control name for identification on the server side after sending data to the server.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPlaceholder",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>placeholder</code>"
						}
					],
					"description": "Sets a new value for property <code>placeholder</code>.\n\nPlaceholder for the text field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSameFilenameAllowed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSameFilenameAllowed",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>sameFilenameAllowed</code>"
						}
					],
					"description": "Sets a new value for property <code>sameFilenameAllowed</code>.\n\nIf the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSendXHR",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSendXHR",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>sendXHR</code>"
						}
					],
					"description": "Sets a new value for property <code>sendXHR</code>.\n\nIf set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setStyle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>style</code>"
						}
					],
					"description": "Sets a new value for property <code>style</code>.\n\nStyle of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUploadOnChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUploadOnChange",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>uploadOnChange</code>"
						}
					],
					"description": "Sets a new value for property <code>uploadOnChange</code>.\n\nIf set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setUploadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUploadUrl",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>uploadUrl</code>"
						}
					],
					"description": "Sets a new value for property <code>uploadUrl</code>.\n\nUsed when URL address is on a remote server.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setUseMultipart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUseMultipart",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useMultipart</code>"
						}
					],
					"description": "Sets a new value for property <code>useMultipart</code>.\n\nIf set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nValue of the path for file upload.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.24.0",
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success, None.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nSpecifies the displayed control width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "upload",
					"visibility": "public",
					"description": "Starts the upload (as defined by uploadUrl)"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.FileUploaderParameter",
			"basename": "FileUploaderParameter",
			"resource": "sap/ui/unified/FileUploaderParameter.js",
			"module": "sap/ui/unified/FileUploaderParameter",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Represents a parameter for the FileUploader which is rendered as a hidden inputfield.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"since": "1.12.2",
						"description": "The name of the hidden inputfield.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "value",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"since": "1.12.2",
						"description": "The value of the hidden inputfield.",
						"methods": [
							"getValue",
							"setValue"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FileUploaderParameter.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.FileUploaderParameter with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.FileUploaderParameter."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"since": "1.12.2",
					"description": "Gets current value of property <code>name</code>.\n\nThe name of the hidden inputfield."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>value</code>"
					},
					"since": "1.12.2",
					"description": "Gets current value of property <code>value</code>.\n\nThe value of the hidden inputfield."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.12.2",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nThe name of the hidden inputfield.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.FileUploaderParameter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.12.2",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nThe value of the hidden inputfield.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.Menu",
			"basename": "Menu",
			"resource": "sap/ui/unified/Menu.js",
			"module": "sap/ui/unified/Menu",
			"static": true,
			"visibility": "public",
			"since": "1.21.0",
			"extends": "sap.ui.core.Control",
			"description": "A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "When a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "ariaDescription",
						"type": "string",
						"defaultValue": null,
						"group": "Accessibility",
						"visibility": "public",
						"description": "Accessible label / description of the menu for assistive technologies like screenreaders.",
						"deprecated": {
							"since": "1.27.0",
							"text": "Please use association <code>ariaLabelledBy</code> instead."
						},
						"methods": [
							"getAriaDescription",
							"setAriaDescription"
						]
					},
					{
						"name": "maxVisibleItems",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "The maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached.",
						"methods": [
							"getMaxVisibleItems",
							"setMaxVisibleItems"
						]
					},
					{
						"name": "pageSize",
						"type": "int",
						"defaultValue": 5,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.25.0",
						"description": "The keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home</i> / <i>End</i> keys for jumping\nto the first / last item, the <i>Page Up</i> / <i>Page Down</i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize</code> property.\nFor values smaller than 1, paging behaves in a similar way to when using the <i>Home</i> / <i>End</i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.",
						"methods": [
							"getPageSize",
							"setPageSize"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.unified.MenuItemBase",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The available actions to be displayed as items of the menu.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					}
				],
				"defaultAggregation": "items",
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.26.3",
						"description": "Reference to accessible labels (ids of existing DOM elements or controls) for assistive technologies like screenreaders.",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "itemSelect",
						"visibility": "public",
						"description": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\n<b>Note:</b> There is also a select event available for each single menu item. This event and the event of the menu items are redundant.",
						"parameters": {
							"item": {
								"name": "item",
								"type": "sap.ui.unified.MenuItemBase",
								"description": "The action (item) which was selected by the user."
							}
						},
						"methods": [
							"attachItemSelect",
							"detachItemSelect",
							"fireItemSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Menu control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "itemSelect",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"item": {
											"name": "item",
											"type": "sap.ui.unified.MenuItemBase",
											"optional": false,
											"description": "The action (item) which was selected by the user."
										}
									}
								}
							}
						}
					],
					"description": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\n<b>Note:</b> There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.26.3",
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.MenuItemBase",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "attachItemSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Menu</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>itemSelect</code> event of this <code>sap.ui.unified.Menu</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.Menu</code> itself.\n\nFired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\n<b>Note:</b> There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
				},
				{
					"name": "close",
					"visibility": "public",
					"description": "Closes the menu."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "detachItemSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>itemSelect</code> event of this <code>sap.ui.unified.Menu</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.Menu with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireItemSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>itemSelect</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item</code> of type <code>sap.ui.unified.MenuItemBase</code>The action (item) which was selected by the user.</li>\n</ul>"
				},
				{
					"name": "getAriaDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>ariaDescription</code>"
					},
					"description": "Gets current value of property <code>ariaDescription</code>.\n\nAccessible label / description of the menu for assistive technologies like screenreaders.",
					"deprecated": {
						"since": "1.27.0",
						"text": "Please use association <code>ariaLabelledBy</code> instead."
					}
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"since": "1.26.3",
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nWhen a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\nThe available actions to be displayed as items of the menu."
				},
				{
					"name": "getMaxVisibleItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxVisibleItems</code>"
					},
					"description": "Gets current value of property <code>maxVisibleItems</code>.\n\nThe maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.Menu."
				},
				{
					"name": "getPageSize",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>pageSize</code>"
					},
					"since": "1.25.0",
					"description": "Gets current value of property <code>pageSize</code>.\n\nThe keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home</i> / <i>End</i> keys for jumping\nto the first / last item, the <i>Page Up</i> / <i>Page Down</i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize</code> property.\nFor values smaller than 1, paging behaves in a similar way to when using the <i>Home</i> / <i>End</i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.\n\nDefault value is <code>5</code>."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.MenuItemBase",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.MenuItemBase</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.MenuItemBase",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "open",
					"visibility": "public",
					"parameters": [
						{
							"name": "bWithKeyboard",
							"type": "boolean",
							"optional": false,
							"description": "Indicates whether or not the first item shall be highlighted when the menu is opened (keyboard case)"
						},
						{
							"name": "oOpenerRef",
							"type": "sap.ui.core.Element|DOMRef",
							"optional": false,
							"description": "The element which will get the focus back again after the menu was closed"
						},
						{
							"name": "sMy",
							"type": "sap.ui.core.Dock",
							"optional": false,
							"description": "The reference docking location of the menu for positioning the menu on the screen"
						},
						{
							"name": "sAt",
							"type": "sap.ui.core.Dock",
							"optional": false,
							"description": "The 'of' element's reference docking location for positioning the menu on the screen"
						},
						{
							"name": "oOf",
							"type": "sap.ui.core.Element|DOMRef",
							"optional": false,
							"description": "The menu is positioned relatively to this element based on the given dock locations"
						},
						{
							"name": "sOffset",
							"type": "string",
							"optional": true,
							"description": "The offset relative to the docking point, specified as a string with space-separated pixel values (e.g. \"0 10\" to move the popup 10 pixels to the right)"
						},
						{
							"name": "sCollision",
							"type": "sap.ui.core.Collision",
							"optional": true,
							"description": "The collision defines how the position of the menu should be adjusted in case it overflows the window in some direction"
						}
					],
					"description": "Opens the menu at the specified position.\n\nThe position of the menu is defined relative to an element in the visible DOM by specifying\nthe docking location of the menu and of the related element.\n\nSee {@link sap.ui.core.Popup#open Popup#open} for further details about popup positioning."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.26.3",
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"since": "1.26.3",
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.unified.MenuItemBase",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "setAriaDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAriaDescription",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>ariaDescription</code>"
						}
					],
					"description": "Sets a new value for property <code>ariaDescription</code>.\n\nAccessible label / description of the menu for assistive technologies like screenreaders.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"since": "1.27.0",
						"text": "Please use association <code>ariaLabelledBy</code> instead."
					}
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nWhen a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setMaxVisibleItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxVisibleItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxVisibleItems</code>"
						}
					],
					"description": "Sets a new value for property <code>maxVisibleItems</code>.\n\nThe maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setPageSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.25.0",
					"parameters": [
						{
							"name": "iPageSize",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>pageSize</code>"
						}
					],
					"description": "Sets a new value for property <code>pageSize</code>.\n\nThe keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home</i> / <i>End</i> keys for jumping\nto the first / last item, the <i>Page Up</i> / <i>Page Down</i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize</code> property.\nFor values smaller than 1, paging behaves in a similar way to when using the <i>Home</i> / <i>End</i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>5</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.MenuItem",
			"basename": "MenuItem",
			"resource": "sap/ui/unified/MenuItem.js",
			"module": "sap/ui/unified/MenuItem",
			"static": true,
			"visibility": "public",
			"since": "1.21.0",
			"extends": "sap.ui.unified.MenuItemBase",
			"description": "Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the text which should be displayed on the item.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new MenuItem element.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.MenuItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.MenuItem."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nDefines the text which should be displayed on the item.\n\nDefault value is <code></code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nDefines the text which should be displayed on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.MenuItemBase",
			"basename": "MenuItemBase",
			"resource": "sap/ui/unified/MenuItemBase.js",
			"module": "sap/ui/unified/MenuItemBase",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.21.0",
			"extends": "sap.ui.core.Element",
			"description": "Abstract base class for menu item which provides common properties and events for all concrete item implementations.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "When an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Invisible items do not appear in the menu.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "startsSection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines whether a visual separator should be rendered before the item.\n<b>Note:</b> If an item is invisible also the separator of this item is not shown.",
						"methods": [
							"getStartsSection",
							"setStartsSection"
						]
					}
				],
				"aggregations": [
					{
						"name": "submenu",
						"singularName": "submenu",
						"type": "sap.ui.unified.Menu",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "An optional submenu of the item which is opened when the item is selected by the user.",
						"methods": [
							"getSubmenu",
							"destroySubmenu",
							"setSubmenu"
						]
					}
				],
				"defaultAggregation": "submenu",
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Fired when the item is selected by the user.\n<b>Note:</b> The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu.",
						"parameters": {
							"item": {
								"name": "item",
								"type": "sap.ui.unified.MenuItemBase",
								"description": "The current item"
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Abstract base class <code>MenuItemBase</code> for menu item elements. Please use concrete subclasses.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"item": {
											"name": "item",
											"type": "sap.ui.unified.MenuItemBase",
											"optional": false,
											"description": "The current item"
										}
									}
								}
							}
						}
					],
					"description": "Fired when the item is selected by the user.\n<b>Note:</b> The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu."
				}
			],
			"methods": [
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.MenuItemBase</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.unified.MenuItemBase</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.MenuItemBase</code> itself.\n\nFired when the item is selected by the user.\n<b>Note:</b> The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu."
				},
				{
					"name": "destroySubmenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the submenu in the aggregation <code>submenu</code>."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.unified.MenuItemBase</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.MenuItemBase with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item</code> of type <code>sap.ui.unified.MenuItemBase</code>The current item</li>\n</ul>"
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nWhen an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.MenuItemBase."
				},
				{
					"name": "getStartsSection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>startsSection</code>"
					},
					"description": "Gets current value of property <code>startsSection</code>.\n\nDefines whether a visual separator should be rendered before the item.\n<b>Note:</b> If an item is invisible also the separator of this item is not shown.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSubmenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu"
					},
					"description": "Gets content of aggregation <code>submenu</code>.\n\nAn optional submenu of the item which is opened when the item is selected by the user."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nInvisible items do not appear in the menu.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "hover",
					"visibility": "protected",
					"parameters": [
						{
							"name": "bHovered",
							"type": "boolean",
							"optional": false,
							"description": "Specifies whether the item is currently hovered or not."
						},
						{
							"name": "oMenu",
							"type": "sap.ui.unified.Menu",
							"optional": false,
							"description": "The menu to which this item belongs"
						}
					],
					"description": "Changes the visual hover state of the menu item.\n\nSubclasses may override this function."
				},
				{
					"name": "onAfterRendering",
					"visibility": "protected",
					"description": "Informs the item that the item HTML is now applied to the DOM.\n\nSubclasses may override this function."
				},
				{
					"name": "onSubmenuToggle",
					"visibility": "protected",
					"parameters": [
						{
							"name": "bOpened",
							"type": "boolean",
							"optional": false,
							"description": "Specifies whether the submenu of the item is opened or closed"
						}
					],
					"description": "Event handler which is called whenever the submenu of the item is opened or closed.\n\nSubclasses may override this function."
				},
				{
					"name": "render",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oRenderManager",
							"type": "sap.ui.core.RenderManager",
							"optional": false,
							"description": "The <code>RenderManager</code> that can be used for writing to the render-output-buffer"
						},
						{
							"name": "oItem",
							"type": "sap.ui.unified.MenuItemBase",
							"optional": false,
							"description": "The item which should be rendered"
						},
						{
							"name": "oMenu",
							"type": "sap.ui.unified.Menu",
							"optional": false,
							"description": "The menu to which this item belongs"
						}
					],
					"description": "Produces the HTML of an item and writes it to render-output-buffer during the rendering of the corresponding menu.\n\nSubclasses may override this function."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nWhen an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartsSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bStartsSection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>startsSection</code>"
						}
					],
					"description": "Sets a new value for property <code>startsSection</code>.\n\nDefines whether a visual separator should be rendered before the item.\n<b>Note:</b> If an item is invisible also the separator of this item is not shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSubmenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSubmenu",
							"type": "sap.ui.unified.Menu",
							"optional": false,
							"description": "The submenu to set"
						}
					],
					"description": "Sets the aggregated <code>submenu</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItemBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\n\nInvisible items do not appear in the menu.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.MenuTextFieldItem",
			"basename": "MenuTextFieldItem",
			"resource": "sap/ui/unified/MenuTextFieldItem.js",
			"module": "sap/ui/unified/MenuTextFieldItem",
			"static": true,
			"visibility": "public",
			"since": "1.21.0",
			"extends": "sap.ui.unified.MenuItemBase",
			"description": "Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the label of the text field of the item.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "value",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the value of the text field of the item.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new MenuTextFieldItem element.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "destroySubmenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuTextFieldItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
					"deprecated": {
						"text": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item."
					}
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.MenuTextFieldItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nDefines the label of the text field of the item."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.MenuTextFieldItem."
				},
				{
					"name": "getSubmenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu"
					},
					"description": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
					"deprecated": {
						"text": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item."
					}
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nDefines the value of the text field of the item."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"description": "Gets current value of property <code>valueState</code>.\n\nDefines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuTextFieldItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuTextFieldItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nDefines the label of the text field of the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSubmenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuTextFieldItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSubmenu",
							"type": "sap.ui.unified.Menu",
							"optional": false
						}
					],
					"description": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
					"deprecated": {
						"text": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item."
					}
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuTextFieldItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nDefines the value of the text field of the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuTextFieldItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nDefines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.Shell",
			"basename": "Shell",
			"resource": "sap/ui/unified/Shell.js",
			"module": "sap/ui/unified/Shell",
			"static": true,
			"visibility": "public",
			"since": "1.15.1",
			"extends": "sap.ui.unified.ShellLayout",
			"description": "The shell control is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The application icon. If a custom header is set this property has no effect.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "showCurtain",
						"type": "boolean",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Shows / Hides the curtain.",
						"deprecated": {
							"since": "1.16.3",
							"text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
						},
						"methods": [
							"getShowCurtain",
							"setShowCurtain"
						]
					},
					{
						"name": "showCurtainPane",
						"type": "boolean",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Shows / Hides the side pane on the curtain.",
						"deprecated": {
							"since": "1.16.3",
							"text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
						},
						"methods": [
							"getShowCurtainPane",
							"setShowCurtainPane"
						]
					},
					{
						"name": "searchVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.18",
						"description": "If set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.",
						"methods": [
							"getSearchVisible",
							"setSearchVisible"
						]
					}
				],
				"aggregations": [
					{
						"name": "curtainContent",
						"singularName": "curtainContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content to appear in the curtain area.",
						"methods": [
							"getCurtainContent",
							"destroyCurtainContent",
							"insertCurtainContent",
							"addCurtainContent",
							"removeCurtainContent",
							"indexOfCurtainContent",
							"removeAllCurtainContent"
						]
					},
					{
						"name": "curtainPaneContent",
						"singularName": "curtainPaneContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content to appear in the pane area of the curtain.",
						"methods": [
							"getCurtainPaneContent",
							"destroyCurtainPaneContent",
							"insertCurtainPaneContent",
							"addCurtainPaneContent",
							"removeCurtainPaneContent",
							"indexOfCurtainPaneContent",
							"removeAllCurtainPaneContent"
						]
					},
					{
						"name": "headItems",
						"singularName": "headItem",
						"type": "sap.ui.unified.ShellHeadItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The buttons shown in the begin (left in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported. If a custom header is set this aggregation has no effect.",
						"methods": [
							"getHeadItems",
							"destroyHeadItems",
							"insertHeadItem",
							"addHeadItem",
							"removeHeadItem",
							"indexOfHeadItem",
							"removeAllHeadItems"
						]
					},
					{
						"name": "headEndItems",
						"singularName": "headEndItem",
						"type": "sap.ui.unified.ShellHeadItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The buttons shown in the end (right in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported (when user is set only 1). If a custom header is set this aggregation has no effect.",
						"methods": [
							"getHeadEndItems",
							"destroyHeadEndItems",
							"insertHeadEndItem",
							"addHeadEndItem",
							"removeHeadEndItem",
							"indexOfHeadEndItem",
							"removeAllHeadEndItems"
						]
					},
					{
						"name": "search",
						"singularName": "search",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Experimental (This aggregation might change in future!): The search control which should be displayed in the shell header. If a custom header is set this aggregation has no effect.",
						"methods": [
							"getSearch",
							"destroySearch",
							"setSearch"
						]
					},
					{
						"name": "user",
						"singularName": "user",
						"type": "sap.ui.unified.ShellHeadUserItem",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.22.0",
						"description": "The user item which is rendered in the shell header beside the items. If a custom header is set this aggregation has no effect.",
						"methods": [
							"getUser",
							"destroyUser",
							"setUser"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Shell.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addCurtainContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCurtainContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the curtainContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some curtainContent to the aggregation <code>curtainContent</code>."
				},
				{
					"name": "addCurtainPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCurtainPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the curtainPaneContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some curtainPaneContent to the aggregation <code>curtainPaneContent</code>."
				},
				{
					"name": "addHeadEndItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeadEndItem",
							"type": "sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "the headEndItem to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some headEndItem to the aggregation <code>headEndItems</code>."
				},
				{
					"name": "addHeadItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeadItem",
							"type": "sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "the headItem to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some headItem to the aggregation <code>headItems</code>."
				},
				{
					"name": "destroyCurtainContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the curtainContent in the aggregation <code>curtainContent</code>."
				},
				{
					"name": "destroyCurtainPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the curtainPaneContent in the aggregation <code>curtainPaneContent</code>."
				},
				{
					"name": "destroyHeadEndItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the headEndItems in the aggregation <code>headEndItems</code>."
				},
				{
					"name": "destroyHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the header in the aggregation named <code>header</code>, but only if a custom header is set.\nThe default header can not be destroyed."
				},
				{
					"name": "destroyHeadItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the headItems in the aggregation <code>headItems</code>."
				},
				{
					"name": "destroySearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the search in the aggregation <code>search</code>."
				},
				{
					"name": "destroyUser",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"description": "Destroys the user in the aggregation <code>user</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.Shell with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.ShellLayout.extend}."
				},
				{
					"name": "getCurtainContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>curtainContent</code>.\n\nThe content to appear in the curtain area."
				},
				{
					"name": "getCurtainPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>curtainPaneContent</code>.\n\nThe content to appear in the pane area of the curtain."
				},
				{
					"name": "getHeadEndItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem[]"
					},
					"description": "Gets content of aggregation <code>headEndItems</code>.\n\nThe buttons shown in the end (right in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported (when user is set only 1). If a custom header is set this aggregation has no effect."
				},
				{
					"name": "getHeadItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem[]"
					},
					"description": "Gets content of aggregation <code>headItems</code>.\n\nThe buttons shown in the begin (left in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported. If a custom header is set this aggregation has no effect."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nThe application icon. If a custom header is set this property has no effect."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.Shell."
				},
				{
					"name": "getSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>search</code>.\n\nExperimental (This aggregation might change in future!): The search control which should be displayed in the shell header. If a custom header is set this aggregation has no effect."
				},
				{
					"name": "getSearchVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>searchVisible</code>"
					},
					"since": "1.18",
					"description": "Gets current value of property <code>searchVisible</code>.\n\nIf set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowCurtain",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showCurtain</code>"
					},
					"description": "Gets current value of property <code>showCurtain</code>.\n\nShows / Hides the curtain.",
					"deprecated": {
						"since": "1.16.3",
						"text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
					}
				},
				{
					"name": "getShowCurtainPane",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showCurtainPane</code>"
					},
					"description": "Gets current value of property <code>showCurtainPane</code>.\n\nShows / Hides the side pane on the curtain.",
					"deprecated": {
						"since": "1.16.3",
						"text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
					}
				},
				{
					"name": "getUser",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem"
					},
					"since": "1.22.0",
					"description": "Gets content of aggregation <code>user</code>.\n\nThe user item which is rendered in the shell header beside the items. If a custom header is set this aggregation has no effect."
				},
				{
					"name": "indexOfCurtainContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCurtainContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The curtainContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>curtainContent</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfCurtainPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCurtainPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The curtainPaneContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>curtainPaneContent</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfHeadEndItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oHeadEndItem",
							"type": "sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "The headEndItem whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.ShellHeadItem</code> in the aggregation <code>headEndItems</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfHeadItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oHeadItem",
							"type": "sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "The headItem whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.ShellHeadItem</code> in the aggregation <code>headItems</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertCurtainContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCurtainContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the curtainContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the curtainContent should be inserted at; for\n             a negative value of <code>iIndex</code>, the curtainContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the curtainContent is inserted at\n             the last position"
						}
					],
					"description": "Inserts a curtainContent into the aggregation <code>curtainContent</code>."
				},
				{
					"name": "insertCurtainPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCurtainPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the curtainPaneContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the curtainPaneContent should be inserted at; for\n             a negative value of <code>iIndex</code>, the curtainPaneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the curtainPaneContent is inserted at\n             the last position"
						}
					],
					"description": "Inserts a curtainPaneContent into the aggregation <code>curtainPaneContent</code>."
				},
				{
					"name": "insertHeadEndItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeadEndItem",
							"type": "sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "the headEndItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the headEndItem should be inserted at; for\n             a negative value of <code>iIndex</code>, the headEndItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headEndItem is inserted at\n             the last position"
						}
					],
					"description": "Inserts a headEndItem into the aggregation <code>headEndItems</code>."
				},
				{
					"name": "insertHeadItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeadItem",
							"type": "sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "the headItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the headItem should be inserted at; for\n             a negative value of <code>iIndex</code>, the headItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headItem is inserted at\n             the last position"
						}
					],
					"description": "Inserts a headItem into the aggregation <code>headItems</code>."
				},
				{
					"name": "removeAllCurtainContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>curtainContent</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllCurtainPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>curtainPaneContent</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllHeadEndItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>headEndItems</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllHeadItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>headItems</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeCurtainContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed curtainContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vCurtainContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The curtainContentto remove or its index or id"
						}
					],
					"description": "Removes a curtainContent from the aggregation <code>curtainContent</code>."
				},
				{
					"name": "removeCurtainPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed curtainPaneContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vCurtainPaneContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The curtainPaneContentto remove or its index or id"
						}
					],
					"description": "Removes a curtainPaneContent from the aggregation <code>curtainPaneContent</code>."
				},
				{
					"name": "removeHeadEndItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "The removed headEndItem or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vHeadEndItem",
							"type": "int|string|sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "The headEndItemto remove or its index or id"
						}
					],
					"description": "Removes a headEndItem from the aggregation <code>headEndItems</code>."
				},
				{
					"name": "removeHeadItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "The removed headItem or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vHeadItem",
							"type": "int|string|sap.ui.unified.ShellHeadItem",
							"optional": false,
							"description": "The headItemto remove or its index or id"
						}
					],
					"description": "Removes a headItem from the aggregation <code>headItems</code>."
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeader",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The Control which should be rendered within the Shell header or <code>null</code> to render the default Shell header."
						}
					],
					"description": "Setter for the aggregated <code>header</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nThe application icon. If a custom header is set this property has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSearch",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The search to set"
						}
					],
					"description": "Sets the aggregated <code>search</code>."
				},
				{
					"name": "setSearchVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.18",
					"parameters": [
						{
							"name": "bSearchVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>searchVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>searchVisible</code>.\n\nIf set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowCurtain",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowCurtain",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showCurtain</code>"
						}
					],
					"description": "Sets a new value for property <code>showCurtain</code>.\n\nShows / Hides the curtain.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"since": "1.16.3",
						"text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
					}
				},
				{
					"name": "setShowCurtainPane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowCurtainPane",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showCurtainPane</code>"
						}
					],
					"description": "Sets a new value for property <code>showCurtainPane</code>.\n\nShows / Hides the side pane on the curtain.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"since": "1.16.3",
						"text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
					}
				},
				{
					"name": "setUser",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Shell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "oUser",
							"type": "sap.ui.unified.ShellHeadUserItem",
							"optional": false,
							"description": "The user to set"
						}
					],
					"description": "Sets the aggregated <code>user</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.ShellHeadItem",
			"basename": "ShellHeadItem",
			"resource": "sap/ui/unified/ShellHeadItem.js",
			"module": "sap/ui/unified/ShellHeadItem",
			"static": true,
			"visibility": "public",
			"since": "1.15.1",
			"extends": "sap.ui.core.Element",
			"description": "Header Action item of the Shell.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "startsSection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set to true, a divider is displayed before the item.",
						"deprecated": {
							"since": "1.18",
							"text": "Dividers are not supported anymore."
						},
						"methods": [
							"getStartsSection",
							"setStartsSection"
						]
					},
					{
						"name": "showSeparator",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.22.5",
						"description": "If set to true, a separator is displayed after the item.",
						"methods": [
							"getShowSeparator",
							"setShowSeparator"
						]
					},
					{
						"name": "selected",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled</code>).",
						"methods": [
							"getSelected",
							"setSelected"
						]
					},
					{
						"name": "toggleEnabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.3",
						"description": "If set to true, the item represents a toggle button. The <code>selected</code> property can the be used to\ndefine the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected</code> property\nis ignored.",
						"methods": [
							"getToggleEnabled",
							"setToggleEnabled"
						]
					},
					{
						"name": "showMarker",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set to true, a theme dependent marker is shown on the item.",
						"deprecated": {
							"since": "1.18",
							"text": "Markers should not be used anymore."
						},
						"methods": [
							"getShowMarker",
							"setShowMarker"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.18",
						"description": "Invisible items are not shown on the UI.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Event is fired when the user presses the item.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ShellHeadItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the user presses the item."
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellHeadItem</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.unified.ShellHeadItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.ShellHeadItem</code> itself.\n\nEvent is fired when the user presses the item."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.unified.ShellHeadItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.ShellHeadItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.ShellHeadItem."
				},
				{
					"name": "getSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>selected</code>"
					},
					"description": "Gets current value of property <code>selected</code>.\n\nDefines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled</code>).\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowMarker",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showMarker</code>"
					},
					"description": "Gets current value of property <code>showMarker</code>.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.18",
						"text": "Markers should not be used anymore."
					}
				},
				{
					"name": "getShowSeparator",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSeparator</code>"
					},
					"since": "1.22.5",
					"description": "Gets current value of property <code>showSeparator</code>.\n\nIf set to true, a separator is displayed after the item.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getStartsSection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>startsSection</code>"
					},
					"description": "Gets current value of property <code>startsSection</code>.\n\nIf set to true, a divider is displayed before the item.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.18",
						"text": "Dividers are not supported anymore."
					}
				},
				{
					"name": "getToggleEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>toggleEnabled</code>"
					},
					"since": "1.34.3",
					"description": "Gets current value of property <code>toggleEnabled</code>.\n\nIf set to true, the item represents a toggle button. The <code>selected</code> property can the be used to\ndefine the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected</code> property\nis ignored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"since": "1.18",
					"description": "Gets current value of property <code>visible</code>.\n\nInvisible items are not shown on the UI.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSelected",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>selected</code>"
						}
					],
					"description": "Sets a new value for property <code>selected</code>.\n\nDefines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled</code>).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowMarker",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowMarker",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showMarker</code>"
						}
					],
					"description": "Sets a new value for property <code>showMarker</code>.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.18",
						"text": "Markers should not be used anymore."
					}
				},
				{
					"name": "setShowSeparator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.5",
					"parameters": [
						{
							"name": "bShowSeparator",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSeparator</code>"
						}
					],
					"description": "Sets a new value for property <code>showSeparator</code>.\n\nIf set to true, a separator is displayed after the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartsSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bStartsSection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>startsSection</code>"
						}
					],
					"description": "Sets a new value for property <code>startsSection</code>.\n\nIf set to true, a divider is displayed before the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.18",
						"text": "Dividers are not supported anymore."
					}
				},
				{
					"name": "setToggleEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.3",
					"parameters": [
						{
							"name": "bToggleEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>toggleEnabled</code>"
						}
					],
					"description": "Sets a new value for property <code>toggleEnabled</code>.\n\nIf set to true, the item represents a toggle button. The <code>selected</code> property can the be used to\ndefine the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected</code> property\nis ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.18",
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\n\nInvisible items are not shown on the UI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.ShellHeadUserItem",
			"basename": "ShellHeadUserItem",
			"resource": "sap/ui/unified/ShellHeadUserItem.js",
			"module": "sap/ui/unified/ShellHeadUserItem",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.core.Element",
			"description": "User Header Action Item of the Shell.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "username",
						"type": "string",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "The name of the user.",
						"methods": [
							"getUsername",
							"setUsername"
						]
					},
					{
						"name": "showPopupIndicator",
						"type": "boolean",
						"defaultValue": true,
						"group": "Accessibility",
						"visibility": "public",
						"since": "1.27.0",
						"description": "The user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog.\nIf this property is set to true an indicator for such a popup mechanismn is shown in the item.",
						"methods": [
							"getShowPopupIndicator",
							"setShowPopupIndicator"
						]
					},
					{
						"name": "image",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "An image of the user, normally an URI to a image but also an icon from the sap.ui.core.IconPool is possible.",
						"methods": [
							"getImage",
							"setImage"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Event is fired when the user presses the button.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ShellHeadUserItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the user presses the button."
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellHeadUserItem</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.unified.ShellHeadUserItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.ShellHeadUserItem</code> itself.\n\nEvent is fired when the user presses the button."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.unified.ShellHeadUserItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.ShellHeadUserItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>image</code>"
					},
					"description": "Gets current value of property <code>image</code>.\n\nAn image of the user, normally an URI to a image but also an icon from the sap.ui.core.IconPool is possible."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.ShellHeadUserItem."
				},
				{
					"name": "getShowPopupIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showPopupIndicator</code>"
					},
					"since": "1.27.0",
					"description": "Gets current value of property <code>showPopupIndicator</code>.\n\nThe user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog.\nIf this property is set to true an indicator for such a popup mechanismn is shown in the item.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUsername",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>username</code>"
					},
					"description": "Gets current value of property <code>username</code>.\n\nThe name of the user.\n\nDefault value is <code></code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sImage",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>image</code>"
						}
					],
					"description": "Sets a new value for property <code>image</code>.\n\nAn image of the user, normally an URI to a image but also an icon from the sap.ui.core.IconPool is possible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setShowPopupIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "bShowPopupIndicator",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showPopupIndicator</code>"
						}
					],
					"description": "Sets a new value for property <code>showPopupIndicator</code>.\n\nThe user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog.\nIf this property is set to true an indicator for such a popup mechanismn is shown in the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUsername",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellHeadUserItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUsername",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>username</code>"
						}
					],
					"description": "Sets a new value for property <code>username</code>.\n\nThe name of the user.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.ShellLayout",
			"basename": "ShellLayout",
			"resource": "sap/ui/unified/ShellLayout.js",
			"module": "sap/ui/unified/ShellLayout",
			"static": true,
			"visibility": "public",
			"since": "1.25.0",
			"extends": "sap.ui.core.Control",
			"description": "The shell layout is the base for the shell control which is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "showPane",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Shows / Hides the side pane.",
						"methods": [
							"getShowPane",
							"setShowPane"
						]
					},
					{
						"name": "headerHiding",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Whether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.",
						"methods": [
							"getHeaderHiding",
							"setHeaderHiding"
						]
					},
					{
						"name": "headerVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set to false, no header (and no items, search, ...) is shown.",
						"methods": [
							"getHeaderVisible",
							"setHeaderVisible"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content to appear in the main canvas.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "paneContent",
						"singularName": "paneContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content to appear in the pane area.",
						"methods": [
							"getPaneContent",
							"destroyPaneContent",
							"insertPaneContent",
							"addPaneContent",
							"removePaneContent",
							"indexOfPaneContent",
							"removeAllPaneContent"
						]
					},
					{
						"name": "header",
						"singularName": "header",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The control to appear in the header area.",
						"methods": [
							"getHeader",
							"destroyHeader",
							"setHeader"
						]
					},
					{
						"name": "canvasSplitContainer",
						"singularName": "canvasSplitContainer",
						"type": "sap.ui.unified.SplitContainer",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Private storage for the internal split container for the canvas.",
						"methods": [
							"getCanvasSplitContainer",
							"destroyCanvasSplitContainer",
							"setCanvasSplitContainer"
						]
					},
					{
						"name": "curtainSplitContainer",
						"singularName": "curtainSplitContainer",
						"type": "sap.ui.unified.SplitContainer",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Private storage for the internal split container for the curtain.",
						"methods": [
							"getCurtainSplitContainer",
							"destroyCurtainSplitContainer",
							"setCurtainSplitContainer"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ShellLayout.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "addPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the paneContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some paneContent to the aggregation <code>paneContent</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "destroyHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the header in the aggregation <code>header</code>."
				},
				{
					"name": "destroyPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the paneContent in the aggregation <code>paneContent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.ShellLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nThe content to appear in the main canvas."
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>header</code>.\n\nThe control to appear in the header area."
				},
				{
					"name": "getHeaderHiding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>headerHiding</code>"
					},
					"description": "Gets current value of property <code>headerHiding</code>.\n\nWhether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getHeaderVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>headerVisible</code>"
					},
					"description": "Gets current value of property <code>headerVisible</code>.\n\nIf set to false, no header (and no items, search, ...) is shown.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.ShellLayout."
				},
				{
					"name": "getPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>paneContent</code>.\n\nThe content to appear in the pane area."
				},
				{
					"name": "getShowPane",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showPane</code>"
					},
					"description": "Gets current value of property <code>showPane</code>.\n\nShows / Hides the side pane.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The paneContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>paneContent</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "insertPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the paneContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the paneContent should be inserted at; for\n             a negative value of <code>iIndex</code>, the paneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the paneContent is inserted at\n             the last position"
						}
					],
					"description": "Inserts a paneContent into the aggregation <code>paneContent</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>paneContent</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "removePaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed paneContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vPaneContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The paneContentto remove or its index or id"
						}
					],
					"description": "Removes a paneContent from the aggregation <code>paneContent</code>."
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeader",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The header to set"
						}
					],
					"description": "Sets the aggregated <code>header</code>."
				},
				{
					"name": "setHeaderHiding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHeaderHiding",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>headerHiding</code>"
						}
					],
					"description": "Sets a new value for property <code>headerHiding</code>.\n\nWhether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setHeaderVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHeaderVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>headerVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>headerVisible</code>.\n\nIf set to false, no header (and no items, search, ...) is shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowPane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowPane",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showPane</code>"
						}
					],
					"description": "Sets a new value for property <code>showPane</code>.\n\nShows / Hides the side pane.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.ShellOverlay",
			"basename": "ShellOverlay",
			"resource": "sap/ui/unified/ShellOverlay.js",
			"module": "sap/ui/unified/ShellOverlay",
			"static": true,
			"visibility": "public",
			"since": "1.16.3",
			"extends": "sap.ui.core.Control",
			"description": "ShellOverlay to be opened in front of a sap.ui.unified.Shell",
			"ui5-metadata": {
				"stereotype": "control",
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content to appear in the overlay.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "search",
						"singularName": "search",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Experimental (This aggregation might change in future!): The search control which should be displayed in the overlay header.",
						"methods": [
							"getSearch",
							"destroySearch",
							"setSearch"
						]
					}
				],
				"defaultAggregation": "content",
				"associations": [
					{
						"name": "shell",
						"singularName": "shell",
						"type": "sap.ui.unified.ShellLayout",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Reference to the sap.ui.unified.Shell or sap.ui.unified.ShellLayout control.",
						"methods": [
							"getShell",
							"setShell"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "closed",
						"visibility": "public",
						"description": "Fired when the overlay was closed.",
						"methods": [
							"attachClosed",
							"detachClosed",
							"fireClosed"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ShellOverlay.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "closed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the overlay was closed."
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "attachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellOverlay</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>closed</code> event of this <code>sap.ui.unified.ShellOverlay</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.unified.ShellOverlay</code> itself.\n\nFired when the overlay was closed."
				},
				{
					"name": "close",
					"visibility": "public",
					"description": "Closes the ShellOverlay."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "destroySearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the search in the aggregation <code>search</code>."
				},
				{
					"name": "detachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>closed</code> event of this <code>sap.ui.unified.ShellOverlay</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.ShellOverlay with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireClosed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>closed</code> to attached listeners."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nThe content to appear in the overlay."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.ShellOverlay."
				},
				{
					"name": "getSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>search</code>.\n\nExperimental (This aggregation might change in future!): The search control which should be displayed in the overlay header."
				},
				{
					"name": "getShell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellLayout"
					},
					"description": "ID of the element which is the current target of the association <code>shell</code>, or <code>null</code>."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "open",
					"visibility": "public",
					"description": "Opens the ShellOverlay."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSearch",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The search to set"
						}
					],
					"description": "Sets the aggregated <code>search</code>."
				},
				{
					"name": "setShell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.ShellOverlay",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oShell",
							"type": "sap.ui.unified.ShellLayout",
							"optional": false,
							"description": "Id of an element which becomes the new target of this shell association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>shell</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.unified.SplitContainer",
			"basename": "SplitContainer",
			"resource": "sap/ui/unified/SplitContainer.js",
			"module": "sap/ui/unified/SplitContainer",
			"static": true,
			"visibility": "public",
			"since": "1.15.0",
			"extends": "sap.ui.core.Control",
			"description": "Provides a main content and a secondary content area",
			"experimental": {
				"since": "1.15.0",
				"text": "API is not yet finished and might change completely"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "showSecondaryContent",
						"type": "boolean",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Shows / Hides the secondary area.",
						"methods": [
							"getShowSecondaryContent",
							"setShowSecondaryContent"
						]
					},
					{
						"name": "secondaryContentSize",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "250px",
						"group": "Appearance",
						"visibility": "public",
						"description": "The width if the secondary content. The height is always 100%.",
						"methods": [
							"getSecondaryContentSize",
							"setSecondaryContentSize"
						]
					},
					{
						"name": "secondaryContentWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "250px",
						"group": "Appearance",
						"visibility": "public",
						"description": "Do not use. Use secondaryContentSize instead.",
						"deprecated": {
							"since": "1.22",
							"text": "Only available for backwards compatibility."
						},
						"methods": [
							"getSecondaryContentWidth",
							"setSecondaryContentWidth"
						]
					},
					{
						"name": "orientation",
						"type": "sap.ui.core.Orientation",
						"defaultValue": "Horizontal",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.22.0",
						"description": "Whether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").",
						"methods": [
							"getOrientation",
							"setOrientation"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content to appear in the main area.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "secondaryContent",
						"singularName": "secondaryContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content to appear in the secondary area.",
						"methods": [
							"getSecondaryContent",
							"destroySecondaryContent",
							"insertSecondaryContent",
							"addSecondaryContent",
							"removeSecondaryContent",
							"indexOfSecondaryContent",
							"removeAllSecondaryContent"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new SplitContainer.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "addSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSecondaryContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the secondaryContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some secondaryContent to the aggregation <code>secondaryContent</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "destroySecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the secondaryContent in the aggregation <code>secondaryContent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.unified.SplitContainer with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nThe content to appear in the main area."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.unified.SplitContainer."
				},
				{
					"name": "getOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Orientation",
						"description": "Value of property <code>orientation</code>"
					},
					"since": "1.22.0",
					"description": "Gets current value of property <code>orientation</code>.\n\nWhether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").\n\nDefault value is <code>Horizontal</code>."
				},
				{
					"name": "getSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>secondaryContent</code>.\n\nThe content to appear in the secondary area."
				},
				{
					"name": "getSecondaryContentSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>secondaryContentSize</code>"
					},
					"description": "Gets current value of property <code>secondaryContentSize</code>.\n\nThe width if the secondary content. The height is always 100%.\n\nDefault value is <code>250px</code>."
				},
				{
					"name": "getSecondaryContentWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>secondaryContentWidth</code>"
					},
					"description": "Gets current value of property <code>secondaryContentWidth</code>.\n\nDo not use. Use secondaryContentSize instead.\n\nDefault value is <code>250px</code>.",
					"deprecated": {
						"since": "1.22",
						"text": "\nOnly available for backwards compatibility."
					}
				},
				{
					"name": "getShowSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSecondaryContent</code>"
					},
					"description": "Gets current value of property <code>showSecondaryContent</code>.\n\nShows / Hides the secondary area."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSecondaryContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The secondaryContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>secondaryContent</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "insertSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSecondaryContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the secondaryContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the secondaryContent should be inserted at; for\n             a negative value of <code>iIndex</code>, the secondaryContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the secondaryContent is inserted at\n             the last position"
						}
					],
					"description": "Inserts a secondaryContent into the aggregation <code>secondaryContent</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>secondaryContent</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "removeSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed secondaryContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSecondaryContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The secondaryContentto remove or its index or id"
						}
					],
					"description": "Removes a secondaryContent from the aggregation <code>secondaryContent</code>."
				},
				{
					"name": "setOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.22.0",
					"parameters": [
						{
							"name": "sOrientation",
							"type": "sap.ui.core.Orientation",
							"optional": false,
							"description": "New value for property <code>orientation</code>"
						}
					],
					"description": "Sets a new value for property <code>orientation</code>.\n\nWhether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Horizontal</code>."
				},
				{
					"name": "setSecondaryContentSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSecondaryContentSize",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>secondaryContentSize</code>"
						}
					],
					"description": "Sets a new value for property <code>secondaryContentSize</code>.\n\nThe width if the secondary content. The height is always 100%.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>250px</code>."
				},
				{
					"name": "setSecondaryContentWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSecondaryContentWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>secondaryContentWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>secondaryContentWidth</code>.\n\nDo not use. Use secondaryContentSize instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>250px</code>.",
					"deprecated": {
						"since": "1.22",
						"text": "\nOnly available for backwards compatibility."
					}
				},
				{
					"name": "setShowSecondaryContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.SplitContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSecondaryContent",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSecondaryContent</code>"
						}
					],
					"description": "Sets a new value for property <code>showSecondaryContent</code>.\n\nShows / Hides the secondary area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		}
	]
}