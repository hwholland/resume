{"!name":"sap.ui.commons","!version":"1.17.0","!define":{"sap.ui.commons.ToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ToggleButton"},"sap.ui.commons.form.SimpleForm_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.SimpleForm with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.SimpleForm.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.SimpleForm"},"sap.ui.commons.HorizontalDividerType":{"!description":"Enumeration of possible HorizontalDivider types.","Area":{"!description":"Type Area","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","!category":"static class","Page":{"!description":"Type Page","!category":"enum","!type":"String"}},"sap.ui.commons.Carousel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Carousel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Carousel"},"sap.ui.commons.ToolbarDesign":{"!description":"Determines the visual design of a Toolbar.","!module":"sap/ui/commons/library","Transparent":{"!description":"The controls included in the toolbar have a normal visual design where the toolbar appears transparent.\nThe feature might be not supported by all themes.","!category":"enum","!type":"String"},"Flat":{"!description":"The included controls have a very light appearance. The feature might be not supported by all themes.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"The toolbar elements such as buttons for example have their normal visual design, and the toolbar appears solid.\nThe feature might be not supported by all themes.","!category":"enum","!type":"String"}},"sap.ui.commons.RatingIndicator":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setIconUnselected":{"!description":"Sets a new value for property <code>iconUnselected<\/code>.\n\nThe URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconUnselected: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","parameters":{"sIconUnselected":"type: sap.ui.core.URI, description: New value for property <code>iconUnselected<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getMaxValue":{"!description":"Gets current value of property <code>maxValue<\/code>.\n\nDetermines the number of displayed rating symbols\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nDetermines if the rating symbols can be edited.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","setVisualMode":{"!description":"Sets a new value for property <code>visualMode<\/code>.\n\nDefines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Half<\/code>.","!static":false,"!category":"function","!type":"fn(sVisualMode: sap.ui.commons.RatingIndicatorVisualMode) -> sap.ui.commons.RatingIndicator","parameters":{"sVisualMode":"type: sap.ui.commons.RatingIndicatorVisualMode, description: New value for property <code>visualMode<\/code>"}},"setAverageValue":{"!description":"Sets a new value for property <code>averageValue<\/code>.\n\nDetermines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fAverageValue: Number) -> sap.ui.commons.RatingIndicator","parameters":{"fAverageValue":"type: float, description: New value for property <code>averageValue<\/code>"}},"!category":"class","getIconSelected":{"!description":"Gets current value of property <code>iconSelected<\/code>.\n\nThe URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.RatingIndicator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RatingIndicator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getVisualMode":{"!description":"Gets current value of property <code>visualMode<\/code>.\n\nDefines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)\n\nDefault value is <code>Half<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RatingIndicatorVisualMode"},"!constructorDescription":"Constructor for a new RatingIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getMaxValue maxValue} : int (default: 5)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getAverageValue averageValue} : float (default: 0)<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconUnselected iconUnselected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI<\/li>\n<li>{@link #getVisualMode visualMode} : sap.ui.commons.RatingIndicatorVisualMode (default: Half)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RatingIndicator","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getIconUnselected":{"!description":"Gets current value of property <code>iconUnselected<\/code>.\n\nThe URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setIconHovered":{"!description":"Sets a new value for property <code>iconHovered<\/code>.\n\nThe URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","parameters":{"sIconHovered":"type: sap.ui.core.URI, description: New value for property <code>iconHovered<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAverageValue":{"!description":"Gets current value of property <code>averageValue<\/code>.\n\nDetermines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setIconSelected":{"!description":"Sets a new value for property <code>iconSelected<\/code>.\n\nThe URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","parameters":{"sIconSelected":"type: sap.ui.core.URI, description: New value for property <code>iconSelected<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RatingIndicator<\/code> control.<br>RatingIndicator is used to let the user do some rating on a given topic. The amount of\nrating symbols can be specified, as well as the URIs to the image icons which shall be\nused as rating symbols. When the user performs a rating, an event is fired.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RatingIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RatingIndicator"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.RatingIndicator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RatingIndicator<\/code> itself.\n\nThe event is fired when the user has done a rating.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RatingIndicator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RatingIndicator<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>int<\/code>The value of the user rating<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RatingIndicator","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RatingIndicator","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RatingIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nDetermines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMaxValue":{"!description":"Setter for property <code>maxValue<\/code>.\n\nDefault value is <code>5<\/code>\nMinimum value is <code>1<\/code>","!static":false,"!category":"function","!type":"fn(iMaxValue: Number) -> sap.ui.commons.RatingIndicator","parameters":{"iMaxValue":"type: int, description: new value for property <code>maxValue<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nDetermines if the rating symbols can be edited.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RatingIndicator","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/ui/commons/RatingIndicator","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RatingIndicator<\/code> control.<br>RatingIndicator is used to let the user do some rating on a given topic. The amount of\nrating symbols can be specified, as well as the URIs to the image icons which shall be\nused as rating symbols. When the user performs a rating, an event is fired.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nDetermines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.ui.commons.RatingIndicator","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"getIconHovered":{"!description":"Gets current value of property <code>iconHovered<\/code>.\n\nThe URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RatingIndicator","parameters":{"oBindingInfo":"type: object, description: The binding information"}}},"sap.ui.commons.HorizontalDividerHeight":{"!description":"Enumeration of possible HorizontalDivider height settings.","Small":{"!description":"Divider gets a small top and bottom margin.","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Medium":{"!description":"Divider gets a medium top and bottom margin.","!category":"enum","!type":"String"},"Large":{"!description":"Divider gets a large top and bottom margin.","!category":"enum","!type":"String"},"!category":"static class","Ruleheight":{"!description":"Divider gets no top and bottom margin.","!category":"enum","!type":"String"}},"sap.ui.commons.RowRepeaterDesign":{"!description":"Determines the visual design of a RowRepeater.","!module":"sap/ui/commons/library","Transparent":{"!description":"The RowRepeater header and footer elements, as well as the row container background, appear transparent.","!category":"enum","!type":"String"},"BareShell":{"!description":"The RowRepeater will be displayed without header, toolbar or footer. Background will be transparent.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"The RowRepeater header and footer elements, as well as the row container background, appear solid.","!category":"enum","!type":"String"}},"sap.ui.commons.RoadMap":{"getFirstVisibleStep":{"!description":"Gets current value of property <code>firstVisibleStep<\/code>.\n\nID of the first step to be displayed","!static":false,"!category":"function","!type":"fn() -> String"},"addStep":{"!description":"Adds some step to the aggregation <code>steps<\/code>.","!static":false,"!category":"function","!type":"fn(oStep: sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMap","parameters":{"oStep":"type: sap.ui.commons.RoadMapStep, description: the step to add; if empty, nothing is inserted"}},"fireStepExpanded":{"!description":"Fires event <code>stepExpanded<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>stepId<\/code> of type <code>string<\/code>ID of the expanded/collapsed step<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RoadMap","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.Control","!category":"class","removeStep":{"!description":"Removes a step from the aggregation <code>steps<\/code>.","!static":false,"!category":"function","!type":"fn(vStep: Number | String | sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","parameters":{"vStep":"type: int|string|sap.ui.commons.RoadMapStep, description: The stepto remove or its index or id"}},"fireStepSelected":{"!description":"Fires event <code>stepSelected<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>stepId<\/code> of type <code>string<\/code>ID of the selected step<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RoadMap","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the control width in CSS size\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachStepSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>stepSelected<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RoadMap<\/code> itself.\n\nEvent is fired when the user selects a step.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RoadMap","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RoadMap<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFirstVisibleStep":{"!description":"Sets a new value for property <code>firstVisibleStep<\/code>.\n\nID of the first step to be displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFirstVisibleStep: String) -> sap.ui.commons.RoadMap","parameters":{"sFirstVisibleStep":"type: string, description: New value for property <code>firstVisibleStep<\/code>"}},"!constructorDescription":"Constructor for a new RoadMap.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNumberOfVisibleSteps numberOfVisibleSteps} : int<\/li>\n<li>{@link #getFirstVisibleStep firstVisibleStep} : string<\/li>\n<li>{@link #getSelectedStep selectedStep} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSteps steps} : sap.ui.commons.RoadMapStep[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stepSelected stepSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:stepExpanded stepExpanded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeAllSteps":{"!description":"Removes all the controls from the aggregation <code>steps<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RoadMapStep]"},"indexOfStep":{"!description":"Checks for the provided <code>sap.ui.commons.RoadMapStep<\/code> in the aggregation <code>steps<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oStep: sap.ui.commons.RoadMapStep) -> Number","parameters":{"oStep":"type: sap.ui.commons.RoadMapStep, description: The step whose index is looked for"}},"getSteps":{"!description":"Gets content of aggregation <code>steps<\/code>.\n\nSteps that are composing the RoadMap","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RoadMapStep]"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Wizard<\/code> control.<br>RoadMap is used to display step-by-step work flows of a clearly defined work process.","setSelectedStep":{"!description":"Sets a new value for property <code>selectedStep<\/code>.\n\nID of the step which is currently selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedStep: String) -> sap.ui.commons.RoadMap","parameters":{"sSelectedStep":"type: string, description: New value for property <code>selectedStep<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RoadMap.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSelectedStep":{"!description":"Gets current value of property <code>selectedStep<\/code>.\n\nID of the step which is currently selected","!static":false,"!category":"function","!type":"fn() -> String"},"setNumberOfVisibleSteps":{"!description":"Sets a new value for property <code>numberOfVisibleSteps<\/code>.\n\nTotal number of steps to be displayed at once\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iNumberOfVisibleSteps: Number) -> sap.ui.commons.RoadMap","parameters":{"iNumberOfVisibleSteps":"type: int, description: New value for property <code>numberOfVisibleSteps<\/code>"}},"getNumberOfVisibleSteps":{"!description":"Gets current value of property <code>numberOfVisibleSteps<\/code>.\n\nTotal number of steps to be displayed at once","!static":false,"!category":"function","!type":"fn() -> Number"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the control width in CSS size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RoadMap","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"attachStepExpanded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>stepExpanded<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RoadMap<\/code> itself.\n\nEvent is fired when a given step is expanded or collapsed by user.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RoadMap","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RoadMap<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"insertStep":{"!description":"Inserts a step into the aggregation <code>steps<\/code>.","!static":false,"!category":"function","!type":"fn(oStep: sap.ui.commons.RoadMapStep, iIndex: Number) -> sap.ui.commons.RoadMap","parameters":{"oStep":"type: sap.ui.commons.RoadMapStep, description: the step to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the step should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the step is inserted at position 0; for a value\n             greater than the current size of the aggregation, the step is inserted at\n             the last position"}},"!module":"sap/ui/commons/RoadMap","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Wizard<\/code> control.<br>RoadMap is used to display step-by-step work flows of a clearly defined work process.","destroySteps":{"!description":"Destroys all the steps in the aggregation <code>steps<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RoadMap"},"detachStepSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>stepSelected<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RoadMap","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachStepExpanded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>stepExpanded<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RoadMap","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.commons.SearchProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.OpenSearchProvider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SearchProvider"},"sap.ui.commons.HorizontalDivider":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Divides the screen in visual areas.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.HorizontalDivider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the divider.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nDefines the type of the divider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Area<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.commons.HorizontalDividerType) -> sap.ui.commons.HorizontalDivider","parameters":{"sType":"type: sap.ui.commons.HorizontalDividerType, description: New value for property <code>type<\/code>"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the height of the divider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Medium<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.commons.HorizontalDividerHeight) -> sap.ui.commons.HorizontalDivider","parameters":{"sHeight":"type: sap.ui.commons.HorizontalDividerHeight, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the divider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.HorizontalDivider","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.HorizontalDivider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the height of the divider.\n\nDefault value is <code>Medium<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.HorizontalDividerHeight"},"!constructorDescription":"Constructor for a new HorizontalDivider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getType type} : sap.ui.commons.HorizontalDividerType (default: Area)<\/li>\n<li>{@link #getHeight height} : sap.ui.commons.HorizontalDividerHeight (default: Medium)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/HorizontalDivider","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Divides the screen in visual areas.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDefines the type of the divider.\n\nDefault value is <code>Area<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.HorizontalDividerType"}},"sap.ui.commons.Label":{"setRequired":{"!description":"Sets a new value for property <code>required<\/code>.\n\nAllows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired: Boolean) -> sap.ui.commons.Label","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nSpecifies whether a line wrapping width shall be displayed when the text value is longer than the width is.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nDetermines the alignment of the text. Available options are <code>Begin<\/code>, <code>Center<\/code>, <code>End<\/code>, <code>Left<\/code>, and <code>Right<\/code>.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the control width as common CSS-size (for example, px or % as unit).\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Label.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDesign design} : sap.ui.commons.LabelDesign (default: Standard)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getRequiredAtBegin requiredAtBegin} : boolean<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nSpecifies whether a line wrapping width shall be displayed when the text value is longer than the width is.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bWrapping: Boolean) -> sap.ui.commons.Label","parameters":{"bWrapping":"type: boolean, description: New value for property <code>wrapping<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Label<\/code> control.<br>\nThe control is used for labeling other controls. The API provides formatting options, for example, for bold display or alignment. A label can have an icon.","isRequired":{"!description":"Checks whether the Label itself or the associated control is marked as required (they are mutually exclusive).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Label.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDetermines the text to be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nDetermines the alignment of the text. Available options are <code>Begin<\/code>, <code>Center<\/code>, <code>End<\/code>, <code>Left<\/code>, and <code>Right<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.Label","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDetermines the text direction - right-to-left (RTL) and left-to-right (LTR).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.Label","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getRequiredAtBegin":{"!description":"Gets current value of property <code>requiredAtBegin<\/code>.\n\nDetermines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the control width as common CSS-size (for example, px or % as unit).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Label","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDetermines the icon to be displayed in the control.\nThis can be an URI to an image or an icon font URI.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Label with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDetermines the icon to be displayed in the control.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.Label","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"setRequiredAtBegin":{"!description":"Sets a new value for property <code>requiredAtBegin<\/code>.\n\nDetermines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bRequiredAtBegin: Boolean) -> sap.ui.commons.Label","parameters":{"bRequiredAtBegin":"type: boolean, description: New value for property <code>requiredAtBegin<\/code>"}},"!module":"sap/ui/commons/Label","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDefines whether the labels are in bold format.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.LabelDesign"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Label<\/code> control.<br>\nThe control is used for labeling other controls. The API provides formatting options, for example, for bold display or alignment. A label can have an icon.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDefines whether the labels are in bold format.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.commons.LabelDesign) -> sap.ui.commons.Label","parameters":{"sDesign":"type: sap.ui.commons.LabelDesign, description: New value for property <code>design<\/code>"}},"getLabelFor":{"!description":"ID of the element which is the current target of the association <code>labelFor<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setLabelFor":{"!description":"Sets the associated <code>labelFor<\/code>.","!static":false,"!category":"function","!type":"fn(oLabelFor: sap.ui.core.Control) -> sap.ui.commons.Label","parameters":{"oLabelFor":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this labelFor association; alternatively, an element instance may be given"}},"getRequired":{"!description":"Gets current value of property <code>required<\/code>.\n\nAllows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDetermines the text direction - right-to-left (RTL) and left-to-right (LTR).\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDetermines the text to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.Label","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.layout.AbsoluteLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.AbsoluteLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.AbsoluteLayout"},"sap.ui.commons.LabelDesign":{"!description":"Available label display modes.","!module":"sap/ui/commons/library","!category":"static class","Bold":{"!description":"Displays the label in bold.","!category":"enum","!type":"String"},"Standard":{"!description":"Displays the label in normal mode.","!category":"enum","!type":"String"}},"sap.ui.commons.form.FormElement":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>A form element is a combination of one label and different controls associated to this label.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.FormElement","parameters":{"bVisible":"type: boolean, description: new value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormElement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/FormElement.","getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible FormElements are not rendered.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/commons/form/FormElement","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>A form element is a combination of one label and different controls associated to this label.","!proto":"sap.ui.layout.form.FormElement","!category":"class"},"sap.ui.commons.MenuItemBase":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element <code>sap.ui.unified.MenuItemBase<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Abstract base class for menu item which provides common properties and events for all concrete item implementations.","!constructorDescription":"Abstract base class <code>MenuItemBase<\/code> for menu item elements. Please use concrete subclasses.","!module":"sap/ui/commons/MenuItemBase","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element <code>sap.ui.unified.MenuItemBase<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Abstract base class for menu item which provides common properties and events for all concrete item implementations.","!proto":"sap.ui.unified.MenuItemBase","!category":"class"},"sap.ui.commons.layout.BackgroundDesign":{"!description":"Background design (i.e. color), e.g. of a layout cell.","Plain":{"!description":"\nA plain but opaque background design.","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Fill2":{"!description":"\nAn opaque background design that looks medium filled.","!category":"enum","!type":"String"},"Header":{"!description":"\nA background design suitable for headers.","!category":"enum","!type":"String"},"Transparent":{"!description":"\nA transparent background.","!category":"enum","!type":"String"},"Fill1":{"!description":"\nAn opaque background design that looks dark filled.","!category":"enum","!type":"String"},"!category":"static class","Fill3":{"!description":"\nAn opaque background design that looks light filled.","!category":"enum","!type":"String"},"Border":{"!description":"\nA background design suitable for borders.","!category":"enum","!type":"String"}},"sap.ui.commons.ResponsiveContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ResponsiveContainer"},"sap.ui.commons.TriStateCheckBox":{"setSelectionState":{"!description":"Sets a new value for property <code>selectionState<\/code>.\n\nDefines the states of the checkbox\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Unchecked<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionState: sap.ui.commons.TriStateCheckBoxState) -> sap.ui.commons.TriStateCheckBox","parameters":{"sSelectionState":"type: sap.ui.commons.TriStateCheckBoxState, description: New value for property <code>selectionState<\/code>"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to flag the check box\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.TriStateCheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TriStateCheckBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new TriStateCheckBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectionState selectionState} : sap.ui.commons.TriStateCheckBoxState (default: Unchecked)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>TriStateCheckBox to reflect mixed state for checkboxes. The control can display three states, namely checked, unchecked and mixed. However, mixed state cannot be directly reached by user interaction on the particular control.\nIt can be only set by the control's public toggle function, to make a behaviour possible which is e.g. required in checkbox trees.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TriStateCheckBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.TriStateCheckBox","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text displayed next to the check box","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TriStateCheckBox","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"toggle":{"!description":"Method called whenever a user clicks on a tri-state checkbox","!static":false,"!category":"function","!type":"fn(destState: sap.ui.commons.TriStateCheckBoxState)","parameters":{"destState":"type: sap.ui.commons.TriStateCheckBoxState, description: destined selection state of checkbox"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.TriStateCheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TriStateCheckBox<\/code> itself.\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TriStateCheckBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TriStateCheckBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionState<\/code> of type <code>string<\/code>Checks whether the box is flagged or not flagged.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.TriStateCheckBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TriStateCheckBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TriStateCheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TriStateCheckBox","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to flag the check box\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.TriStateCheckBox","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/ui/commons/TriStateCheckBox","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>TriStateCheckBox to reflect mixed state for checkboxes. The control can display three states, namely checked, unchecked and mixed. However, mixed state cannot be directly reached by user interaction on the particular control.\nIt can be only set by the control's public toggle function, to make a behaviour possible which is e.g. required in checkbox trees.","getSelectionState":{"!description":"Gets current value of property <code>selectionState<\/code>.\n\nDefines the states of the checkbox\n\nDefault value is <code>Unchecked<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TriStateCheckBoxState"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text displayed next to the check box\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.TriStateCheckBox","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.RowRepeaterFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This element is used by the RowRepeater and allows to define a filter in this context along with the related data such as a text and an icon.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeaterFilter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe filter title if needed for display.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","!category":"class","getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe filter icon if needed for display.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe filter icon if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ui.commons.RowRepeaterFilter","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"!constructorDescription":"Constructor for a new RowRepeaterFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getFilters filters} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/RowRepeaterFilter","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This element is used by the RowRepeater and allows to define a filter in this context along with the related data such as a text and an icon.","setFilters":{"!description":"Sets a new value for property <code>filters<\/code>.\n\nThe set of filter objects.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFilters: Object) -> sap.ui.commons.RowRepeaterFilter","parameters":{"oFilters":"type: object, description: New value for property <code>filters<\/code>"}},"getFilters":{"!description":"Gets current value of property <code>filters<\/code>.\n\nThe set of filter objects.","!static":false,"!category":"function","!type":"fn() -> Object"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe filter title if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.RowRepeaterFilter","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.RoadMapStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Wizard<\/code> control.<br>Step used within a RoadMap Control.","getSubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Gets content of aggregation <code>subSteps<\/code>.\n\nSub steps for the current step. Will be displayed only in the case that the step is expanded. Otherwise, special arrows show the availability\nof sub steps. One level of sub steps supported.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RoadMapStep]"},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nStep is visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.commons.RoadMapStep","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RoadMapStep.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nLabel of the step","!static":false,"!category":"function","!type":"fn() -> String"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nStep is visible\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setExpanded":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Note that sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Sets a new value for property <code>expanded<\/code>.\n\nThis property is only relevant when using sub steps.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.ui.commons.RoadMapStep","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"!proto":"sap.ui.core.Element","removeAllSubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Removes all the controls from the aggregation <code>subSteps<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RoadMapStep]"},"removeSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Removes a subStep from the aggregation <code>subSteps<\/code>.","!static":false,"!category":"function","!type":"fn(vSubStep: Number | String | sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","parameters":{"vSubStep":"type: int|string|sap.ui.commons.RoadMapStep, description: The subStepto remove or its index or id"}},"!category":"class","getExpanded":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Note that sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Gets current value of property <code>expanded<\/code>.\n\nThis property is only relevant when using sub steps.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMapStep with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"insertSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Inserts a subStep into the aggregation <code>subSteps<\/code>.","!static":false,"!category":"function","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep, iIndex: Number) -> sap.ui.commons.RoadMapStep","parameters":{"oSubStep":"type: sap.ui.commons.RoadMapStep, description: the subStep to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the subStep should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the subStep is inserted at position 0; for a value\n             greater than the current size of the aggregation, the subStep is inserted at\n             the last position"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSpecifies whether the user shall be allowed to click a step, or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RoadMapStep","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new RoadMapStep.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubSteps subSteps} : sap.ui.commons.RoadMapStep[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/RoadMapStep","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Wizard<\/code> control.<br>Step used within a RoadMap Control.","addSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Adds some subStep to the aggregation <code>subSteps<\/code>.","!static":false,"!category":"function","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","parameters":{"oSubStep":"type: sap.ui.commons.RoadMapStep, description: the subStep to add; if empty, nothing is inserted"}},"destroySubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Destroys all the subSteps in the aggregation <code>subSteps<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RoadMapStep"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSpecifies whether the user shall be allowed to click a step, or not\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nLabel of the step\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.commons.RoadMapStep","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"indexOfSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Checks for the provided <code>sap.ui.commons.RoadMapStep<\/code> in the aggregation <code>subSteps<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep) -> Number","parameters":{"oSubStep":"type: sap.ui.commons.RoadMapStep, description: The subStep whose index is looked for"}}},"sap.ui.commons.RichTooltip":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>\nIs used to provide tool tips that can have long text, image and title. This tool tip extends the TooltipBase.","getImageSrc":{"!description":"Gets current value of property <code>imageSrc<\/code>.\n\nIf RichTooltip contains an image, this property is used to define the source path.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RichTooltip.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getValueStateText":{"!description":"This returns the previously set text. Since a FormattedTextView is used for\nrendering and stuff the corresponding property of the FormattedTextView is\nbeing read and returned. If no text was set an empty string is being\nreturned.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.TooltipBase","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTool tip title to be displayed in the header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.commons.RichTooltip","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","setImageAltText":{"!description":"Sets a new value for property <code>imageAltText<\/code>.\n\nThis is the alt text for the image\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sImageAltText: String) -> sap.ui.commons.RichTooltip","parameters":{"sImageAltText":"type: string, description: New value for property <code>imageAltText<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RichTooltip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setValueStateText":{"!description":"This sets an individual text for the ValueState of the parent element of the RichTooltip.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.RichTooltip","parameters":{"sText":"type: string, description: the text that should be shown as individual ValueState text"}},"!constructorDescription":"Constructor for a new RichTooltip.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getImageSrc imageSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getImageAltText imageAltText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.TooltipBase#constructor sap.ui.core.TooltipBase}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTool tip title to be displayed in the header.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/commons/RichTooltip","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>\nIs used to provide tool tips that can have long text, image and title. This tool tip extends the TooltipBase.","getImageAltText":{"!description":"Gets current value of property <code>imageAltText<\/code>.\n\nThis is the alt text for the image","!static":false,"!category":"function","!type":"fn() -> String"},"onAfterRendering":{"!description":"Calculates the height of the RichTooltip to set a proper min-height.\nAdditionally the ARIA attributes are set to the corresponding elements.","!static":false,"!category":"function","!type":"fn()"},"setImageSrc":{"!description":"Sets a new value for property <code>imageSrc<\/code>.\n\nIf RichTooltip contains an image, this property is used to define the source path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sImageSrc: sap.ui.core.URI) -> sap.ui.commons.RichTooltip","parameters":{"sImageSrc":"type: sap.ui.core.URI, description: New value for property <code>imageSrc<\/code>"}}},"sap.ui.commons.TextField":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"onfocusin":{"!description":"Event handler called when control is receiving the focus","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"setRequired":{"!description":"Sets a new value for property <code>required<\/code>.\n\nDepending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired: Boolean) -> sap.ui.commons.TextField","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').","!static":false,"!category":"function","!type":"fn() -> String"},"onsapfocusleave":{"!description":"Event handler called when control is losing the focus","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSwitches edit state of the control. Read-only fields have different colors, depending on theme setting.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFocusInfo":{"!description":"Returns an object representing the serialized focus information","!static":false,"!category":"function","!type":"fn() -> Object"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TextField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"onsapenter":{"!description":"Event handler called when enter key is pressed.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"getInputDomRef":{"!description":"Method for accessing the DOM Ref of the input element.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>Renders a input field for text input.","getImeMode":{"!description":"Gets current value of property <code>imeMode<\/code>.\n\nState of the Input Method Editor (IME).\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ImeMode"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setImeMode":{"!description":"Sets a new value for property <code>imeMode<\/code>.\n\nState of the Input Method Editor (IME).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sImeMode: sap.ui.core.ImeMode) -> sap.ui.commons.TextField","parameters":{"sImeMode":"type: sap.ui.core.ImeMode, description: New value for property <code>imeMode<\/code>"}},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.TextField","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getLiveValue":{"!description":"Returns the current value of the <code>TextField<\/code>.\nIn case of editing the <code>TextField<\/code> you can access the current value via this method.\nThe validated value is accessible via the property value.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nAccessibility role for the text field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Textbox<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.TextField","parameters":{"sAccessibleRole":"type: sap.ui.core.AccessibleRole, description: New value for property <code>accessibleRole<\/code>"}},"unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TextField"},"_checkChange":{"!description":"Compares the previous value with the current value and fires the change event\nif the TextField is editable and the value has changed.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"onkeyup":{"!description":"Event handler for keyup.\nfire the liveChange event","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TextField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.TextField","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDirection of the text. Possible values: \"rtl\", \"ltr\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TextField","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TextField<\/code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TextField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TextField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>The new / changed value of the <code>TextField<\/code>.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.TextField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"onselectstart":{"!description":"Event handler called when text selection starts.\nWhen the text field is disabled, the text should not be selectable, so cancel the event.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TextField","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/commons/TextField","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nFont type. valid values are Standard and Monospace.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Design"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>Renders a input field for text input.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nAccessibility role for the text field.\n\nDefault value is <code>Textbox<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleRole"},"setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHelpId: String) -> sap.ui.commons.TextField","parameters":{"sHelpId":"type: string, description: New value for property <code>helpId<\/code>"}},"bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.TextField","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.ui.commons.TextField","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>liveValue<\/code> of type <code>string<\/code>Current visible value of the <code>TextField<\/code>.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.TextField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.commons.TextField","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nPlaceholder for the text field.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TextField<\/code> itself.\n\nThis event if fired during typing into the <code>TextField<\/code> and returns the currently entered value.\n<b>Note:<\/b> This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TextField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TextField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new TextField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getImeMode imeMode} : sap.ui.core.ImeMode (default: Auto)<\/li>\n<li>{@link #getDesign design} : sap.ui.core.Design (default: Standard)<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole (default: Textbox)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TextField","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nPlaceholder for the text field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.ui.commons.TextField","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TextField","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TextField","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nText inside the <code>TextField<\/code>\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSwitches edit state of the control. Read-only fields have different colors, depending on theme setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.TextField","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nFont type. valid values are Standard and Monospace.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.core.Design) -> sap.ui.commons.TextField","parameters":{"sDesign":"type: sap.ui.core.Design, description: New value for property <code>design<\/code>"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nText inside the <code>TextField<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.commons.TextField","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"getRequired":{"!description":"Gets current value of property <code>required<\/code>.\n\nDepending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDirection of the text. Possible values: \"rtl\", \"ltr\".\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.ui.commons.AutoComplete_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AutoComplete with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.AutoComplete"},"sap.ui.commons.TextArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TextArea<\/code> control.<br>Control to enter or display multible row text.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextArea.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nText wrapping. Possible values are: Soft, Hard, Off.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Wrapping"},"setExplanation":{"!description":"Sets a new value for property <code>explanation<\/code>.\n\ntext which appears, in case quick-help is switched on\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sExplanation: String) -> sap.ui.commons.TextArea","parameters":{"sExplanation":"type: string, description: New value for property <code>explanation<\/code>"}},"setLabeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>Sets a new value for property <code>labeledBy<\/code>.\n\nID of label control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabeledBy: String) -> sap.ui.commons.TextArea","parameters":{"sLabeledBy":"type: string, description: New value for property <code>labeledBy<\/code>"}},"!proto":"sap.ui.commons.TextField","!category":"class","getCursorPos":{"!description":"Gets current value of property <code>cursorPos<\/code>.\n\nPosition of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip","!static":false,"!category":"function","!type":"fn() -> Number"},"setCursorPos":{"!description":"Property setter for the cursor position","!static":false,"!category":"function","!type":"fn(iCursorPos: Number) -> sap.ui.commons.TextArea","parameters":{"iCursorPos":"type: int, description: cursor position"}},"getRows":{"!description":"Gets current value of property <code>rows<\/code>.\n\nNumber of Rows. This proprty is only used if Height is not used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of text field. When it is set (CSS-size such as % or px), this is the exact size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.TextArea","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"getExplanation":{"!description":"Gets current value of property <code>explanation<\/code>.\n\ntext which appears, in case quick-help is switched on","!static":false,"!category":"function","!type":"fn() -> String"},"getLabeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>Gets current value of property <code>labeledBy<\/code>.\n\nID of label control","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of text field. When it is set (CSS-size such as % or px), this is the exact size.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new TextArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getCols cols} : int<\/li>\n<li>{@link #getRows rows} : int<\/li>\n<li>{@link #getWrapping wrapping} : sap.ui.core.Wrapping<\/li>\n<li>{@link #getCursorPos cursorPos} : int<\/li>\n<li>{@link #getExplanation explanation} : string<\/li>\n<li>{@link #getLabeledBy labeledBy} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","!module":"sap/ui/commons/TextArea","setRows":{"!description":"Sets a new value for property <code>rows<\/code>.\n\nNumber of Rows. This proprty is only used if Height is not used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iRows: Number) -> sap.ui.commons.TextArea","parameters":{"iRows":"type: int, description: New value for property <code>rows<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TextArea<\/code> control.<br>Control to enter or display multible row text.","getCols":{"!description":"Gets current value of property <code>cols<\/code>.\n\nNumber of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nText wrapping. Possible values are: Soft, Hard, Off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWrapping: sap.ui.core.Wrapping) -> sap.ui.commons.TextArea","parameters":{"sWrapping":"type: sap.ui.core.Wrapping, description: New value for property <code>wrapping<\/code>"}},"setCols":{"!description":"Sets a new value for property <code>cols<\/code>.\n\nNumber of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iCols: Number) -> sap.ui.commons.TextArea","parameters":{"iCols":"type: int, description: New value for property <code>cols<\/code>"}},"setMaxLength":{"!description":"Property setter for MaxLength","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.ui.commons.TextArea","parameters":{"iMaxLength":"type: int, description: maximal length of text"}}},"sap.ui.commons.layout.HorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.HorizontalLayout<\/code> control.<br>A layout that provides support for horizontal alignment of controls","extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.HorizontalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.HorizontalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.HorizontalLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new layout/HorizontalLayout.","!module":"sap/ui/commons/layout/HorizontalLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.HorizontalLayout<\/code> control.<br>A layout that provides support for horizontal alignment of controls","!proto":"sap.ui.layout.HorizontalLayout","!category":"class"},"sap.ui.commons.RichTooltip_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RichTooltip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RichTooltip"},"sap.ui.commons.TriStateCheckBoxState":{"!description":"States for TriStateCheckBox","Checked":{"!description":"checked value for tri-state checkbox","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Mixed":{"!description":"mixed state for tri-state checkbox","!category":"enum","!type":"String"},"Unchecked":{"!description":"unchecked, default value for tri-state checkbox","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.commons.ImageMap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Combination of image areas where at runtime these areas are starting points for hyperlinks or actions","setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nName for the image that serves as reference\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.commons.ImageMap","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ImageMap.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nName for the image that serves as reference","!static":false,"!category":"function","!type":"fn() -> String"},"removeArea":{"!description":"Removes a area from the aggregation <code>areas<\/code>.","!static":false,"!category":"function","!type":"fn(vArea: Number | String | sap.ui.commons.Area) -> sap.ui.commons.Area","parameters":{"vArea":"type: int|string|sap.ui.commons.Area, description: The areato remove or its index or id"}},"!proto":"sap.ui.core.Control","insertArea":{"!description":"Inserts a area into the aggregation <code>areas<\/code>.","!static":false,"!category":"function","!type":"fn(oArea: sap.ui.commons.Area, iIndex: Number) -> sap.ui.commons.ImageMap","parameters":{"oArea":"type: sap.ui.commons.Area, description: the area to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the area should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the area is inserted at position 0; for a value\n             greater than the current size of the aggregation, the area is inserted at\n             the last position"}},"!category":"class","addArea":{"!description":"Adds some area to the aggregation <code>areas<\/code>.","!static":false,"!category":"function","!type":"fn(oArea: sap.ui.commons.Area) -> sap.ui.commons.ImageMap","parameters":{"oArea":"type: sap.ui.commons.Area, description: the area to add; if empty, nothing is inserted"}},"destroyAreas":{"!description":"Destroys all the areas in the aggregation <code>areas<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ImageMap"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ImageMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.ImageMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ImageMap","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>areaId<\/code> of type <code>string<\/code>Id of clicked Area.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ImageMap","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new ImageMap.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAreas areas} : sap.ui.commons.Area[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfArea":{"!description":"Checks for the provided <code>sap.ui.commons.Area<\/code> in the aggregation <code>areas<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oArea: sap.ui.commons.Area) -> Number","parameters":{"oArea":"type: sap.ui.commons.Area, description: The area whose index is looked for"}},"!module":"sap/ui/commons/ImageMap","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Combination of image areas where at runtime these areas are starting points for hyperlinks or actions","removeAllAreas":{"!description":"Removes all the controls from the aggregation <code>areas<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Area]"},"getAreas":{"!description":"Gets content of aggregation <code>areas<\/code>.\n\nArea representing the reference to the target location","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Area]"},"createArea":{"!description":"Adds areas to the Image Map.\n\nEach argument must be either a JSon object or a list of objects or the area element or elements.","!static":false,"!category":"function","!type":"fn(content: Object) -> sap.ui.commons.ImageMap","parameters":{"content":"type: any, description: Area content to add"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.ImageMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ImageMap<\/code> itself.\n\nEvent for the areas that can be clicked in an ImageMap","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ImageMap","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ImageMap<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.commons.layout.VAlign":{"!description":"Vertical alignment, e.g. of a layout cell's content within the cell's borders.","!module":"sap/ui/commons/library","Top":{"!description":"\nAligned at the top.","!category":"enum","!type":"String"},"Bottom":{"!description":"\nAligned at the bottom.","!category":"enum","!type":"String"},"!category":"static class","Middle":{"!description":"\nVertically centered.","!category":"enum","!type":"String"}},"sap.ui.commons.MessageBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MessageBox<\/code> control.<br>Provides methods to create standard alerts, confirmation dialogs, or arbitrary message boxes.\n\nAs <code>MessageBox<\/code> is a static class, a <code>jQuery.sap.require(\"sap.ui.commons.MessageBox\");<\/code> statement\nmust be explicitly executed before the class can be used. Example:\n<pre>\n  jQuery.sap.require(\"sap.ui.commons.MessageBox\");\n  sap.ui.commons.MessageBox.show(\n      \"This message should appear in the message box.\",\n      sap.ui.commons.MessageBox.Icon.INFORMATION,\n      \"My message box title\",\n      [sap.ui.commons.MessageBox.Action.YES, sap.ui.commons.MessageBox.Action.NO],\n      function() { / * do something * / }\n  );\n<\/pre>","confirm":{"!description":"Displays a confirmation dialog box with the given message, a question icon,\nan OK button, and a Cancel button. If a callback is given, it is called after the\nalert box has been closed by the user via one of the buttons or via the close icon.\nThe callback is called with the following signature\n\n<pre>\n  function(bConfirmed)\n<\/pre>\n\nwhere bConfirmed is set to true when the user has activated the OK button.\n\nThe confirmation dialog box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback<\/code> to continue work after the\nuser closed the alert box.","!static":"true","!category":"function","!type":"fn(vMessage: String | sap.ui.core.Control, fnCallback?: fn(), sTitle?: String, sDialogId?: String)"},"Action":"sap.ui.commons.MessageBox.Action","!module":"sap/ui/commons/MessageBox","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MessageBox<\/code> control.<br>Provides methods to create standard alerts, confirmation dialogs, or arbitrary message boxes.\n\nAs <code>MessageBox<\/code> is a static class, a <code>jQuery.sap.require(\"sap.ui.commons.MessageBox\");<\/code> statement\nmust be explicitly executed before the class can be used. Example:\n<pre>\n  jQuery.sap.require(\"sap.ui.commons.MessageBox\");\n  sap.ui.commons.MessageBox.show(\n      \"This message should appear in the message box.\",\n      sap.ui.commons.MessageBox.Icon.INFORMATION,\n      \"My message box title\",\n      [sap.ui.commons.MessageBox.Action.YES, sap.ui.commons.MessageBox.Action.NO],\n      function() { / * do something * / }\n  );\n<\/pre>","alert":{"!description":"Displays an alert box with the given message and an OK button (no icons).\nIf a callback is given, it is called after the alert box has been closed\nby the user via the OK button or via the Close icon. The callback is called\nwith the following signature:\n\n<pre>\n  function ()\n<\/pre>\n\nThe alert box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback<\/code> to continue work after the\nuser closed the alert box.","!static":"true","!category":"function","!type":"fn(vMessage: String | sap.ui.core.Control, fnCallback?: fn(), sTitle?: String, sDialogId?: String)"},"show":{"!description":"Creates and displays a simple message box with the given text and buttons, and optionally other parts.\nAfter the user has selected a button or closed the message box using the close icon, the <code>callback<\/code>\nfunction is invoked when given.\n\nThe only mandatory parameter is <code>vMessage<\/code>. Either a string with the corresponding text or even\na layout control could be provided.\n\nThe created dialog box is executed asynchronously. When it has been created and registered for rendering,\nthis function returns without waiting for a user reaction.\n\nWhen applications have to react on the users choice, they have to provide a callback function and\npostpone any reaction on the user choice until that callback is triggered.\n\nThe signature of the callback is\n\n  function (oAction);\n\nwhere <code>oAction<\/code> is the button that the user has pressed. When the user has pressed the close button,\na MessageBox.Action.Close is returned.","!static":"true","!category":"function","!type":"fn(vMessage: String | sap.ui.core.Control, oIcon?: sap.ui.commons.MessageBox.Icon, sTitle?: String, vActions?: [sap.ui.commons.MessageBox.Action | sap.ui.commons.MessageBox.Action], fnCallback?: fn(), oDefaultAction?: sap.ui.commons.MessageBox.Action, sDialogId?: String)"},"!category":"namespace","Icon":"sap.ui.commons.MessageBox.Icon"},"sap.ui.commons.MessageToast_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageToast with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageToast"},"sap.ui.commons.enums.BorderDesign":{"!description":"Value set for the border design of areas","!module":"sap/ui/commons/library","!category":"static class","Box":{"!description":"Draws the border as a box around the area","!category":"enum","!type":"String"},"None":{"!description":"Suppresses the border","!category":"enum","!type":"String"}},"sap.ui.commons.layout.Separation":{"!description":"Separation, e.g. of a layout cell from its neighbor, via a vertical gutter of\ndefined width, with or without a vertical line in its middle.","Small":{"!description":"\nA small (17px) vertical gutter without a vertical line.","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","SmallWithLine":{"!description":"\nA small (17px) vertical gutter with a vertical line in its middle.","!category":"enum","!type":"String"},"Medium":{"!description":"\nA medium (31px) vertical gutter without a vertical line.","!category":"enum","!type":"String"},"Large":{"!description":"\nA large (63px) vertical gutter without a vertical line.","!category":"enum","!type":"String"},"LargeWithLine":{"!description":"\nA large (63px) vertical gutter with a vertical line in its middle.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"\nNo gutter at all (0px), and without a vertical line, of course.","!category":"enum","!type":"String"},"MediumWithLine":{"!description":"\nA medium (31px) vertical gutter with a vertical line in its middle.","!category":"enum","!type":"String"}},"sap.ui.commons.Carousel":{"getFocusDomRef":{"!description":"Returns the focused DOM element","!static":false,"!category":"function","!type":"fn() -> jQuery"},"setDefaultItemWidth":{"!description":"Sets a new value for property <code>defaultItemWidth<\/code>.\n\nDefault width of the item in a carousel if no height can be determined\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>150<\/code>.","!static":false,"!category":"function","!type":"fn(iDefaultItemWidth: Number) -> sap.ui.commons.Carousel","parameters":{"iDefaultItemWidth":"type: int, description: New value for property <code>defaultItemWidth<\/code>"}},"bindContent":{"!description":"Binds aggregation <code>content<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.Carousel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getFirstVisibleIndex":{"!description":"Gets current value of property <code>firstVisibleIndex<\/code>.\n\nThe index of the element in the content aggreation which is displayed first on rendering\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nControls which are displayed inside the Carousel","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getHandleSize":{"!description":"Gets current value of property <code>handleSize<\/code>.\n\nDetermines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)\n\nDefault value is <code>22<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the Carousel","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHandleSize":{"!description":"Sets a new value for property <code>handleSize<\/code>.\n\nDetermines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>22<\/code>.","!static":false,"!category":"function","!type":"fn(iHandleSize: Number) -> sap.ui.commons.Carousel","parameters":{"iHandleSize":"type: int, description: New value for property <code>handleSize<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the Carousel","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Carousel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOrientation orientation} : sap.ui.commons.enums.Orientation (default: horizontal)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDefaultItemHeight defaultItemHeight} : int (default: 150)<\/li>\n<li>{@link #getDefaultItemWidth defaultItemWidth} : int (default: 150)<\/li>\n<li>{@link #getAnimationDuration animationDuration} : int (default: 500)<\/li>\n<li>{@link #getVisibleItems visibleItems} : int<\/li>\n<li>{@link #getHandleSize handleSize} : int (default: 22)<\/li>\n<li>{@link #getFirstVisibleIndex firstVisibleIndex} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getOrientation":{"!description":"Gets current value of property <code>orientation<\/code>.\n\nDetermines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"\n\nDefault value is <code>horizontal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.enums.Orientation"},"setVisibleItems":{"!description":"Sets a new value for property <code>visibleItems<\/code>.\n\nIf defined, the carousel displays the number of items defined. Items will be resized to fit the area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iVisibleItems: Number) -> sap.ui.commons.Carousel","parameters":{"iVisibleItems":"type: int, description: New value for property <code>visibleItems<\/code>"}},"showNext":{"!description":"Shows the next item in carousel. This can be only used after the component is rendered.","!static":false,"!category":"function","!type":"fn()"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Carousel"},"getDefaultItemWidth":{"!description":"Gets current value of property <code>defaultItemWidth<\/code>.\n\nDefault width of the item in a carousel if no height can be determined\n\nDefault value is <code>150<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"showPrevious":{"!description":"Shows the previous item in carousel. This can be only used after the component is rendered.","!static":false,"!category":"function","!type":"fn()"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Carousel<\/code> control.<br>Carousel holds multiple controls and displays them vertically or horizontally next to each other. You can define how many content items should be displayed at once or let the Carousel determine that for you. Navigation is done through buttons or keys.","setOrientation":{"!description":"Sets a new value for property <code>orientation<\/code>.\n\nDetermines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>horizontal<\/code>.","!static":false,"!category":"function","!type":"fn(sOrientation: sap.ui.commons.enums.Orientation) -> sap.ui.commons.Carousel","parameters":{"sOrientation":"type: sap.ui.commons.enums.Orientation, description: New value for property <code>orientation<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Carousel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setAnimationDuration":{"!description":"Sets a new value for property <code>animationDuration<\/code>.\n\nDuration for animation when navigating through the contents of the Carousel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>500<\/code>.","!static":false,"!category":"function","!type":"fn(iAnimationDuration: Number) -> sap.ui.commons.Carousel","parameters":{"iAnimationDuration":"type: int, description: New value for property <code>animationDuration<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Carousel","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"unbindContent":{"!description":"Unbinds aggregation <code>content<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Carousel"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDetermines the height of the Carousel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Carousel","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the width of the Carousel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Carousel","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Carousel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getDefaultItemHeight":{"!description":"Gets current value of property <code>defaultItemHeight<\/code>.\n\nDefault height of the item in a carousel if no height can be determined\n\nDefault value is <code>150<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"calculateAndSetSize":{"!description":"Calculates and sets the size of the carousel, its items and its buttons","!static":false,"!category":"function","!type":"fn()"},"onswipeleft":{"!description":"If the device supports touch gestures and left swipe is triggered shows the next carousel item","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: undefined"}},"setDefaultItemHeight":{"!description":"Sets a new value for property <code>defaultItemHeight<\/code>.\n\nDefault height of the item in a carousel if no height can be determined\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>150<\/code>.","!static":false,"!category":"function","!type":"fn(iDefaultItemHeight: Number) -> sap.ui.commons.Carousel","parameters":{"iDefaultItemHeight":"type: int, description: New value for property <code>defaultItemHeight<\/code>"}},"!module":"sap/ui/commons/Carousel","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Carousel<\/code> control.<br>Carousel holds multiple controls and displays them vertically or horizontally next to each other. You can define how many content items should be displayed at once or let the Carousel determine that for you. Navigation is done through buttons or keys.","showElementWithId":{"!description":"Shows the element with the specified Id. This can be only used after the component is rendered.","!static":false,"!category":"function","!type":"fn(sElementId: String)","parameters":{"sElementId":"type: string, description: Id of the element to slide to."}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Carousel","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"setFirstVisibleIndex":{"!description":"Setter for property <code>firstVisibleIndex<\/code>.\n\nDefault value is <code>0<\/code>","!static":false,"!category":"function","!type":"fn(iFirstVisibleIndex: Number) -> sap.ui.commons.Carousel","parameters":{"iFirstVisibleIndex":"type: int, description: new value for property <code>firstVisibleIndex<\/code>"}},"getAnimationDuration":{"!description":"Gets current value of property <code>animationDuration<\/code>.\n\nDuration for animation when navigating through the contents of the Carousel\n\nDefault value is <code>500<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getVisibleItems":{"!description":"Gets current value of property <code>visibleItems<\/code>.\n\nIf defined, the carousel displays the number of items defined. Items will be resized to fit the area.","!static":false,"!category":"function","!type":"fn() -> Number"},"onswiperight":{"!description":"If the device supports touch gestures and right swipe is triggered shows the previous carousel item","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: undefined"}}},"sap.ui.commons.form.GridContainerData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridContainerData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridContainerData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridContainerData"},"sap.ui.commons.InPlaceEdit":{"setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.InPlaceEdit","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent control of the InPlaceEdit.\nThe following controls are allowed:\nTextField, ComboBox, DropdownBox and Link","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","!category":"class","setTooltip":{"!description":"Sets a new tooltip for this InPlaceEdit. The tooltip can either be a simple string\n(which in most cases will be rendered as the <code>title<\/code> attribute of this\nElement) or an instance of {@link sap.ui.core.TooltipBase}.\n\nIf a new tooltip is set, any previously set tooltip is deactivated.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case.","!static":false,"!category":"function","!type":"fn(oTooltip: String | sap.ui.core.TooltipBase) -> sap.ui.commons.InPlaceEdit","parameters":{"oTooltip":"type: string|sap.ui.core.TooltipBase, description: Tooltip as string or RichTooltip."}},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.InPlaceEdit<\/code> itself.\n\nThis event if fired during typing into the InPlaceEdit and returns the currently entered value. This is not the content of the value property. The value property is only updated by ENTER and by leaving the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.InPlaceEdit","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.InPlaceEdit<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUndoEnabled":{"!description":"Sets a new value for property <code>undoEnabled<\/code>.\n\nIf undo is enabled after changing the text an undo button appears.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUndoEnabled: Boolean) -> sap.ui.commons.InPlaceEdit","parameters":{"bUndoEnabled":"type: boolean, description: New value for property <code>undoEnabled<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.InPlaceEdit","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new InPlaceEdit.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getUndoEnabled undoEnabled} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.TextViewDesign (default: Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTooltip":{"!description":"Returns the tooltip for this InPlaceEdit if any or an undefined value.\nThe tooltip can either be a simple string or a subclass of\n{@link sap.ui.core.TooltipBase}.\n\nCallers that are only interested in tooltips of type string (e.g. to render\nthem as a <code>title<\/code> attribute), should call the convenience method\n{@link #getTooltip_AsString} instead. If they want to get a tooltip text no\nmatter where it comes from (be it a string tooltip or the text from a TooltipBase\ninstance) then they could call {@link #getTooltip_Text} instead.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case.","!static":false,"!category":"function","!type":"fn() -> String | sap.ui.core.TooltipBase"},"getUndoEnabled":{"!description":"Gets current value of property <code>undoEnabled<\/code>.\n\nIf undo is enabled after changing the text an undo button appears.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.InPlaceEdit"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>The InPlaceEdit is a functionality to have text in display mode that can be changed in place.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.InPlaceEdit.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.InPlaceEdit","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.InPlaceEdit","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.InPlaceEdit<\/code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the InPlaceEdit or the Enter key is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.InPlaceEdit","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.InPlaceEdit<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>The new / changed value of the InPlaceEdit.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.InPlaceEdit","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.InPlaceEdit with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/commons/InPlaceEdit","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDefines the visual appearance of the control.\nCurrently this is not supported for Labels.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TextViewDesign"},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>The InPlaceEdit is a functionality to have text in display mode that can be changed in place.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDefines the visual appearance of the control.\nCurrently this is not supported for Labels.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.commons.TextViewDesign) -> sap.ui.commons.InPlaceEdit","parameters":{"sDesign":"type: sap.ui.commons.TextViewDesign, description: New value for property <code>design<\/code>"}},"clearOldText":{"!description":"Clear the old text after a change to disable the undo functionality. If undoEnabled is false this has no effect.","!static":false,"!category":"function","!type":"fn()"},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>liveValue<\/code> of type <code>string<\/code>Current value of the Textfield.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.InPlaceEdit","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.ui.commons.MessageBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageBar"},"sap.ui.commons.TabStrip":{"fireClose":{"!description":"Fires event <code>close<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>index<\/code> of type <code>int<\/code>The index of the closed tab.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.TabStrip","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"addTab":{"!description":"Adds some tab to the aggregation <code>tabs<\/code>.","!static":false,"!category":"function","!type":"fn(oTab: sap.ui.commons.Tab) -> sap.ui.commons.TabStrip","parameters":{"oTab":"type: sap.ui.commons.Tab, description: the tab to add; if empty, nothing is inserted"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>index<\/code> of type <code>int<\/code>The index of the selected tab.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.TabStrip","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TabStrip<\/code> itself.\n\nFires when the user selects a tab.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TabStrip","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TabStrip<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","insertTab":{"!description":"Inserts a tab into the aggregation <code>tabs<\/code>.","!static":false,"!category":"function","!type":"fn(oTab: sap.ui.commons.Tab, iIndex: Number) -> sap.ui.commons.TabStrip","parameters":{"oTab":"type: sap.ui.commons.Tab, description: the tab to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the tab should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the tab is inserted at position 0; for a value\n             greater than the current size of the aggregation, the tab is inserted at\n             the last position"}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the width of the bar and content area.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getEnableTabReordering":{"!description":"Gets current value of property <code>enableTabReordering<\/code>.\n\nSpecifies whether tab reordering is enabled.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyTabs":{"!description":"Destroys all the tabs in the aggregation <code>tabs<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TabStrip"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nSpecifies the height of the tab bar and content area.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new TabStrip.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSelectedIndex selectedIndex} : int (default: 0)<\/li>\n<li>{@link #getEnableTabReordering enableTabReordering} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTabs tabs} : sap.ui.commons.Tab[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","createTab":{"!description":"Creates a Tab and adds it to the TabStrip.","!static":false,"!category":"function","!type":"fn(sText: String, oContent: sap.ui.core.Control) -> sap.ui.commons.Tab","parameters":{"oContent":"type: sap.ui.core.Control, description: Defines the root control of the content area","sText":"type: string, description: Defines the title text of the newly created tab"}},"attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>close<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TabStrip<\/code> itself.\n\nFires when the user closes a tab.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TabStrip","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TabStrip<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"closeTab":{"!description":"Closes a tab (if the tab is selected, the next one will be selected;\nif it's the last tab, the previous one will be selected).\n\nThis method should be called if the close event is fired.\nIt can not be called automatically because the consumer might need to run some logic before the tab is closed.","!static":false,"!category":"function","!type":"fn(iIndex: Number)","parameters":{"iIndex":"type: int, description: The index of the tab that should be closed"}},"removeTab":{"!description":"Removes a tab from the aggregation <code>tabs<\/code>.","!static":false,"!category":"function","!type":"fn(vTab: Number | String | sap.ui.commons.Tab) -> sap.ui.commons.Tab","parameters":{"vTab":"type: int|string|sap.ui.commons.Tab, description: The tabto remove or its index or id"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TabContainer<\/code> control.<br>\nTabStrip represents a container for tab controls, which contain the content and generally other controls.\nThe user switches between the tabs to display the content.","detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>close<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TabStrip","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TabStrip.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"onBeforeRendering":{"!description":"Called before the rendering of the control is started.","!static":false,"!category":"function","!type":"fn()"},"setEnableTabReordering":{"!description":"Sets whether tab reordering is enabled.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.commons.TabStrip","parameters":{"bValue":"type: boolean, description: The value."}},"indexOfTab":{"!description":"Checks for the provided <code>sap.ui.commons.Tab<\/code> in the aggregation <code>tabs<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTab: sap.ui.commons.Tab) -> Number","parameters":{"oTab":"type: sap.ui.commons.Tab, description: The tab whose index is looked for"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nSpecifies the height of the tab bar and content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.TabStrip","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the width of the bar and content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TabStrip","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TabStrip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getTabs":{"!description":"Gets content of aggregation <code>tabs<\/code>.\n\nThe tabs contained in the TabStrip.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Tab]"},"!module":"sap/ui/commons/TabStrip","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TabContainer<\/code> control.<br>\nTabStrip represents a container for tab controls, which contain the content and generally other controls.\nThe user switches between the tabs to display the content.","removeAllTabs":{"!description":"Removes all the controls from the aggregation <code>tabs<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Tab]"},"getSelectedIndex":{"!description":"Gets current value of property <code>selectedIndex<\/code>.\n\nSpecifies the index of the currently selected tab.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TabStrip","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSelectedIndex":{"!description":"Sets a new value for property <code>selectedIndex<\/code>.\n\nSpecifies the index of the currently selected tab.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.TabStrip","parameters":{"iSelectedIndex":"type: int, description: New value for property <code>selectedIndex<\/code>"}}},"sap.ui.commons.form.GridLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This Layout implements a guideline 2.0 grid. This can be a 16 column grid or an 8 column grid.\n\nTo adjust the content inside the GridLayout GridContainerData and GridElementData could be used.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/GridLayout.","!module":"sap/ui/commons/form/GridLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This Layout implements a guideline 2.0 grid. This can be a 16 column grid or an 8 column grid.\n\nTo adjust the content inside the GridLayout GridContainerData and GridElementData could be used.","!proto":"sap.ui.layout.form.GridLayout","!category":"class"},"sap.ui.commons.Image":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Image<\/code> control.<br>A wrapper around the IMG tag. The image can be loaded from a remote or local server.\nThere are various size setting options available, and the images can be combined with actions.","setSrc":{"!description":"Sets a new value for property <code>src<\/code>.\n\nRelative or absolute path to URL where the image file is stored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSrc: sap.ui.core.URI) -> sap.ui.commons.Image","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"}},"setUseMap":{"!description":"Sets a new value for property <code>useMap<\/code>.\n\nThe name of the image map that defines the clickable areas\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUseMap: String) -> sap.ui.commons.Image","parameters":{"sUseMap":"type: string, description: New value for property <code>useMap<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Image.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setAlt":{"!description":"Sets a new value for property <code>alt<\/code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAlt: String) -> sap.ui.commons.Image","parameters":{"sAlt":"type: string, description: New value for property <code>alt<\/code>"}},"getSrc":{"!description":"Gets current value of property <code>src<\/code>.\n\nRelative or absolute path to URL where the image file is stored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!proto":"sap.ui.core.Control","!category":"class","getUseMap":{"!description":"Gets current value of property <code>useMap<\/code>.\n\nThe name of the image map that defines the clickable areas","!static":false,"!category":"function","!type":"fn() -> String"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Image","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Image","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Image with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDecorative":{"!description":"Sets a new value for property <code>decorative<\/code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDecorative: Boolean) -> sap.ui.commons.Image","parameters":{"bDecorative":"type: boolean, description: New value for property <code>decorative<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.Image<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Image","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Image","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Image.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getUseMap useMap} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/Image","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Image<\/code> control.<br>A wrapper around the IMG tag. The image can be loaded from a remote or local server.\nThere are various size setting options available, and the images can be combined with actions.","getDecorative":{"!description":"Gets current value of property <code>decorative<\/code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAlt":{"!description":"Gets current value of property <code>alt<\/code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!static":false,"!category":"function","!type":"fn() -> String"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.Image<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Image<\/code> itself.\n\nEvent is fired when the user clicks on the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Image","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Image<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.commons.form.ResponsiveLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Renders a form with responsive layout. Internally the ResponsiveFlowLayout is used.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.ResponsiveLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.ResponsiveLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.ResponsiveLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/ResponsiveLayout.","!module":"sap/ui/commons/form/ResponsiveLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Renders a form with responsive layout. Internally the ResponsiveFlowLayout is used.","!proto":"sap.ui.layout.form.ResponsiveLayout","!category":"class"},"sap.ui.commons.Message_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Message with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Message"},"sap.ui.commons.layout.MatrixLayoutRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayoutRow"},"sap.ui.commons.FileUploaderParameter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element sap.ui.unified.FileUploaderParameter of the library sap.ui.unified instead.<br>Represents a parameter for the FileUploader which is rendered as a hidden inputfield.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploaderParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploaderParameter.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FileUploaderParameter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FileUploaderParameter.","!module":"sap/ui/commons/FileUploaderParameter","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element sap.ui.unified.FileUploaderParameter of the library sap.ui.unified instead.<br>Represents a parameter for the FileUploader which is rendered as a hidden inputfield.","!proto":"sap.ui.unified.FileUploaderParameter","!category":"class"},"sap.ui.commons.FormattedTextView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FormattedTextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FormattedTextView"},"sap.ui.commons.RowRepeater":{"detachPage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>page<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachResize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>resize<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setFixedRowHeight":{"!description":"Sets a new value for property <code>fixedRowHeight<\/code>.\n\nRow height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sFixedRowHeight: sap.ui.core.CSSSize) -> sap.ui.commons.RowRepeater","parameters":{"sFixedRowHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>fixedRowHeight<\/code>"}},"setNumberOfRows":{"!description":"Setter for property <code>numberOfRows<\/code>.\n\nDefault value is <code>5<\/code>","!static":false,"!category":"function","!type":"fn(iNumberOfRows: Number) -> sap.ui.commons.RowRepeater","parameters":{"iNumberOfRows":"type: int, description: new value for property <code>numberOfRows<\/code>"}},"firePage":{"!description":"Fires event <code>page<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>currentPage<\/code> of type <code>int<\/code>The value of the currentPage property after the change.<\/li>\n<li><code>previousPage<\/code> of type <code>int<\/code>The value of the currentPage property before the change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getNoData":{"!description":"Gets content of aggregation <code>noData<\/code>.\n\nThis control is shown, in case there is no data available to be displayed in the RowRepeater.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"addSorter":{"!description":"Adds some sorter to the aggregation <code>sorters<\/code>.","!static":false,"!category":"function","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter) -> sap.ui.commons.RowRepeater","parameters":{"oSorter":"type: sap.ui.commons.RowRepeaterSorter, description: the sorter to add; if empty, nothing is inserted"}},"setThreshold":{"!description":"Sets a new value for property <code>threshold<\/code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iThreshold: Number) -> sap.ui.commons.RowRepeater","parameters":{"iThreshold":"type: int, description: New value for property <code>threshold<\/code>"}},"getShowMoreSteps":{"!description":"Gets current value of property <code>showMoreSteps<\/code>.\n\nStep size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireSort":{"!description":"Fires event <code>sort<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>sorterId<\/code> of type <code>string<\/code>The ID of the sorter that has just been applied.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireFilter":{"!description":"Fires event <code>filter<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>filterId<\/code> of type <code>string<\/code>The ID of the filter that has just been applied.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getTitle":{"!description":"Gets content of aggregation <code>title<\/code>.\n\nTitle to be displayed in top left corner. Either text or icon.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Title"},"removeAllFilters":{"!description":"Removes all the controls from the aggregation <code>filters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RowRepeaterFilter]"},"detachSort":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sort<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllRows":{"!description":"Removes all the controls from the aggregation <code>rows<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getFixedRowHeight":{"!description":"Gets current value of property <code>fixedRowHeight<\/code>.\n\nRow height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getFilters":{"!description":"Gets content of aggregation <code>filters<\/code>.\n\nFilters to be provided in toolbar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RowRepeaterFilter]"},"attachPage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>page<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when paging was executed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"triggerSort":{"!description":"Sort the data.","!static":false,"!category":"function","!type":"fn(sId: String)","parameters":{"sId":"type: string, description: The ID of the sorter."}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This control displays items in a stacked list format, allowing the user to page in order to see more items or to use the offered filtering and sorting capabilities in order to manipulate the displayed data.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeater.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyRows":{"!description":"Destroys all the rows in the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeater"},"fireResize":{"!description":"Fires event <code>resize<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>numberOfRows<\/code> of type <code>int<\/code>The value of the numberOfRows property after the change.<\/li>\n<li><code>previousNumberOfRows<\/code> of type <code>int<\/code>The value of the numberOfRows property before the change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroyNoData":{"!description":"Destroys the noData in the aggregation <code>noData<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeater"},"setTitle":{"!description":"Sets the aggregated <code>title<\/code>.","!static":false,"!category":"function","!type":"fn(oTitle: sap.ui.core.Title) -> sap.ui.commons.RowRepeater","parameters":{"oTitle":"type: sap.ui.core.Title, description: The title to set"}},"attachFilter":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filter<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when a filter is set.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachResize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>resize<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when the number of rows was changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeater with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"gotoPage":{"!description":"Switch to specified page.","!static":false,"!category":"function","!type":"fn(iPageNumber: Number)","parameters":{"iPageNumber":"type: int, description: The index of the page to go to."}},"destroySorters":{"!description":"Destroys all the sorters in the aggregation <code>sorters<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeater"},"setNoData":{"!description":"Sets the aggregated <code>noData<\/code>.","!static":false,"!category":"function","!type":"fn(oNoData: sap.ui.core.Control) -> sap.ui.commons.RowRepeater","parameters":{"oNoData":"type: sap.ui.core.Control, description: The noData to set"}},"!module":"sap/ui/commons/RowRepeater","firstPage":{"!description":"Switch to first page.","!static":false,"!category":"function","!type":"fn()"},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nThe visual design of the control.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeaterDesign"},"insertFilter":{"!description":"Inserts a filter into the aggregation <code>filters<\/code>.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter, iIndex: Number) -> sap.ui.commons.RowRepeater","parameters":{"oFilter":"type: sap.ui.commons.RowRepeaterFilter, description: the filter to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the filter should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the filter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filter is inserted at\n             the last position"}},"removeSorter":{"!description":"Removes a sorter from the aggregation <code>sorters<\/code>.","!static":false,"!category":"function","!type":"fn(vSorter: Number | String | sap.ui.commons.RowRepeaterSorter) -> sap.ui.commons.RowRepeaterSorter","parameters":{"vSorter":"type: int|string|sap.ui.commons.RowRepeaterSorter, description: The sorterto remove or its index or id"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This control displays items in a stacked list format, allowing the user to page in order to see more items or to use the offered filtering and sorting capabilities in order to manipulate the displayed data.","detachFilter":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filter<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"unbindRows":{"!description":"Unbinds aggregation <code>rows<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeater"},"addFilter":{"!description":"Adds some filter to the aggregation <code>filters<\/code>.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter) -> sap.ui.commons.RowRepeater","parameters":{"oFilter":"type: sap.ui.commons.RowRepeaterFilter, description: the filter to add; if empty, nothing is inserted"}},"removeAllSorters":{"!description":"Removes all the controls from the aggregation <code>sorters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RowRepeaterSorter]"},"indexOfFilter":{"!description":"Checks for the provided <code>sap.ui.commons.RowRepeaterFilter<\/code> in the aggregation <code>filters<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter) -> Number","parameters":{"oFilter":"type: sap.ui.commons.RowRepeaterFilter, description: The filter whose index is looked for"}},"previousPage":{"!description":"Switch to previous page.","!static":false,"!category":"function","!type":"fn()"},"lastPage":{"!description":"Switch to last page.","!static":false,"!category":"function","!type":"fn()"},"nextPage":{"!description":"Switch to next page.","!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.core.Control","bindRows":{"!description":"Binds aggregation <code>rows<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RowRepeater","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"insertSorter":{"!description":"Inserts a sorter into the aggregation <code>sorters<\/code>.","!static":false,"!category":"function","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter, iIndex: Number) -> sap.ui.commons.RowRepeater","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the sorter should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the sorter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the sorter is inserted at\n             the last position","oSorter":"type: sap.ui.commons.RowRepeaterSorter, description: the sorter to insert; if empty, nothing is inserted"}},"removeFilter":{"!description":"Removes a filter from the aggregation <code>filters<\/code>.","!static":false,"!category":"function","!type":"fn(vFilter: Number | String | sap.ui.commons.RowRepeaterFilter) -> sap.ui.commons.RowRepeaterFilter","parameters":{"vFilter":"type: int|string|sap.ui.commons.RowRepeaterFilter, description: The filterto remove or its index or id"}},"triggerShowMore":{"!description":"The <code>triggerShowMore<\/code> function increments the number of rows by the\nvalue of <code>showMoreSteps<\/code>.\n\nThis method will only trigger a showMore if the property showMoreSteps is set.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeater"},"!category":"class","getRows":{"!description":"Gets content of aggregation <code>rows<\/code>.\n\nRows to be repeated.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addRow":{"!description":"Adds some row to the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.core.Control) -> sap.ui.commons.RowRepeater","parameters":{"oRow":"type: sap.ui.core.Control, description: the row to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new RowRepeater.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNumberOfRows numberOfRows} : int (default: 5)<\/li>\n<li>{@link #getCurrentPage currentPage} : int (default: 1)<\/li>\n<li>{@link #getShowMoreSteps showMoreSteps} : int (default: 0)<\/li>\n<li>{@link #getFixedRowHeight fixedRowHeight} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.RowRepeaterDesign (default: Standard)<\/li>\n<li>{@link #getThreshold threshold} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getTitle title} : sap.ui.core.Title<\/li>\n<li>{@link #getFilters filters} : sap.ui.commons.RowRepeaterFilter[]<\/li>\n<li>{@link #getSorters sorters} : sap.ui.commons.RowRepeaterSorter[]<\/li>\n<li>{@link #getNoData noData} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:filter filter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sort sort} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:page page} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:resize resize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfSorter":{"!description":"Checks for the provided <code>sap.ui.commons.RowRepeaterSorter<\/code> in the aggregation <code>sorters<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter) -> Number","parameters":{"oSorter":"type: sap.ui.commons.RowRepeaterSorter, description: The sorter whose index is looked for"}},"getCurrentPage":{"!description":"Gets current value of property <code>currentPage<\/code>.\n\nThe index of the page currently displayed. The index starts at 1.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeRow":{"!description":"Removes a row from the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(vRow: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vRow":"type: int|string|sap.ui.core.Control, description: The rowto remove or its index or id"}},"getNumberOfRows":{"!description":"Gets current value of property <code>numberOfRows<\/code>.\n\nNumber of rows displayed.\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachSort":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sort<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when a sorting is applied.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setCurrentPage":{"!description":"Setter for property <code>currentPage<\/code>.","!static":false,"!category":"function","!type":"fn(iCurrentPage: Number) -> sap.ui.commons.RowRepeater","parameters":{"iCurrentPage":"type: int, description: new value for property <code>currentPage<\/code>"}},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.core.Control) -> Number","parameters":{"oRow":"type: sap.ui.core.Control, description: The row whose index is looked for"}},"getSorters":{"!description":"Gets content of aggregation <code>sorters<\/code>.\n\nSorters to be provided in secondary toolbar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.RowRepeaterSorter]"},"insertRow":{"!description":"Inserts a row into the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.RowRepeater","parameters":{"oRow":"type: sap.ui.core.Control, description: the row to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the row should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the row is inserted at position 0; for a value\n             greater than the current size of the aggregation, the row is inserted at\n             the last position"}},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nThe visual design of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.commons.RowRepeaterDesign) -> sap.ui.commons.RowRepeater","parameters":{"sDesign":"type: sap.ui.commons.RowRepeaterDesign, description: New value for property <code>design<\/code>"}},"resize":{"!description":"Resizes the row repeater by changing the number of displayed rows. This method will only resize the RowRepeater if the property showMoreSteps is set.","!static":false,"!category":"function","!type":"fn(iNumberOfRows: Number)","parameters":{"iNumberOfRows":"type: int, description: The new value of number of rows displayed."}},"destroyTitle":{"!description":"Destroys the title in the aggregation <code>title<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeater"},"getThreshold":{"!description":"Gets current value of property <code>threshold<\/code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.","!static":false,"!category":"function","!type":"fn() -> Number"},"setShowMoreSteps":{"!description":"Override the default behavior of <code>setShowMoreSteps<\/code> to update the\npaging mode flag. Any change to the paging mode flag will result in the current\npage being set to the first page.","!static":false,"!category":"function","!type":"fn(iShowMoreSteps: Number) -> sap.ui.commons.RowRepeater","parameters":{"iShowMoreSteps":"type: int, description: new value for property <code>showMoreSteps<\/code>"}},"destroyFilters":{"!description":"Destroys all the filters in the aggregation <code>filters<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RowRepeater"},"applyFilter":{"!description":"Applies a filter.","!static":false,"!category":"function","!type":"fn(sId: String)","parameters":{"sId":"type: string, description: The ID if the filter."}}},"sap.ui.commons.TextView":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nDisabled automatic wrapping of the text.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the TextView","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new TextView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.TextViewDesign (default: Standard)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getSemanticColor semanticColor} : sap.ui.commons.TextViewColor (default: Default)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TextView","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"unbindText":{"!description":"Unbinds property <code>text<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TextView"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nDisabled automatic wrapping of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bWrapping: Boolean) -> sap.ui.commons.TextView","parameters":{"bWrapping":"type: boolean, description: New value for property <code>wrapping<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is used to display some continous text. The control can inherit the text direction from its parent control.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextView.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help services.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.TextView","parameters":{"sAccessibleRole":"type: sap.ui.core.AccessibleRole, description: New value for property <code>accessibleRole<\/code>"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nText to be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.TextView","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDetermines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TextView","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the TextView\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TextView","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TextView","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TextView","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/commons/TextView","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDefines the visual appearance of the control.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TextViewDesign"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is used to display some continous text. The control can inherit the text direction from its parent control.","bindText":{"!description":"Binds property <code>text<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.TextView","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setSemanticColor":{"!description":"Sets a new value for property <code>semanticColor<\/code>.\n\nSemantic color of the text View\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sSemanticColor: sap.ui.commons.TextViewColor) -> sap.ui.commons.TextView","parameters":{"sSemanticColor":"type: sap.ui.commons.TextViewColor, description: New value for property <code>semanticColor<\/code>"}},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDefines the visual appearance of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.commons.TextViewDesign) -> sap.ui.commons.TextView","parameters":{"sDesign":"type: sap.ui.commons.TextViewDesign, description: New value for property <code>design<\/code>"}},"getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleRole"},"setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help services.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHelpId: String) -> sap.ui.commons.TextView","parameters":{"sHelpId":"type: string, description: New value for property <code>helpId<\/code>"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDetermines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"getSemanticColor":{"!description":"Gets current value of property <code>semanticColor<\/code>.\n\nSemantic color of the text View\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TextViewColor"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nText to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.TextView","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.PaginatorEvent":{"!description":"Distinct paginator event types","Goto":{"!description":"Go to page event","!category":"enum","!type":"String"},"Last":{"!description":"Last page event","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Next":{"!description":"Next page event","!category":"enum","!type":"String"},"Previous":{"!description":"Previous page event","!category":"enum","!type":"String"},"!category":"static class","First":{"!description":"First page event","!category":"enum","!type":"String"}},"sap.ui.commons.form.GridElementData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>The grid specific layout data for FormElement fields.\nThe width property of the elements is ignored since the width is defined by grid cells.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridElementData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridElementData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridElementData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/GridElementData.","!module":"sap/ui/commons/form/GridElementData","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>The grid specific layout data for FormElement fields.\nThe width property of the elements is ignored since the width is defined by grid cells.","!proto":"sap.ui.layout.form.GridElementData","!category":"class"},"sap.ui.commons.CheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.CheckBox"},"sap.ui.commons.Slider":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setTotalUnits":{"!description":"Sets a new value for property <code>totalUnits<\/code>.\n\nNumber of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iTotalUnits: Number) -> sap.ui.commons.Slider","parameters":{"iTotalUnits":"type: int, description: New value for property <code>totalUnits<\/code>"}},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setStepLabels":{"!description":"Sets a new value for property <code>stepLabels<\/code>.\n\nDisplay step numbers for the ticks on the slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStepLabels: Boolean) -> sap.ui.commons.Slider","parameters":{"bStepLabels":"type: boolean, description: New value for property <code>stepLabels<\/code>"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nUsing the slider interactively requires value \"true\".\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the horizontal slider.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Slider<\/code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Slider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Slider<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Slider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the vertical slider.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getLabels":{"!description":"Gets current value of property <code>labels<\/code>.\n\nLabels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setMin":{"!description":"Sets a new value for property <code>min<\/code>.\n\nMinimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fMin: Number) -> sap.ui.commons.Slider","parameters":{"fMin":"type: float, description: New value for property <code>min<\/code>"}},"!constructorDescription":"Constructor for a new <code>Slider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getMin min} : float (default: 0)<\/li>\n<li>{@link #getMax max} : float (default: 100)<\/li>\n<li>{@link #getValue value} : float (default: 50)<\/li>\n<li>{@link #getSmallStepWidth smallStepWidth} : float<\/li>\n<li>{@link #getTotalUnits totalUnits} : int<\/li>\n<li>{@link #getStepLabels stepLabels} : boolean (default: false)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getLabels labels} : string[]<\/li>\n<li>{@link #getVertical vertical} : boolean (default: false)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Slider","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getMin":{"!description":"Gets current value of property <code>min<\/code>.\n\nMinimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setLabels":{"!description":"Sets a new value for property <code>labels<\/code>.\n\nLabels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabels: [String]) -> sap.ui.commons.Slider","parameters":{"sLabels":"type: string[], description: New value for property <code>labels<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Slider<\/code> control.<br>The interactive control is displayed either as a horizontal or a vertical line with a pointer and units of measurement.\nUsers can move the pointer along the line to change values with graphical support.","setMax":{"!description":"Sets a new value for property <code>max<\/code>.\n\nMaximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn(fMax: Number) -> sap.ui.commons.Slider","parameters":{"fMax":"type: float, description: New value for property <code>max<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Slider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTotalUnits":{"!description":"Gets current value of property <code>totalUnits<\/code>.\n\nNumber of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMax":{"!description":"Gets current value of property <code>max<\/code>.\n\nMaximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getStepLabels":{"!description":"Gets current value of property <code>stepLabels<\/code>.\n\nDisplay step numbers for the ticks on the slider.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Slider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Slider<\/code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Slider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Slider<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>float<\/code>Current value of the slider after a change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Slider","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the vertical slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Slider","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the horizontal slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Slider","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Slider","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Slider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nCurrent value of the slider. (Position of the grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\n\nDefault value is <code>50<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Slider","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nUsing the slider interactively requires value \"true\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.Slider","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/ui/commons/Slider","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Slider<\/code> control.<br>The interactive control is displayed either as a horizontal or a vertical line with a pointer and units of measurement.\nUsers can move the pointer along the line to change values with graphical support.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nCurrent value of the slider. (Position of the grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>50<\/code>.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.ui.commons.Slider","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"setVertical":{"!description":"Sets a new value for property <code>vertical<\/code>.\n\nOrientation of slider\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bVertical: Boolean) -> sap.ui.commons.Slider","parameters":{"bVertical":"type: boolean, description: New value for property <code>vertical<\/code>"}},"getSmallStepWidth":{"!description":"Gets current value of property <code>smallStepWidth<\/code>.\n\nThe grip can only be moved in steps of this width.","!static":false,"!category":"function","!type":"fn() -> Number"},"getVertical":{"!description":"Gets current value of property <code>vertical<\/code>.\n\nOrientation of slider\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSmallStepWidth":{"!description":"Sets a new value for property <code>smallStepWidth<\/code>.\n\nThe grip can only be moved in steps of this width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fSmallStepWidth: Number) -> sap.ui.commons.Slider","parameters":{"fSmallStepWidth":"type: float, description: New value for property <code>smallStepWidth<\/code>"}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>float<\/code>Current value of the slider after a change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Slider","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.ui.commons.ButtonStyle":{"!description":"different styles for a button.","Emph":{"!description":"Button is emphasized.","!category":"enum","!type":"String"},"Reject":{"!description":"Reject button (normally red).","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Accept":{"!description":"Accept button (normally green).","!category":"enum","!type":"String"},"!category":"static class","Default":{"!description":"default style (no special styling).","!category":"enum","!type":"String"}},"sap.ui.commons.ToolbarSeparatorDesign":{"!description":"Design of the Toolbar Separator.","!module":"sap/ui/commons/library","!category":"static class","Standard":{"!description":"Standard Separator between controls","!category":"enum","!type":"String"},"FullHeight":{"!description":"100% height Separator before and after specific controls","!category":"enum","!type":"String"}},"sap.ui.commons.Link":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","focus":{"!description":"Puts the focus to the link.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getTarget":{"!description":"Gets current value of property <code>target<\/code>.\n\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new Link.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Link","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhether the link can be triggered by the user.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setTarget":{"!description":"Sets a new value for property <code>target<\/code>.\n\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTarget: String) -> sap.ui.commons.Link","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.Link<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Link<\/code> itself.\n\nEvent is fired when the user clicks the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Link","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Link<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Link<\/code> control.<br>\nProvides an absolute or relative reference to an internal or external URL. The classical target parameters are supported.\nAnother usage scenario is triggering an action, for example to open a popup window. In both cases, the link is a hypertext link.","getHref":{"!description":"Gets current value of property <code>href<\/code>.\n\nThe link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Link.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nLink text to be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHref":{"!description":"Sets a new value for property <code>href<\/code>.\n\nThe link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.commons.Link","parameters":{"sHref":"type: sap.ui.core.URI, description: New value for property <code>href<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Link","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Link","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Link with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.Link<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Link","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhether the link can be triggered by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Link","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/commons/Link","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Link<\/code> control.<br>\nProvides an absolute or relative reference to an internal or external URL. The classical target parameters are supported.\nAnother usage scenario is triggering an action, for example to open a popup window. In both cases, the link is a hypertext link.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHelpId: String) -> sap.ui.commons.Link","parameters":{"sHelpId":"type: string, description: New value for property <code>helpId<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nLink text to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.Link","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.Accordion":{"fireSectionsReorder":{"!description":"Fires event <code>sectionsReorder<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>movedSectionId<\/code> of type <code>string<\/code>ID of the moved section<\/li>\n<li><code>newIndex<\/code> of type <code>int<\/code>New index of the moved section<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeAllSections":{"!description":"Removes all the controls from the aggregation <code>sections<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.AccordionSection]"},"fireSectionOpen":{"!description":"Fires event <code>sectionOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openSectionId<\/code> of type <code>string<\/code>ID of the opened section<\/li>\n<li><code>closeSectionIds<\/code> of type <code>string[]<\/code>IDs of the sections to be closed. Can be initial in the case of no previously opened section.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSectionClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sectionClose<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user closes a section.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Accordion<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWhen the specified width is less than the width of a section content, a horizontal scroll bar is provided.\n\nDefault value is <code>200px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setOpenedSectionsId":{"!description":"Redefinition of the method to add additional handling","!static":false,"!category":"function","!type":"fn(sOpenedSectionsId: String) -> sap.ui.commons.Accordion","parameters":{"sOpenedSectionsId":"type: string, description: New value for property openedSectionsId"}},"attachSectionsReorder":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sectionsReorder<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user changes the position of a section.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Accordion<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"closeSection":{"!description":"Closes a section and opens the default one","!static":false,"!category":"function","!type":"fn(sSectionId: String)","parameters":{"sSectionId":"type: string, description: Id of the section that is being closed"}},"openSection":{"!description":"Opens a section","!static":false,"!category":"function","!type":"fn(sSectionId: String)","parameters":{"sSectionId":"type: string, description: Id of the section that is being opened"}},"indexOfSection":{"!description":"Checks for the provided <code>sap.ui.commons.AccordionSection<\/code> in the aggregation <code>sections<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSection: sap.ui.commons.AccordionSection) -> Number","parameters":{"oSection":"type: sap.ui.commons.AccordionSection, description: The section whose index is looked for"}},"!constructorDescription":"Constructor for a new Accordion.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 200px)<\/li>\n<li>{@link #getOpenedSectionsId openedSectionsId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSections sections} : sap.ui.commons.AccordionSection[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:sectionOpen sectionOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sectionClose sectionClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sectionsReorder sectionsReorder} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","insertSection":{"!description":"Inserts a section into the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn(oSection: sap.ui.commons.AccordionSection, iIndex: Number) -> sap.ui.commons.Accordion","parameters":{"oSection":"type: sap.ui.commons.AccordionSection, description: the section to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the section should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the section is inserted at position 0; for a value\n             greater than the current size of the aggregation, the section is inserted at\n             the last position"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Contains N sections, acting as containers for any library control","detachSectionOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sectionOpen<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Accordion.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSectionOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sectionOpen<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user opens a section.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Accordion<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addSection":{"!description":"Adds some section to the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn(oSection: sap.ui.commons.AccordionSection) -> sap.ui.commons.Accordion","parameters":{"oSection":"type: sap.ui.commons.AccordionSection, description: the section to add; if empty, nothing is inserted"}},"getOpenedSectionsId":{"!description":"Gets current value of property <code>openedSectionsId<\/code>.\n\nSection IDs that are opened by default at application start","!static":false,"!category":"function","!type":"fn() -> String"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWhen the specified width is less than the width of a section content, a horizontal scroll bar is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200px<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Accordion","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"detachSectionsReorder":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sectionsReorder<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Accordion with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeSection":{"!description":"Removes a section from the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn(vSection: Number | String | sap.ui.commons.AccordionSection) -> sap.ui.commons.AccordionSection","parameters":{"vSection":"type: int|string|sap.ui.commons.AccordionSection, description: The sectionto remove or its index or id"}},"!module":"sap/ui/commons/Accordion","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Contains N sections, acting as containers for any library control","detachSectionClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sectionClose<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroySections":{"!description":"Destroys all the sections in the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Accordion"},"fireSectionClose":{"!description":"Fires event <code>sectionClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>closeSectionId<\/code> of type <code>string<\/code>ID of the closed section<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSections":{"!description":"Gets content of aggregation <code>sections<\/code>.\n\nEmpty container used to display any library control","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.AccordionSection]"}},"sap.ui.commons.layout.VerticalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Moved to sap.ui.layout library. Please use this one.<br>In this layout the elemnts are orderd one below the other","extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.VerticalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.VerticalLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new layout/VerticalLayout.","!module":"sap/ui/commons/layout/VerticalLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Moved to sap.ui.layout library. Please use this one.<br>In this layout the elemnts are orderd one below the other","!proto":"sap.ui.layout.VerticalLayout","!category":"class"},"sap.ui.commons.RadioButtonGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RadioButtonGroup"},"sap.ui.commons.Image_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Image with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Image"},"sap.ui.commons.layout":{"Separation":"sap.ui.commons.layout.Separation","hAlign":{"!description":"Determines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.","!category":"enum","!type":"sap.ui.commons.layout.HAlign"},"horizontalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!category":"enum","!type":"sap.ui.core.Scrolling"},"columns":{"!description":"Number of columns. If not specified, the number of columns will be determined from the given cells.","!category":"enum","!type":"Number"},"BorderLayoutArea":"sap.ui.commons.layout.BorderLayoutArea_obj","VAlign":"sap.ui.commons.layout.VAlign","!category":"namespace","vAlign":{"!description":"Determines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.","!category":"enum","!type":"sap.ui.commons.layout.VAlign"},"HorizontalLayout":"sap.ui.commons.layout.HorizontalLayout_obj","BorderLayoutAreaTypes":"sap.ui.commons.layout.BorderLayoutAreaTypes","BorderLayout":"sap.ui.commons.layout.BorderLayout_obj","top":{"!description":"Defines the distance to the top of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"separation":{"!description":"Determines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.","!category":"enum","!type":"sap.ui.commons.layout.Separation"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"centerHorizontally":{"!description":"Indicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"VerticalLayout":"sap.ui.commons.layout.VerticalLayout_obj","Padding":"sap.ui.commons.layout.Padding","BackgroundDesign":"sap.ui.commons.layout.BackgroundDesign","centerVertically":{"!description":"Indicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.","!category":"enum","!type":"Boolean"},"height":{"!description":"Height of the row.","!category":"enum","!type":"sap.ui.core.CSSSize"},"rowSpan":{"!description":"Determines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.","!category":"enum","!type":"Number"},"padding":{"!description":"Determines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.","!category":"enum","!type":"sap.ui.commons.layout.Padding"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"verticalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!category":"enum","!type":"sap.ui.core.Scrolling"},"contentAlign":{"!description":"The content alignment as CSS value","!category":"enum","!type":"String"},"colSpan":{"!description":"Determines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.","!category":"enum","!type":"Number"},"bottom":{"!description":"Defines the distance to the bottom of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"ResponsiveFlowLayoutData":"sap.ui.commons.layout.ResponsiveFlowLayoutData_obj","widths":{"!description":"Widths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.","!category":"enum","!type":"[sap.ui.core.CSSSize]"},"ResponsiveFlowLayout":"sap.ui.commons.layout.ResponsiveFlowLayout_obj","rtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>The RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.","!category":"enum","!type":"Boolean"},"layoutFixed":{"!description":"Sets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.","!category":"enum","!type":"Boolean"},"right":{"!description":"Defines the distance to the right of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"MatrixLayoutRow":"sap.ui.commons.layout.MatrixLayoutRow_obj","AbsoluteLayout":"sap.ui.commons.layout.AbsoluteLayout_obj","overflowX":{"!description":"The overflow mode of the area in horizontal direction as CSS value","!category":"enum","!type":"String"},"areaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Defines which area the element represents: top, begin, center, end, bottom","!category":"enum","!type":"sap.ui.commons.layout.BorderLayoutAreaTypes"},"overflowY":{"!description":"The overflow mode of the area in vertical direction as CSS value","!category":"enum","!type":"String"},"size":{"!description":"Defines the height or the width. Is not used when the area element is in Center.","!category":"enum","!type":"sap.ui.core.CSSSize"},"MatrixLayout":"sap.ui.commons.layout.MatrixLayout_obj","left":{"!description":"Defines the distance to the left of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"width":{"!description":"CSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.","!category":"enum","!type":"sap.ui.core.CSSSize"},"PositionContainer":"sap.ui.commons.layout.PositionContainer_obj","backgroundDesign":{"!description":"Determines the matrix layout cell's background design.","!category":"enum","!type":"sap.ui.commons.layout.BackgroundDesign"},"MatrixLayoutCell":"sap.ui.commons.layout.MatrixLayoutCell_obj","HAlign":"sap.ui.commons.layout.HAlign"},"sap.ui.commons.MessageToast":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Instead, use the <code>sap.m.MessageToast<\/code> control.<br>Responsible for displaying the new incoming messages, one at the time, on top of the MessageBar.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageToast.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachNext":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>next<\/code> event of this <code>sap.ui.commons.MessageToast<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MessageToast","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Control","!category":"class","fireNext":{"!description":"Fires event <code>next<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.MessageToast","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageToast with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"attachNext":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>next<\/code> event of this <code>sap.ui.commons.MessageToast<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.MessageToast<\/code> itself.\n\nFired once the <code>toast()<\/code> method is over, so that the MessageBar can \"toast\" another message if needed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MessageToast","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.MessageToast<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAnchorId":{"!description":"Gets current value of property <code>anchorId<\/code>.\n\nID of the anchor on top of which the MessageToast is to render.","!static":false,"!category":"function","!type":"fn() -> String"},"toast":{"!description":"Triggers the toasting of a message, on top of the MessageBar.\nIf no message is supplied, displays the \"Multiple new messages...\" message.\n\nReceives the list of Messages to be displayed,\nand re-renders this Control if it is visible.","!static":false,"!category":"function","!type":"fn(oMessage: sap.ui.commons.Message, sAnchorId: String)","parameters":{"sAnchorId":"type: string, description: DOM ID of the anchor against which the Toast Arrow should align for a given Toast.","oMessage":"type: sap.ui.commons.Message, description: The Message to be toasted."}},"!constructorDescription":"Constructor for a new MessageToast.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnchorId anchorId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:next next} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MessageToast","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Instead, use the <code>sap.m.MessageToast<\/code> control.<br>Responsible for displaying the new incoming messages, one at the time, on top of the MessageBar.","isIdle":{"!description":"Returns the idle state of the control. Returns true if no message is being toasted.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAnchorId":{"!description":"Sets a new value for property <code>anchorId<\/code>.\n\nID of the anchor on top of which the MessageToast is to render.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAnchorId: String) -> sap.ui.commons.MessageToast","parameters":{"sAnchorId":"type: string, description: New value for property <code>anchorId<\/code>"}}},"sap.ui.commons.RadioButtonGroup":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The itemto remove or its index or id"}},"setColumns":{"!description":"Sets a new value for property <code>columns<\/code>.\n\nDetermines the maximum number of RadioButtons displayed in one line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iColumns: Number) -> sap.ui.commons.RadioButtonGroup","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedIndex<\/code> of type <code>int<\/code>Index of the selected RadioButton.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RadioButtonGroup","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.RadioButtonGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RadioButtonGroup<\/code> itself.\n\nFires when selection is changed by user interaction.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RadioButtonGroup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RadioButtonGroup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RadioButtonGroup"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the RadioButtonGroup.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getColumns":{"!description":"Gets current value of property <code>columns<\/code>.\n\nDetermines the maximum number of RadioButtons displayed in one line.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.commons.RadioButtonGroup","parameters":{"oItem":"type: sap.ui.core.Item, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe RadioButtons of this RadioButtonGroup.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!constructorDescription":"Constructor for a new RadioButtonGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColumns columns} : int (default: 1)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getSelectedIndex selectedIndex} : int (default: 0)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButtonGroup","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nEnables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RadioButtonGroup","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getSelectedItem":{"!description":"When no item is selected, \"null\" is returned.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RadioButtonGroup<\/code> control.<br>The RadioButtonGroup is a basic control that is used to provide area for making interactive\nchoice out of a set of options. It represents a list with items where exactly one item can\nbe selected in a session. For the representation of the single group entries, the RadioButton\nitems are created automatically. For the RadioButton choice, mouse and keyboard navigation\nusage is supported.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RadioButtonGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nТhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.RadioButtonGroup","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RadioButtonGroup"},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the RadioButtonGroup.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RadioButtonGroup","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButtonGroup","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nEnables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RadioButtonGroup","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RadioButtonGroup","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"setSelectedItem":{"!description":"Sets the Item as selected and removes the selection from the previous one.","!static":false,"!category":"function","!type":"fn(oSelectedItem: sap.ui.core.Item)","parameters":{"oSelectedItem":"type: sap.ui.core.Item, description: Selected item"}},"!module":"sap/ui/commons/RadioButtonGroup","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nТhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RadioButtonGroup<\/code> control.<br>The RadioButtonGroup is a basic control that is used to provide area for making interactive\nchoice out of a set of options. It represents a list with items where exactly one item can\nbe selected in a session. For the representation of the single group entries, the RadioButton\nitems are created automatically. For the RadioButton choice, mouse and keyboard navigation\nusage is supported.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"clone":{"!description":"Creates a new instance of RadioButtonGroup, with the same settings as the RadioButtonGroup\non which the method is called.\nEvent handlers are not cloned.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.RadioButtonGroup"},"getSelectedIndex":{"!description":"Gets current value of property <code>selectedIndex<\/code>.\n\nThe index of the selected/checked RadioButton.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.RadioButtonGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RadioButtonGroup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSelectedIndex":{"!description":"Sets a new value for property <code>selectedIndex<\/code>.\n\nThe index of the selected/checked RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.RadioButtonGroup","parameters":{"iSelectedIndex":"type: int, description: New value for property <code>selectedIndex<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.commons.RadioButtonGroup","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.core.Item, description: the item to insert; if empty, nothing is inserted"}}},"sap.ui.commons.RadioButton":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nSpecifies the select state of the RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.ui.commons.RadioButton","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.RadioButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.RadioButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RadioButton<\/code> itself.\n\nTriggers when the user makes a change on the RadioButton.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RadioButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RadioButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user can select the RadioButton.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new RadioButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getGroupName groupName} : string (default: sapUiRbDefaultGroup)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButton","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDisplays the disabled controls in another color, depending on the customer settings.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nCan be used for subsequent actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.commons.RadioButton","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RadioButton<\/code> control.<br>RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options.\n\nUsually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using\nsap.ui.commons.RadioButtonGroup), thus providing a limited choice for the user. An event is triggered when\nthe user makes a change of the selection.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nCan be used for subsequent actions.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RadioButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.RadioButton","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text displayed next to the RadioButton.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDefines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.RadioButton","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RadioButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButton","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getGroupName":{"!description":"Gets current value of property <code>groupName<\/code>.\n\nDefines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.\n\nDefault value is <code>sapUiRbDefaultGroup<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nSpecifies the select state of the RadioButton.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDisplays the disabled controls in another color, depending on the customer settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RadioButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setGroupName":{"!description":"Sets a new value for property <code>groupName<\/code>.\n\nDefines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sapUiRbDefaultGroup<\/code>.","!static":false,"!category":"function","!type":"fn(sGroupName: String) -> sap.ui.commons.RadioButton","parameters":{"sGroupName":"type: string, description: New value for property <code>groupName<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user can select the RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RadioButton","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/ui/commons/RadioButton","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RadioButton<\/code> control.<br>RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options.\n\nUsually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using\nsap.ui.commons.RadioButtonGroup), thus providing a limited choice for the user. An event is triggered when\nthe user makes a change of the selection.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.RadioButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RadioButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDefines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text displayed next to the RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.RadioButton","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.Callout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Callout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Callout"},"sap.ui.commons.ColorPicker":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>This control gives the user the opportunity to choose a color. The color can be defined using HEX-, RGB- or HSV-values or a CSS colorname.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ColorPicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ColorPicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nDetermines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>HSV<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.ui.commons.ColorPickerMode) -> sap.ui.commons.ColorPicker","parameters":{"sMode":"type: sap.ui.commons.ColorPickerMode, description: New value for property <code>mode<\/code>"}},"!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ColorPicker<\/code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ColorPicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ColorPicker<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ColorPicker<\/code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event ist only fired by mouseup.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ColorPicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ColorPicker<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>r<\/code> of type <code>int<\/code>Parameter containing the RED value (0-255)<\/li>\n<li><code>g<\/code> of type <code>int<\/code>Parameter containing the GREEN value (0-255)<\/li>\n<li><code>b<\/code> of type <code>int<\/code>Parameter containing the BLUE value (0-255)<\/li>\n<li><code>h<\/code> of type <code>int<\/code>Parameter containing the HUE value (0-360)<\/li>\n<li><code>s<\/code> of type <code>int<\/code>Parameter containing the SATURATION value (0-100)<\/li>\n<li><code>v<\/code> of type <code>int<\/code>Parameter containing the VALUE value (0-100)<\/li>\n<li><code>l<\/code> of type <code>int<\/code>Parameter containing the LIGHTNESS value (0-100)<\/li>\n<li><code>hex<\/code> of type <code>string<\/code>Parameter containing the Hexadecimal string (#FFFFFF)<\/li>\n<li><code>alpha<\/code> of type <code>string<\/code>Parameter containing the alpha value (transparency)<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ColorPicker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ColorPicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ColorPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ColorPicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColorString colorString} : string<\/li>\n<li>{@link #getMode mode} : sap.ui.commons.ColorPickerMode (default: HSV)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ColorPicker","setColorString":{"!description":"Sets a new value for property <code>colorString<\/code>.\n\nThis is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColorString: String) -> sap.ui.commons.ColorPicker","parameters":{"sColorString":"type: string, description: New value for property <code>colorString<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>This control gives the user the opportunity to choose a color. The color can be defined using HEX-, RGB- or HSV-values or a CSS colorname.","getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDetermines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)\n\nDefault value is <code>HSV<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ColorPickerMode"},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>r<\/code> of type <code>int<\/code>Parameter containing the RED value (0-255)<\/li>\n<li><code>g<\/code> of type <code>int<\/code>Parameter containing the GREEN value (0-255)<\/li>\n<li><code>b<\/code> of type <code>int<\/code>Parameter containing the BLUE value (0-255)<\/li>\n<li><code>h<\/code> of type <code>int<\/code>Parameter containing the HUE value (0-360)<\/li>\n<li><code>s<\/code> of type <code>int<\/code>Parameter containing the SATURATION value (0-100)<\/li>\n<li><code>v<\/code> of type <code>int<\/code>Parameter containing the VALUE value (0-100)<\/li>\n<li><code>l<\/code> of type <code>int<\/code>Parameter containing the LIGHTNESS value (0-100)<\/li>\n<li><code>hex<\/code> of type <code>string<\/code>Parameter containing the Hexadecimal string (#FFFFFF)<\/li>\n<li><code>alpha<\/code> of type <code>string<\/code>Parameter containing the alpha value (transparency)<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ColorPicker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getColorString":{"!description":"Gets current value of property <code>colorString<\/code>.\n\nThis is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.","!static":false,"!category":"function","!type":"fn() -> String"},"getRGB":{"!description":"Deliver current RGB-values.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.commons.Slider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Slider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Slider"},"sap.ui.commons.layout.ResponsiveFlowLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.ResponsiveFlowLayoutData"},"sap.ui.commons.TreeSelectionMode":{"!description":"Selection mode of the tree","!module":"sap/ui/commons/library","Single":{"!description":"Select one row at a time.","!category":"enum","!type":"String"},"Legacy":{"!description":"Behavior of the former Tree. It is possible to select a plurality of nodes via the API.","!category":"enum","!type":"String"},"!category":"static class","Multi":{"!description":"Select multiple rows at a time.","!category":"enum","!type":"String"},"None":{"!description":"No rows can be selected.","!category":"enum","!type":"String"}},"sap.ui.commons.Area_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Area with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Area"},"sap.ui.commons.layout.PositionContainer":{"!description":"Is used to specify the position of a control in the AbsoluteLayout","setCenterVertically":{"!description":"Sets a new value for property <code>centerVertically<\/code>.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCenterVertically: Boolean) -> sap.ui.commons.layout.PositionContainer","parameters":{"bCenterVertically":"type: boolean, description: New value for property <code>centerVertically<\/code>"}},"destroyControl":{"!description":"Destroys the control in the aggregation <code>control<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.PositionContainer"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.PositionContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"updatePosition":{"!description":"Updates the position properties of the container according to the given position in JSON style.","!static":false,"!category":"function","!type":"fn(oPos: Object)","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control in the absolute layout. The object is expected\n        to have one or more out of the attributes top, bottom, left, right (each with a value of type sap.ui.core.CSSSize). If no object\n        is given, nothing is updated."}},"getControl":{"!description":"Gets content of aggregation <code>control<\/code>.\n\nChild control of the position container","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getBottom":{"!description":"Gets current value of property <code>bottom<\/code>.\n\nDefines the distance to the bottom of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setLeft":{"!description":"Sets a new value for property <code>left<\/code>.\n\nDefines the distance to the left of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLeft: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","parameters":{"sLeft":"type: sap.ui.core.CSSSize, description: New value for property <code>left<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","setControl":{"!description":"Sets the aggregated <code>control<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.commons.layout.PositionContainer","parameters":{"oControl":"type: sap.ui.core.Control, description: The control to set"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.PositionContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getCenterHorizontally":{"!description":"Gets current value of property <code>centerHorizontally<\/code>.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCenterHorizontally":{"!description":"Sets a new value for property <code>centerHorizontally<\/code>.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCenterHorizontally: Boolean) -> sap.ui.commons.layout.PositionContainer","parameters":{"bCenterHorizontally":"type: boolean, description: New value for property <code>centerHorizontally<\/code>"}},"setTop":{"!description":"Sets a new value for property <code>top<\/code>.\n\nDefines the distance to the top of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTop: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","parameters":{"sTop":"type: sap.ui.core.CSSSize, description: New value for property <code>top<\/code>"}},"!constructorDescription":"Constructor for a new layout/PositionContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTop top} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getBottom bottom} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLeft left} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRight right} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getCenterHorizontally centerHorizontally} : boolean (default: false)<\/li>\n<li>{@link #getCenterVertically centerVertically} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControl control} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getCenterVertically":{"!description":"Gets current value of property <code>centerVertically<\/code>.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getRight":{"!description":"Gets current value of property <code>right<\/code>.\n\nDefines the distance to the right of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!module":"sap/ui/commons/layout/PositionContainer","setBottom":{"!description":"Sets a new value for property <code>bottom<\/code>.\n\nDefines the distance to the bottom of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBottom: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","parameters":{"sBottom":"type: sap.ui.core.CSSSize, description: New value for property <code>bottom<\/code>"}},"!helpDescription":"Is used to specify the position of a control in the AbsoluteLayout","getTop":{"!description":"Gets current value of property <code>top<\/code>.\n\nDefines the distance to the top of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setRight":{"!description":"Sets a new value for property <code>right<\/code>.\n\nDefines the distance to the right of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","parameters":{"sRight":"type: sap.ui.core.CSSSize, description: New value for property <code>right<\/code>"}},"getLeft":{"!description":"Gets current value of property <code>left<\/code>.\n\nDefines the distance to the left of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"}},"sap.ui.commons.RatingIndicatorVisualMode":{"!description":"Possible values for the visualization of float values in the RatingIndicator Control.","Half":{"!description":"Values are rounded to the nearest half value (e.g. 1.7 -> 1.5).","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Continuous":{"!description":"Values are not rounded.","!category":"enum","!type":"String"},"!category":"static class","Full":{"!description":"Values are rounded to the nearest integer value (e.g. 1.7 -> 2).","!category":"enum","!type":"String"}},"sap.ui.commons.ApplicationHeader":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.tnt.ToolHeader<\/code> control.<br>The application header control stands on the top of any application page. It consists of 4 areas: Logo area, Function area provided by application, Search area, Logout area.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ApplicationHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","!category":"class","fireLogoff":{"!description":"Fires event <code>logoff<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ApplicationHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachLogoff":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>logoff<\/code> event of this <code>sap.ui.commons.ApplicationHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ApplicationHeader<\/code> itself.\n\nFires an event to log off the user from the application.\nNo parameters.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ApplicationHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ApplicationHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ApplicationHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ApplicationHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLogoSrc logoSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getLogoText logoText} : string<\/li>\n<li>{@link #getDisplayLogoff displayLogoff} : boolean (default: true)<\/li>\n<li>{@link #getUserName userName} : string<\/li>\n<li>{@link #getDisplayWelcome displayWelcome} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:logoff logoff} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachLogoff":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>logoff<\/code> event of this <code>sap.ui.commons.ApplicationHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ApplicationHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!module":"sap/ui/commons/ApplicationHeader","getLogoSrc":{"!description":"Gets current value of property <code>logoSrc<\/code>.\n\nPath (src) to the logo icon to be displayed in the application header.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setDisplayLogoff":{"!description":"Sets a new value for property <code>displayLogoff<\/code>.\n\nDetermines if the logoff area will be displayed at the right hand side of the application header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayLogoff: Boolean) -> sap.ui.commons.ApplicationHeader","parameters":{"bDisplayLogoff":"type: boolean, description: New value for property <code>displayLogoff<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.tnt.ToolHeader<\/code> control.<br>The application header control stands on the top of any application page. It consists of 4 areas: Logo area, Function area provided by application, Search area, Logout area.","getDisplayWelcome":{"!description":"Gets current value of property <code>displayWelcome<\/code>.\n\nDetermines if the welcome text is displayed\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUserName":{"!description":"Sets a new value for property <code>userName<\/code>.\n\nUser name that will be displayed beside the welcome text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUserName: String) -> sap.ui.commons.ApplicationHeader","parameters":{"sUserName":"type: string, description: New value for property <code>userName<\/code>"}},"setLogoText":{"!description":"Sets a new value for property <code>logoText<\/code>.\n\nThe text that will be displayed beside the logo in the application header. This property is optional.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLogoText: String) -> sap.ui.commons.ApplicationHeader","parameters":{"sLogoText":"type: string, description: New value for property <code>logoText<\/code>"}},"setDisplayWelcome":{"!description":"Sets a new value for property <code>displayWelcome<\/code>.\n\nDetermines if the welcome text is displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayWelcome: Boolean) -> sap.ui.commons.ApplicationHeader","parameters":{"bDisplayWelcome":"type: boolean, description: New value for property <code>displayWelcome<\/code>"}},"getUserName":{"!description":"Gets current value of property <code>userName<\/code>.\n\nUser name that will be displayed beside the welcome text","!static":false,"!category":"function","!type":"fn() -> String"},"getLogoText":{"!description":"Gets current value of property <code>logoText<\/code>.\n\nThe text that will be displayed beside the logo in the application header. This property is optional.","!static":false,"!category":"function","!type":"fn() -> String"},"getDisplayLogoff":{"!description":"Gets current value of property <code>displayLogoff<\/code>.\n\nDetermines if the logoff area will be displayed at the right hand side of the application header.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLogoSrc":{"!description":"Sets a new value for property <code>logoSrc<\/code>.\n\nPath (src) to the logo icon to be displayed in the application header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLogoSrc: sap.ui.core.URI) -> sap.ui.commons.ApplicationHeader","parameters":{"sLogoSrc":"type: sap.ui.core.URI, description: New value for property <code>logoSrc<\/code>"}}},"sap.ui.commons.TabStrip_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TabStrip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TabStrip"},"sap.ui.commons.form.GridElementData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridElementData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridElementData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridElementData"},"sap.ui.commons.ValueHelpField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ValueHelpField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ValueHelpField"},"sap.ui.commons.ResponsiveContainerRange":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Defines a range for the ResponsiveContainer","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nA key which can be used to identify the range (optional).\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ResponsiveContainerRange.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the associated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.ResponsiveContainerRange","parameters":{"oContent":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this content association; alternatively, an element instance may be given"}},"getContent":{"!description":"ID of the element which is the current target of the association <code>content<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe minimal width for this range to be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe minimal height for this range to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainerRange","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe minimal width for this range to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainerRange","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainerRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe minimal height for this range to be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ResponsiveContainerRange.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getKey key} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ResponsiveContainerRange","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Defines a range for the ResponsiveContainer","setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nA key which can be used to identify the range (optional).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.commons.ResponsiveContainerRange","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}}},"sap.ui.commons.TreeNode":{"indexOfNode":{"!description":"Checks for the provided <code>sap.ui.commons.TreeNode<\/code> in the aggregation <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.commons.TreeNode) -> Number","parameters":{"oNode":"type: sap.ui.commons.TreeNode, description: The node whose index is looked for"}},"removeAllNodes":{"!description":"Removes all the controls from the aggregation <code>nodes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.TreeNode]"},"detachSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selected<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TreeNode","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"select":{"!description":"Select the node, and if any, deselects the previously selected node","!static":false,"!category":"function","!type":"fn(bSuppressEvent: Boolean, bDeselectOtherNodes: Boolean)","parameters":{"bSuppressEvent":"type: boolean, description: undefined","bDeselectOtherNodes":"type: boolean, description: undefined"}},"setHasExpander":{"!description":"Sets a new value for property <code>hasExpander<\/code>.\n\nShould the node has an expander.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHasExpander: Boolean) -> sap.ui.commons.TreeNode","parameters":{"bHasExpander":"type: boolean, description: New value for property <code>hasExpander<\/code>"}},"addNode":{"!description":"Adds some node to the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","parameters":{"oNode":"type: sap.ui.commons.TreeNode, description: the node to add; if empty, nothing is inserted"}},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setExpanded":{"!description":"Sets a new value for property <code>expanded<\/code>.\n\nNode is expanded\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.ui.commons.TreeNode","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"setIsSelected":{"!description":"Redefinition of Setter for property <code>isSelected<\/code> for validation purpose\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn(bIsSelected: Boolean) -> sap.ui.commons.TreeNode","parameters":{"bIsSelected":"type: boolean, description: new value for property <code>isSelected<\/code>"}},"!proto":"sap.ui.core.Element","insertNode":{"!description":"Inserts a node into the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.commons.TreeNode, iIndex: Number) -> sap.ui.commons.TreeNode","parameters":{"oNode":"type: sap.ui.commons.TreeNode, description: the node to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"}},"!category":"class","!constructorDescription":"Constructor for a new TreeNode.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getHasExpander hasExpander} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIsSelected isSelected} : boolean (default: false)<\/li>\n<li>{@link #getSelectable selectable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.ui.commons.TreeNode[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:toggleOpenState toggleOpenState} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selected selected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TreeNode","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"attachToggleOpenState":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>toggleOpenState<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TreeNode<\/code> itself.\n\nNode state has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TreeNode","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TreeNode<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSelected":{"!description":"Fires event <code>selected<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.TreeNode","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHasExpander":{"!description":"Gets current value of property <code>hasExpander<\/code>.\n\nShould the node has an expander.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSelectable":{"!description":"Gets current value of property <code>selectable<\/code>.\n\nThe node is selectable. If true, clicking on the node text triggers \"selected\" event\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeNode":{"!description":"Removes a node from the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(vNode: Number | String | sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","parameters":{"vNode":"type: int|string|sap.ui.commons.TreeNode, description: The nodeto remove or its index or id"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Tree node element","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TreeNode.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selected<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TreeNode<\/code> itself.\n\nNode is selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TreeNode","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TreeNode<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getNodes":{"!description":"Gets content of aggregation <code>nodes<\/code>.\n\nSubnodes for the current node","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.TreeNode]"},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TreeNode"},"getIsSelected":{"!description":"Gets current value of property <code>isSelected<\/code>.\n\nNode is selected\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nNode text","!static":false,"!category":"function","!type":"fn() -> String"},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nNode is expanded\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachToggleOpenState":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>toggleOpenState<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TreeNode","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSelectable":{"!description":"Redefinition of Setter for property <code>selectable<\/code> for validation purpose.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn(bSelectable: Boolean) -> sap.ui.commons.TreeNode","parameters":{"bSelectable":"type: boolean, description: new value for property <code>selectable<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to display in front of the node","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TreeNode","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TreeNode with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireToggleOpenState":{"!description":"Fires event <code>toggleOpenState<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>opened<\/code> of type <code>boolean<\/code>Node has been opened if true<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.TreeNode","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to display in front of the node\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.TreeNode","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"expand":{"!description":"Expands the node.","!static":false,"!category":"function","!type":"fn(bExpandChildren: Boolean, bDisableExpandFinishedHandler: Boolean)","parameters":{"bExpandChildren":"type: boolean, description: Propagates expand to node's children","bDisableExpandFinishedHandler":"type: boolean, description: Disables the expand finished handler"}},"!module":"sap/ui/commons/TreeNode","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Tree node element","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"collapse":{"!description":"Collapses the node.","!static":false,"!category":"function","!type":"fn(bCollapseChildren: Boolean, bDisableCollapseFinishedHandler: Boolean)","parameters":{"bCollapseChildren":"type: boolean, description: Propagates collapse to node's children","bDisableCollapseFinishedHandler":"type: boolean, description: Disables the collapse finished handler"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nNode text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.TreeNode","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.Tab":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TabContainer<\/code> control.<br>Represents a single tab in a TabStrip control.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Tab.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To identify the selected tab in a TabStrip selectedIndex is used.<br>Sets a new value for property <code>selected<\/code>.\n\nDefines whether the tab is the active one.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.ui.commons.Tab","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getClosable":{"!description":"Gets current value of property <code>closable<\/code>.\n\nSpecifies whether the tab contains a close button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\nSpecifies the vertical scrolling.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Scrolling"},"setHorizontalScrolling":{"!description":"Sets a new value for property <code>horizontalScrolling<\/code>.\n\nSpecifies the horizontal scrolling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sHorizontalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.Tab","parameters":{"sHorizontalScrolling":"type: sap.ui.core.Scrolling, description: New value for property <code>horizontalScrolling<\/code>"}},"!proto":"sap.ui.commons.Panel","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tab with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Panel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To identify the selected tab in a TabStrip selectedIndex is used.<br>Gets current value of property <code>selected<\/code>.\n\nDefines whether the tab is the active one.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new Tab.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVerticalScrolling verticalScrolling} : sap.ui.core.Scrolling (default: None)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : sap.ui.core.Scrolling (default: None)<\/li>\n<li>{@link #getClosable closable} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Panel#constructor sap.ui.commons.Panel}\ncan be used as well.","!module":"sap/ui/commons/Tab","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TabContainer<\/code> control.<br>Represents a single tab in a TabStrip control.","setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\nSpecifies the vertical scrolling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sVerticalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.Tab","parameters":{"sVerticalScrolling":"type: sap.ui.core.Scrolling, description: New value for property <code>verticalScrolling<\/code>"}},"setClosable":{"!description":"Sets a new value for property <code>closable<\/code>.\n\nSpecifies whether the tab contains a close button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bClosable: Boolean) -> sap.ui.commons.Tab","parameters":{"bClosable":"type: boolean, description: New value for property <code>closable<\/code>"}},"getHorizontalScrolling":{"!description":"Gets current value of property <code>horizontalScrolling<\/code>.\n\nSpecifies the horizontal scrolling.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Scrolling"}},"sap.ui.commons.Panel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Panel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Panel"},"sap.ui.commons.layout.BorderLayout":{"getBegin":{"!description":"Gets content of aggregation <code>begin<\/code>.\n\nRepresents the Begin area","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea"},"getCenter":{"!description":"Gets content of aggregation <code>center<\/code>.\n\nRepresents the Center area","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea"},"getBottom":{"!description":"Gets content of aggregation <code>bottom<\/code>.\n\nRepresents the Bottom area","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea"},"destroyEnd":{"!description":"Destroys the end in the aggregation <code>end<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayout"},"getContent":{"!description":"Returns all controls inside the specified area inside an array","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> [sap.ui.core.Control]","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area whose content controls shall be returned."}},"!proto":"sap.ui.core.Control","!category":"class","destroyBegin":{"!description":"Destroys the begin in the aggregation <code>begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayout"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the overall width of the layout\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getAreaData":{"!description":"Returns a JSON-like object that contains all property values of the requested area","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> Object","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area whose data will be returned"}},"setTop":{"!description":"Sets the aggregated <code>top<\/code>.","!static":false,"!category":"function","!type":"fn(oTop: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","parameters":{"oTop":"type: sap.ui.commons.layout.BorderLayoutArea, description: The top to set"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the overall height of the layout\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new layout/BorderLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRtl rtl} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTop top} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getBegin begin} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getCenter center} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getEnd end} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getBottom bottom} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTop":{"!description":"Gets content of aggregation <code>top<\/code>.\n\nRepresents the Top area","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea"},"setEnd":{"!description":"Sets the aggregated <code>end<\/code>.","!static":false,"!category":"function","!type":"fn(oEnd: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","parameters":{"oEnd":"type: sap.ui.commons.layout.BorderLayoutArea, description: The end to set"}},"destroyContent":{"!description":"Destroys the content of the specified area","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes)","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area whose content will be destroyed"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Page<\/code> control.<br>Based upon the border layout as it comes with the Java standard. Using this layout, you are able to divide your available UI space into five areas whose sizes can be defined. These areas are: Top: Header; Bottom: Footer; Begin: Left/right-hand side panel; Center: Content area\nin the middle; End: Right/left-hand side panel.","destroyCenter":{"!description":"Destroys the center in the aggregation <code>center<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayout"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.BorderLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setAreaData":{"!description":"Sets the properties of the specified area with the given values","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oData: Object)","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area whose properties will be set","oData":"type: object, description: JSON-like object that contains the values to be set"}},"indexOfContent":{"!description":"Determines the index of a given content control","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oContent: sap.ui.core.Control) -> Number","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area that will be searched","oContent":"type: sap.ui.core.Control, description: Specifies the control whose index will be searched"}},"setBegin":{"!description":"Sets the aggregated <code>begin<\/code>.","!static":false,"!category":"function","!type":"fn(oBegin: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","parameters":{"oBegin":"type: sap.ui.commons.layout.BorderLayoutArea, description: The begin to set"}},"removeAllContent":{"!description":"Removes all content from an area","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes)","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area whose content shall be removed"}},"setCenter":{"!description":"Sets the aggregated <code>center<\/code>.","!static":false,"!category":"function","!type":"fn(oCenter: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","parameters":{"oCenter":"type: sap.ui.commons.layout.BorderLayoutArea, description: The center to set"}},"setRtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>Sets a new value for property <code>rtl<\/code>.\n\nThe RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRtl: Boolean) -> sap.ui.commons.layout.BorderLayout","parameters":{"bRtl":"type: boolean, description: New value for property <code>rtl<\/code>"}},"addContent":{"!description":"Adds controls to the specified area","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oControls: sap.ui.core.Control)","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area where controls will be added","oControls":"type: sap.ui.core.Control, description: N controls can be submitted to be added. Each control is submitted as one argument."}},"destroyBottom":{"!description":"Destroys the bottom in the aggregation <code>bottom<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayout"},"getEnd":{"!description":"Gets content of aggregation <code>end<\/code>.\n\nRepresents the End area","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea"},"removeContent":{"!description":"Removes the content with the given index from an area","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, iIndex: Number)","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area whose content shall be removed","iIndex":"type: int, description: Specifies the index of the control that shall be removed"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the overall height of the layout\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayout","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the overall width of the layout\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayout","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/commons/layout/BorderLayout","setBottom":{"!description":"Sets the aggregated <code>bottom<\/code>.","!static":false,"!category":"function","!type":"fn(oBottom: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","parameters":{"oBottom":"type: sap.ui.commons.layout.BorderLayoutArea, description: The bottom to set"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Page<\/code> control.<br>Based upon the border layout as it comes with the Java standard. Using this layout, you are able to divide your available UI space into five areas whose sizes can be defined. These areas are: Top: Header; Bottom: Footer; Begin: Left/right-hand side panel; Center: Content area\nin the middle; End: Right/left-hand side panel.","getAreaById":{"!description":"Returns the object of the specified area. If the area does not exist, the area will be created and returned.","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area whose object will be returned."}},"insertContent":{"!description":"Inserts controls to an area at a given index.","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, iIndex: Number, oControl: sap.ui.core.Control)","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies the area where the controls shall be inserted.","iIndex":"type: int, description: Specifies the index where the controls shall be added. For a negative value of iIndex, the content is inserted at\n        position '0'; for a value greater than the current size of the aggregation, the content is inserted at the last position.","oControl":"type: sap.ui.core.Control, description: N controls can be submitted to be added. Each control is submitted as one argument."}},"getRtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>Gets current value of property <code>rtl<\/code>.\n\nThe RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"createArea":{"!description":"Creates the specified area and adds the given controls to it. Returns the created area.","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oControls: sap.ui.core.Control) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: Specifies which area will be created. If the area is already available, the method call is ignored.","oControls":"type: sap.ui.core.Control, description: Any number of controls can be submitted to be added to the newly created area; where each control is submitted as one argument."}},"destroyTop":{"!description":"Destroys the top in the aggregation <code>top<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayout"},"getArea":{"!description":"Returns the area of the given type. If the area does not exist, it will be created when create is set to true.","!static":false,"!category":"function","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, bCreate: Boolean) -> sap.ui.commons.layout.BorderLayoutAreaTypes","parameters":{"oAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: undefined","bCreate":"type: boolean, description: undefined"}}},"sap.ui.commons.MenuBarDesign":{"!description":"Determines the visual design of a MenuBar. The feature might be not supported by all themes.","!module":"sap/ui/commons/library","Header":{"!description":"The MenuBar appears in header design.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"The MenuBar appears in standard design.","!category":"enum","!type":"String"}},"sap.ui.commons.RoadMapStep_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMapStep with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RoadMapStep"},"sap.ui.commons.Toolbar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Toolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Toolbar"},"sap.ui.commons.layout.MatrixLayoutCell":{"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe matrix layout cell's content (arbitrary controls).\n\nIf the matrix row has a defined height and the matrix has layoutFixed = true, the controls inside of a cell should all use the same unit for its height property.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Element","getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nDetermines the matrix layout cell's background design.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nDetermines the matrix layout cell's background design.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.ui.commons.layout.BackgroundDesign) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"sBackgroundDesign":"type: sap.ui.commons.layout.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","!constructorDescription":"Constructor for a new layout/MatrixLayoutCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.ui.commons.layout.BackgroundDesign (default: Transparent)<\/li>\n<li>{@link #getColSpan colSpan} : int (default: 1)<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.commons.layout.HAlign (default: Begin)<\/li>\n<li>{@link #getPadding padding} : sap.ui.commons.layout.Padding (default: End)<\/li>\n<li>{@link #getRowSpan rowSpan} : int (default: 1)<\/li>\n<li>{@link #getSeparation separation} : sap.ui.commons.layout.Separation (default: None)<\/li>\n<li>{@link #getVAlign vAlign} : sap.ui.commons.layout.VAlign (default: Middle)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"sStyleClass":"type: string, description: the style to be removed"}},"getVAlign":{"!description":"Gets current value of property <code>vAlign<\/code>.\n\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Middle<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.VAlign"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.MatrixLayoutCell"},"setVAlign":{"!description":"Sets a new value for property <code>vAlign<\/code>.\n\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Middle<\/code>.","!static":false,"!category":"function","!type":"fn(sVAlign: sap.ui.commons.layout.VAlign) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"sVAlign":"type: sap.ui.commons.layout.VAlign, description: New value for property <code>vAlign<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\nNon-control element used as part of a matrix layout's inner structure.","setPadding":{"!description":"Sets a new value for property <code>padding<\/code>.\n\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>End<\/code>.","!static":false,"!category":"function","!type":"fn(sPadding: sap.ui.commons.layout.Padding) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"sPadding":"type: sap.ui.commons.layout.Padding, description: New value for property <code>padding<\/code>"}},"setRowSpan":{"!description":"Sets a new value for property <code>rowSpan<\/code>.\n\nDetermines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iRowSpan: Number) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"iRowSpan":"type: int, description: New value for property <code>rowSpan<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutCell.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> Boolean","parameters":{"sStyleClass":"type: string, description: the style to check for"}},"setColSpan":{"!description":"Sets a new value for property <code>colSpan<\/code>.\n\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iColSpan: Number) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"iColSpan":"type: int, description: New value for property <code>colSpan<\/code>"}},"getHAlign":{"!description":"Gets current value of property <code>hAlign<\/code>.\n\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.HAlign"},"getPadding":{"!description":"Gets current value of property <code>padding<\/code>.\n\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.\n\nDefault value is <code>End<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.Padding"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getSeparation":{"!description":"Gets current value of property <code>separation<\/code>.\n\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.Separation"},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"getColSpan":{"!description":"Gets current value of property <code>colSpan<\/code>.\n\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutCell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setSeparation":{"!description":"Sets a new value for property <code>separation<\/code>.\n\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sSeparation: sap.ui.commons.layout.Separation) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"sSeparation":"type: sap.ui.commons.layout.Separation, description: New value for property <code>separation<\/code>"}},"!module":"sap/ui/commons/layout/MatrixLayoutCell","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\nNon-control element used as part of a matrix layout's inner structure.","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"sStyleClass":"type: string, description: the CSS class name to be added"}},"setHAlign":{"!description":"Sets a new value for property <code>hAlign<\/code>.\n\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sHAlign: sap.ui.commons.layout.HAlign) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"sHAlign":"type: sap.ui.commons.layout.HAlign, description: New value for property <code>hAlign<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"getRowSpan":{"!description":"Gets current value of property <code>rowSpan<\/code>.\n\nDetermines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.ui.commons.MenuButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MenuButton<\/code> control.<br>Common button control that opens a menu when clicked by the user. The control provides an API for configuring the docking position\nof the menu.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemSelected<\/code> event of this <code>sap.ui.commons.MenuButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MenuButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setDockMenu":{"!description":"Sets a new value for property <code>dockMenu<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDockMenu: String) -> sap.ui.commons.MenuButton","parameters":{"sDockMenu":"type: string, description: New value for property <code>dockMenu<\/code>"}},"!proto":"sap.ui.commons.Button","getDockButton":{"!description":"Gets current value of property <code>dockButton<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","destroyMenu":{"!description":"Destroys the menu in the aggregation\nnamed <code>menu<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.MenuButton"},"setMenu":{"!description":"Setter for the aggregated <code>menu<\/code>.","!static":false,"!category":"function","!type":"fn(oMenu: sap.ui.unified.Menu) -> sap.ui.commons.MenuButton","parameters":{"oMenu":"type: sap.ui.unified.Menu, description: undefined"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDockButton":{"!description":"Sets a new value for property <code>dockButton<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDockButton: String) -> sap.ui.commons.MenuButton","parameters":{"sDockButton":"type: string, description: New value for property <code>dockButton<\/code>"}},"detachPress":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.commons.MenuButton<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MenuButton","parameters":{"oListener":"type: object, description: Object on which the given function had to be called.","fnFunction":"type: function, description: The function to call, when the event occurs."}},"firePress":{"!description":"Fire event press to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.MenuButton","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."}},"attachItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemSelected<\/code> event of this <code>sap.ui.commons.MenuButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.MenuButton<\/code> itself.\n\nEvent that is fired when a menu item is selected by the user","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MenuButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.MenuButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new MenuButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDockButton dockButton} : string<\/li>\n<li>{@link #getDockMenu dockMenu} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.ui.unified.Menu (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelected itemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Button#constructor sap.ui.commons.Button}\ncan be used as well.","getDockMenu":{"!description":"Gets current value of property <code>dockMenu<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/commons/MenuButton","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MenuButton<\/code> control.<br>Common button control that opens a menu when clicked by the user. The control provides an API for configuring the docking position\nof the menu.","getMenu":{"!description":"Gets content of aggregation <code>menu<\/code>.\n\nMenu that shall be opened when the button is clicked","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.Menu"},"fireItemSelected":{"!description":"Fires event <code>itemSelected<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>itemId<\/code> of type <code>string<\/code>The ID of the selected item<\/li>\n<li><code>item<\/code> of type <code>sap.ui.unified.MenuItemBase<\/code>The selected item<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.MenuButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachPress":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.commons.MenuButton<\/code>.<br/>\n\nEvent is fired when an item from the menu was selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MenuButton","parameters":{"oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used.","fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event."}}},"sap.ui.commons.Dialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Dialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Dialog"},"sap.ui.commons.CalloutBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CalloutBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.CalloutBase"},"sap.ui.commons.form.SimpleForm":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Use the SimpleForm to create a form based on title, label and fields that are stacked in the content aggregation. Add Title to start a new FormContainer(Group). Add Label to start a new row in the container. Add Input/Display controls as needed. Use LayoutData to influence the layout for special cases in the Input/Display controls.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.SimpleForm with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.SimpleForm.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getLayout":{"!description":"Getter for property <code>layout<\/code>.\nThe FormLayout that is used to render the SimpleForm\n\nDefault value is <code>ResponsiveLayout<\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.form.SimpleFormLayout"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.SimpleForm.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/SimpleForm.","!module":"sap/ui/commons/form/SimpleForm","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Use the SimpleForm to create a form based on title, label and fields that are stacked in the content aggregation. Add Title to start a new FormContainer(Group). Add Label to start a new row in the container. Add Input/Display controls as needed. Use LayoutData to influence the layout for special cases in the Input/Display controls.","!proto":"sap.ui.layout.form.SimpleForm","!category":"class","setLayout":{"!description":"Setter for property <code>layout<\/code>.\n\nDefault value is <code>ResponsiveLayout<\/code>","!static":false,"!category":"function","!type":"fn(oLayout: sap.ui.commons.form.SimpleFormLayout) -> sap.ui.commons.form.SimpleForm","parameters":{"oLayout":"type: sap.ui.commons.form.SimpleFormLayout, description: new value for property <code>layout<\/code>"}}},"sap.ui.commons.MenuItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element <code>sap.ui.unified.MenuItem<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MenuItem element.","!module":"sap/ui/commons/MenuItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element <code>sap.ui.unified.MenuItem<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically.","!proto":"sap.ui.unified.MenuItem","!category":"class"},"sap.ui.commons.RowRepeaterSorter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This element is used by the RowRepeater and allows to define a sorter in this context along with the related data such as a text and an icon.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeaterSorter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe sorter title if needed for display.","!static":false,"!category":"function","!type":"fn() -> String"},"getSorter":{"!description":"Gets current value of property <code>sorter<\/code>.\n\nThe sorter object.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.core.Element","!category":"class","getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe sorter icon if needed for display.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterSorter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe sorter icon if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ui.commons.RowRepeaterSorter","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"!constructorDescription":"Constructor for a new RowRepeaterSorter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getSorter sorter} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/RowRepeaterSorter","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This element is used by the RowRepeater and allows to define a sorter in this context along with the related data such as a text and an icon.","setSorter":{"!description":"Sets a new value for property <code>sorter<\/code>.\n\nThe sorter object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSorter: Object) -> sap.ui.commons.RowRepeaterSorter","parameters":{"oSorter":"type: object, description: New value for property <code>sorter<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe sorter title if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.RowRepeaterSorter","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.AccordionSection":{"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAggregates the controls that are contained in the panel. The control layout is browser-dependent.\nFor a stable content layout, use a layout control as direct single child.\nWhen the panel dimensions are set, the child control may have width and height of 100%;\nwhen the panel dimensions are not set, the child defines the panel size.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setCollapsed":{"!description":"Property setter for the \"collapsed\" state","!static":false,"!category":"function","!type":"fn(bCollapsed: Boolean) -> sap.ui.commons.AccordionSection","parameters":{"bCollapsed":"type: boolean, description: Whether the AccordionSection is collapsed or not"}},"!proto":"sap.ui.core.Element","!category":"class","!constructorDescription":"Constructor for a new AccordionSection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:scroll scroll} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nText for the section header","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxHeight":{"!description":"Sets a new value for property <code>maxHeight<\/code>.\n\nWhen the section content exceeds maxHeight, a vertical scroll bar appears.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.commons.AccordionSection","parameters":{"sMaxHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>maxHeight<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nIt is required that the used theme supports the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireScroll":{"!description":"Fires event <code>scroll<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>left<\/code> of type <code>int<\/code>Horizontal scroll position<\/li>\n<li><code>top<\/code> of type <code>int<\/code>Vertical scroll position<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.AccordionSection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.AccordionSection"},"getMaxHeight":{"!description":"Gets current value of property <code>maxHeight<\/code>.\n\nWhen the section content exceeds maxHeight, a vertical scroll bar appears.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getCollapsed":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Use Accordion's \"openedSectionsId\" property<br>Gets current value of property <code>collapsed<\/code>.\n\nIt is recommended to adjust the settings for the width when the section is set to 'collapsed'.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Represents a panel which is a container for other controls. The container does not have any layout function.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.AccordionSection.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nText for the section header\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.commons.AccordionSection","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.AccordionSection","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AccordionSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Property setter for the \"enabled\" state","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.AccordionSection","parameters":{"bEnabled":"type: boolean, description: Whether the AccordionSection is enabled or not"}},"!module":"sap/ui/commons/AccordionSection","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Represents a panel which is a container for other controls. The container does not have any layout function.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.AccordionSection","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"detachScroll":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>scroll<\/code> event of this <code>sap.ui.commons.AccordionSection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.AccordionSection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachScroll":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>scroll<\/code> event of this <code>sap.ui.commons.AccordionSection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.AccordionSection<\/code> itself.\n\nEvent is fired when the user scrolls the panel","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.AccordionSection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.AccordionSection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.commons.CheckBox":{"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.commons.CheckBox","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"unbindChecked":{"!description":"Unbinds property <code>checked<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.CheckBox"},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to select the check box.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.CheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CheckBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new CheckBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChecked checked} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.CheckBox","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setChecked":{"!description":"Sets a new value for property <code>checked<\/code>.\n\nContains the state of the control whether it is flagged with a check mark, or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bChecked: Boolean) -> sap.ui.commons.CheckBox","parameters":{"bChecked":"type: boolean, description: New value for property <code>checked<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.CheckBox<\/code> control.<br>\nProvides a box which can be flagged, the box has a label. A check box can either stand alone, or in a group with other check boxes. As an option, the boxes can initially be set to status 'Not Editable'.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.CheckBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.CheckBox","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text displayed next to the check box","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.CheckBox","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"bindChecked":{"!description":"Binds property <code>checked<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.CheckBox","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"toggle":{"!description":"\nInverts the current value of the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.CheckBox"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.CheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CheckBox<\/code> itself.\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CheckBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CheckBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>checked<\/code> of type <code>boolean<\/code>Checks whether the box is flagged or not flagged.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.CheckBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.CheckBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.CheckBox","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.CheckBox","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to select the check box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.CheckBox","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/ui/commons/CheckBox","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.CheckBox<\/code> control.<br>\nProvides a box which can be flagged, the box has a label. A check box can either stand alone, or in a group with other check boxes. As an option, the boxes can initially be set to status 'Not Editable'.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getChecked":{"!description":"Gets current value of property <code>checked<\/code>.\n\nContains the state of the control whether it is flagged with a check mark, or not\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text displayed next to the check box\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.CheckBox","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.TriStateCheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TriStateCheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TriStateCheckBox"},"sap.ui.commons.enums.Orientation":{"!description":"Orientation of a UI element","horizontal":{"!description":"Horizontal orientation","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","!category":"static class","vertical":{"!description":"Vertical orientation","!category":"enum","!type":"String"}},"sap.ui.commons.Button":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","focus":{"!description":"Puts the focus to the button.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","getIconSelected":{"!description":"Gets current value of property <code>iconSelected<\/code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setIconFirst":{"!description":"Sets a new value for property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconFirst: Boolean) -> sap.ui.commons.Button","parameters":{"bIconFirst":"type: boolean, description: New value for property <code>iconFirst<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nSpecifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Button.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getStyled styled} : boolean (default: true)<\/li>\n<li>{@link #getLite lite} : boolean (default: false)<\/li>\n<li>{@link #getStyle style} : sap.ui.commons.ButtonStyle (default: Default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Button","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getStyle":{"!description":"Gets current value of property <code>style<\/code>.\n\nStyle of the button.\n(e.g. emphasized)\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ButtonStyle"},"setIconHovered":{"!description":"Sets a new value for property <code>iconHovered<\/code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.commons.Button","parameters":{"sIconHovered":"type: sap.ui.core.URI, description: New value for property <code>iconHovered<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setStyle":{"!description":"Sets a new value for property <code>style<\/code>.\n\nStyle of the button.\n(e.g. emphasized)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sStyle: sap.ui.commons.ButtonStyle) -> sap.ui.commons.Button","parameters":{"sStyle":"type: sap.ui.commons.ButtonStyle, description: New value for property <code>style<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.Button<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Button<\/code> itself.\n\nEvent is fired when the user presses the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Button","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Button<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setIconSelected":{"!description":"Sets a new value for property <code>iconSelected<\/code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.commons.Button","parameters":{"sIconSelected":"type: sap.ui.core.URI, description: New value for property <code>iconSelected<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Button<\/code> control.<br>Enables users to trigger actions such as save or print. For the button UI, you can define some text or an icon, or both.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Button.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help service\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getIconFirst":{"!description":"Gets current value of property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLite":{"!description":"Gets current value of property <code>lite<\/code>.\n\nThe button is rendered as lite button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getStyled":{"!description":"Gets current value of property <code>styled<\/code>.\n\nIndicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nButton text displayed at runtime.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nSpecifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Button","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Button","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Button","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Button with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.Button","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.Button<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Button","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Button","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Button","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setStyled":{"!description":"Sets a new value for property <code>styled<\/code>.\n\nIndicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bStyled: Boolean) -> sap.ui.commons.Button","parameters":{"bStyled":"type: boolean, description: New value for property <code>styled<\/code>"}},"!module":"sap/ui/commons/Button","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Button<\/code> control.<br>Enables users to trigger actions such as save or print. For the button UI, you can define some text or an icon, or both.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help service\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHelpId: String) -> sap.ui.commons.Button","parameters":{"sHelpId":"type: string, description: New value for property <code>helpId<\/code>"}},"getIconHovered":{"!description":"Gets current value of property <code>iconHovered<\/code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setLite":{"!description":"Sets a new value for property <code>lite<\/code>.\n\nThe button is rendered as lite button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLite: Boolean) -> sap.ui.commons.Button","parameters":{"bLite":"type: boolean, description: New value for property <code>lite<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nButton text displayed at runtime.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.Button","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.MessageList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageList"},"sap.ui.commons.layout.Padding":{"!description":"Padding, e.g. of a layout cell's content within the cell's borders.\nNote that all options except \"None\" include a padding of 2px at the top and\nbottom, and differ only in the presence of a 4px padding towards the beginning\nor end of a line, in the current locale's writing direction.","!module":"sap/ui/commons/library","Begin":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards the beginning of a line, in the current locale's\nwriting direction, but none towards its end.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards the end of a line, in the current locale's\nwriting direction, but none towards its beginning.","!category":"enum","!type":"String"},"None":{"!description":"\nNo padding at all.","!category":"enum","!type":"String"},"Both":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards both the beginning and end of a line.","!category":"enum","!type":"String"},"Neither":{"!description":"\nTop and bottom padding of 2px.\nNo padding towards neither the beginning nor end of a line.","!category":"enum","!type":"String"}},"sap.ui.commons.Tree":{"indexOfNode":{"!description":"Checks for the provided <code>sap.ui.commons.TreeNode<\/code> in the aggregation <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.commons.TreeNode) -> Number","parameters":{"oNode":"type: sap.ui.commons.TreeNode, description: The node whose index is looked for"}},"removeAllNodes":{"!description":"Removes all the controls from the aggregation <code>nodes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.TreeNode]"},"addNode":{"!description":"Adds some node to the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.commons.TreeNode) -> sap.ui.commons.Tree","parameters":{"oNode":"type: sap.ui.commons.TreeNode, description: the node to add; if empty, nothing is inserted"}},"getNodeByContext":{"!description":"Returns the node with the given context, or null if no such node currently exists","!static":false,"!category":"function","!type":"fn(oContext: sap.ui.model.Context)","parameters":{"oContext":"type: sap.ui.model.Context, description: the context of the node to be retrieved"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>node<\/code> of type <code>sap.ui.commons.TreeNode<\/code>The node which has been selected.<\/li>\n<li><code>nodeContext<\/code> of type <code>object<\/code>The binding context of the selected node.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>nodes<\/code> of type <code>sap.ui.commons.TreeNode[]<\/code>The nodes which has been selected.<\/li>\n<li><code>nodeContexts<\/code> of type <code>object[]<\/code>The binding context of the selected nodes.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Tree","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Tree<\/code> itself.\n\nEvent is fired when a tree node is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Tree<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nMinimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"!proto":"sap.ui.core.Control","getSelectionMode":{"!description":"Gets current value of property <code>selectionMode<\/code>.\n\nSelection mode of the Tree.\n\nDefault value is <code>Legacy<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TreeSelectionMode"},"insertNode":{"!description":"Inserts a node into the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.commons.TreeNode, iIndex: Number) -> sap.ui.commons.Tree","parameters":{"oNode":"type: sap.ui.commons.TreeNode, description: the node to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"}},"unbindNodes":{"!description":"Unbinds aggregation <code>nodes<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Tree"},"setShowHeaderIcons":{"!description":"Sets a new value for property <code>showHeaderIcons<\/code>.\n\nShow Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeaderIcons: Boolean) -> sap.ui.commons.Tree","parameters":{"bShowHeaderIcons":"type: boolean, description: New value for property <code>showHeaderIcons<\/code>"}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nTree width\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nTree height\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nMinimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Tree.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowHeaderIcons showHeaderIcons} : boolean (default: true)<\/li>\n<li>{@link #getShowHorizontalScrollbar showHorizontalScrollbar} : boolean (default: false)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.ui.commons.TreeSelectionMode (default: Legacy)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.ui.commons.TreeNode[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTree title","!static":false,"!category":"function","!type":"fn() -> String"},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Tree<\/code> itself.\n\nfired when the selection of the tree has been changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Tree<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nTree Header is display. If false, the tree will be in a transparent mode\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.ui.commons.Tree","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"removeNode":{"!description":"Removes a node from the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(vNode: Number | String | sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","parameters":{"vNode":"type: int|string|sap.ui.commons.TreeNode, description: The nodeto remove or its index or id"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Simple tree to display item in a hierarchical way","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Tree.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setShowHorizontalScrollbar":{"!description":"Sets a new value for property <code>showHorizontalScrollbar<\/code>.\n\nDisplay horizontal scrollbar. If false, the overflow content will be hidden\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHorizontalScrollbar: Boolean) -> sap.ui.commons.Tree","parameters":{"bShowHorizontalScrollbar":"type: boolean, description: New value for property <code>showHorizontalScrollbar<\/code>"}},"getNodes":{"!description":"Gets content of aggregation <code>nodes<\/code>.\n\nFirst level nodes","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.TreeNode]"},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Tree"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTree title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.commons.Tree","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getShowHeaderIcons":{"!description":"Gets current value of property <code>showHeaderIcons<\/code>.\n\nShow Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSelectionMode":{"!description":"Sets a new value for property <code>selectionMode<\/code>.\n\nSelection mode of the Tree.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Legacy<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode: sap.ui.commons.TreeSelectionMode) -> sap.ui.commons.Tree","parameters":{"sSelectionMode":"type: sap.ui.commons.TreeSelectionMode, description: New value for property <code>selectionMode<\/code>"}},"bindNodes":{"!description":"Binds aggregation <code>nodes<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.Tree","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nTree Header is display. If false, the tree will be in a transparent mode\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nTree height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nTree width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"expandAll":{"!description":"Expands all nodes in the tree","!static":false,"!category":"function","!type":"fn()"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tree with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"collapseAll":{"!description":"Collapses all nodes in the tree","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/commons/Tree","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Simple tree to display item in a hierarchical way","detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowHorizontalScrollbar":{"!description":"Gets current value of property <code>showHorizontalScrollbar<\/code>.\n\nDisplay horizontal scrollbar. If false, the overflow content will be hidden\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.commons.TextViewDesign":{"!description":"Designs for TextView.","Small":{"!description":"Displays the text in smaller letters.","!category":"enum","!type":"String"},"H1":{"!description":"Displays the text in header 1 letters.","!category":"enum","!type":"String"},"!category":"static class","H2":{"!description":"Displays the text in header 2 letters.","!category":"enum","!type":"String"},"Standard":{"!description":"Displays the text in standard letters.","!category":"enum","!type":"String"},"H3":{"!description":"Displays the text in header 3 letters.","!category":"enum","!type":"String"},"H4":{"!description":"Displays the text in header 4 letters.","!category":"enum","!type":"String"},"H5":{"!description":"Displays the text in header 5 letters.","!category":"enum","!type":"String"},"H6":{"!description":"Displays the text in header 6 letters.","!category":"enum","!type":"String"},"Italic":{"!description":"Displays the text in italic letters","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Underline":{"!description":"underlined Text","!category":"enum","!type":"String"},"Bold":{"!description":"Displays the text in bold letters","!category":"enum","!type":"String"},"Monospace":{"!description":"Displays the text in monospace letters.","!category":"enum","!type":"String"}},"sap.ui.commons.FileUploaderParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploaderParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploaderParameter.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FileUploaderParameter"},"sap.ui.commons.DropdownBox":{"getSearchHelpText":{"!description":"Gets current value of property <code>searchHelpText<\/code>.\n\n(optional) The text to use for the search help entry.","!static":false,"!category":"function","!type":"fn() -> String"},"onfocusin":{"!description":"Handle focusin event\nEnsures the text gets selected when focus gets into the field","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occuring event"}},"detachSearchHelp":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>searchHelp<\/code> event of this <code>sap.ui.commons.DropdownBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.DropdownBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSearchHelpEnabled":{"!description":"Gets current value of property <code>searchHelpEnabled<\/code>.\n\nWhether the DropdownBox's search help should be enabled.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.commons.ComboBox","!category":"class","attachSearchHelp":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>searchHelp<\/code> event of this <code>sap.ui.commons.DropdownBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.DropdownBox<\/code> itself.\n\nEvent fired whenever the configured searchHelpItem is clicked or the searchHelpItem is configured and F4 key is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.DropdownBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.DropdownBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSearchHelpIcon":{"!description":"Gets current value of property <code>searchHelpIcon<\/code>.\n\n(optional) The URI of the icon to use for the search help entry.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!constructorDescription":"Constructor for a new DropdownBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSearchHelpEnabled searchHelpEnabled} : boolean (default: false)<\/li>\n<li>{@link #getSearchHelpText searchHelpText} : string<\/li>\n<li>{@link #getSearchHelpAdditionalText searchHelpAdditionalText} : string<\/li>\n<li>{@link #getSearchHelpIcon searchHelpIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getMaxHistoryItems maxHistoryItems} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:searchHelp searchHelp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.ComboBox#constructor sap.ui.commons.ComboBox}\ncan be used as well.","clearHistory":{"!description":"Using this method the history of the DropdownBox can be cleared.\nThis might be necessary if the items of the DropdownBox have changed. Otherwise invalid items may appear in the history.","!static":false,"!category":"function","!type":"fn()"},"onselect":{"!description":"Handle the select event happening in the DropdownBox","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"onsapleft":{"!description":"Move the cursor one step to the left (and adapt selection)","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"setSearchHelpIcon":{"!description":"Overwrite of Setter for property <code>searchHelpIcon<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn(sSearchHelpIcon: sap.ui.core.URI) -> sap.ui.commons.DropdownBox","parameters":{"sSearchHelpIcon":"type: sap.ui.core.URI, description: new value for property <code>searchHelpIcon<\/code>"}},"onkeydown":{"!description":"Handle keydown event","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occuring event"}},"setSearchHelpText":{"!description":"Overwrite of Setter for property <code>searchHelpText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn(sSearchHelpText: String) -> sap.ui.commons.DropdownBox","parameters":{"sSearchHelpText":"type: string, description: new value for property <code>searchHelpText<\/code>"}},"onAfterRendering":{"!description":"Ensure that handed in ListBoxes are taken from the visible UI immediately.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"getTooltip_AsString":{"!description":"Extends the method inherited from sap.ui.core.Element by providing information on Search Help access (if needed)","!static":false,"!category":"function","!type":"fn() -> String"},"setSearchHelpAdditionalText":{"!description":"Overwrite of Setter for property <code>searchHelpAdditionalText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn(sSearchHelpAdditionalText: String) -> sap.ui.commons.DropdownBox","parameters":{"sSearchHelpAdditionalText":"type: string, description: new value for property <code>searchHelpAdditionalText<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ComboBox<\/code> control.<br>The control provides a field that allows end users to an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","onsapright":{"!description":"Move the cursor one step to the right (and adapt selection)","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"onsapshow":{"!description":"Handle sapshow pseudo events on the control","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.DropdownBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSearchHelpAdditionalText":{"!description":"Gets current value of property <code>searchHelpAdditionalText<\/code>.\n\n(optional) The additional Text to use for the search help entry.","!static":false,"!category":"function","!type":"fn() -> String"},"onsapdelete":{"!description":"Handle pseudo event onsapdelete.\nIf triggered with open dropdown and current item provided by history feature,\nremoves the selected item from this instance's history.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occuring event"}},"onclick":{"!description":"Handle the click event happening in the DropdownBox","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"onkeyup":{"!description":"Handle keyup event\nThis must only be considered if it is from Backspace-key in IE or after paste.\nIn case there is a keyup with a tab this results from being entered via tabbing and can be ignored, too.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occuring event"}},"setSearchHelpEnabled":{"!description":"Overwrite of Setter for property <code>searchHelpEnabled<\/code>.\nThis method accepts additional parameter to be compatiple with the\nprevious functionality\n\nDefault value is <code>false<\/code>","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean, sText: String, sAdditionalText: String, sIcon: String) -> sap.ui.commons.DropdownBox","parameters":{"bEnabled":"type: boolean, description: new value for property <code>searchHelpEnabled<\/code>","sIcon":"type: string, description: new value for property <code>searchHelpIcon<\/code>","sText":"type: string, description: new value for property <code>searchHelpText<\/code>","sAdditionalText":"type: string, description: new value for property <code>searchHelpAdditionalText<\/code>"}},"onkeypress":{"!description":"Handle keypress event","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occuring event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DropdownBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/commons/DropdownBox","onpaste":{"!description":"Handle paste event","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occuring event"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ComboBox<\/code> control.<br>The control provides a field that allows end users to an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","setMaxHistoryItems":{"!description":"Sets a new value for property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxHistoryItems: Number) -> sap.ui.commons.DropdownBox","parameters":{"iMaxHistoryItems":"type: int, description: New value for property <code>maxHistoryItems<\/code>"}},"onsaphome":{"!description":"Handle pseudo event onsaphome","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occuring event"}},"fireSearchHelp":{"!description":"Fires event <code>searchHelp<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The current value of the DropdownBox.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.DropdownBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMaxHistoryItems":{"!description":"Gets current value of property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.ui.commons.PasswordField":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>A text field with masked characters which borrows its properties and methods from TextField.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.PasswordField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.PasswordField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new PasswordField.","!module":"sap/ui/commons/PasswordField","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>A text field with masked characters which borrows its properties and methods from TextField.","!proto":"sap.ui.commons.TextField","!category":"class"},"sap.ui.commons.TextViewColor":{"!description":"Semantic Colors of a text.","!module":"sap/ui/commons/library","Negative":{"!description":"Negative color","!category":"enum","!type":"String"},"Positive":{"!description":"Positive color","!category":"enum","!type":"String"},"!category":"static class","Critical":{"!description":"Critical color","!category":"enum","!type":"String"},"Default":{"!description":"Default color","!category":"enum","!type":"String"}},"sap.ui.commons.layout.HAlign":{"!description":"Horizontal alignment, e.g. of a layout cell's content within the cell's borders.\nNote that some values depend on the current locale's writing direction while\nothers do not.","Center":{"!description":"\nHorizontally centered.","!category":"enum","!type":"String"},"Left":{"!description":"\nLeft aligned, regardless of the current locale's writing direction.","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Begin":{"!description":"\nAligned towards the beginning of a line, in the current locale's writing direction.","!category":"enum","!type":"String"},"Right":{"!description":"\nRight aligned, regardless of the current locale's writing direction.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"\nAligned towards the end of a line, in the current locale's writing direction.","!category":"enum","!type":"String"}},"sap.ui.commons.AutoComplete":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>\nTextfield with list based text completion.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.AutoComplete.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!static":false,"!category":"function","!type":"fn()"},"detachSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>suggest<\/code> event of this <code>sap.ui.commons.AutoComplete<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.AutoComplete","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.commons.ComboBox","getEnableScrolling":{"!description":"Gets current value of property <code>enableScrolling<\/code>.\n\nDetermines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setFilterFunction":{"!description":"Sets a custom filter function for items. Default is to check whether the item text begins with the typed value.\n\nExample:\n<code>\nfunction(sValue, oItem){\n\t  return jQuery.sap.startsWithIgnoreCase(oItem.getText(), sValue);\n}\n<\/code>","!static":false,"!category":"function","!type":"fn(fFilter?: fn())","parameters":{"fFilter":"type: function, description: The filter function. If not set the default filter function will be used."}},"setSelectedItemId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!static":false,"!category":"function","!type":"fn()"},"attachSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>suggest<\/code> event of this <code>sap.ui.commons.AutoComplete<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.AutoComplete<\/code> itself.\n\nFired when the user has changed the value and a suggestion list update should occur.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.AutoComplete","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.AutoComplete<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AutoComplete with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getListBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!static":false,"!category":"function","!type":"fn()"},"!constructorDescription":"Constructor for a new AutoComplete.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.ComboBox#constructor sap.ui.commons.ComboBox}\ncan be used as well.","!module":"sap/ui/commons/AutoComplete","getSelectedKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!static":false,"!category":"function","!type":"fn()"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>\nTextfield with list based text completion.","getSelectedItemId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!static":false,"!category":"function","!type":"fn()"},"fireSuggest":{"!description":"Fires event <code>suggest<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>suggestValue<\/code> of type <code>string<\/code>The current value which was typed in.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.AutoComplete","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnableScrolling":{"!description":"Sets a new value for property <code>enableScrolling<\/code>.\n\nDetermines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableScrolling: Boolean) -> sap.ui.commons.AutoComplete","parameters":{"bEnableScrolling":"type: boolean, description: New value for property <code>enableScrolling<\/code>"}},"setListBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!static":false,"!category":"function","!type":"fn()"}},"sap.ui.commons.Title_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Title.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Title"},"sap.ui.commons.layout.BorderLayoutArea":{"setAreaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Sets a new value for property <code>areaId<\/code>.\n\nDefines which area the element represents: top, begin, center, end, bottom\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>top<\/code>.","!static":false,"!category":"function","!type":"fn(sAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"sAreaId":"type: sap.ui.commons.layout.BorderLayoutAreaTypes, description: New value for property <code>areaId<\/code>"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nControls within the area","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Element","!category":"class","!constructorDescription":"Constructor for a new layout/BorderLayoutArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAreaId areaId} : sap.ui.commons.layout.BorderLayoutAreaTypes (default: top)<\/li>\n<li>{@link #getOverflowX overflowX} : string (default: auto)<\/li>\n<li>{@link #getOverflowY overflowY} : string (default: auto)<\/li>\n<li>{@link #getContentAlign contentAlign} : string (default: left)<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize (default: 100px)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nDefines the height or the width. Is not used when the area element is in Center.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100px<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"sSize":"type: sap.ui.core.CSSSize, description: New value for property <code>size<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea"},"getContentAlign":{"!description":"Gets current value of property <code>contentAlign<\/code>.\n\nThe content alignment as CSS value\n\nDefault value is <code>left<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Page<\/code> control.<br>The BorderLayoutArea represents one area of a BorderLayout","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible controls are not rendered\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.BorderLayoutArea.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible controls are not rendered\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setContentAlign":{"!description":"Sets a new value for property <code>contentAlign<\/code>.\n\nThe content alignment as CSS value\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>left<\/code>.","!static":false,"!category":"function","!type":"fn(sContentAlign: String) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"sContentAlign":"type: string, description: New value for property <code>contentAlign<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"getAreaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Gets current value of property <code>areaId<\/code>.\n\nDefines which area the element represents: top, begin, center, end, bottom\n\nDefault value is <code>top<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.BorderLayoutAreaTypes"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayoutArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setOverflowY":{"!description":"Sets a new value for property <code>overflowY<\/code>.\n\nThe overflow mode of the area in vertical direction as CSS value\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sOverflowY: String) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"sOverflowY":"type: string, description: New value for property <code>overflowY<\/code>"}},"setOverflowX":{"!description":"Sets a new value for property <code>overflowX<\/code>.\n\nThe overflow mode of the area in horizontal direction as CSS value\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sOverflowX: String) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"sOverflowX":"type: string, description: New value for property <code>overflowX<\/code>"}},"getOverflowX":{"!description":"Gets current value of property <code>overflowX<\/code>.\n\nThe overflow mode of the area in horizontal direction as CSS value\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nDefines the height or the width. Is not used when the area element is in Center.\n\nDefault value is <code>100px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getOverflowY":{"!description":"Gets current value of property <code>overflowY<\/code>.\n\nThe overflow mode of the area in vertical direction as CSS value\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/commons/layout/BorderLayoutArea","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Page<\/code> control.<br>The BorderLayoutArea represents one area of a BorderLayout","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.layout.BorderLayoutArea","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}}},"sap.ui.commons.ImageMap_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ImageMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ImageMap"},"sap.ui.commons.SearchField":{"setSearchProvider":{"!description":"Sets the aggregated <code>searchProvider<\/code>.","!static":false,"!category":"function","!type":"fn(oSearchProvider: sap.ui.core.search.SearchProvider) -> sap.ui.commons.SearchField","parameters":{"oSearchProvider":"type: sap.ui.core.search.SearchProvider, description: The searchProvider to set"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setEnableCache":{"!description":"Sets a new value for property <code>enableCache<\/code>.\n\nWhen list suggestion is enabled all suggestions are cached and no suggest event is fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableCache: Boolean) -> sap.ui.commons.SearchField","parameters":{"bEnableCache":"type: boolean, description: New value for property <code>enableCache<\/code>"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nNon-editable controls have different colors, depending on custom settings\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnableListSuggest":{"!description":"Gets current value of property <code>enableListSuggest<\/code>.\n\nDefines whether a pop up list shall be provided for suggestions\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnableCache":{"!description":"Gets current value of property <code>enableCache<\/code>.\n\nWhen list suggestion is enabled all suggestions are cached and no suggest event is fired.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnableListSuggest":{"!description":"Sets a new value for property <code>enableListSuggest<\/code>.\n\nDefines whether a pop up list shall be provided for suggestions\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableListSuggest: Boolean) -> sap.ui.commons.SearchField","parameters":{"bEnableListSuggest":"type: boolean, description: New value for property <code>enableListSuggest<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroySearchProvider":{"!description":"Destroys the searchProvider in the aggregation <code>searchProvider<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.SearchField"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.SearchField<\/code> control.<br>Allows the user to type search queries and to trigger the search. Optionally, suggestions can be added.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SearchField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>suggest<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SearchField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setStartSuggestion":{"!description":"Sets a new value for property <code>startSuggestion<\/code>.\n\nMinimum length of the entered string triggering the suggestion list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn(iStartSuggestion: Number) -> sap.ui.commons.SearchField","parameters":{"iStartSuggestion":"type: int, description: New value for property <code>startSuggestion<\/code>"}},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.SearchField","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.SearchField","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setShowExternalButton":{"!description":"Sets a new value for property <code>showExternalButton<\/code>.\n\nDefines whether an additional search button shall be displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowExternalButton: Boolean) -> sap.ui.commons.SearchField","parameters":{"bShowExternalButton":"type: boolean, description: New value for property <code>showExternalButton<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event <code>search<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>query<\/code> of type <code>string<\/code>The search query<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.SearchField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDisabled fields have different colors, and they can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.SearchField","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/commons/SearchField","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.SearchField<\/code> control.<br>Allows the user to type search queries and to trigger the search. Optionally, suggestions can be added.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.ui.commons.SearchField","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"getMaxHistoryItems":{"!description":"Gets current value of property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nPlaceholder for the input field.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowListExpander":{"!description":"Sets a new value for property <code>showListExpander<\/code>.\n\nDefines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowListExpander: Boolean) -> sap.ui.commons.SearchField","parameters":{"bShowListExpander":"type: boolean, description: New value for property <code>showListExpander<\/code>"}},"setVisibleItemCount":{"!description":"Sets a new value for property <code>visibleItemCount<\/code>.\n\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn(iVisibleItemCount: Number) -> sap.ui.commons.SearchField","parameters":{"iVisibleItemCount":"type: int, description: New value for property <code>visibleItemCount<\/code>"}},"!proto":"sap.ui.core.Control","getEnableClear":{"!description":"Gets current value of property <code>enableClear<\/code>.\n\nDefines whether the clear functionality shall be active\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>search<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SearchField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nControl width in CSS-size","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setEnableClear":{"!description":"Sets a new value for property <code>enableClear<\/code>.\n\nDefines whether the clear functionality shall be active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableClear: Boolean) -> sap.ui.commons.SearchField","parameters":{"bEnableClear":"type: boolean, description: New value for property <code>enableClear<\/code>"}},"getMaxSuggestionItems":{"!description":"Gets current value of property <code>maxSuggestionItems<\/code>.\n\nMaximum number of suggestion items in the suggestion list.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>suggest<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SearchField<\/code> itself.\n\nEvent which is fired when new suggest values are required.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SearchField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.SearchField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getVisibleItemCount":{"!description":"Gets current value of property <code>visibleItemCount<\/code>.\n\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new SearchField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableListSuggest enableListSuggest} : boolean (default: true)<\/li>\n<li>{@link #getShowListExpander showListExpander} : boolean (default: true)<\/li>\n<li>{@link #getEnableClear enableClear} : boolean (default: false)<\/li>\n<li>{@link #getShowExternalButton showExternalButton} : boolean (default: false)<\/li>\n<li>{@link #getEnableCache enableCache} : boolean (default: true)<\/li>\n<li>{@link #getEnableFilterMode enableFilterMode} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: )<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getVisibleItemCount visibleItemCount} : int (default: 20)<\/li>\n<li>{@link #getStartSuggestion startSuggestion} : int (default: 3)<\/li>\n<li>{@link #getMaxSuggestionItems maxSuggestionItems} : int (default: 10)<\/li>\n<li>{@link #getMaxHistoryItems maxHistoryItems} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSearchProvider searchProvider} : sap.ui.core.search.SearchProvider<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.SearchField","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"clearHistory":{"!description":"Clears the history of the control","!static":false,"!category":"function","!type":"fn()"},"getEnableFilterMode":{"!description":"Gets current value of property <code>enableFilterMode<\/code>.\n\nDefines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nPlaceholder for the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.ui.commons.SearchField","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getShowExternalButton":{"!description":"Gets current value of property <code>showExternalButton<\/code>.\n\nDefines whether an additional search button shall be displayed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDisabled fields have different colors, and they can not be focused.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireSuggest":{"!description":"Fires event <code>suggest<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The value for which suggestions are required.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.SearchField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getStartSuggestion":{"!description":"Gets current value of property <code>startSuggestion<\/code>.\n\nMinimum length of the entered string triggering the suggestion list.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"setEnableFilterMode":{"!description":"Sets a new value for property <code>enableFilterMode<\/code>.\n\nDefines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableFilterMode: Boolean) -> sap.ui.commons.SearchField","parameters":{"bEnableFilterMode":"type: boolean, description: New value for property <code>enableFilterMode<\/code>"}},"getSearchProvider":{"!description":"Gets content of aggregation <code>searchProvider<\/code>.\n\nSearch provider instance which handles the suggestions for this SearchField (e.g. Open Search Protocol).","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.search.SearchProvider"},"suggest":{"!description":"Callback function used to provide the suggest values in the handler of the suggest event (only in list suggestion mode)","!static":false,"!category":"function","!type":"fn(sSSuggestValue: String, aASuggestions: [String])","parameters":{"aASuggestions":"type: string[], description: The list of suggestions belonging to the suggest value","sSSuggestValue":"type: string, description: The value which was provided in the corresponding suggest event (parameter 'value')"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>search<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SearchField<\/code> itself.\n\nEvent which is fired when the user triggers a search","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SearchField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.SearchField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nControl width in CSS-size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.SearchField","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.SearchField","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nText that shall be displayed within the search field\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nNon-editable controls have different colors, depending on custom settings\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.SearchField","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMaxHistoryItems":{"!description":"Sets a new value for property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxHistoryItems: Number) -> sap.ui.commons.SearchField","parameters":{"iMaxHistoryItems":"type: int, description: New value for property <code>maxHistoryItems<\/code>"}},"setMaxSuggestionItems":{"!description":"Sets a new value for property <code>maxSuggestionItems<\/code>.\n\nMaximum number of suggestion items in the suggestion list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxSuggestionItems: Number) -> sap.ui.commons.SearchField","parameters":{"iMaxSuggestionItems":"type: int, description: New value for property <code>maxSuggestionItems<\/code>"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nText that shall be displayed within the search field\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.commons.SearchField","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"getShowListExpander":{"!description":"Gets current value of property <code>showListExpander<\/code>.\n\nDefines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.commons.layout.HorizontalLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.HorizontalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.HorizontalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.HorizontalLayout"},"sap.ui.commons.Toolbar":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","parameters":{"vItem":"type: int|string|sap.ui.commons.ToolbarItem, description: The itemto remove or its index or id"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Toolbar"},"!category":"class","destroyRightItems":{"!description":"Destroys all the rightItems in the aggregation <code>rightItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Toolbar"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWhen there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.commons.ToolbarItem) -> sap.ui.commons.Toolbar","parameters":{"oItem":"type: sap.ui.commons.ToolbarItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregating the tool bar items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ToolbarItem]"},"addRightItem":{"!description":"Adds some rightItem to the aggregation <code>rightItems<\/code>.","!static":false,"!category":"function","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem) -> sap.ui.commons.Toolbar","parameters":{"oRightItem":"type: sap.ui.commons.ToolbarItem, description: the rightItem to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new Toolbar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.ToolbarDesign (default: Flat)<\/li>\n<li>{@link #getStandalone standalone} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.commons.ToolbarItem[] (default)<\/li>\n<li>{@link #getRightItems rightItems} : sap.ui.commons.ToolbarItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.commons.ToolbarItem) -> Number","parameters":{"oItem":"type: sap.ui.commons.ToolbarItem, description: The item whose index is looked for"}},"insertRightItem":{"!description":"Inserts a rightItem into the aggregation <code>rightItems<\/code>.","!static":false,"!category":"function","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.commons.Toolbar","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the rightItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the rightItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the rightItem is inserted at\n             the last position","oRightItem":"type: sap.ui.commons.ToolbarItem, description: the rightItem to insert; if empty, nothing is inserted"}},"getStandalone":{"!description":"Gets current value of property <code>standalone<\/code>.\n\nPer default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setStandalone":{"!description":"Sets a new value for property <code>standalone<\/code>.\n\nPer default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bStandalone: Boolean) -> sap.ui.commons.Toolbar","parameters":{"bStandalone":"type: boolean, description: New value for property <code>standalone<\/code>"}},"removeAllRightItems":{"!description":"Removes all the controls from the aggregation <code>rightItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ToolbarItem]"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> control.<br>A horizontal row of items where in many cases the single toolbar items are buttons containing icons. Note that all controls with the\nsap.ui.commons.ToolbarItem interface can be used as item: Button, ComboBox, TextField.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Toolbar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ToolbarItem]"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWhen there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Toolbar","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getRightItems":{"!description":"Gets content of aggregation <code>rightItems<\/code>.\n\nAggregating the right side tool bar items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ToolbarItem]"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Toolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/commons/Toolbar","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDesign settings are theme-dependent.\n\nDefault value is <code>Flat<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ToolbarDesign"},"indexOfRightItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation <code>rightItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem) -> Number","parameters":{"oRightItem":"type: sap.ui.commons.ToolbarItem, description: The rightItem whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> control.<br>A horizontal row of items where in many cases the single toolbar items are buttons containing icons. Note that all controls with the\nsap.ui.commons.ToolbarItem interface can be used as item: Button, ComboBox, TextField.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDesign settings are theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Flat<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.commons.ToolbarDesign) -> sap.ui.commons.Toolbar","parameters":{"sDesign":"type: sap.ui.commons.ToolbarDesign, description: New value for property <code>design<\/code>"}},"removeRightItem":{"!description":"Removes a rightItem from the aggregation <code>rightItems<\/code>.","!static":false,"!category":"function","!type":"fn(vRightItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","parameters":{"vRightItem":"type: int|string|sap.ui.commons.ToolbarItem, description: The rightItemto remove or its index or id"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.commons.Toolbar","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.commons.ToolbarItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.ui.commons.enums.AreaDesign":{"!description":"Value set for the background design of areas","Fill":{"!description":"Shows the label in a filled look","!category":"enum","!type":"String"},"Plain":{"!description":"Shows the area in a plain look","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Transparent":{"!description":"Shows the background as transparent","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.commons.layout.ResponsiveFlowLayoutData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a LayoutData Element that can be added to a control if this control is used within a ResponsiveFlowLayout","extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayoutData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new layout/ResponsiveFlowLayoutData.","!module":"sap/ui/commons/layout/ResponsiveFlowLayoutData","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a LayoutData Element that can be added to a control if this control is used within a ResponsiveFlowLayout","getMargin":{"!description":"Getter for property <code>margin<\/code>.\nThis property prevents any margin of the element if set to false\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.layout.ResponsiveFlowLayoutData","setMargin":{"!description":"Setter for property <code>margin<\/code>.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn(bMargin: Boolean) -> sap.ui.layout.ResponsiveFlowLayoutData","parameters":{"bMargin":"type: boolean, description: new value for property <code>margin<\/code>"}},"!category":"class"},"sap.ui.commons.HorizontalDivider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.HorizontalDivider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.HorizontalDivider"},"sap.ui.commons.enums":{"!category":"namespace","AreaDesign":"sap.ui.commons.enums.AreaDesign","BorderDesign":"sap.ui.commons.enums.BorderDesign","Orientation":"sap.ui.commons.enums.Orientation"},"sap.ui.commons.TextField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.commons.TextField"},"sap.ui.commons.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Link with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Link"},"sap.ui.commons.ComboBox":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","parameters":{"vItem":"type: int|string|sap.ui.core.ListItem, description: The itemto remove or its index or id"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.commons.TextField","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ComboBox"},"!category":"class","setMaxPopupItems":{"!description":"Sets a new value for property <code>maxPopupItems<\/code>.\n\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxPopupItems: Number) -> sap.ui.commons.ComboBox","parameters":{"iMaxPopupItems":"type: int, description: New value for property <code>maxPopupItems<\/code>"}},"onsapenter":{"!description":"Handle sapenter pseudo events on the control","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> sap.ui.commons.ComboBox","parameters":{"oItem":"type: sap.ui.core.ListItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\n<code>ListItems<\/code> (see <code>sap.ui.core.ListBox<\/code>) that shall be displayed in the list.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"!constructorDescription":"Constructor for a new ComboBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxPopupItems maxPopupItems} : int (default: 10)<\/li>\n<li>{@link #getDisplaySecondaryValues displaySecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.ListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> Number","parameters":{"oItem":"type: sap.ui.core.ListItem, description: The item whose index is looked for"}},"getSelectedItemId":{"!description":"Gets current value of property <code>selectedItemId<\/code>.\n\nId of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.","!static":false,"!category":"function","!type":"fn() -> String"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.ComboBox","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"onsapnextmodifiers":{"!description":"Handle sapnextmodifiers pseudo events on the control\nif in toolbar prevent item navigation if popup is opened.","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"setListBox":{"!description":"Sets the associated <code>listBox<\/code>.","!static":false,"!category":"function","!type":"fn(oListBox: sap.ui.commons.ListBox) -> sap.ui.commons.ComboBox","parameters":{"oListBox":"type: sap.ui.commons.ListBox, description: Id of an element which becomes the new target of this listBox association; alternatively, an element instance may be given"}},"onsaphide":{"!description":"Handle saphide pseudo events on the control","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ComboBox<\/code> control.<br>\nThe control provides a field that allows end users to either enter some text, or to choose an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","getMaxPopupItems":{"!description":"Gets current value of property <code>maxPopupItems<\/code>.\n\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"onsapshow":{"!description":"Handle sapshow pseudo events on the control","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Sets a new value for property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedKey: String) -> sap.ui.commons.ComboBox","parameters":{"sSelectedKey":"type: string, description: New value for property <code>selectedKey<\/code>"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ComboBox"},"_checkChange":{"!description":"Compares the previous value with the current value and fires the \"Change\" event\nif the ComboBox is editable and the value has changed or whether the value has been changed\ne.g. via up/down or auto-complete feature","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event, bImmediate?: Boolean)","parameters":{"oEvent":"type: jQuery.Event, description: The event object.","bImmediate":"type: boolean, description: indicate whether the check should happen immediately or delayed (e.g. to avoid focusout / click double event processing)"}},"setDisplaySecondaryValues":{"!description":"Sets a new value for property <code>displaySecondaryValues<\/code>.\n\nIndicates whether the <code>additionalText<\/code> property that is available for <code>sap.ui.core.ListItem<\/code> shall be displayed in the list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.commons.ComboBox","parameters":{"bDisplaySecondaryValues":"type: boolean, description: New value for property <code>displaySecondaryValues<\/code>"}},"setSelectedItemId":{"!description":"Sets a new value for property <code>selectedItemId<\/code>.\n\nId of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedItemId: String) -> sap.ui.commons.ComboBox","parameters":{"sSelectedItemId":"type: string, description: New value for property <code>selectedItemId<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code> The new / changed value of the textfield.<\/li>\n<li>'selectedItem' of type <code>sap.ui.core.ListItem<\/code> selected item <\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ComboBox","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getF4ButtonDomRef":{"!description":"Returns the DomRef which represents the icon for value help.\nCould be overwritten in child-classes","!static":false,"!category":"function","!type":"fn() -> Element"},"getListBox":{"!description":"ID of the element which is the current target of the association <code>listBox<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ListBox"},"!module":"sap/ui/commons/ComboBox","getSelectedKey":{"!description":"Gets current value of property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ComboBox<\/code> control.<br>\nThe control provides a field that allows end users to either enter some text, or to choose an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","getDisplaySecondaryValues":{"!description":"Gets current value of property <code>displaySecondaryValues<\/code>.\n\nIndicates whether the <code>additionalText<\/code> property that is available for <code>sap.ui.core.ListItem<\/code> shall be displayed in the list.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"onsapescape":{"!description":"Handle sapescape pseudo events on the control","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: The event object."}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.commons.ComboBox","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.core.ListItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.ui.commons.Menu":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.Menu of the library sap.ui.unified instead.<br>A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Menu.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Menu.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new Menu control.","!module":"sap/ui/commons/Menu","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.Menu of the library sap.ui.unified instead.<br>A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.","!proto":"sap.ui.unified.Menu","!category":"class"},"sap.ui.commons.Paginator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Provides navigation between pages within a list of numbered pages.","detachPage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>page<\/code> event of this <code>sap.ui.commons.Paginator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Paginator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getNumberOfPages":{"!description":"Gets current value of property <code>numberOfPages<\/code>.\n\nRepresents the overall number of pages that are embedded into the parent control","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Paginator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setNumberOfPages":{"!description":"Sets a new value for property <code>numberOfPages<\/code>.\n\nRepresents the overall number of pages that are embedded into the parent control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iNumberOfPages: Number) -> sap.ui.commons.Paginator","parameters":{"iNumberOfPages":"type: int, description: New value for property <code>numberOfPages<\/code>"}},"firePage":{"!description":"Fires event <code>page<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>srcPage<\/code> of type <code>int<\/code>The page which is the current one before the page event is fired (and another page is displayed)<\/li>\n<li><code>targetPage<\/code> of type <code>int<\/code>The page that shall be displayed next after the page event is fired.\n\nThe page number is 1-based: the first page has index 1, not 0, to match the number visible in the UI.<\/li>\n<li><code>type<\/code> of type <code>sap.ui.commons.PaginatorEvent<\/code>Provides the values 'First', 'Last', 'Next', 'Previous', 'Goto'. The event parameter informs the application\nhow the user navigated to the new page: Whether the 'Next' button was used, or another button, or whether the page was directly\nselected<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Paginator","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.Control","setCurrentPage":{"!description":"Sets a new value for property <code>currentPage<\/code>.\n\nRepresents the current page (first page has index 1, not 0, to match the visual number)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iCurrentPage: Number) -> sap.ui.commons.Paginator","parameters":{"iCurrentPage":"type: int, description: New value for property <code>currentPage<\/code>"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.commons.Paginator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Paginator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCurrentPage currentPage} : int (default: 1)<\/li>\n<li>{@link #getNumberOfPages numberOfPages} : int<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:page page} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/Paginator","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Provides navigation between pages within a list of numbered pages.","getCurrentPage":{"!description":"Gets current value of property <code>currentPage<\/code>.\n\nRepresents the current page (first page has index 1, not 0, to match the visual number)\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachPage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>page<\/code> event of this <code>sap.ui.commons.Paginator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Paginator<\/code> itself.\n\nEvent is fired when the user navigates to another page by selecting it directly, or by jumping forward/backward.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Paginator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Paginator<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.commons.MessageBox.Icon":{"!description":"Enumeration of the pre-defined icons that can be used in a MessageBox.","SUCCESS":{"!description":"Shows the success icon in the message box.","!category":"enum","!type":"String"},"!module":"sap/ui/commons/MessageBox","INFORMATION":{"!description":"Shows the information icon in the message box.","!category":"enum","!type":"String"},"!category":"static class","ERROR":{"!description":"Shows the error icon in the message box.","!category":"enum","!type":"String"},"NONE":{"!description":"Shows no icon in the message box.","!category":"enum","!type":"String"},"WARNING":{"!description":"Shows the warning icon in the message box.","!category":"enum","!type":"String"},"CRITICAL":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 The error icon is used instead<br>Shows the critical error icon in the message box.","!category":"enum","!type":"String"},"QUESTION":{"!description":"Shows the question icon in the message box.","!category":"enum","!type":"String"}},"sap.ui.commons.ListBox":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addSelectedIndex":{"!description":"Adds the given index to current selection.\nWhen multiple selection is disabled, this replaces the current selection.\nWhen the given index is invalid, the call is ignored.","!static":false,"!category":"function","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.ListBox","parameters":{"iSelectedIndex":"type: int, description: Index to add to selection.."}},"getValueTextAlign":{"!description":"Gets current value of property <code>valueTextAlign<\/code>.\n\nDetermines the text alignment in the primary ListBox column.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>id<\/code> of type <code>string<\/code>ID of the ListBox which triggered the event.<\/li>\n<li><code>selectedIndex<\/code> of type <code>int<\/code>The currently selected index of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected indices -\nthe one whose selection has triggered the selection change.\nTo get all currently selected indices, use selectedIndices.<\/li>\n<li><code>selectedItem<\/code> of type <code>sap.ui.core.Item<\/code>The currently selected item of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected items -\nthe one whose selection has triggered the selection change.<\/li>\n<li><code>selectedIndices<\/code> of type <code>int[]<\/code>Array containing the indices which are selected.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ListBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.ListBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ListBox<\/code> itself.\n\nEvent is fired when selection is changed by user interaction.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ListBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ListBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nDetermines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nDetermines the minimum width of the ListBox. If not set, there is no minimum width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ListBox"},"removeSelectedIndex":{"!description":"Removes the given index from this selection. When the index is invalid or not selected, the call is ignored.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ui.commons.ListBox","parameters":{"iIndex":"type: int, description: Index that shall be removed from selection."}},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nDetermines the maximum width of the ListBox. If not set, there is no maximum width.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregation of items to be displayed. Must be either of type sap.ui.core.ListItem or sap.ui.core.SeparatorItem.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getDisplayIcons":{"!description":"Gets current value of property <code>displayIcons<\/code>.\n\nDetermines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisibleItems":{"!description":"Makes the ListBox render with a height that allows it to display exactly the given number of items.","!static":false,"!category":"function","!type":"fn(iItemCount: Number) -> sap.ui.commons.ListBox","parameters":{"iItemCount":"type: int, description: The number of items that should fit into the ListBox without scrolling."}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"setSelectedKeys":{"!description":"Keys of the items to be selected, wrapped in an array. An empty array means no selection.\nWhen multiple selection is disabled, and multiple keys are given,\nthe selection is set to the item with the first valid key in the given array.\nAny invalid keys are ignored.\nThe previous selection is replaced in any case.","!static":false,"!category":"function","!type":"fn(aSelectedKeys: [String]) -> sap.ui.commons.ListBox","parameters":{"aSelectedKeys":"type: string[], description: The keys of the items to be selected."}},"isIndexSelected":{"!description":"Returns whether the given index is selected.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> Boolean","parameters":{"iIndex":"type: int, description: Index which is checked for selection state."}},"clearSelection":{"!description":"Removes complete selection.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ListBox"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getSelectedItem":{"!description":"Returns selected item. When no item is selected, \"null\" is returned.\nWhen multi-selection is enabled and multiple items are selected, only the first selected item is returned.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.List<\/code> control.<br>Provides a list of items from which users can choose an item.\nFor the design of the list box, features such as defining the list box height, fixing the number of visible items,\nchoosing one item to be the item that is marked by default when the list box is shown,\nor a scroll bar for large list boxes are available.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ListBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueTextAlign":{"!description":"Sets a new value for property <code>valueTextAlign<\/code>.\n\nDetermines the text alignment in the primary ListBox column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sValueTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.ListBox","parameters":{"sValueTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>valueTextAlign<\/code>"}},"setSelectedIndices":{"!description":"Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".\nWhen multiple selection is disabled and multiple items are given,\nthe selection is set to the index of the first valid index in the given array.\nAny invalid indices are ignored.\nThe previous selection is in any case replaced.","!static":false,"!category":"function","!type":"fn(aSelectedIndices: [Number]) -> sap.ui.commons.ListBox","parameters":{"aSelectedIndices":"type: int[], description: Indices of the items to be selected."}},"setDisplaySecondaryValues":{"!description":"Sets a new value for property <code>displaySecondaryValues<\/code>.\n\nDetermines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.commons.ListBox","parameters":{"bDisplaySecondaryValues":"type: boolean, description: New value for property <code>displaySecondaryValues<\/code>"}},"setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nDetermines the maximum width of the ListBox. If not set, there is no maximum width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"setHeight":{"!description":"Sets the height of this ListBox in CSS units.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New height for the ListBox."}},"setScrollTop":{"!description":"Positions the ListBox contents so that they are scrolled-down by the given number of pixels.","!static":false,"!category":"function","!type":"fn(iScrollTop: Number) -> sap.ui.commons.ListBox","parameters":{"iScrollTop":"type: int, description: Vertical scroll position in pixels."}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ListBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDetermines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.ListBox","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/commons/ListBox","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.List<\/code> control.<br>Provides a list of items from which users can choose an item.\nFor the design of the list box, features such as defining the list box height, fixing the number of visible items,\nchoosing one item to be the item that is marked by default when the list box is shown,\nor a scroll bar for large list boxes are available.","getAllowMultiSelect":{"!description":"Gets current value of property <code>allowMultiSelect<\/code>.\n\nDetermines whether multiple selection is allowed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getSelectedIndex":{"!description":"Zero-based index of selected item. Index value for no selection is -1.\nWhen multiple selection is enabled and multiple items are selected,\nthe method returns the first selected item.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.ListBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ListBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setAllowMultiSelect":{"!description":"Sets a new value for property <code>allowMultiSelect<\/code>.\n\nDetermines whether multiple selection is allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAllowMultiSelect: Boolean) -> sap.ui.commons.ListBox","parameters":{"bAllowMultiSelect":"type: boolean, description: New value for property <code>allowMultiSelect<\/code>"}},"setDisplayIcons":{"!description":"Sets a new value for property <code>displayIcons<\/code>.\n\nDetermines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayIcons: Boolean) -> sap.ui.commons.ListBox","parameters":{"bDisplayIcons":"type: boolean, description: New value for property <code>displayIcons<\/code>"}},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The itemto remove or its index or id"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"scrollToIndex":{"!description":"If the ListBox has a scroll bar because the number of items is larger than the number of visible items,\nthis method scrolls to the item with the given index.\nIf there are enough items, this item will then appear at the topmost visible position in the ListBox.\nIf bLazy is true, it only scrolls as far as required to make the item visible.\nSetting the scrollTop property and calling scrollToIndex are two operations\ninfluencing the same \"physical\" property, so the last call \"wins\".","!static":false,"!category":"function","!type":"fn(iIndex: Number, bLazy: Boolean) -> sap.ui.commons.ListBox","parameters":{"iIndex":"type: int, description: The index to which the ListBox should scroll.","bLazy":"type: boolean, description: If set to true, the ListBox only scrolls if the item is not completely visible, and it scrolls for exactly the space to make it fully visible. If set to false, the item is scrolled to the top position (if possible)."}},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getScrollTop":{"!description":"Returns how many pixels the ListBox contents are currently scrolled down.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example).","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.commons.ListBox","parameters":{"oItem":"type: sap.ui.core.Item, description: the item to add; if empty, nothing is inserted"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nControl height as common CSS-size (px or % as unit, for example).\nThe setting overrides any definitions made for the setVisibleItems() method.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nDetermines the minimum width of the ListBox. If not set, there is no minimum width.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ListBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getAllowMultiSelect allowMultiSelect} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getScrollTop scrollTop} : int (default: -1)<\/li>\n<li>{@link #getDisplayIcons displayIcons} : boolean (default: false)<\/li>\n<li>{@link #getDisplaySecondaryValues displaySecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getValueTextAlign valueTextAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getSecondaryValueTextAlign secondaryValueTextAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getVisibleItems visibleItems} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.ListBox","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getSelectedItems":{"!description":"Returns an array containing the selected items. In the case of no selection, an empty array is returned.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDetermines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setItems":{"!description":"Allows setting the list items as array for this instance of ListBox.","!static":false,"!category":"function","!type":"fn(aItems: [sap.ui.core.ListItem], bDestroyItems: Boolean) -> sap.ui.commons.ListBox","parameters":{"bDestroyItems":"type: boolean, description: Optional boolean parameter to indicate that the formerly set items should be destroyed, instead of just removed.","aItems":"type: sap.ui.core.ListItem[], description: The items to set for this ListBox."}},"getSecondaryValueTextAlign":{"!description":"Gets current value of property <code>secondaryValueTextAlign<\/code>.\n\nDetermines the text alignment in the secondary ListBox text column (if available).\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"getSelectedIndices":{"!description":"Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".","!static":false,"!category":"function","!type":"fn() -> [Number]"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"setWidth":{"!description":"Sets the width of this ListBox in CSS units.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New width for the ListBox."}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.ListBox","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"addSelectedIndices":{"!description":"Adds the given indices to selection. Any invalid indices are ignored.","!static":false,"!category":"function","!type":"fn(aSelectedIndices: [Number]) -> sap.ui.commons.ListBox","parameters":{"aSelectedIndices":"type: int[], description: Indices of the items that shall additionally be selected."}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nDetermines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.commons.ListBox","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"getDisplaySecondaryValues":{"!description":"Gets current value of property <code>displaySecondaryValues<\/code>.\n\nDetermines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSecondaryValueTextAlign":{"!description":"Sets a new value for property <code>secondaryValueTextAlign<\/code>.\n\nDetermines the text alignment in the secondary ListBox text column (if available).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondaryValueTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.ListBox","parameters":{"sSecondaryValueTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>secondaryValueTextAlign<\/code>"}},"setSelectedIndex":{"!description":"Sets the zero-based index of the currently selected item.\nThis method removes any previous selections. When the given index is invalid, the call is ignored.","!static":false,"!category":"function","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.ListBox","parameters":{"iSelectedIndex":"type: int, description: Index to be selected."}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.commons.ListBox","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.core.Item, description: the item to insert; if empty, nothing is inserted"}},"getSelectedKeys":{"!description":"Returns the keys of the selected items in an array.\nIf a selected item does not have a key, the respective array entry will be undefined.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getVisibleItems":{"!description":"Returns the number of visible items.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.ui.commons.form.GridContainerData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Grid layout specific properties for FormContainers.\nThe width and height properties of the elements are ignored since the witdh and heights are defined by the grid cells.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridContainerData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridContainerData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridContainerData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/GridContainerData.","!module":"sap/ui/commons/form/GridContainerData","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Grid layout specific properties for FormContainers.\nThe width and height properties of the elements are ignored since the witdh and heights are defined by the grid cells.","!proto":"sap.ui.layout.form.GridContainerData","!category":"class"},"sap.ui.commons.RoadMap_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RoadMap"},"sap.ui.commons.RatingIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RatingIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RatingIndicator"},"sap.ui.commons.MenuTextFieldItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control <code>sap.ui.unified.MenuTextFieldItem<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuTextFieldItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuTextFieldItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuTextFieldItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MenuTextFieldItem element.","!module":"sap/ui/commons/MenuTextFieldItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control <code>sap.ui.unified.MenuTextFieldItem<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","!proto":"sap.ui.unified.MenuTextFieldItem","!category":"class"},"sap.ui.commons.form.FormContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Used to group form elements.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.FormContainer","parameters":{"bVisible":"type: boolean, description: new value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/FormContainer.","getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible FormContainers are not rendered.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/commons/form/FormContainer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Used to group form elements.","!proto":"sap.ui.layout.form.FormContainer","!category":"class"},"sap.ui.commons.form.FormLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Base layout for Forms.\nOther Layouts must inherit from this one.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/FormLayout.","!module":"sap/ui/commons/form/FormLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Base layout for Forms.\nOther Layouts must inherit from this one.","!proto":"sap.ui.layout.form.FormLayout","!category":"class"},"sap.ui.commons.ColorPickerMode":{"!description":"different styles for a ColorPicker.","HSL":{"!description":"Color picker works with HSL values.","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","!category":"static class","HSV":{"!description":"Color picker works with HSV values.","!category":"enum","!type":"String"}},"sap.ui.commons.SplitterSize":{"!description":"A string type that represents subset of CSS size values. For the Splitter only px and % are allowed.","!module":"sap/ui/commons/library","!helpDescription":"A string type that represents subset of CSS size values. For the Splitter only px and % are allowed.","!category":"namespace"},"sap.ui.commons.RowRepeaterSorter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterSorter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeaterSorter"},"sap.ui.commons.FileUploader":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.FileUploader of the library sap.ui.unified instead.<br>The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploader.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FileUploader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FileUploader.","!module":"sap/ui/commons/FileUploader","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.FileUploader of the library sap.ui.unified instead.<br>The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.","!proto":"sap.ui.unified.FileUploader","!category":"class"},"sap.ui.commons.Tree_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tree with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Tree"},"sap.ui.commons.TextArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TextArea"},"sap.ui.commons.Splitter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Splitter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Splitter"},"sap.ui.commons.DropdownBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DropdownBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.DropdownBox"},"sap.ui.commons.layout.MatrixLayoutCell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutCell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayoutCell"},"sap.ui.commons.FileUploader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploader.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FileUploader"},"sap.ui.commons.ProgressIndicator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ProgressIndicator<\/code> control.<br>Shows the progress of a process in a graphical way.\nThe indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate.\nThe indicator status can be interactive.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ProgressIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.core.Control","!category":"class","setDisplayValue":{"!description":"Sets a new value for property <code>displayValue<\/code>.\n\nDetermines the text value that will be displayed in the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.ui.commons.ProgressIndicator","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the control.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowValue":{"!description":"Gets current value of property <code>showValue<\/code>.\n\nDetermines whether the percent value shall be rendered inside the bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ProgressIndicator","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getBarColor":{"!description":"Gets current value of property <code>barColor<\/code>.\n\nDetermines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nDefault value is <code>NEUTRAL<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.BarColor"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDetermines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.ProgressIndicator","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getPercentValue":{"!description":"Gets current value of property <code>percentValue<\/code>.\n\nDetermines the numerical value for the displayed length of the progress bar.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new ProgressIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getBarColor barColor} : sap.ui.core.BarColor (default: NEUTRAL)<\/li>\n<li>{@link #getDisplayValue displayValue} : string (default: 0%)<\/li>\n<li>{@link #getPercentValue percentValue} : int (default: 0)<\/li>\n<li>{@link #getShowValue showValue} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ProgressIndicator","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ProgressIndicator<\/code> control.<br>Shows the progress of a process in a graphical way.\nThe indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate.\nThe indicator status can be interactive.","setShowValue":{"!description":"Sets a new value for property <code>showValue<\/code>.\n\nDetermines whether the percent value shall be rendered inside the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValue: Boolean) -> sap.ui.commons.ProgressIndicator","parameters":{"bShowValue":"type: boolean, description: New value for property <code>showValue<\/code>"}},"getDisplayValue":{"!description":"Gets current value of property <code>displayValue<\/code>.\n\nDetermines the text value that will be displayed in the bar.\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDetermines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPercentValue":{"!description":"Sets the new percent value which the ProgressIndicator should display.\nA new rendering is not necessary, only the bar has to be moved.","!static":false,"!category":"function","!type":"fn(iPercentValue: Number) -> sap.ui.commons.ProgressIndicator","parameters":{"iPercentValue":"type: int, description: The new percent value of the ProgressIndicator."}},"setBarColor":{"!description":"Sets a new value for property <code>barColor<\/code>.\n\nDetermines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>NEUTRAL<\/code>.","!static":false,"!category":"function","!type":"fn(sBarColor: sap.ui.core.BarColor) -> sap.ui.commons.ProgressIndicator","parameters":{"sBarColor":"type: sap.ui.core.BarColor, description: New value for property <code>barColor<\/code>"}}},"sap.ui.commons.Tab_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tab with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Panel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Tab"},"sap.ui.commons.RowRepeater_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeater with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeater"},"sap.ui.commons.PasswordField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.PasswordField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.PasswordField"},"sap.ui.commons.RangeSlider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RangeSlider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Slider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RangeSlider"},"sap.ui.commons.MenuItemBase_obj":{"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuItemBase"},"sap.ui.commons.SearchField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SearchField"},"sap.ui.commons.MessageType":{"!description":"[Enter description for MessageType]","Warning":{"!description":"Warning message","!category":"enum","!type":"String"},"!module":"sap/ui/commons/library","Error":{"!description":"Error message","!category":"enum","!type":"String"},"!category":"static class","Success":{"!description":"Successful message","!category":"enum","!type":"String"}},"sap.ui.commons.Panel":{"destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Panel"},"getFocusInfo":{"!static":false,"!category":"function","!type":"fn()"},"setBorderDesign":{"!description":"Sets a new value for property <code>borderDesign<\/code>.\n\nDetermines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Box<\/code>.","!static":false,"!category":"function","!type":"fn(sBorderDesign: sap.ui.commons.enums.BorderDesign) -> sap.ui.commons.Panel","parameters":{"sBorderDesign":"type: sap.ui.commons.enums.BorderDesign, description: New value for property <code>borderDesign<\/code>"}},"getTitle":{"!description":"Gets content of aggregation <code>title<\/code>.\n\nAggregates the title element of the Panel.\nFor text titles only, you alternatively could use setText() which also creates a title in the background.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Title"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Panel"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Panel<\/code> control.<br>Represents a container with scroll functionality, that can be used for text and controls.\nThe Panel does not layout the embedded controls.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Panel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setScrollLeft":{"!description":"Sets the scroll position of the panel in pixels from the left.","!static":false,"!category":"function","!type":"fn(iPosition: Number) -> sap.ui.commons.Panel","parameters":{"iPosition":"type: int, description: The position to scroll to."}},"getText":{"!description":"Returns the text that is rendered in the Panel header.\nIf a Title control was used it returns the text of the Title control.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitle":{"!description":"Sets a Tille control that will be rendered in the Panel header.","!static":false,"!category":"function","!type":"fn(oTitle: sap.ui.core.Title) -> sap.ui.commons.Panel","parameters":{"oTitle":"type: sap.ui.core.Title, description: The Title to render in the header."}},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.commons.Button) -> sap.ui.commons.Panel","parameters":{"oButton":"type: sap.ui.commons.Button, description: the button to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setHeight":{"!description":"Sets the height of the panel.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: The height of the panel as CSS size."}},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.commons.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.commons.Button) -> Number","parameters":{"oButton":"type: sap.ui.commons.Button, description: The button whose index is looked for"}},"setScrollTop":{"!description":"Sets the scrolls position of the panel in pixels from the top.","!static":false,"!category":"function","!type":"fn(iPosition: Number) -> sap.ui.commons.Panel","parameters":{"iPosition":"type: int, description: The position to scroll to."}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Panel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Property setter for the \"enabled\" state","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Panel","parameters":{"bEnabled":"type: boolean, description: Whether the Panel should be enabled or not."}},"!module":"sap/ui/commons/Panel","insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.commons.Button, iIndex: Number) -> sap.ui.commons.Panel","parameters":{"oButton":"type: sap.ui.commons.Button, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Panel<\/code> control.<br>Represents a container with scroll functionality, that can be used for text and controls.\nThe Panel does not layout the embedded controls.","getApplyContentPadding":{"!description":"Gets current value of property <code>applyContentPadding<\/code>.\n\nDetermines whether the Panel will have padding.\nPadding is theme-dependent.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getBorderDesign":{"!description":"Gets current value of property <code>borderDesign<\/code>.\n\nDetermines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.\n\nDefault value is <code>Box<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.enums.BorderDesign"},"setAreaDesign":{"!description":"Sets a new value for property <code>areaDesign<\/code>.\n\nDetermines the background color.\nNote that color settings are theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Fill<\/code>.","!static":false,"!category":"function","!type":"fn(sAreaDesign: sap.ui.commons.enums.AreaDesign) -> sap.ui.commons.Panel","parameters":{"sAreaDesign":"type: sap.ui.commons.enums.AreaDesign, description: New value for property <code>areaDesign<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Panel","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Button]"},"getScrollTop":{"!description":"Returns the scroll position of the panel in pixels from the top.\nReturns 0 if not rendered yet.\nAlso internally updates the control property.","!static":false,"!category":"function","!type":"fn() -> Number"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAggregates the controls that are contained in the Panel.\nIt is recommended to use a layout control as single direct child.\nWhen the Panel dimensions are set, the child control may have width and height of 100%.\nWhen the dimensions are not set, the child defines the size of the Panel.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setCollapsed":{"!description":"Property setter for the \"collapsed\" state","!static":false,"!category":"function","!type":"fn(bCollapsed: Boolean) -> sap.ui.commons.Panel","parameters":{"bCollapsed":"type: boolean, description: Whether the Panel should be collapsed or not."}},"!proto":"sap.ui.core.Control","!category":"class","getShowCollapseIcon":{"!description":"Gets current value of property <code>showCollapseIcon<\/code>.\n\nDetermines whether the Panel will have an icon for collapsing/expanding, or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the Panel in CSS size.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getAreaDesign":{"!description":"Gets current value of property <code>areaDesign<\/code>.\n\nDetermines the background color.\nNote that color settings are theme-dependent.\n\nDefault value is <code>Fill<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.enums.AreaDesign"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the Panel in CSS size.\nPer default, the height for the Panel is automatically adjusted to the content.\nDimension allows to explicitly specify the height.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Panel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getScrollLeft scrollLeft} : int (default: 0)<\/li>\n<li>{@link #getScrollTop scrollTop} : int (default: 0)<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getAreaDesign areaDesign} : sap.ui.commons.enums.AreaDesign (default: Fill)<\/li>\n<li>{@link #getBorderDesign borderDesign} : sap.ui.commons.enums.BorderDesign (default: Box)<\/li>\n<li>{@link #getShowCollapseIcon showCollapseIcon} : boolean (default: true)<\/li>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getTitle title} : sap.ui.core.Title<\/li>\n<li>{@link #getButtons buttons} : sap.ui.commons.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nRepresents the state of the of the Panel (enabled or disabled)\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDimensions":{"!description":"Sets the dimensions of the panel.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize, sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: The height of the panel as CSS size.","sWidth":"type: sap.ui.core.CSSSize, description: The width of the panel as CSS size."}},"getScrollLeft":{"!description":"Returns the scroll position of the panel in pixels from the left.\nReturns 0 if not rendered yet.\nAlso internally updates the control property.","!static":false,"!category":"function","!type":"fn() -> Number"},"getCollapsed":{"!description":"Gets current value of property <code>collapsed<\/code>.\n\nDetermines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nThe buttons that shall be displayed in the Panel header","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Button]"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowCollapseIcon":{"!description":"Sets a new value for property <code>showCollapseIcon<\/code>.\n\nDetermines whether the Panel will have an icon for collapsing/expanding, or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCollapseIcon: Boolean) -> sap.ui.commons.Panel","parameters":{"bShowCollapseIcon":"type: boolean, description: New value for property <code>showCollapseIcon<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Panel","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"setWidth":{"!description":"Sets the width of the panel.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: The width of the panel as CSS size."}},"setApplyContentPadding":{"!description":"Property setter for the padding","!static":false,"!category":"function","!type":"fn(bPadding: Boolean) -> sap.ui.commons.Panel","parameters":{"bPadding":"type: boolean, description: Whether the Panel should have padding."}},"removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.ui.commons.Button) -> sap.ui.commons.Button","parameters":{"vButton":"type: int|string|sap.ui.commons.Button, description: The buttonto remove or its index or id"}},"destroyTitle":{"!description":"Destroys the title in the aggregation <code>title<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Panel"},"setText":{"!description":"Sets the text that will be rendered in the Panel header.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.Panel","parameters":{"sText":"type: string, description: The text to render in the header."}}},"sap.ui.commons.MenuTextFieldItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuTextFieldItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuTextFieldItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuTextFieldItem"},"sap.ui.commons.ToggleButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ToggleButton<\/code> control.<br>The ToggleButton Control is a Button that can be toggled between pressed and normal state","extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ToggleButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ToggleButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Button#constructor sap.ui.commons.Button}\ncan be used as well.","getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/commons/ToggleButton","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ToggleButton<\/code> control.<br>The ToggleButton Control is a Button that can be toggled between pressed and normal state","setPressed":{"!description":"Sets a new value for property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed: Boolean) -> sap.ui.commons.ToggleButton","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"!proto":"sap.ui.commons.Button","getPressed":{"!description":"Gets current value of property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class"},"sap.ui.commons.Callout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>Callout is a small popup with some useful information and links that is shown when a mouse is hovered over a specific view element.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Callout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nDetermines the content of the Callout","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.commons.CalloutBase","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Callout","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Callout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Callout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.CalloutBase#constructor sap.ui.commons.CalloutBase}\ncan be used as well.","!module":"sap/ui/commons/Callout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>Callout is a small popup with some useful information and links that is shown when a mouse is hovered over a specific view element.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Callout","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Callout"}},"sap.ui.commons.form.ResponsiveLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.ResponsiveLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.ResponsiveLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.ResponsiveLayout"},"sap.ui.commons.RangeSlider":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RangeSlider<\/code> control.<br>The interactive control is displayed either as a horizontal or a vertical line with two pointers and units of measurement.\nUsers can move the pointers along the line to change a range with graphical support.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.RangeSlider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Slider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RangeSlider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValue2":{"!description":"Sets a new value for property <code>value2<\/code>.\n\nCurrent second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>80<\/code>.","!static":false,"!category":"function","!type":"fn(fValue2: Number) -> sap.ui.commons.RangeSlider","parameters":{"fValue2":"type: float, description: New value for property <code>value2<\/code>"}},"!constructorDescription":"Constructor for a new <code>RangeSlider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue2 value2} : float (default: 80)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Slider#constructor sap.ui.commons.Slider}\ncan be used as well.","!module":"sap/ui/commons/RangeSlider","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RangeSlider<\/code> control.<br>The interactive control is displayed either as a horizontal or a vertical line with two pointers and units of measurement.\nUsers can move the pointers along the line to change a range with graphical support.","!proto":"sap.ui.commons.Slider","!category":"class","getValue2":{"!description":"Gets current value of property <code>value2<\/code>.\n\nCurrent second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.\n\nDefault value is <code>80<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.ui.commons.form.Form":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Form control.\nHolder for form control to be rendered in a specific form layout.\nA Form supports VariantLayoutData for it's conent to allow a simple switching of Layouts.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.Form with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.Form.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.Form","parameters":{"bVisible":"type: boolean, description: new value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.Form.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new form/Form.","getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible Forms are not rendered.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/commons/form/Form","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Form control.\nHolder for form control to be rendered in a specific form layout.\nA Form supports VariantLayoutData for it's conent to allow a simple switching of Layouts.","!proto":"sap.ui.layout.form.Form","!category":"class"},"sap.ui.commons.MenuBar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.OverflowToolbar<\/code> control.<br>Represents a user interface area which is the entry point for menus with their menu items. MenuBar is useful for applications which shall offer a\nset of actions that shall be provided in a structured way. The MenuBar contains the menu titles from where users navigate to the single items. The control supports\nfor example long menu item texts, automated scrolling for menu items when the browser space is not large enough to display all items, defining images for single\nor all items in a menu, automated layouting of items with or w/o image, and active/non-active items.","removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.unified.MenuItem) -> sap.ui.unified.MenuItem","parameters":{"vItem":"type: int|string|sap.ui.unified.MenuItem, description: The itemto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.MenuBar"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the width of the MenuBar\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.MenuItem]"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the width of the MenuBar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.MenuBar","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.MenuItem) -> sap.ui.commons.MenuBar","parameters":{"oItem":"type: sap.ui.unified.MenuItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregation of menu items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.MenuItem]"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhen the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.MenuBar","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new MenuBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.MenuBarDesign (default: Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.unified.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MenuBar","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nAvailable design options are Header and Standard. Note that design settings are theme-dependent.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.MenuBarDesign"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.unified.MenuItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.MenuItem) -> Number","parameters":{"oItem":"type: sap.ui.unified.MenuItem, description: The item whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.OverflowToolbar<\/code> control.<br>Represents a user interface area which is the entry point for menus with their menu items. MenuBar is useful for applications which shall offer a\nset of actions that shall be provided in a structured way. The MenuBar contains the menu titles from where users navigate to the single items. The control supports\nfor example long menu item texts, automated scrolling for menu items when the browser space is not large enough to display all items, defining images for single\nor all items in a menu, automated layouting of items with or w/o image, and active/non-active items.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nAvailable design options are Header and Standard. Note that design settings are theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.commons.MenuBarDesign) -> sap.ui.commons.MenuBar","parameters":{"sDesign":"type: sap.ui.commons.MenuBarDesign, description: New value for property <code>design<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhen the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.unified.MenuItem, iIndex: Number) -> sap.ui.commons.MenuBar","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.unified.MenuItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.ui.commons.Accordion_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Accordion with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Accordion"},"sap.ui.commons.layout.MatrixLayoutRow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\nNon-control element used as part of a matrix layout's inner structure.","removeAllCells":{"!description":"Removes all the controls from the aggregation <code>cells<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutCell]"},"addCell":{"!description":"Adds some cell to the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell) -> sap.ui.commons.layout.MatrixLayoutRow","parameters":{"oCell":"type: sap.ui.commons.layout.MatrixLayoutCell, description: the cell to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> Boolean","parameters":{"sStyleClass":"type: string, description: the style to check for"}},"destroyCells":{"!description":"Destroys all the cells in the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.MatrixLayoutRow"},"!proto":"sap.ui.core.Element","!category":"class","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayoutRow","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutCell<\/code> in the aggregation <code>cells<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell) -> Number","parameters":{"oCell":"type: sap.ui.commons.layout.MatrixLayoutCell, description: The cell whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the row.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new layout/MatrixLayoutRow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.commons.layout.MatrixLayoutCell[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/layout/MatrixLayoutRow","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\nNon-control element used as part of a matrix layout's inner structure.","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutRow","parameters":{"sStyleClass":"type: string, description: the CSS class name to be added"}},"insertCell":{"!description":"Inserts a cell into the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell, iIndex: Number) -> sap.ui.commons.layout.MatrixLayoutRow","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the cell should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the cell is inserted at position 0; for a value\n             greater than the current size of the aggregation, the cell is inserted at\n             the last position","oCell":"type: sap.ui.commons.layout.MatrixLayoutCell, description: the cell to insert; if empty, nothing is inserted"}},"removeCell":{"!description":"Removes a cell from the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn(vCell: Number | String | sap.ui.commons.layout.MatrixLayoutCell) -> sap.ui.commons.layout.MatrixLayoutCell","parameters":{"vCell":"type: int|string|sap.ui.commons.layout.MatrixLayoutCell, description: The cellto remove or its index or id"}},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutRow","parameters":{"sStyleClass":"type: string, description: the style to be removed"}},"getCells":{"!description":"Gets content of aggregation <code>cells<\/code>.\n\nThe matrix layout row's individual cells.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutCell]"}},"sap.ui.commons.AccordionSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AccordionSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.AccordionSection"},"sap.ui.commons.ListBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ListBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ListBox"},"sap.ui.commons.RowRepeaterFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeaterFilter"},"sap.ui.commons.layout.MatrixLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayout"},"sap.ui.commons.Label_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Label with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Label"},"sap.ui.commons.Message":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Creates the \"Message\"s to be supplied to the \"MessageBar\" Control.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Message.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAssociatedElementId":{"!description":"Gets current value of property <code>associatedElementId<\/code>.\n\nAssociated UI element ID. (Optional)\nFor navigation to error field.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nMessage short text. (Mandatory)","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","setAssociatedElementId":{"!description":"Sets a new value for property <code>associatedElementId<\/code>.\n\nAssociated UI element ID. (Optional)\nFor navigation to error field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAssociatedElementId: String) -> sap.ui.commons.Message","parameters":{"sAssociatedElementId":"type: string, description: New value for property <code>associatedElementId<\/code>"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\n\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.commons.MessageType) -> sap.ui.commons.Message","parameters":{"sType":"type: sap.ui.commons.MessageType, description: New value for property <code>type<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Message with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Message.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.commons.MessageType<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getAssociatedElementId associatedElementId} : string<\/li>\n<li>{@link #getDesign design} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/Message","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nInternal attribute, used to force the display of the \"short\" or the \"long\" text only.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Creates the \"Message\"s to be supplied to the \"MessageBar\" Control.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\n\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.MessageType"},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nInternal attribute, used to force the display of the \"short\" or the \"long\" text only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDesign: String) -> sap.ui.commons.Message","parameters":{"sDesign":"type: string, description: New value for property <code>design<\/code>"}},"bindDetails":{"!description":"Registers a callback function to be invoked if long text Details are to be made available.\n\nThis callback function will be supplied the corresponding Message \"id\", and should\nreturn the (simple) HTML string to be displayed within the Message Details Dialog.\n\nE.g.: myMessage.bindDetails(getDetails);\nfunction getDetails(sId) {... return htmlString;}","!static":false,"!category":"function","!type":"fn(fnCallBack: fn())","parameters":{"fnCallBack":"type: function, description: the callback function"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nMessage short text. (Mandatory)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.commons.Message","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.commons.SegmentedButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.SegmentedButton<\/code> control.<br>The SegmentedButton provides a group of multiple buttons. Only one button can be active. The behaviour is more ore less like a radio button group.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SegmentedButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nButtons","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Button]"},"_rerenderButtons":{"!description":"Rerendering of the Buttons","!static":false,"!category":"function","!type":"fn()"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedButtonId<\/code> of type <code>string<\/code>Id of selected ToggleButton<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.SegmentedButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.SegmentedButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SegmentedButton<\/code> itself.\n\nEvent fired when button selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SegmentedButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.SegmentedButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.commons.Button) -> sap.ui.commons.SegmentedButton","parameters":{"oButton":"type: sap.ui.commons.Button, description: the button to add; if empty, nothing is inserted"}},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.SegmentedButton"},"setSelectedButton":{"!description":"Sets the associated <code>selectedButton<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedButton: sap.ui.commons.Button) -> sap.ui.commons.SegmentedButton","parameters":{"oSelectedButton":"type: sap.ui.commons.Button, description: Id of an element which becomes the new target of this selectedButton association; alternatively, an element instance may be given"}},"getSelectedButton":{"!description":"ID of the element which is the current target of the association <code>selectedButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Button"},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.commons.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.commons.Button) -> Number","parameters":{"oButton":"type: sap.ui.commons.Button, description: The button whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SegmentedButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nenabled\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.SegmentedButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new SegmentedButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.ui.commons.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/SegmentedButton","insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.commons.Button, iIndex: Number) -> sap.ui.commons.SegmentedButton","parameters":{"oButton":"type: sap.ui.commons.Button, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.SegmentedButton<\/code> control.<br>The SegmentedButton provides a group of multiple buttons. Only one button can be active. The behaviour is more ore less like a radio button group.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nenabled\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.ui.commons.Button) -> sap.ui.commons.Button","parameters":{"vButton":"type: int|string|sap.ui.commons.Button, description: The buttonto remove or its index or id"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.SegmentedButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SegmentedButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.Button]"}},"sap.ui.commons.ProgressIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ProgressIndicator"},"sap.ui.commons.layout.PositionContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.PositionContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.PositionContainer"},"sap.ui.commons.ToolbarSeparator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> control.<br>A small vertical line that is generally added to the tool bar between the items to visually separate them.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToolbarSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getDisplayVisualSeparator":{"!description":"Gets current value of property <code>displayVisualSeparator<\/code>.\n\nWhen set to false, there is no visual indication of separation by a vertical line but by a wider space.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ToolbarSeparator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ToolbarSeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayVisualSeparator displayVisualSeparator} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.ToolbarSeparatorDesign<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/ToolbarSeparator","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDesign of the Separator.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ToolbarSeparatorDesign"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> control.<br>A small vertical line that is generally added to the tool bar between the items to visually separate them.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDesign of the Separator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDesign: sap.ui.commons.ToolbarSeparatorDesign) -> sap.ui.commons.ToolbarSeparator","parameters":{"sDesign":"type: sap.ui.commons.ToolbarSeparatorDesign, description: New value for property <code>design<\/code>"}},"!proto":"sap.ui.core.Element","setDisplayVisualSeparator":{"!description":"Sets a new value for property <code>displayVisualSeparator<\/code>.\n\nWhen set to false, there is no visual indication of separation by a vertical line but by a wider space.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayVisualSeparator: Boolean) -> sap.ui.commons.ToolbarSeparator","parameters":{"bDisplayVisualSeparator":"type: boolean, description: New value for property <code>displayVisualSeparator<\/code>"}},"!category":"class"},"sap.ui.commons.form.FormElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormElement"},"sap.ui.commons.RadioButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RadioButton"},"sap.ui.commons.form.FormContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormContainer"},"sap.ui.commons.layout.ResponsiveFlowLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.ResponsiveFlowLayout"},"sap.ui.commons.ComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ComboBox"},"sap.ui.commons.FormattedTextView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.core.HTML<\/code> control.<br>The FormattedTextView control allows the usage of a limited set of HTML tags for display.","removeControl":{"!description":"Removes a control from the aggregation <code>controls<\/code>.","!static":false,"!category":"function","!type":"fn(vControl: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vControl":"type: int|string|sap.ui.core.Control, description: The controlto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FormattedTextView.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfControl":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>controls<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> Number","parameters":{"oControl":"type: sap.ui.core.Control, description: The control whose index is looked for"}},"setContent":{"!description":"Sets text with placeholders and given array of controls.","!static":false,"!category":"function","!type":"fn(sHtmlText: String, aControls: sap.ui.commons.FormattedTextViewControl)","parameters":{"sHtmlText":"type: string, description: Contains the corresponding HTML text","aControls":"type: sap.ui.commons.FormattedTextViewControl, description: Array of controls that should be used within given HTML text"}},"getControls":{"!description":"Gets content of aggregation <code>controls<\/code>.\n\nArray of controls that should be replaced within htmlText.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setHtmlText":{"!description":"Sets the HTML text to be displayed.","!static":false,"!category":"function","!type":"fn(sText: String)","parameters":{"sText":"type: string, description: HTML text as a string"}},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Document<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.FormattedTextView","parameters":{"sAccessibleRole":"type: sap.ui.core.AccessibleRole, description: New value for property <code>accessibleRole<\/code>"}},"!proto":"sap.ui.core.Control","addControl":{"!description":"Adds some control to the aggregation <code>controls<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.commons.FormattedTextView","parameters":{"oControl":"type: sap.ui.core.Control, description: the control to add; if empty, nothing is inserted"}},"!category":"class","removeAllControls":{"!description":"Removes all the controls from the aggregation <code>controls<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHtmlText":{"!description":"Gets current value of property <code>htmlText<\/code>.\n\nDetermines text with placeholders.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FormattedTextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new FormattedTextView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole (default: Document)<\/li>\n<li>{@link #getHtmlText htmlText} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControls controls} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/FormattedTextView","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.core.HTML<\/code> control.<br>The FormattedTextView control allows the usage of a limited set of HTML tags for display.","getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nDefault value is <code>Document<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleRole"},"destroyControls":{"!description":"Destroys all the controls in the aggregation <code>controls<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.FormattedTextView"},"hasControls":{"!description":"Indicates whether the FormattedTextView contains other controls.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertControl":{"!description":"Inserts a control into the aggregation <code>controls<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.FormattedTextView","parameters":{"oControl":"type: sap.ui.core.Control, description: the control to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the control should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the control is inserted at position 0; for a value\n             greater than the current size of the aggregation, the control is inserted at\n             the last position"}}},"sap.ui.commons.MessageBox.Action":{"!description":"Enumeration of supported actions in a MessageBox.\n\nEach action is represented as a button in the message box. The values of this enumeration are used for both,\nspecifying the set of allowed actions as well as reporting back the user choice.","NO":{"!description":"Adds a \"No\" button to the message box.","!category":"enum","!type":"String"},"ABORT":{"!description":"Adds an \"Abort\" button to the message box.","!category":"enum","!type":"String"},"!module":"sap/ui/commons/MessageBox","YES":{"!description":"Adds a \"Yes\" button to the message box.","!category":"enum","!type":"String"},"CANCEL":{"!description":"Adds a \"Cancel\" button to the message box.","!category":"enum","!type":"String"},"!category":"static class","CLOSE":{"!description":"Adds a \"Close\" button to the message box.","!category":"enum","!type":"String"},"IGNORE":{"!description":"Adds an \"Ignore\" button to the message box.","!category":"enum","!type":"String"},"OK":{"!description":"Adds an \"Ok\" button to the message box.","!category":"enum","!type":"String"},"RETRY":{"!description":"Adds a \"Retry\" button to the message box.","!category":"enum","!type":"String"}},"sap.ui.commons.form.GridLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridLayout"},"sap.ui.commons.Paginator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Paginator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Paginator"},"sap.ui.commons.ApplicationHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ApplicationHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ApplicationHeader"},"sap.ui.commons.Dialog":{"setInitialFocus":{"!description":"Sets the associated <code>initialFocus<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.Control) -> sap.ui.commons.Dialog","parameters":{"oInitialFocus":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nMinimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Dialog"},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nMaximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDialog title displayed in the header.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMinHeight":{"!description":"Gets current value of property <code>minHeight<\/code>.\n\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setContentBorderDesign":{"!description":"Sets a new value for property <code>contentBorderDesign<\/code>.\n\nSpecifies the border design. Border design is theme dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sContentBorderDesign: sap.ui.commons.enums.BorderDesign) -> sap.ui.commons.Dialog","parameters":{"sContentBorderDesign":"type: sap.ui.commons.enums.BorderDesign, description: New value for property <code>contentBorderDesign<\/code>"}},"setMinHeight":{"!description":"Sets a new value for property <code>minHeight<\/code>.\n\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMinHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","parameters":{"sMinHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>minHeight<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Dialog"},"getMaxHeight":{"!description":"Gets current value of property <code>maxHeight<\/code>.\n\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Dialog<\/code> control.<br>An interactive window appearing on request displaying information to the user. The API supports features such as popups with fixed sizes, popups with unlimited width, scrolling bars for large windows, and control nesting (for example, a drop-down list can be included in the window).","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Dialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setScrollLeft":{"!description":"Sets a new value for property <code>scrollLeft<\/code>.\n\nScroll position from left to right. \"0\" means leftmost position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iScrollLeft: Number) -> sap.ui.commons.Dialog","parameters":{"iScrollLeft":"type: int, description: New value for property <code>scrollLeft<\/code>"}},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Dialog<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.Dialog","parameters":{"sAccessibleRole":"type: sap.ui.core.AccessibleRole, description: New value for property <code>accessibleRole<\/code>"}},"getModal":{"!description":"Gets current value of property <code>modal<\/code>.\n\nSpecifies whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireClosed":{"!description":"Fires event <code>closed<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>width<\/code> of type <code>int<\/code>The width of the dialog when closed<\/li>\n<li><code>height<\/code> of type <code>int<\/code>The height of the dialog when closed<\/li>\n<li><code>top<\/code> of type <code>int<\/code>The top position of the dialog when closed<\/li>\n<li><code>left<\/code> of type <code>int<\/code>The left position of the dialog when closed<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.Dialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setKeepInWindow":{"!description":"Sets a new value for property <code>keepInWindow<\/code>.\n\nSpecifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bKeepInWindow: Boolean) -> sap.ui.commons.Dialog","parameters":{"bKeepInWindow":"type: boolean, description: New value for property <code>keepInWindow<\/code>"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDialog title displayed in the header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.commons.Dialog","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.core.Control) -> sap.ui.commons.Dialog","parameters":{"oButton":"type: sap.ui.core.Control, description: the button to add; if empty, nothing is inserted"}},"setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nMaximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>closed<\/code> event of this <code>sap.ui.commons.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Dialog<\/code> itself.\n\nEvent is fired when the dialog has been closed (after closing-animation etc.). Event parameters provide information about last position and last size.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Dialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nOuter height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.core.Control) -> Number","parameters":{"oButton":"type: sap.ui.core.Control, description: The button whose index is looked for"}},"setScrollTop":{"!description":"Sets a new value for property <code>scrollTop<\/code>.\n\nScroll position from top to bottom. \"0\" means topmost position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iScrollTop: Number) -> sap.ui.commons.Dialog","parameters":{"iScrollTop":"type: int, description: New value for property <code>scrollTop<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Dialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"isOpen":{"!description":"Indicates whether the Dialog is open (this includes opening and closing animations).\nFor more detailed information about the current state check Dialog.getOpenState().","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/commons/Dialog","detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>closed<\/code> event of this <code>sap.ui.commons.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Dialog","parameters":{"oButton":"type: sap.ui.core.Control, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"setModal":{"!description":"Sets a new value for property <code>modal<\/code>.\n\nSpecifies whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bModal: Boolean) -> sap.ui.commons.Dialog","parameters":{"bModal":"type: boolean, description: New value for property <code>modal<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Dialog<\/code> control.<br>An interactive window appearing on request displaying information to the user. The API supports features such as popups with fixed sizes, popups with unlimited width, scrolling bars for large windows, and control nesting (for example, a drop-down list can be included in the window).","getApplyContentPadding":{"!description":"Gets current value of property <code>applyContentPadding<\/code>.\n\nPadding is theme-dependent. When set to \"false\", the content extends to the dialog borders.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".\n\nDefault value is <code>Dialog<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleRole"},"getAutoClose":{"!description":"Gets current value of property <code>autoClose<\/code>.\n\nIf this property is set to true the Dialog will close if the Dialog loses its focus\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Dialog","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getScrollTop":{"!description":"Gets current value of property <code>scrollTop<\/code>.\n\nScroll position from top to bottom. \"0\" means topmost position.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAggregation of the content of the dialog (one or more controls).\n\nWarning: when content is added with width given as a percentage, the Dialog itself should have a width set.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowCloseButton":{"!description":"Sets a new value for property <code>showCloseButton<\/code>.\n\nDisplays a close button in the title bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCloseButton: Boolean) -> sap.ui.commons.Dialog","parameters":{"bShowCloseButton":"type: boolean, description: New value for property <code>showCloseButton<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nOuter width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getInitialFocus":{"!description":"ID of the element which is the current target of the association <code>initialFocus<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getResizable":{"!description":"Gets current value of property <code>resizable<\/code>.\n\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nOuter height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nMinimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Dialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getScrollLeft scrollLeft} : int (default: 0)<\/li>\n<li>{@link #getScrollTop scrollTop} : int (default: 0)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: true)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentBorderDesign contentBorderDesign} : sap.ui.commons.enums.BorderDesign (default: None)<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole (default: Dialog)<\/li>\n<li>{@link #getKeepInWindow keepInWindow} : boolean (default: false)<\/li>\n<li>{@link #getAutoClose autoClose} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getContentBorderDesign":{"!description":"Gets current value of property <code>contentBorderDesign<\/code>.\n\nSpecifies the border design. Border design is theme dependent.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.enums.BorderDesign"},"setMaxHeight":{"!description":"Sets a new value for property <code>maxHeight<\/code>.\n\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","parameters":{"sMaxHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>maxHeight<\/code>"}},"getEnabled":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getScrollLeft":{"!description":"Gets current value of property <code>scrollLeft<\/code>.\n\nScroll position from left to right. \"0\" means leftmost position.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setDefaultButton":{"!description":"Sets the associated <code>defaultButton<\/code>.","!static":false,"!category":"function","!type":"fn(oDefaultButton: sap.ui.commons.Button) -> sap.ui.commons.Dialog","parameters":{"oDefaultButton":"type: sap.ui.commons.Button, description: Id of an element which becomes the new target of this defaultButton association; alternatively, an element instance may be given"}},"close":{"!description":"Closes the dialog control instance.","!static":false,"!category":"function","!type":"fn()"},"getOpenState":{"!description":"Indicates whether the Dialog is currently open, closed, or transitioning between these states.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.OpenState"},"getShowCloseButton":{"!description":"Gets current value of property <code>showCloseButton<\/code>.\n\nDisplays a close button in the title bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nAggregation of the buttons to display at the bottom of the dialog, for example OK and Cancel. Association defaultButton can be used for one of the defined buttons.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"setResizable":{"!description":"Sets a new value for property <code>resizable<\/code>.\n\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bResizable: Boolean) -> sap.ui.commons.Dialog","parameters":{"bResizable":"type: boolean, description: New value for property <code>resizable<\/code>"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getDefaultButton":{"!description":"ID of the element which is the current target of the association <code>defaultButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Button"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Dialog","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nOuter width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setApplyContentPadding":{"!description":"Sets a new value for property <code>applyContentPadding<\/code>.\n\nPadding is theme-dependent. When set to \"false\", the content extends to the dialog borders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bApplyContentPadding: Boolean) -> sap.ui.commons.Dialog","parameters":{"bApplyContentPadding":"type: boolean, description: New value for property <code>applyContentPadding<\/code>"}},"removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vButton":"type: int|string|sap.ui.core.Control, description: The buttonto remove or its index or id"}},"getKeepInWindow":{"!description":"Gets current value of property <code>keepInWindow<\/code>.\n\nSpecifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"open":{"!description":"Opens the dialog control instance.","!static":false,"!category":"function","!type":"fn()"},"setAutoClose":{"!description":"Sets a new value for property <code>autoClose<\/code>.\n\nIf this property is set to true the Dialog will close if the Dialog loses its focus\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoClose: Boolean) -> sap.ui.commons.Dialog","parameters":{"bAutoClose":"type: boolean, description: New value for property <code>autoClose<\/code>"}}},"sap.ui.commons.Splitter":{"insertSecondPaneContent":{"!description":"Inserts a secondPaneContent into the aggregation <code>secondPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oSecondPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Splitter","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the secondPaneContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the secondPaneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the secondPaneContent is inserted at\n             the last position","oSecondPaneContent":"type: sap.ui.core.Control, description: the secondPaneContent to insert; if empty, nothing is inserted"}},"getSplitterBarVisible":{"!description":"Gets current value of property <code>splitterBarVisible<\/code>.\n\nset the splitter bar to be visible or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowScrollBars":{"!description":"Gets current value of property <code>showScrollBars<\/code>.\n\nSpecifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySecondPaneContent":{"!description":"Destroys all the secondPaneContent in the aggregation <code>secondPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Splitter"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the split area in px or in %\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.SplitterSize"},"getSplitterOrientation":{"!description":"Gets current value of property <code>splitterOrientation<\/code>.\n\nThe splitter can have horizontal or vertical orientation.\n\nDefault value is <code>Vertical<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Orientation"},"addSecondPaneContent":{"!description":"Adds some secondPaneContent to the aggregation <code>secondPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oSecondPaneContent: sap.ui.core.Control) -> sap.ui.commons.Splitter","parameters":{"oSecondPaneContent":"type: sap.ui.core.Control, description: the secondPaneContent to add; if empty, nothing is inserted"}},"getMinSizeFirstPane":{"!description":"Gets current value of property <code>minSizeFirstPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Percentage"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the split area in px or in %\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.SplitterSize"},"!constructorDescription":"Constructor for a new Splitter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSplitterOrientation splitterOrientation} : sap.ui.core.Orientation (default: Vertical)<\/li>\n<li>{@link #getSplitterPosition splitterPosition} : sap.ui.core.Percentage (default: 50%)<\/li>\n<li>{@link #getMinSizeFirstPane minSizeFirstPane} : sap.ui.core.Percentage (default: 0%)<\/li>\n<li>{@link #getMinSizeSecondPane minSizeSecondPane} : sap.ui.core.Percentage (default: 0%)<\/li>\n<li>{@link #getWidth width} : sap.ui.commons.SplitterSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.commons.SplitterSize (default: 100%)<\/li>\n<li>{@link #getShowScrollBars showScrollBars} : boolean (default: true)<\/li>\n<li>{@link #getSplitterBarVisible splitterBarVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFirstPaneContent firstPaneContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSecondPaneContent secondPaneContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSecondPaneContent":{"!description":"Gets content of aggregation <code>secondPaneContent<\/code>.\n\nControls inside the second pane. These are the right ones in case of defining a vertical splitter, and the bottom ones in case of using the horizontal splitter.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getMinSizeSecondPane":{"!description":"Gets current value of property <code>minSizeSecondPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Percentage"},"getFirstPaneContent":{"!description":"Gets content of aggregation <code>firstPaneContent<\/code>.\n\nControls inside the first pane. These are the left ones in case of defining a vertical splitter, and the top ones in case of using the horizontal splitter.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setMinSizeSecondPane":{"!description":"Sets a new value for property <code>minSizeSecondPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn(sMinSizeSecondPane: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","parameters":{"sMinSizeSecondPane":"type: sap.ui.core.Percentage, description: New value for property <code>minSizeSecondPane<\/code>"}},"insertFirstPaneContent":{"!description":"Inserts a firstPaneContent into the aggregation <code>firstPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oFirstPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Splitter","parameters":{"oFirstPaneContent":"type: sap.ui.core.Control, description: the firstPaneContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the firstPaneContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the firstPaneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the firstPaneContent is inserted at\n             the last position"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Splitter<\/code> control.<br>Allows to split the screen into two areas. Make sure that the container for the splitter has an absolute height or set an absolute height for the splitter using the height property. Otherwise the height of the splitter is calculated by the height of its contents.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Splitter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSplitterOrientation":{"!description":"Sets a new value for property <code>splitterOrientation<\/code>.\n\nThe splitter can have horizontal or vertical orientation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Vertical<\/code>.","!static":false,"!category":"function","!type":"fn(sSplitterOrientation: sap.ui.core.Orientation) -> sap.ui.commons.Splitter","parameters":{"sSplitterOrientation":"type: sap.ui.core.Orientation, description: New value for property <code>splitterOrientation<\/code>"}},"destroyFirstPaneContent":{"!description":"Destroys all the firstPaneContent in the aggregation <code>firstPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Splitter"},"getSplitterPosition":{"!description":"Gets current value of property <code>splitterPosition<\/code>.\n\nPosition of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.\n\nDefault value is <code>50%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Percentage"},"setSplitterBarVisible":{"!description":"Sets a new value for property <code>splitterBarVisible<\/code>.\n\nset the splitter bar to be visible or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSplitterBarVisible: Boolean) -> sap.ui.commons.Splitter","parameters":{"bSplitterBarVisible":"type: boolean, description: New value for property <code>splitterBarVisible<\/code>"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the split area in px or in %\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.commons.SplitterSize) -> sap.ui.commons.Splitter","parameters":{"sHeight":"type: sap.ui.commons.SplitterSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the split area in px or in %\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.commons.SplitterSize) -> sap.ui.commons.Splitter","parameters":{"sWidth":"type: sap.ui.commons.SplitterSize, description: New value for property <code>width<\/code>"}},"removeFirstPaneContent":{"!description":"Removes a firstPaneContent from the aggregation <code>firstPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(vFirstPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vFirstPaneContent":"type: int|string|sap.ui.core.Control, description: The firstPaneContentto remove or its index or id"}},"setMinSizeFirstPane":{"!description":"Sets a new value for property <code>minSizeFirstPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn(sMinSizeFirstPane: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","parameters":{"sMinSizeFirstPane":"type: sap.ui.core.Percentage, description: New value for property <code>minSizeFirstPane<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Splitter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeAllSecondPaneContent":{"!description":"Removes all the controls from the aggregation <code>secondPaneContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowScrollBars":{"!description":"Sets a new value for property <code>showScrollBars<\/code>.\n\nSpecifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowScrollBars: Boolean) -> sap.ui.commons.Splitter","parameters":{"bShowScrollBars":"type: boolean, description: New value for property <code>showScrollBars<\/code>"}},"removeSecondPaneContent":{"!description":"Removes a secondPaneContent from the aggregation <code>secondPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(vSecondPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vSecondPaneContent":"type: int|string|sap.ui.core.Control, description: The secondPaneContentto remove or its index or id"}},"!module":"sap/ui/commons/Splitter","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Splitter<\/code> control.<br>Allows to split the screen into two areas. Make sure that the container for the splitter has an absolute height or set an absolute height for the splitter using the height property. Otherwise the height of the splitter is calculated by the height of its contents.","indexOfFirstPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>firstPaneContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFirstPaneContent: sap.ui.core.Control) -> Number","parameters":{"oFirstPaneContent":"type: sap.ui.core.Control, description: The firstPaneContent whose index is looked for"}},"removeAllFirstPaneContent":{"!description":"Removes all the controls from the aggregation <code>firstPaneContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSplitterPosition":{"!description":"Sets a new value for property <code>splitterPosition<\/code>.\n\nPosition of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>50%<\/code>.","!static":false,"!category":"function","!type":"fn(sSplitterPosition: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","parameters":{"sSplitterPosition":"type: sap.ui.core.Percentage, description: New value for property <code>splitterPosition<\/code>"}},"addFirstPaneContent":{"!description":"Adds some firstPaneContent to the aggregation <code>firstPaneContent<\/code>.","!static":false,"!category":"function","!type":"fn(oFirstPaneContent: sap.ui.core.Control) -> sap.ui.commons.Splitter","parameters":{"oFirstPaneContent":"type: sap.ui.core.Control, description: the firstPaneContent to add; if empty, nothing is inserted"}},"indexOfSecondPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>secondPaneContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSecondPaneContent: sap.ui.core.Control) -> Number","parameters":{"oSecondPaneContent":"type: sap.ui.core.Control, description: The secondPaneContent whose index is looked for"}}},"sap.ui.commons.ResponsiveContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is used to provide a container, which can show different content depending on its current width. It fires an event, whenever a new range is reached. In addition the content of the new range is automatically shown, if it is set.","attachRangeSwitch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>rangeSwitch<\/code> event of this <code>sap.ui.commons.ResponsiveContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ResponsiveContainer<\/code> itself.\n\nThe event is fired the width of the container reaches a new range.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ResponsiveContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ResponsiveContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachRangeSwitch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>rangeSwitch<\/code> event of this <code>sap.ui.commons.ResponsiveContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ResponsiveContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ResponsiveContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setDefaultContent":{"!description":"Sets the associated <code>defaultContent<\/code>.","!static":false,"!category":"function","!type":"fn(oDefaultContent: sap.ui.core.Control) -> sap.ui.commons.ResponsiveContainer","parameters":{"oDefaultContent":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this defaultContent association; alternatively, an element instance may be given"}},"fireRangeSwitch":{"!description":"Fires event <code>rangeSwitch<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>currentRange<\/code> of type <code>sap.ui.commons.ResponsiveContainerRange<\/code>The current range<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ResponsiveContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getRanges":{"!description":"Gets content of aggregation <code>ranges<\/code>.\n\nThe ranges defined for this container","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ResponsiveContainerRange]"},"!proto":"sap.ui.core.Control","!category":"class","addRange":{"!description":"Adds some range to the aggregation <code>ranges<\/code>.","!static":false,"!category":"function","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange) -> sap.ui.commons.ResponsiveContainer","parameters":{"oRange":"type: sap.ui.commons.ResponsiveContainerRange, description: the range to add; if empty, nothing is inserted"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getDefaultContent":{"!description":"ID of the element which is the current target of the association <code>defaultContent<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe width of the responsive container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainer","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the responsive container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeAllRanges":{"!description":"Removes all the controls from the aggregation <code>ranges<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ResponsiveContainerRange]"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ResponsiveContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRanges ranges} : sap.ui.commons.ResponsiveContainerRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:rangeSwitch rangeSwitch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ResponsiveContainer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is used to provide a container, which can show different content depending on its current width. It fires an event, whenever a new range is reached. In addition the content of the new range is automatically shown, if it is set.","removeRange":{"!description":"Removes a range from the aggregation <code>ranges<\/code>.","!static":false,"!category":"function","!type":"fn(vRange: Number | String | sap.ui.commons.ResponsiveContainerRange) -> sap.ui.commons.ResponsiveContainerRange","parameters":{"vRange":"type: int|string|sap.ui.commons.ResponsiveContainerRange, description: The rangeto remove or its index or id"}},"destroyRanges":{"!description":"Destroys all the ranges in the aggregation <code>ranges<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.ResponsiveContainer"},"indexOfRange":{"!description":"Checks for the provided <code>sap.ui.commons.ResponsiveContainerRange<\/code> in the aggregation <code>ranges<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange) -> Number","parameters":{"oRange":"type: sap.ui.commons.ResponsiveContainerRange, description: The range whose index is looked for"}},"insertRange":{"!description":"Inserts a range into the aggregation <code>ranges<\/code>.","!static":false,"!category":"function","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange, iIndex: Number) -> sap.ui.commons.ResponsiveContainer","parameters":{"oRange":"type: sap.ui.commons.ResponsiveContainerRange, description: the range to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the range should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the range is inserted at position 0; for a value\n             greater than the current size of the aggregation, the range is inserted at\n             the last position"}}},"sap.ui.commons.form.Form_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.Form with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.Form.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.Form"},"sap.ui.commons.Title":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.core library. Please use this one.<br>Represents a title element that can be used for aggregation with other controls","extend":{"!description":"Creates a new subclass of class sap.ui.commons.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Title.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getLevel":{"!description":"Getter for property <code>level<\/code>.\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nDefault value is <code>Auto<\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.TitleLevel"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Title.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new Title.","!module":"sap/ui/commons/Title","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.core library. Please use this one.<br>Represents a title element that can be used for aggregation with other controls","!proto":"sap.ui.core.Title","!category":"class","setLevel":{"!description":"Setter for property <code>level<\/code>.\n\nDefault value is <code>Auto<\/code>","!static":false,"!category":"function","!type":"fn(oLevel: sap.ui.commons.TitleLevel) -> sap.ui.commons.Title","parameters":{"oLevel":"type: sap.ui.commons.TitleLevel, description: new value for property <code>level<\/code>"}}},"sap.ui.commons.form.FormLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormLayout"},"sap.ui.commons.layout.BorderLayoutArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayoutArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.BorderLayoutArea"},"sap.ui.commons.layout.AbsoluteLayout":{"removePosition":{"!description":"Removes a position from the aggregation <code>positions<\/code>.","!static":false,"!category":"function","!type":"fn(vPosition: Number | String | sap.ui.commons.layout.PositionContainer) -> sap.ui.commons.layout.PositionContainer","parameters":{"vPosition":"type: int|string|sap.ui.commons.layout.PositionContainer, description: The positionto remove or its index or id"}},"getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Scrolling"},"removeAllPositions":{"!description":"Removes all the controls from the aggregation <code>positions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.layout.PositionContainer]"},"setHorizontalScrolling":{"!description":"Sets a new value for property <code>horizontalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn(sHorizontalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"sHorizontalScrolling":"type: sap.ui.core.Scrolling, description: New value for property <code>horizontalScrolling<\/code>"}},"getContent":{"!description":"Returns an array of the controls contained in the aggregated position containers (might be empty).","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"indexOfPosition":{"!description":"Checks for the provided <code>sap.ui.commons.layout.PositionContainer<\/code> in the aggregation <code>positions<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer) -> Number","parameters":{"oPosition":"type: sap.ui.commons.layout.PositionContainer, description: The position whose index is looked for"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new layout/AbsoluteLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : sap.ui.core.Scrolling (default: Hidden)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : sap.ui.core.Scrolling (default: Hidden)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPositions positions} : sap.ui.commons.layout.PositionContainer[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn(sVerticalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"sVerticalScrolling":"type: sap.ui.core.Scrolling, description: New value for property <code>verticalScrolling<\/code>"}},"getPositions":{"!description":"Gets content of aggregation <code>positions<\/code>.\n\nPositioned child controls within the layout","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.layout.PositionContainer]"},"setPositionOfChild":{"!description":"Allows to set or change the position information of the given child control","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, oPos: Object) -> Boolean","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control. The object is expected to have one or more from the attribute set\n        top, bottom, left, right; each with a value of type sap.ui.core.CSSSize.\n        If no object is given, the default is used which is left=0px,right=0px.","oControl":"type: sap.ui.core.Control, description: The child control for which to change the position information; if empty or not aggregated, nothing is changed"}},"destroyContent":{"!description":"Destroys all aggregated position containers and their child controls. Returns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.AbsoluteLayout"},"getHorizontalScrolling":{"!description":"Gets current value of property <code>horizontalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Scrolling"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>\nThe Absolute Layout positions its child controls absolutely","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.AbsoluteLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided sap.ui.core.Control in the aggregated position containers, and returns the index of the container in the positions aggregation\nif found, or '-1' otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content of which the index is looked for"}},"removeAllContent":{"!description":"Removes all aggregated position containers. Returns an array of the controls contained in the removed position containers (might be empty).","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addPosition":{"!description":"Adds some position to the aggregation <code>positions<\/code>.","!static":false,"!category":"function","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"oPosition":"type: sap.ui.commons.layout.PositionContainer, description: the position to add; if empty, nothing is inserted"}},"destroyPositions":{"!description":"Destroys all the positions in the aggregation <code>positions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.AbsoluteLayout"},"addContent":{"!description":"Adds the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, oPos: Object) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control in the layout. The object is expected to have one or more from the attribute set\n        top, bottom, left, right; each with a value of type sap.ui.core.CSSSize. If no object is given, the default is left=0px,right=0px","oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted."}},"insertPosition":{"!description":"Inserts a position into the aggregation <code>positions<\/code>.","!static":false,"!category":"function","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer, iIndex: Number) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"oPosition":"type: sap.ui.commons.layout.PositionContainer, description: the position to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the position should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the position is inserted at position 0; for a value\n             greater than the current size of the aggregation, the position is inserted at\n             the last position"}},"removeContent":{"!description":"Removes the given control and its corresponding position container from the aggregation named 'positions'.","!static":false,"!category":"function","!type":"fn(oContent: Object) -> sap.ui.core.Control","parameters":{"oContent":"type: object, description: The content control to remove, its ID, or the index of the corresponding position container in the 'positions' aggregation."}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.AbsoluteLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/commons/layout/AbsoluteLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>\nThe Absolute Layout positions its child controls absolutely","insertContent":{"!description":"Inserts the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number, oPos: Object) -> sap.ui.commons.layout.AbsoluteLayout","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control within the layout. The object is expected to have one or more\n        from the attribute set top, bottom, left, right; each with a value of type sap.ui.core.CSSSize. If no object is given, the default is left=0px,right=0px.","oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The '0'-based index where the content shall be inserted at. For a negative value of iIndex, the content is inserted at position '0';\n        for a value greater than the current size of the aggregation, the content is inserted at the last position."}}},"sap.ui.commons.Button_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Button with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Button"},"sap.ui.commons.SegmentedButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SegmentedButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SegmentedButton"},"sap.ui.commons.MessageList":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Instantiated by the \"MessageBar\" Control if the user requests to generate the corresponding \"MessageList\".","setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>\n\nThe default implementation of function \"setVisible()\" is overwritten\nin order to invoke the open() and close() of the MessageList Popup.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.commons.MessageList","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether or not the MessageList is visible. Invisible controls are not rendered.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","setMessages":{"!description":"Sets the list of Messages to be displayed and re-renders this Control if it is visible.","!static":false,"!category":"function","!type":"fn(aMessages: [sap.ui.commons.Message])","parameters":{"aMessages":"type: sap.ui.commons.Message[], description: Message list."}},"!category":"class","setMaxListed":{"!description":"Sets a new value for property <code>maxListed<\/code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxListed: String) -> sap.ui.commons.MessageList","parameters":{"sMaxListed":"type: string, description: New value for property <code>maxListed<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getAnchorId":{"!description":"Gets current value of property <code>anchorId<\/code>.\n\nID of the anchor under which the MessageList will render.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new MessageList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: false)<\/li>\n<li>{@link #getAnchorId anchorId} : string<\/li>\n<li>{@link #getMaxListed maxListed} : string (default: 7)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MessageList","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Instantiated by the \"MessageBar\" Control if the user requests to generate the corresponding \"MessageList\".","getMaxListed":{"!description":"Gets current value of property <code>maxListed<\/code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAnchorId":{"!description":"Sets a new value for property <code>anchorId<\/code>.\n\nID of the anchor under which the MessageList will render.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAnchorId: String) -> sap.ui.commons.MessageList","parameters":{"sAnchorId":"type: string, description: New value for property <code>anchorId<\/code>"}}},"sap.ui.commons":{"value2":{"!description":"Current second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.","!category":"enum","!type":"Number"},"MessageToast":"sap.ui.commons.MessageToast_obj","styled":{"!description":"Indicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.","!category":"enum","!type":"Boolean"},"displayWelcome":{"!description":"Determines if the welcome text is displayed","!category":"enum","!type":"Boolean"},"explanation":{"!description":"text which appears, in case quick-help is switched on","!category":"enum","!type":"String"},"iconFirst":{"!description":"If set to true (default), the display sequence is 1. icon 2. control text .","!category":"enum","!type":"Boolean"},"minHeight":{"!description":"Minimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!category":"enum","!type":"sap.ui.core.CSSSize"},"ValueHelpField":"sap.ui.commons.ValueHelpField_obj","Button":"sap.ui.commons.Button_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"iconDisabledURL":{"!description":"URL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!category":"enum","!type":"sap.ui.core.URI"},"FileUploaderParameter":"sap.ui.commons.FileUploaderParameter_obj","Toolbar":"sap.ui.commons.Toolbar_obj","height":{"!description":"Tree height","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"Common basic controls, mainly intended for desktop scenarios","ColorPickerMode":"sap.ui.commons.ColorPickerMode","ComboBox":"sap.ui.commons.ComboBox_obj","SearchProvider":"sap.ui.commons.SearchProvider_obj","contentBorderDesign":{"!description":"Specifies the border design. Border design is theme dependent.","!category":"enum","!type":"sap.ui.commons.enums.BorderDesign"},"decorative":{"!description":"A decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.","!category":"enum","!type":"Boolean"},"stepLabels":{"!description":"Display step numbers for the ticks on the slider.","!category":"enum","!type":"Boolean"},"labels":{"!description":"Labels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.","!category":"enum","!type":"[String]"},"averageValue":{"!description":"Determines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.","!category":"enum","!type":"Number"},"TriStateCheckBoxState":"sap.ui.commons.TriStateCheckBoxState","groupName":{"!description":"Defines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.","!category":"enum","!type":"String"},"iconUnselected":{"!description":"The URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!category":"enum","!type":"sap.ui.core.URI"},"!module":"sap/ui/commons/library","PaginatorEvent":"sap.ui.commons.PaginatorEvent","displaySecondaryValues":{"!description":"Determines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.","!category":"enum","!type":"Boolean"},"ListBox":"sap.ui.commons.ListBox_obj","Link":"sap.ui.commons.Link_obj","handleSize":{"!description":"Determines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)","!category":"enum","!type":"Number"},"maxToasted":{"!description":"Maximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.","!category":"enum","!type":"Number"},"hasExpander":{"!description":"Should the node has an expander.","!category":"enum","!type":"Boolean"},"TextViewColor":"sap.ui.commons.TextViewColor","sorter":{"!description":"The sorter object.","!category":"enum","!type":"Object"},"collapsed":{"!description":"Determines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one.","!category":"enum","!type":"Boolean"},"icon":{"!description":"Icon to display in front of the node","!category":"enum","!type":"sap.ui.core.URI"},"displayVisualSeparator":{"!description":"When set to false, there is no visual indication of separation by a vertical line but by a wider space.","!category":"enum","!type":"Boolean"},"smallStepWidth":{"!description":"The grip can only be moved in steps of this width.","!category":"enum","!type":"Number"},"imageSrc":{"!description":"If RichTooltip contains an image, this property is used to define the source path.","!category":"enum","!type":"sap.ui.core.URI"},"Paginator":"sap.ui.commons.Paginator_obj","closeDuration":{"!description":"Optional. Close Duration in milliseconds.","!category":"enum","!type":"Number"},"enums":"sap.ui.commons.enums","MenuBarDesign":"sap.ui.commons.MenuBarDesign","searchHelpIcon":{"!description":"(optional) The URI of the icon to use for the search help entry.","!category":"enum","!type":"sap.ui.core.URI"},"logoSrc":{"!description":"Path (src) to the logo icon to be displayed in the application header.","!category":"enum","!type":"sap.ui.core.URI"},"min":{"!description":"Minimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!category":"enum","!type":"Number"},"numberOfPages":{"!description":"Represents the overall number of pages that are embedded into the parent control","!category":"enum","!type":"Number"},"maxHeight":{"!description":"Maximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!category":"enum","!type":"sap.ui.core.CSSSize"},"isSelected":{"!description":"Node is selected","!category":"enum","!type":"Boolean"},"iconSelected":{"!description":"Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.","!category":"enum","!type":"sap.ui.core.URI"},"showCollapseIcon":{"!description":"Determines whether the Panel will have an icon for collapsing/expanding, or not.","!category":"enum","!type":"Boolean"},"PasswordField":"sap.ui.commons.PasswordField_obj","splitterBarVisible":{"!description":"set the splitter bar to be visible or not.","!category":"enum","!type":"Boolean"},"associatedElementId":{"!description":"Associated UI element ID. (Optional)\nFor navigation to error field.","!category":"enum","!type":"String"},"key":{"!description":"A key which can be used to identify the range (optional).","!category":"enum","!type":"String"},"ToggleButton":"sap.ui.commons.ToggleButton_obj","TreeSelectionMode":"sap.ui.commons.TreeSelectionMode","DropdownBox":"sap.ui.commons.DropdownBox_obj","openDuration":{"!description":"Optional. Open Duration in milliseconds.","!category":"enum","!type":"Number"},"cursorPos":{"!description":"Position of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip","!category":"enum","!type":"Number"},"MessageBox":"sap.ui.commons.MessageBox","displayValue":{"!description":"Determines the text value that will be displayed in the bar.","!category":"enum","!type":"String"},"displayIcons":{"!description":"Determines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.","!category":"enum","!type":"Boolean"},"enableFilterMode":{"!description":"Defines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.","!category":"enum","!type":"Boolean"},"showValue":{"!description":"Determines whether the percent value shall be rendered inside the bar.","!category":"enum","!type":"Boolean"},"requiredAtBegin":{"!description":"Determines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).","!category":"enum","!type":"Boolean"},"currentPage":{"!description":"The index of the page currently displayed. The index starts at 1.","!category":"enum","!type":"Number"},"MessageList":"sap.ui.commons.MessageList_obj","ToolbarSeparatorDesign":"sap.ui.commons.ToolbarSeparatorDesign","useMap":{"!description":"The name of the image map that defines the clickable areas","!category":"enum","!type":"String"},"valueState":{"!description":"Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.","!category":"enum","!type":"sap.ui.core.ValueState"},"numberOfVisibleSteps":{"!description":"Total number of steps to be displayed at once","!category":"enum","!type":"Number"},"TextArea":"sap.ui.commons.TextArea_obj","CalloutBase":"sap.ui.commons.CalloutBase_obj","Label":"sap.ui.commons.Label_obj","anchorID":{"!description":"Element ID upon which the MessageBar will be initially positioned.","!category":"enum","!type":"String"},"ToolbarItem":"sap.ui.commons.ToolbarItem","percentValue":{"!description":"Determines the numerical value for the displayed length of the progress bar.","!category":"enum","!type":"Number"},"Dialog":"sap.ui.commons.Dialog_obj","TreeNode":"sap.ui.commons.TreeNode_obj","RowRepeaterDesign":"sap.ui.commons.RowRepeaterDesign","lite":{"!description":"The button is rendered as lite button.","!category":"enum","!type":"Boolean"},"ButtonStyle":"sap.ui.commons.ButtonStyle","MessageType":"sap.ui.commons.MessageType","modal":{"!description":"Specifies whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.","!category":"enum","!type":"Boolean"},"htmlText":{"!description":"Determines text with placeholders.","!category":"enum","!type":"String"},"startSuggestion":{"!description":"Minimum length of the entered string triggering the suggestion list.","!category":"enum","!type":"Number"},"MenuItemBase":"sap.ui.commons.MenuItemBase_obj","searchHelpText":{"!description":"(optional) The text to use for the search help entry.","!category":"enum","!type":"String"},"splitterOrientation":{"!description":"The splitter can have horizontal or vertical orientation.","!category":"enum","!type":"sap.ui.core.Orientation"},"enableTabReordering":{"!description":"Specifies whether tab reordering is enabled.","!category":"enum","!type":"Boolean"},"MessageBar":"sap.ui.commons.MessageBar_obj","RadioButton":"sap.ui.commons.RadioButton_obj","wrapping":{"!description":"Disabled automatic wrapping of the text.","!category":"enum","!type":"Boolean"},"anchorId":{"!description":"ID of the anchor on top of which the MessageToast is to render.","!category":"enum","!type":"String"},"showExternalButton":{"!description":"Defines whether an additional search button shall be displayed","!category":"enum","!type":"Boolean"},"Area":"sap.ui.commons.Area_obj","!helpDescription":"Common basic controls, mainly intended for desktop scenarios","CheckBox":"sap.ui.commons.CheckBox_obj","dockButton":{"!description":"The position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.","!category":"enum","!type":"String"},"name":{"!description":"The <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').","!category":"enum","!type":"String"},"ImageMap":"sap.ui.commons.ImageMap_obj","anchorSnapPoint":{"!description":"Type: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.","!category":"enum","!type":"String"},"selectionMode":{"!description":"Selection mode of the Tree.","!category":"enum","!type":"sap.ui.commons.TreeSelectionMode"},"splitterPosition":{"!description":"Position of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.","!category":"enum","!type":"sap.ui.core.Percentage"},"minSizeSecondPane":{"!description":"The minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane","!category":"enum","!type":"sap.ui.core.Percentage"},"Slider":"sap.ui.commons.Slider_obj","visibleItems":{"!description":"The ListBox height in number of items that are initially displayed without scrolling.\nThis setting overwrites height settings in terms of CSS size that have been made.\nWhen the items have different heights, the height of the first item is used for all\nother item height calculations.\nNote that if there are one or more separators between the visible ListBox items,\nthe displayed items might not relate 1:1 to the initially specified number of items.\nWhen the value is retrieved, it equals the previously set value if it was set;\notherwise, it will be the number of items completely fitting into the ListBox without\nscrolling in the case the control was already rendered.\nNote that if the control was not rendered, the behavior will be undefined,\nit may return -1 or any other number.","!category":"enum","!type":"Number"},"vertical":{"!description":"Orientation of slider","!category":"enum","!type":"Boolean"},"ResponsiveContainer":"sap.ui.commons.ResponsiveContainer_obj","title":{"!description":"Tree title","!category":"enum","!type":"String"},"locale":{"!description":"Defines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.","!category":"enum","!type":"String"},"barColor":{"!description":"Determines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).","!category":"enum","!type":"sap.ui.core.BarColor"},"expanded":{"!description":"Node is expanded","!category":"enum","!type":"Boolean"},"ProgressIndicator":"sap.ui.commons.ProgressIndicator_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"showCloseButton":{"!description":"Displays a close button in the title bar.","!category":"enum","!type":"Boolean"},"placeholder":{"!description":"Placeholder for the text field.","!category":"enum","!type":"String"},"cols":{"!description":"Number of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.","!category":"enum","!type":"Number"},"selectedKey":{"!description":"Key of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.","!category":"enum","!type":"String"},"keepInWindow":{"!description":"Specifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.","!category":"enum","!type":"Boolean"},"displayLogoff":{"!description":"Determines if the logoff area will be displayed at the right hand side of the application header.","!category":"enum","!type":"Boolean"},"showScrollBars":{"!description":"Specifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.","!category":"enum","!type":"Boolean"},"semanticColor":{"!description":"Semantic color of the text View","!category":"enum","!type":"sap.ui.commons.TextViewColor"},"showHeader":{"!description":"Tree Header is display. If false, the tree will be in a transparent mode","!category":"enum","!type":"Boolean"},"Title":"sap.ui.commons.Title_obj","MenuItem":"sap.ui.commons.MenuItem_obj","label":{"!description":"Label of the step","!category":"enum","!type":"String"},"filters":{"!description":"The set of filter objects.","!category":"enum","!type":"Object"},"userName":{"!description":"User name that will be displayed beside the welcome text","!category":"enum","!type":"String"},"defaultItemWidth":{"!description":"Default width of the item in a carousel if no height can be determined","!category":"enum","!type":"Number"},"MenuTextFieldItem":"sap.ui.commons.MenuTextFieldItem_obj","RangeSlider":"sap.ui.commons.RangeSlider_obj","InPlaceEdit":"sap.ui.commons.InPlaceEdit_obj","target":{"!description":"Options are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.","!category":"enum","!type":"String"},"layout":"sap.ui.commons.layout","animationDuration":{"!description":"Duration for animation when navigating through the contents of the Carousel","!category":"enum","!type":"Number"},"fixedRowHeight":{"!description":"Row height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.","!category":"enum","!type":"sap.ui.core.CSSSize"},"selectionState":{"!description":"Defines the states of the checkbox","!category":"enum","!type":"sap.ui.commons.TriStateCheckBoxState"},"dockMenu":{"!description":"The position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.","!category":"enum","!type":"String"},"form":"sap.ui.commons.form","searchHelpAdditionalText":{"!description":"(optional) The additional Text to use for the search help entry.","!category":"enum","!type":"String"},"firstVisibleIndex":{"!description":"The index of the element in the content aggreation which is displayed first on rendering","!category":"enum","!type":"Number"},"ToolbarDesign":"sap.ui.commons.ToolbarDesign","RoadMapStep":"sap.ui.commons.RoadMapStep_obj","enableCache":{"!description":"When list suggestion is enabled all suggestions are cached and no suggest event is fired.","!category":"enum","!type":"Boolean"},"autoClose":{"!description":"If this property is set to true the Dialog will close if the Dialog loses its focus","!category":"enum","!type":"Boolean"},"myPosition":{"!description":"Optional. My position defines which position on the extended tooltip being positioned to align with the target control.","!category":"enum","!type":"sap.ui.core.Dock"},"LabelDesign":"sap.ui.commons.LabelDesign","helpId":{"!description":"Unique identifier used for help service.","!category":"enum","!type":"String"},"undoEnabled":{"!description":"If undo is enabled after changing the text an undo button appears.","!category":"enum","!type":"Boolean"},"selectable":{"!description":"The node is selectable. If true, clicking on the node text triggers \"selected\" event","!category":"enum","!type":"Boolean"},"Image":"sap.ui.commons.Image_obj","type":{"!description":"\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)","!category":"enum","!type":"sap.ui.commons.MessageType"},"required":{"!description":"Depending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.","!category":"enum","!type":"Boolean"},"SegmentedButton":"sap.ui.commons.SegmentedButton_obj","minSizeFirstPane":{"!description":"The minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane","!category":"enum","!type":"sap.ui.core.Percentage"},"openedSectionsId":{"!description":"Section IDs that are opened by default at application start","!category":"enum","!type":"String"},"href":{"!description":"The link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!category":"enum","!type":"sap.ui.core.URI"},"text":{"!description":"Defines the text displayed next to the check box","!category":"enum","!type":"String"},"maxWidth":{"!description":"Determines the maximum width of the ListBox. If not set, there is no maximum width.","!category":"enum","!type":"sap.ui.core.CSSSize"},"imageAltText":{"!description":"This is the alt text for the image","!category":"enum","!type":"String"},"shape":{"!description":"The value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.","!category":"enum","!type":"String"},"pressed":{"!description":"The property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".","!category":"enum","!type":"Boolean"},"imeMode":{"!description":"State of the Input Method Editor (IME).","!category":"enum","!type":"sap.ui.core.ImeMode"},"valueTextAlign":{"!description":"Determines the text alignment in the primary ListBox column.","!category":"enum","!type":"sap.ui.core.TextAlign"},"standalone":{"!description":"Per default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.","!category":"enum","!type":"Boolean"},"HorizontalDividerHeight":"sap.ui.commons.HorizontalDividerHeight","applyContentPadding":{"!description":"Determines whether the Panel will have padding.\nPadding is theme-dependent.","!category":"enum","!type":"Boolean"},"TextViewDesign":"sap.ui.commons.TextViewDesign","style":{"!description":"Style of the button.\n(e.g. emphasized)","!category":"enum","!type":"sap.ui.commons.ButtonStyle"},"DatePicker":"sap.ui.commons.DatePicker_obj","visibleItemCount":{"!description":"Defines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.","!category":"enum","!type":"Number"},"atPosition":{"!description":"Optional. At position defines which position on the target control to align the positioned tooltip.","!category":"enum","!type":"sap.ui.core.Dock"},"ToolbarSeparator":"sap.ui.commons.ToolbarSeparator_obj","horizontalScrolling":{"!description":"Specifies the horizontal scrolling.","!category":"enum","!type":"sap.ui.core.Scrolling"},"FileUploader":"sap.ui.commons.FileUploader_obj","columns":{"!description":"Determines the maximum number of RadioButtons displayed in one line.","!category":"enum","!type":"Number"},"enabled":{"!description":"Switches enabled state of the control. Disabled fields have different colors, and can not be focused.","!category":"enum","!type":"Boolean"},"maxListed":{"!description":"Maximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.","!category":"enum","!type":"String"},"RoadMap":"sap.ui.commons.RoadMap_obj","allowMultiSelect":{"!description":"Determines whether multiple selection is allowed.","!category":"enum","!type":"Boolean"},"iconHovered":{"!description":"Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.","!category":"enum","!type":"sap.ui.core.URI"},"Menu":"sap.ui.commons.Menu_obj","SplitterSize":"sap.ui.commons.SplitterSize","coords":{"!description":"Coordinates of the area","!category":"enum","!type":"String"},"resizable":{"!description":"Specifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.","!category":"enum","!type":"Boolean"},"max":{"!description":"Maximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!category":"enum","!type":"Number"},"verticalScrolling":{"!description":"Specifies the vertical scrolling.","!category":"enum","!type":"sap.ui.core.Scrolling"},"showMoreSteps":{"!description":"Step size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.","!category":"enum","!type":"Number"},"minWidth":{"!description":"Minimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize","!category":"enum","!type":"sap.ui.core.CSSSize"},"selectedStep":{"!description":"ID of the step which is currently selected","!category":"enum","!type":"String"},"TriStateCheckBox":"sap.ui.commons.TriStateCheckBox_obj","selectedIndex":{"!description":"Specifies the index of the currently selected tab.","!category":"enum","!type":"Number"},"Panel":"sap.ui.commons.Panel_obj","Accordion":"sap.ui.commons.Accordion_obj","Tab":"sap.ui.commons.Tab_obj","showHorizontalScrollbar":{"!description":"Display horizontal scrollbar. If false, the overflow content will be hidden","!category":"enum","!type":"Boolean"},"FormattedTextView":"sap.ui.commons.FormattedTextView_obj","searchHelpEnabled":{"!description":"Whether the DropdownBox's search help should be enabled.","!category":"enum","!type":"Boolean"},"width":{"!description":"Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.","!category":"enum","!type":"sap.ui.core.CSSSize"},"defaultItemHeight":{"!description":"Default height of the item in a carousel if no height can be determined","!category":"enum","!type":"Number"},"FormattedTextViewControl":"sap.ui.commons.FormattedTextViewControl","TabStrip":"sap.ui.commons.TabStrip_obj","valueStateText":{"!description":"This property is an individual text that will be used instead of the default ValueState text","!category":"enum","!type":"String"},"AccordionSection":"sap.ui.commons.AccordionSection_obj","areaDesign":{"!description":"Determines the background color.\nNote that color settings are theme-dependent.","!category":"enum","!type":"sap.ui.commons.enums.AreaDesign"},"labeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>ID of label control","!category":"enum","!type":"String"},"ColorPicker":"sap.ui.commons.ColorPicker_obj","Carousel":"sap.ui.commons.Carousel_obj","threshold":{"!description":"Threshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.","!category":"enum","!type":"Number"},"RowRepeaterFilter":"sap.ui.commons.RowRepeaterFilter_obj","enableListSuggest":{"!description":"Defines whether a pop up list shall be provided for suggestions","!category":"enum","!type":"Boolean"},"mode":{"!description":"Determines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)","!category":"enum","!type":"sap.ui.commons.ColorPickerMode"},"accessibleRole":{"!description":"Accessibility role for the text field.","!category":"enum","!type":"sap.ui.core.AccessibleRole"},"maxHistoryItems":{"!description":"Maximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.","!category":"enum","!type":"Number"},"TextField":"sap.ui.commons.TextField_obj","Tree":"sap.ui.commons.Tree_obj","checked":{"!description":"Contains the state of the control whether it is flagged with a check mark, or not","!category":"enum","!type":"Boolean"},"TextView":"sap.ui.commons.TextView_obj","AutoComplete":"sap.ui.commons.AutoComplete_obj","scrollLeft":{"!description":"Determines the scroll position from left to right. Value \"0\" means leftmost position.","!category":"enum","!type":"Number"},"iconURL":{"!description":"URL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.","!category":"enum","!type":"sap.ui.core.URI"},"HorizontalDivider":"sap.ui.commons.HorizontalDivider_obj","selected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To identify the selected tab in a TabStrip selectedIndex is used.<br>Defines whether the tab is the active one.","!category":"enum","!type":"Boolean"},"showHeaderIcons":{"!description":"Show Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true","!category":"enum","!type":"Boolean"},"logoText":{"!description":"The text that will be displayed beside the logo in the application header. This property is optional.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"offset":{"!description":"Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".","!category":"enum","!type":"String"},"textAlign":{"!description":"Sets the horizontal alignment of the text.","!category":"enum","!type":"sap.ui.core.TextAlign"},"maxValue":{"!description":"Determines the number of displayed rating symbols","!category":"enum","!type":"Number"},"alt":{"!description":"The alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!category":"enum","!type":"String"},"scrollTop":{"!description":"Determines the scroll position from top to bottom. Value \"0\" means topmost position.","!category":"enum","!type":"Number"},"showListExpander":{"!description":"Defines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.","!category":"enum","!type":"Boolean"},"RowRepeaterSorter":"sap.ui.commons.RowRepeaterSorter_obj","collision":{"!description":"Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.","!category":"enum","!type":"sap.ui.core.Collision"},"RatingIndicator":"sap.ui.commons.RatingIndicator_obj","numberOfRows":{"!description":"Number of rows displayed.","!category":"enum","!type":"Number"},"maxLength":{"!description":"Maximum number of characters. Value '0' means the feature is switched off.","!category":"enum","!type":"Number"},"ApplicationHeader":"sap.ui.commons.ApplicationHeader_obj","Message":"sap.ui.commons.Message_obj","closable":{"!description":"Specifies whether the tab contains a close button.","!category":"enum","!type":"Boolean"},"MenuBar":"sap.ui.commons.MenuBar_obj","MenuButton":"sap.ui.commons.MenuButton_obj","!category":"namespace","ResponsiveContainerRange":"sap.ui.commons.ResponsiveContainerRange_obj","borderDesign":{"!description":"Determines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.","!category":"enum","!type":"sap.ui.commons.enums.BorderDesign"},"enableClear":{"!description":"Defines whether the clear functionality shall be active","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"Direction of the text. Possible values: \"rtl\", \"ltr\".","!category":"enum","!type":"sap.ui.core.TextDirection"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"design":{"!description":"Font type. valid values are Standard and Monospace.","!category":"enum","!type":"sap.ui.core.Design"},"RowRepeater":"sap.ui.commons.RowRepeater_obj","selectedItemId":{"!description":"Id of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.","!category":"enum","!type":"String"},"value":{"!description":"Text inside the <code>TextField<\/code>","!category":"enum","!type":"String"},"colorString":{"!description":"This is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.","!category":"enum","!type":"String"},"enableScrolling":{"!description":"Determines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.","!category":"enum","!type":"Boolean"},"orientation":{"!description":"Determines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"","!category":"enum","!type":"sap.ui.commons.enums.Orientation"},"Splitter":"sap.ui.commons.Splitter_obj","firstVisibleStep":{"!description":"ID of the first step to be displayed","!category":"enum","!type":"String"},"src":{"!description":"Relative or absolute path to URL where the image file is stored.","!category":"enum","!type":"sap.ui.core.URI"},"secondaryValueTextAlign":{"!description":"Determines the text alignment in the secondary ListBox text column (if available).","!category":"enum","!type":"sap.ui.core.TextAlign"},"editable":{"!description":"Switches edit state of the control. Read-only fields have different colors, depending on theme setting.","!category":"enum","!type":"Boolean"},"RadioButtonGroup":"sap.ui.commons.RadioButtonGroup_obj","visualMode":{"!description":"Defines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)","!category":"enum","!type":"sap.ui.commons.RatingIndicatorVisualMode"},"rows":{"!description":"Number of Rows. This proprty is only used if Height is not used.","!category":"enum","!type":"Number"},"totalUnits":{"!description":"Number of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.","!category":"enum","!type":"Number"},"closeDelay":{"!description":"Closing delay of the tooltip in milliseconds","!category":"enum","!type":"Number"},"RichTooltip":"sap.ui.commons.RichTooltip_obj","openDelay":{"!description":"Opening delay of the tooltip in milliseconds","!category":"enum","!type":"Number"},"SearchField":"sap.ui.commons.SearchField_obj","yyyymmdd":{"!description":"Defines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date","!category":"enum","!type":"String"},"iconHoverURL":{"!description":"URL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!category":"enum","!type":"sap.ui.core.URI"},"HorizontalDividerType":"sap.ui.commons.HorizontalDividerType","maxPopupItems":{"!description":"Defines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.","!category":"enum","!type":"Number"},"Callout":"sap.ui.commons.Callout_obj","RatingIndicatorVisualMode":"sap.ui.commons.RatingIndicatorVisualMode","maxSuggestionItems":{"!description":"Maximum number of suggestion items in the suggestion list.","!category":"enum","!type":"Number"}},"sap.ui.commons.MenuBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuBar"},"sap.ui.commons.layout.VerticalLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.VerticalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.VerticalLayout"},"sap.ui.commons.FormattedTextViewControl":{"!description":"Marker interface for common controls which are suitable for use within a FormattedTextView.","!module":"sap/ui/commons/library","!category":"static class"},"sap.ui.commons.ValueHelpField":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>A TextField with an attached icon which triggeres an event.","onsapshow":{"!description":"Handle F4 event","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: the occurring event"}},"getIconDisabledURL":{"!description":"Gets current value of property <code>iconDisabledURL<\/code>.\n\nURL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ValueHelpField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setIconDisabledURL":{"!description":"Sets a new value for property <code>iconDisabledURL<\/code>.\n\nURL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconDisabledURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","parameters":{"sIconDisabledURL":"type: sap.ui.core.URI, description: New value for property <code>iconDisabledURL<\/code>"}},"!proto":"sap.ui.commons.TextField","fireValueHelpRequest":{"!description":"Fires event <code>valueHelpRequest<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.ValueHelpField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!category":"class","getIconHoverURL":{"!description":"Gets current value of property <code>iconHoverURL<\/code>.\n\nURL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"attachValueHelpRequest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>valueHelpRequest<\/code> event of this <code>sap.ui.commons.ValueHelpField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ValueHelpField<\/code> itself.\n\nEvent which is fired when the ValueHelp is requested.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ValueHelpField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ValueHelpField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ValueHelpField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ValueHelpField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIconURL iconURL} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHoverURL iconHoverURL} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDisabledURL iconDisabledURL} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:valueHelpRequest valueHelpRequest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","!module":"sap/ui/commons/ValueHelpField","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>A TextField with an attached icon which triggeres an event.","setIconURL":{"!description":"Sets a new value for property <code>iconURL<\/code>.\n\nURL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","parameters":{"sIconURL":"type: sap.ui.core.URI, description: New value for property <code>iconURL<\/code>"}},"detachValueHelpRequest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>valueHelpRequest<\/code> event of this <code>sap.ui.commons.ValueHelpField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ValueHelpField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getIconURL":{"!description":"Gets current value of property <code>iconURL<\/code>.\n\nURL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setIconHoverURL":{"!description":"Sets a new value for property <code>iconHoverURL<\/code>.\n\nURL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconHoverURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","parameters":{"sIconHoverURL":"type: sap.ui.core.URI, description: New value for property <code>iconHoverURL<\/code>"}}},"sap.ui.commons.Area":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Used for defining areas in an image map. At runtime, the user can trigger an action, or start a URL, from the single image areas.","getHref":{"!description":"Gets current value of property <code>href<\/code>.\n\nHyper link that is executed when the area is clicked","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Area.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getCoords":{"!description":"Gets current value of property <code>coords<\/code>.\n\nCoordinates of the area","!static":false,"!category":"function","!type":"fn() -> String"},"setAlt":{"!description":"Sets a new value for property <code>alt<\/code>.\n\nAlternative text that is displayed in the case the image is not available\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAlt: String) -> sap.ui.commons.Area","parameters":{"sAlt":"type: string, description: New value for property <code>alt<\/code>"}},"setHref":{"!description":"Sets a new value for property <code>href<\/code>.\n\nHyper link that is executed when the area is clicked\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.commons.Area","parameters":{"sHref":"type: sap.ui.core.URI, description: New value for property <code>href<\/code>"}},"!proto":"sap.ui.core.Element","getShape":{"!description":"Gets current value of property <code>shape<\/code>.\n\nThe value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setCoords":{"!description":"Sets a new value for property <code>coords<\/code>.\n\nCoordinates of the area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCoords: String) -> sap.ui.commons.Area","parameters":{"sCoords":"type: string, description: New value for property <code>coords<\/code>"}},"setShape":{"!description":"Sets a new value for property <code>shape<\/code>.\n\nThe value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sShape: String) -> sap.ui.commons.Area","parameters":{"sShape":"type: string, description: New value for property <code>shape<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Area with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Area.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShape shape} : string<\/li>\n<li>{@link #getCoords coords} : string<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/Area","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Used for defining areas in an image map. At runtime, the user can trigger an action, or start a URL, from the single image areas.","getAlt":{"!description":"Gets current value of property <code>alt<\/code>.\n\nAlternative text that is displayed in the case the image is not available","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.commons.layout.ResponsiveFlowLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a layout where several controls can be added. These controls are blown up to fit a whole line. If the window resizes the controls are moved between the lines and resized again.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new layout/ResponsiveFlowLayout.","!module":"sap/ui/commons/layout/ResponsiveFlowLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a layout where several controls can be added. These controls are blown up to fit a whole line. If the window resizes the controls are moved between the lines and resized again.","!proto":"sap.ui.layout.ResponsiveFlowLayout","!category":"class"},"sap.ui.commons.ToolbarItem":{"!description":"Marker interface for common controls which are suitable for use within a toolbar.\nThe most prominent example of a toolbar item is a button which is mostly used with\nan icon instead of a text caption.\n\nToolbar items must have a fixed height compatible with the toolbar being\na single horizontal row. They can refer to the toolbar's marker class\n\"sapUiTb\" to adjust their own theming when used inside a toolbar.","!module":"sap/ui/commons/library","!category":"static class"},"sap.ui.commons.DatePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DatePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.DatePicker"},"sap.ui.commons.layout.BorderLayoutAreaTypes":{"!description":"The type (=position) of a BorderLayoutArea","!module":"sap/ui/commons/library","top":{"!description":"Value to identify the top area.","!category":"enum","!type":"String"},"bottom":{"!description":"Value to identify the bottom area.","!category":"enum","!type":"String"},"center":{"!description":"Value to identify the center area.","!category":"enum","!type":"String"},"!category":"static class","end":{"!description":"Value to identify the end area.","!category":"enum","!type":"String"},"begin":{"!description":"Value to identify the begin area.","!category":"enum","!type":"String"}},"sap.ui.commons.TreeNode_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TreeNode with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TreeNode"},"sap.ui.commons.Menu_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Menu.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Menu"},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.commons.CalloutBase":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>CalloutBase is a building block for Callout. Do not use it directly. Use the Callout control instead","fireClose":{"!description":"Fires event <code>close<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"adjustPosition":{"!description":"Adjust position of the already opened Callout window.\nCall this method each time when the size of the opened\nCallout window may be changed due to new or changed\ncontents.","!static":false,"!category":"function","!type":"fn()"},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>close<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.CalloutBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireOpen":{"!description":"Fires event <code>open<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>parent<\/code> of type <code>sap.ui.core.Control<\/code>Parent control that has this Callout as a tooltip<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>opened<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nIs fired when the Callout has been opened","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>opened<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>open<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nThe event is fired when the popup is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nEvent is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireOpened":{"!description":"Fires event <code>opened<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.TooltipBase","!category":"class","setPosition":{"!description":"Set position of the Callout window relative to the parent control.\nThis function automatically calculates and sets the correct offset,\nuse it instead of <code>setMyPosition/setAtPosition<\/code>.","!static":false,"!category":"function","!type":"fn(myPosition: sap.ui.core.Dock, atPosition: sap.ui.core.Dock) -> sap.ui.commons.CalloutBase","parameters":{"myPosition":"type: sap.ui.core.Dock, description: docking position of the Callout","atPosition":"type: sap.ui.core.Dock, description: docking position of the parent control"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CalloutBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new CalloutBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:open open} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:opened opened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.TooltipBase#constructor sap.ui.core.TooltipBase}\ncan be used as well.","!module":"sap/ui/commons/CalloutBase","attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>close<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nEvent is fired when the Callout window is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>CalloutBase is a building block for Callout. Do not use it directly. Use the Callout control instead","fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>parent<\/code> of type <code>sap.ui.core.Control<\/code>Parent control that has this Callout as a tooltip<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"close":{"!description":"Closes Callout","!static":false,"!category":"function","!type":"fn()"},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>open<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui":{"!category":"namespace","commons":"sap.ui.commons"},"sap.ui.commons.InPlaceEdit_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.InPlaceEdit with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.InPlaceEdit"},"sap.ui.commons.MenuItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuItem"},"sap.ui.commons.MessageBar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Instead, use the <code>sap.m.MessagePopover<\/code> control.<br>Creates an instance of a MessageBar Control, for displaying messages.","deleteMessages":{"!description":"Deletes a supplied list of messages.\nThe MessageBar will disappear when no message remains.","!static":false,"!category":"function","!type":"fn(aIds: [String])","parameters":{"aIds":"type: string[], description: Messages IDs to be deleted."}},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>\n\nThe default implementation of function <code>setVisible()<\/code> is enhanced\nin order to toggle the <code>visibility:hidden;<\/code> attribute over the control.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.commons.MessageBar","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether or not the MessageBar is visible. Invisible controls are not rendered.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMaxToasted":{"!description":"Sets a new value for property <code>maxToasted<\/code>.\n\nMaximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxToasted: Number) -> sap.ui.commons.MessageBar","parameters":{"iMaxToasted":"type: int, description: New value for property <code>maxToasted<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","deleteAllMessages":{"!description":"Deletes all messages.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.MessageBar"},"setAnchorSnapPoint":{"!description":"Sets a new value for property <code>anchorSnapPoint<\/code>.\n\nType: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>begin top<\/code>.","!static":false,"!category":"function","!type":"fn(sAnchorSnapPoint: String) -> sap.ui.commons.MessageBar","parameters":{"sAnchorSnapPoint":"type: string, description: New value for property <code>anchorSnapPoint<\/code>"}},"addMessages":{"!description":"Adds/updates a supplied list of messages.\nThe MessageBar will appear if at least one message exists.","!static":false,"!category":"function","!type":"fn(aAMessages: [sap.ui.commons.Message])","parameters":{"aAMessages":"type: sap.ui.commons.Message[], description: Array of messages."}},"setMaxListed":{"!description":"Sets a new value for property <code>maxListed<\/code>.\n\nMaximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxListed: Number) -> sap.ui.commons.MessageBar","parameters":{"iMaxListed":"type: int, description: New value for property <code>maxListed<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getAnchorID":{"!description":"Gets current value of property <code>anchorID<\/code>.\n\nElement ID upon which the MessageBar will be initially positioned.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new MessageBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnchorID anchorID} : string (default: )<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMaxToasted maxToasted} : int (default: 3)<\/li>\n<li>{@link #getMaxListed maxListed} : int (default: 7)<\/li>\n<li>{@link #getAnchorSnapPoint anchorSnapPoint} : string (default: begin top)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MessageBar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Instead, use the <code>sap.m.MessagePopover<\/code> control.<br>Creates an instance of a MessageBar Control, for displaying messages.","getAnchorSnapPoint":{"!description":"Gets current value of property <code>anchorSnapPoint<\/code>.\n\nType: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.\n\nDefault value is <code>begin top<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMaxListed":{"!description":"Gets current value of property <code>maxListed<\/code>.\n\nMaximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMaxToasted":{"!description":"Gets current value of property <code>maxToasted<\/code>.\n\nMaximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setAnchorID":{"!description":"Sets a new value for property <code>anchorID<\/code>.\n\nElement ID upon which the MessageBar will be initially positioned.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sAnchorID: String) -> sap.ui.commons.MessageBar","parameters":{"sAnchorID":"type: string, description: New value for property <code>anchorID<\/code>"}}},"sap.ui.commons.ToolbarSeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToolbarSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ToolbarSeparator"},"sap.ui.commons.ResponsiveContainerRange_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainerRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ResponsiveContainerRange"},"sap.ui.commons.SearchProvider":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.6.0 Replaced by sap.ui.core.search.OpenSearchProvider<br>A SearchProvider which can be attached to a Search Field.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.OpenSearchProvider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SearchProvider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SearchProvider.","!module":"sap/ui/commons/SearchProvider","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.6.0 Replaced by sap.ui.core.search.OpenSearchProvider<br>A SearchProvider which can be attached to a Search Field.","!proto":"sap.ui.core.search.OpenSearchProvider","!category":"class"},"sap.ui.commons.form":{"FormLayout":"sap.ui.commons.form.FormLayout_obj","SimpleForm":"sap.ui.commons.form.SimpleForm_obj","GridContainerData":"sap.ui.commons.form.GridContainerData_obj","GridLayout":"sap.ui.commons.form.GridLayout_obj","Form":"sap.ui.commons.form.Form_obj","FormContainer":"sap.ui.commons.form.FormContainer_obj","ResponsiveLayout":"sap.ui.commons.form.ResponsiveLayout_obj","!category":"namespace","GridElementData":"sap.ui.commons.form.GridElementData_obj","FormElement":"sap.ui.commons.form.FormElement_obj"},"sap.ui.commons.DatePicker":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.DatePicker<\/code> control.<br>Allows end users to interact with dates.\nEntries can directly be written in, or selected from a calendar pad.\nNote: Dates can always be manually entered in the fix YYYYMMDD format, on top of the flexible \"locale\" format.\nIf the value is provided via data binding, using a Date.type the formatter of the Date.type is used.\nSince version 1.22 the unified.Calendar is used inside the datePicker. So applications using the DatePicker should load the unified library. Otherwise it will be loaded the first time a DatePicker is opened.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.DatePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getYyyymmdd":{"!description":"Gets current value of property <code>yyyymmdd<\/code>.\n\nDefines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.commons.TextField","!category":"class","setYyyymmdd":{"!description":"Sets a new value for property <code>yyyymmdd<\/code>.\n\nDefines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sYyyymmdd: String) -> sap.ui.commons.DatePicker","parameters":{"sYyyymmdd":"type: string, description: New value for property <code>yyyymmdd<\/code>"}},"fireChange":{"!description":"Fire event change to attached listeners.\n\nProvides the following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code> The new / changed value of the DatePicker.<\/li>\n<li>'newYyyymmdd' of type <code>string<\/code> The new / changed Yyyymmdd of the DatePicker. <\/li>\n<li>'invalidValue' of type <code>boolean<\/code> The new / changed value of the DatePicker is not a valid date. <\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(bInvalidValue: Boolean) -> sap.ui.commons.DatePicker","parameters":{"bInvalidValue":"type: boolean, description: true is value is invalid"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DatePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new DatePicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLocale locale} : string<\/li>\n<li>{@link #getYyyymmdd yyyymmdd} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","!module":"sap/ui/commons/DatePicker","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.DatePicker<\/code> control.<br>Allows end users to interact with dates.\nEntries can directly be written in, or selected from a calendar pad.\nNote: Dates can always be manually entered in the fix YYYYMMDD format, on top of the flexible \"locale\" format.\nIf the value is provided via data binding, using a Date.type the formatter of the Date.type is used.\nSince version 1.22 the unified.Calendar is used inside the datePicker. So applications using the DatePicker should load the unified library. Otherwise it will be loaded the first time a DatePicker is opened.","getLocale":{"!description":"Gets current value of property <code>locale<\/code>.\n\nDefines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.","!static":false,"!category":"function","!type":"fn() -> String"},"setLocale":{"!description":"Sets a new value for property <code>locale<\/code>.\n\nDefines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLocale: String) -> sap.ui.commons.DatePicker","parameters":{"sLocale":"type: string, description: New value for property <code>locale<\/code>"}}},"sap.ui.commons.layout.BorderLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.BorderLayout"},"sap.ui.commons.ColorPicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ColorPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ColorPicker"},"sap.ui.commons.TextView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TextView"},"sap.ui.commons.MenuButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuButton"},"sap.ui.commons.layout.MatrixLayout":{"setColumns":{"!description":"Sets a new value for property <code>columns<\/code>.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumns: Number) -> sap.ui.commons.layout.MatrixLayout","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getRows":{"!description":"Gets content of aggregation <code>rows<\/code>.\n\nThe matrix layout's individual rows.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutRow]"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nCSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addRow":{"!description":"Adds some row to the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow) -> sap.ui.commons.layout.MatrixLayout","parameters":{"oRow":"type: sap.ui.commons.layout.MatrixLayoutRow, description: the row to add; if empty, nothing is inserted"}},"getColumns":{"!description":"Gets current value of property <code>columns<\/code>.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.","!static":false,"!category":"function","!type":"fn() -> Number"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nCSS height of the matrix layout.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new layout/MatrixLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLayoutFixed layoutFixed} : boolean (default: true)<\/li>\n<li>{@link #getColumns columns} : int<\/li>\n<li>{@link #getWidths widths} : sap.ui.core.CSSSize[]<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.ui.commons.layout.MatrixLayoutRow[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","createRow":{"!description":"Creates a new matrix layout row and appends it to this matrix layout.\n\nEach argument must be either a matrix layout cell, which is added to the row\n\"as is\", or an arbitrary content control, which is wrapped with a new\n(default) matrix layout cell first and then added to the row.","!static":false,"!category":"function","!type":"fn(rowContent: sap.ui.core.Control | sap.ui.commons.layout.MatrixLayoutCell | String) -> sap.ui.commons.layout.MatrixLayout","parameters":{"rowContent":"type: sap.ui.core.Control|sap.ui.commons.layout.MatrixLayoutCell|string, description: to add"}},"removeAllRows":{"!description":"Removes all the controls from the aggregation <code>rows<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutRow]"},"setLayoutFixed":{"!description":"Sets a new value for property <code>layoutFixed<\/code>.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bLayoutFixed: Boolean) -> sap.ui.commons.layout.MatrixLayout","parameters":{"bLayoutFixed":"type: boolean, description: New value for property <code>layoutFixed<\/code>"}},"removeRow":{"!description":"Removes a row from the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(vRow: Number | String | sap.ui.commons.layout.MatrixLayoutRow) -> sap.ui.commons.layout.MatrixLayoutRow","parameters":{"vRow":"type: int|string|sap.ui.commons.layout.MatrixLayoutRow, description: The rowto remove or its index or id"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\n<p>\nA matrix layout arranges controls in a grid structure, using rows which\nneed not have the same number of cells.\n<\/p>\n\n<p>\nIt uses predefined cell classes that guarantee appropriate distances\nbetween cells in the grid. The cell's <code>vGutter<\/code> property lets\nyou specify additional horizontal distances easily. You can set these\nadditional distances (known as gutters) with or without separators.\nThe distance for each cell is specified by assigning a specific\nenumeration value of the class <code>LayoutCellSeparator<\/code> of the\nmatrix data object.\n<\/p>\n\n<p>\nYou should <b>avoid nesting<\/b> matrix layouts. You should only use a\nmatrix layout if you need to align controls horizontally across rows.\n<\/p>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLayoutFixed":{"!description":"Gets current value of property <code>layoutFixed<\/code>.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyRows":{"!description":"Destroys all the rows in the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.layout.MatrixLayout"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nCSS height of the matrix layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayout","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nCSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayout","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutRow<\/code> in the aggregation <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow) -> Number","parameters":{"oRow":"type: sap.ui.commons.layout.MatrixLayoutRow, description: The row whose index is looked for"}},"!module":"sap/ui/commons/layout/MatrixLayout","insertRow":{"!description":"Inserts a row into the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow, iIndex: Number) -> sap.ui.commons.layout.MatrixLayout","parameters":{"oRow":"type: sap.ui.commons.layout.MatrixLayoutRow, description: the row to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the row should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the row is inserted at position 0; for a value\n             greater than the current size of the aggregation, the row is inserted at\n             the last position"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\n<p>\nA matrix layout arranges controls in a grid structure, using rows which\nneed not have the same number of cells.\n<\/p>\n\n<p>\nIt uses predefined cell classes that guarantee appropriate distances\nbetween cells in the grid. The cell's <code>vGutter<\/code> property lets\nyou specify additional horizontal distances easily. You can set these\nadditional distances (known as gutters) with or without separators.\nThe distance for each cell is specified by assigning a specific\nenumeration value of the class <code>LayoutCellSeparator<\/code> of the\nmatrix data object.\n<\/p>\n\n<p>\nYou should <b>avoid nesting<\/b> matrix layouts. You should only use a\nmatrix layout if you need to align controls horizontally across rows.\n<\/p>","setWidths":{"!description":"Sets a new value for property <code>widths<\/code>.\n\nWidths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidths: [sap.ui.core.CSSSize]) -> sap.ui.commons.layout.MatrixLayout","parameters":{"sWidths":"type: sap.ui.core.CSSSize[], description: New value for property <code>widths<\/code>"}},"getWidths":{"!description":"Gets current value of property <code>widths<\/code>.\n\nWidths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.CSSSize]"}}}}