{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.ui.commons",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.ui.commons",
			"basename": "commons",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Common basic controls, mainly intended for desktop scenarios"
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Accordion",
			"basename": "Accordion",
			"resource": "sap/ui/commons/Accordion.js",
			"module": "sap/ui/commons/Accordion",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Contains N sections, acting as containers for any library control",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "200px",
						"group": "Misc",
						"visibility": "public",
						"description": "When the specified width is less than the width of a section content, a horizontal scroll bar is provided.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "openedSectionsId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Section IDs that are opened by default at application start",
						"methods": [
							"getOpenedSectionsId",
							"setOpenedSectionsId"
						]
					}
				],
				"aggregations": [
					{
						"name": "sections",
						"singularName": "section",
						"type": "sap.ui.commons.AccordionSection",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Empty container used to display any library control",
						"methods": [
							"getSections",
							"destroySections",
							"insertSection",
							"addSection",
							"removeSection",
							"indexOfSection",
							"removeAllSections"
						]
					}
				],
				"defaultAggregation": "sections",
				"events": [
					{
						"name": "sectionOpen",
						"visibility": "public",
						"description": "Event is triggered when the user opens a section.",
						"parameters": {
							"openSectionId": {
								"name": "openSectionId",
								"type": "string",
								"description": "ID of the opened section"
							},
							"closeSectionIds": {
								"name": "closeSectionIds",
								"type": "string[]",
								"description": "IDs of the sections to be closed. Can be initial in the case of no previously opened section."
							}
						},
						"methods": [
							"attachSectionOpen",
							"detachSectionOpen",
							"fireSectionOpen"
						]
					},
					{
						"name": "sectionClose",
						"visibility": "public",
						"description": "Event is triggered when the user closes a section.",
						"parameters": {
							"closeSectionId": {
								"name": "closeSectionId",
								"type": "string",
								"description": "ID of the closed section"
							}
						},
						"methods": [
							"attachSectionClose",
							"detachSectionClose",
							"fireSectionClose"
						]
					},
					{
						"name": "sectionsReorder",
						"visibility": "public",
						"description": "Event is triggered when the user changes the position of a section.",
						"parameters": {
							"movedSectionId": {
								"name": "movedSectionId",
								"type": "string",
								"description": "ID of the moved section"
							},
							"newIndex": {
								"name": "newIndex",
								"type": "int",
								"description": "New index of the moved section"
							}
						},
						"methods": [
							"attachSectionsReorder",
							"detachSectionsReorder",
							"fireSectionsReorder"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Accordion.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "sectionClose",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"closeSectionId": {
											"name": "closeSectionId",
											"type": "string",
											"optional": false,
											"description": "ID of the closed section"
										}
									}
								}
							}
						}
					],
					"description": "Event is triggered when the user closes a section."
				},
				{
					"name": "sectionOpen",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"openSectionId": {
											"name": "openSectionId",
											"type": "string",
											"optional": false,
											"description": "ID of the opened section"
										},
										"closeSectionIds": {
											"name": "closeSectionIds",
											"type": "string[]",
											"optional": false,
											"description": "IDs of the sections to be closed. Can be initial in the case of no previously opened section."
										}
									}
								}
							}
						}
					],
					"description": "Event is triggered when the user opens a section."
				},
				{
					"name": "sectionsReorder",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"movedSectionId": {
											"name": "movedSectionId",
											"type": "string",
											"optional": false,
											"description": "ID of the moved section"
										},
										"newIndex": {
											"name": "newIndex",
											"type": "int",
											"optional": false,
											"description": "New index of the moved section"
										}
									}
								}
							}
						}
					],
					"description": "Event is triggered when the user changes the position of a section."
				}
			],
			"methods": [
				{
					"name": "addSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSection",
							"type": "sap.ui.commons.AccordionSection",
							"optional": false,
							"description": "the section to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some section to the aggregation <code>sections</code>."
				},
				{
					"name": "attachSectionClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Accordion</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>sectionClose</code> event of this <code>sap.ui.commons.Accordion</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion</code> itself.\n\nEvent is triggered when the user closes a section."
				},
				{
					"name": "attachSectionOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Accordion</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>sectionOpen</code> event of this <code>sap.ui.commons.Accordion</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion</code> itself.\n\nEvent is triggered when the user opens a section."
				},
				{
					"name": "attachSectionsReorder",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Accordion</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>sectionsReorder</code> event of this <code>sap.ui.commons.Accordion</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion</code> itself.\n\nEvent is triggered when the user changes the position of a section."
				},
				{
					"name": "closeSection",
					"visibility": "public",
					"parameters": [
						{
							"name": "sSectionId",
							"type": "string",
							"optional": false,
							"description": "Id of the section that is being closed"
						}
					],
					"description": "Closes a section and opens the default one"
				},
				{
					"name": "destroySections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the sections in the aggregation <code>sections</code>."
				},
				{
					"name": "detachSectionClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>sectionClose</code> event of this <code>sap.ui.commons.Accordion</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSectionOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>sectionOpen</code> event of this <code>sap.ui.commons.Accordion</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSectionsReorder",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>sectionsReorder</code> event of this <code>sap.ui.commons.Accordion</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Accordion with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireSectionClose",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>sectionClose</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>closeSectionId</code> of type <code>string</code>ID of the closed section</li>\n</ul>"
				},
				{
					"name": "fireSectionOpen",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>sectionOpen</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openSectionId</code> of type <code>string</code>ID of the opened section</li>\n<li><code>closeSectionIds</code> of type <code>string[]</code>IDs of the sections to be closed. Can be initial in the case of no previously opened section.</li>\n</ul>"
				},
				{
					"name": "fireSectionsReorder",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>sectionsReorder</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>movedSectionId</code> of type <code>string</code>ID of the moved section</li>\n<li><code>newIndex</code> of type <code>int</code>New index of the moved section</li>\n</ul>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Accordion."
				},
				{
					"name": "getOpenedSectionsId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>openedSectionsId</code>"
					},
					"description": "Gets current value of property <code>openedSectionsId</code>.\n\nSection IDs that are opened by default at application start"
				},
				{
					"name": "getSections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection[]"
					},
					"description": "Gets content of aggregation <code>sections</code>.\n\nEmpty container used to display any library control"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWhen the specified width is less than the width of a section content, a horizontal scroll bar is provided.\n\nDefault value is <code>200px</code>."
				},
				{
					"name": "indexOfSection",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSection",
							"type": "sap.ui.commons.AccordionSection",
							"optional": false,
							"description": "The section whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.AccordionSection</code> in the aggregation <code>sections</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSection",
							"type": "sap.ui.commons.AccordionSection",
							"optional": false,
							"description": "the section to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the section should be inserted at; for\n             a negative value of <code>iIndex</code>, the section is inserted at position 0; for a value\n             greater than the current size of the aggregation, the section is inserted at\n             the last position"
						}
					],
					"description": "Inserts a section into the aggregation <code>sections</code>."
				},
				{
					"name": "openSection",
					"visibility": "public",
					"parameters": [
						{
							"name": "sSectionId",
							"type": "string",
							"optional": false,
							"description": "Id of the section that is being opened"
						}
					],
					"description": "Opens a section"
				},
				{
					"name": "removeAllSections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>sections</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "The removed section or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSection",
							"type": "int|string|sap.ui.commons.AccordionSection",
							"optional": false,
							"description": "The sectionto remove or its index or id"
						}
					],
					"description": "Removes a section from the aggregation <code>sections</code>."
				},
				{
					"name": "setOpenedSectionsId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "'this' to allow method chaining"
					},
					"parameters": [
						{
							"name": "sOpenedSectionsId",
							"type": "string",
							"optional": false,
							"description": "New value for property openedSectionsId"
						}
					],
					"description": "Redefinition of the method to add additional handling"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Accordion",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWhen the specified width is less than the width of a section content, a horizontal scroll bar is provided.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>200px</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.AccordionSection",
			"basename": "AccordionSection",
			"resource": "sap/ui/commons/AccordionSection.js",
			"module": "sap/ui/commons/AccordionSection",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Represents a panel which is a container for other controls. The container does not have any layout function.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "maxHeight",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "When the section content exceeds maxHeight, a vertical scroll bar appears.",
						"methods": [
							"getMaxHeight",
							"setMaxHeight"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "It is required that the used theme supports the control.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "collapsed",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "It is recommended to adjust the settings for the width when the section is set to 'collapsed'.",
						"deprecated": {
							"since": "1.34",
							"text": "Use Accordion's \"openedSectionsId\" property"
						},
						"methods": [
							"getCollapsed",
							"setCollapsed"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text for the section header",
						"methods": [
							"getTitle",
							"setTitle"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregates the controls that are contained in the panel. The control layout is browser-dependent.\nFor a stable content layout, use a layout control as direct single child.\nWhen the panel dimensions are set, the child control may have width and height of 100%;\nwhen the panel dimensions are not set, the child defines the panel size.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				],
				"defaultAggregation": "content",
				"events": [
					{
						"name": "scroll",
						"visibility": "public",
						"description": "Event is fired when the user scrolls the panel",
						"parameters": {
							"left": {
								"name": "left",
								"type": "int",
								"description": "Horizontal scroll position"
							},
							"top": {
								"name": "top",
								"type": "int",
								"description": "Vertical scroll position"
							}
						},
						"methods": [
							"attachScroll",
							"detachScroll",
							"fireScroll"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new AccordionSection.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "scroll",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"left": {
											"name": "left",
											"type": "int",
											"optional": false,
											"description": "Horizontal scroll position"
										},
										"top": {
											"name": "top",
											"type": "int",
											"optional": false,
											"description": "Vertical scroll position"
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the user scrolls the panel"
				}
			],
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "attachScroll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.AccordionSection</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>scroll</code> event of this <code>sap.ui.commons.AccordionSection</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.AccordionSection</code> itself.\n\nEvent is fired when the user scrolls the panel"
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "detachScroll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>scroll</code> event of this <code>sap.ui.commons.AccordionSection</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.AccordionSection with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireScroll",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>scroll</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>left</code> of type <code>int</code>Horizontal scroll position</li>\n<li><code>top</code> of type <code>int</code>Vertical scroll position</li>\n</ul>"
				},
				{
					"name": "getCollapsed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>collapsed</code>"
					},
					"description": "Gets current value of property <code>collapsed</code>.\n\nIt is recommended to adjust the settings for the width when the section is set to 'collapsed'.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.34",
						"text": "Use Accordion's \"openedSectionsId\" property"
					}
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nAggregates the controls that are contained in the panel. The control layout is browser-dependent.\nFor a stable content layout, use a layout control as direct single child.\nWhen the panel dimensions are set, the child control may have width and height of 100%;\nwhen the panel dimensions are not set, the child defines the panel size."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nIt is required that the used theme supports the control.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMaxHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>maxHeight</code>"
					},
					"description": "Gets current value of property <code>maxHeight</code>.\n\nWhen the section content exceeds maxHeight, a vertical scroll bar appears."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.AccordionSection."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nText for the section header"
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setCollapsed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "'this' to allow method chaining"
					},
					"parameters": [
						{
							"name": "bCollapsed",
							"type": "boolean",
							"optional": false,
							"description": "Whether the AccordionSection is collapsed or not"
						}
					],
					"description": "Property setter for the \"collapsed\" state"
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "'this' to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "Whether the AccordionSection is enabled or not"
						}
					],
					"description": "Property setter for the \"enabled\" state"
				},
				{
					"name": "setMaxHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMaxHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>maxHeight</code>"
						}
					],
					"description": "Sets a new value for property <code>maxHeight</code>.\n\nWhen the section content exceeds maxHeight, a vertical scroll bar appears.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AccordionSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nText for the section header\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ApplicationHeader",
			"basename": "ApplicationHeader",
			"resource": "sap/ui/commons/ApplicationHeader.js",
			"module": "sap/ui/commons/ApplicationHeader",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The application header control stands on the top of any application page. It consists of 4 areas: Logo area, Function area provided by application, Search area, Logout area.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.tnt.ToolHeader</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "logoSrc",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Path (src) to the logo icon to be displayed in the application header.",
						"methods": [
							"getLogoSrc",
							"setLogoSrc"
						]
					},
					{
						"name": "logoText",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The text that will be displayed beside the logo in the application header. This property is optional.",
						"methods": [
							"getLogoText",
							"setLogoText"
						]
					},
					{
						"name": "displayLogoff",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines if the logoff area will be displayed at the right hand side of the application header.",
						"methods": [
							"getDisplayLogoff",
							"setDisplayLogoff"
						]
					},
					{
						"name": "userName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "User name that will be displayed beside the welcome text",
						"methods": [
							"getUserName",
							"setUserName"
						]
					},
					{
						"name": "displayWelcome",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines if the welcome text is displayed",
						"methods": [
							"getDisplayWelcome",
							"setDisplayWelcome"
						]
					}
				],
				"events": [
					{
						"name": "logoff",
						"visibility": "public",
						"description": "Fires an event to log off the user from the application.\nNo parameters.",
						"methods": [
							"attachLogoff",
							"detachLogoff",
							"fireLogoff"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new ApplicationHeader.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "logoff",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fires an event to log off the user from the application.\nNo parameters."
				}
			],
			"methods": [
				{
					"name": "attachLogoff",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ApplicationHeader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>logoff</code> event of this <code>sap.ui.commons.ApplicationHeader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ApplicationHeader</code> itself.\n\nFires an event to log off the user from the application.\nNo parameters."
				},
				{
					"name": "detachLogoff",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>logoff</code> event of this <code>sap.ui.commons.ApplicationHeader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ApplicationHeader with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireLogoff",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>logoff</code> to attached listeners."
				},
				{
					"name": "getDisplayLogoff",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displayLogoff</code>"
					},
					"description": "Gets current value of property <code>displayLogoff</code>.\n\nDetermines if the logoff area will be displayed at the right hand side of the application header.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getDisplayWelcome",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displayWelcome</code>"
					},
					"description": "Gets current value of property <code>displayWelcome</code>.\n\nDetermines if the welcome text is displayed\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getLogoSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>logoSrc</code>"
					},
					"description": "Gets current value of property <code>logoSrc</code>.\n\nPath (src) to the logo icon to be displayed in the application header."
				},
				{
					"name": "getLogoText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>logoText</code>"
					},
					"description": "Gets current value of property <code>logoText</code>.\n\nThe text that will be displayed beside the logo in the application header. This property is optional."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ApplicationHeader."
				},
				{
					"name": "getUserName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>userName</code>"
					},
					"description": "Gets current value of property <code>userName</code>.\n\nUser name that will be displayed beside the welcome text"
				},
				{
					"name": "setDisplayLogoff",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplayLogoff",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displayLogoff</code>"
						}
					],
					"description": "Sets a new value for property <code>displayLogoff</code>.\n\nDetermines if the logoff area will be displayed at the right hand side of the application header.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setDisplayWelcome",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplayWelcome",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displayWelcome</code>"
						}
					],
					"description": "Sets a new value for property <code>displayWelcome</code>.\n\nDetermines if the welcome text is displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setLogoSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLogoSrc",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>logoSrc</code>"
						}
					],
					"description": "Sets a new value for property <code>logoSrc</code>.\n\nPath (src) to the logo icon to be displayed in the application header.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLogoText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLogoText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>logoText</code>"
						}
					],
					"description": "Sets a new value for property <code>logoText</code>.\n\nThe text that will be displayed beside the logo in the application header. This property is optional.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUserName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ApplicationHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUserName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>userName</code>"
						}
					],
					"description": "Sets a new value for property <code>userName</code>.\n\nUser name that will be displayed beside the welcome text\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Area",
			"basename": "Area",
			"resource": "sap/ui/commons/Area.js",
			"module": "sap/ui/commons/Area",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Used for defining areas in an image map. At runtime, the user can trigger an action, or start a URL, from the single image areas.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "shape",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.",
						"methods": [
							"getShape",
							"setShape"
						]
					},
					{
						"name": "coords",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Coordinates of the area",
						"methods": [
							"getCoords",
							"setCoords"
						]
					},
					{
						"name": "href",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Hyper link that is executed when the area is clicked",
						"methods": [
							"getHref",
							"setHref"
						]
					},
					{
						"name": "alt",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Alternative text that is displayed in the case the image is not available",
						"methods": [
							"getAlt",
							"setAlt"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Area.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Area with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getAlt",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>alt</code>"
					},
					"description": "Gets current value of property <code>alt</code>.\n\nAlternative text that is displayed in the case the image is not available"
				},
				{
					"name": "getCoords",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>coords</code>"
					},
					"description": "Gets current value of property <code>coords</code>.\n\nCoordinates of the area"
				},
				{
					"name": "getHref",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>href</code>"
					},
					"description": "Gets current value of property <code>href</code>.\n\nHyper link that is executed when the area is clicked"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Area."
				},
				{
					"name": "getShape",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>shape</code>"
					},
					"description": "Gets current value of property <code>shape</code>.\n\nThe value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default."
				},
				{
					"name": "setAlt",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Area",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAlt",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>alt</code>"
						}
					],
					"description": "Sets a new value for property <code>alt</code>.\n\nAlternative text that is displayed in the case the image is not available\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setCoords",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Area",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sCoords",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>coords</code>"
						}
					],
					"description": "Sets a new value for property <code>coords</code>.\n\nCoordinates of the area\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHref",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Area",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHref",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>href</code>"
						}
					],
					"description": "Sets a new value for property <code>href</code>.\n\nHyper link that is executed when the area is clicked\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setShape",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Area",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sShape",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>shape</code>"
						}
					],
					"description": "Sets a new value for property <code>shape</code>.\n\nThe value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.AutoComplete",
			"basename": "AutoComplete",
			"resource": "sap/ui/commons/AutoComplete.js",
			"module": "sap/ui/commons/AutoComplete",
			"static": true,
			"visibility": "public",
			"since": "1.10.0",
			"extends": "sap.ui.commons.ComboBox",
			"description": "\nTextfield with list based text completion.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "enableScrolling",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.",
						"methods": [
							"getEnableScrolling",
							"setEnableScrolling"
						]
					}
				],
				"events": [
					{
						"name": "suggest",
						"visibility": "public",
						"description": "Fired when the user has changed the value and a suggestion list update should occur.",
						"parameters": {
							"suggestValue": {
								"name": "suggestValue",
								"type": "string",
								"description": "The current value which was typed in."
							}
						},
						"methods": [
							"attachSuggest",
							"detachSuggest",
							"fireSuggest"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new AutoComplete.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "suggest",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"suggestValue": {
											"name": "suggestValue",
											"type": "string",
											"optional": false,
											"description": "The current value which was typed in."
										}
									}
								}
							}
						}
					],
					"description": "Fired when the user has changed the value and a suggestion list update should occur."
				}
			],
			"methods": [
				{
					"name": "attachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AutoComplete",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.AutoComplete</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>suggest</code> event of this <code>sap.ui.commons.AutoComplete</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.AutoComplete</code> itself.\n\nFired when the user has changed the value and a suggestion list update should occur."
				},
				{
					"name": "detachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AutoComplete",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>suggest</code> event of this <code>sap.ui.commons.AutoComplete</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.AutoComplete with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}."
				},
				{
					"name": "fireSuggest",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.AutoComplete",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>suggest</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>suggestValue</code> of type <code>string</code>The current value which was typed in.</li>\n</ul>"
				},
				{
					"name": "getEnableScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableScrolling</code>"
					},
					"description": "Gets current value of property <code>enableScrolling</code>.\n\nDetermines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getListBox",
					"visibility": "public",
					"deprecated": {
						"text": "NOT SUPPORTED"
					}
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.AutoComplete."
				},
				{
					"name": "getSelectedItemId",
					"visibility": "public",
					"deprecated": {
						"text": "NOT SUPPORTED"
					}
				},
				{
					"name": "getSelectedKey",
					"visibility": "public",
					"deprecated": {
						"text": "NOT SUPPORTED"
					}
				},
				{
					"name": "setEnableScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.AutoComplete",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableScrolling",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableScrolling</code>"
						}
					],
					"description": "Sets a new value for property <code>enableScrolling</code>.\n\nDetermines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setFilterFunction",
					"visibility": "public",
					"parameters": [
						{
							"name": "fFilter",
							"type": "function",
							"optional": true,
							"description": "The filter function. If not set the default filter function will be used."
						}
					],
					"description": "Sets a custom filter function for items. Default is to check whether the item text begins with the typed value.\n\nExample:\n<code>\nfunction(sValue, oItem){\n\t  return jQuery.sap.startsWithIgnoreCase(oItem.getText(), sValue);\n}\n</code>"
				},
				{
					"name": "setListBox",
					"visibility": "public",
					"deprecated": {
						"text": "NOT SUPPORTED"
					}
				},
				{
					"name": "setSelectedItemId",
					"visibility": "public",
					"deprecated": {
						"text": "NOT SUPPORTED"
					}
				},
				{
					"name": "setSelectedKey",
					"visibility": "public",
					"deprecated": {
						"text": "NOT SUPPORTED"
					}
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Button",
			"basename": "Button",
			"resource": "sap/ui/commons/Button.js",
			"module": "sap/ui/commons/Button",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Enables users to trigger actions such as save or print. For the button UI, you can define some text or an icon, or both.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Button</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Button text displayed at runtime.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Control width as common CSS-size (px or % as unit, for example)",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "helpId",
						"type": "string",
						"defaultValue": "",
						"group": "Behavior",
						"visibility": "public",
						"description": "Unique identifier used for help service",
						"methods": [
							"getHelpId",
							"setHelpId"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Icon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "iconHovered",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.",
						"methods": [
							"getIconHovered",
							"setIconHovered"
						]
					},
					{
						"name": "iconSelected",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.",
						"methods": [
							"getIconSelected",
							"setIconSelected"
						]
					},
					{
						"name": "iconFirst",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set to true (default), the display sequence is 1. icon 2. control text .",
						"methods": [
							"getIconFirst",
							"setIconFirst"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Specifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "styled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Indicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.",
						"methods": [
							"getStyled",
							"setStyled"
						]
					},
					{
						"name": "lite",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "The button is rendered as lite button.",
						"methods": [
							"getLite",
							"setLite"
						]
					},
					{
						"name": "style",
						"type": "sap.ui.commons.ButtonStyle",
						"defaultValue": "Default",
						"group": "Appearance",
						"visibility": "public",
						"description": "Style of the button.\n(e.g. emphasized)",
						"methods": [
							"getStyle",
							"setStyle"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Event is fired when the user presses the control.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Button.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the user presses the control."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Button</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.commons.Button</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Button</code> itself.\n\nEvent is fired when the user presses the control."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.commons.Button</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Button with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "focus",
					"visibility": "public",
					"description": "Puts the focus to the button."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nSpecifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer."
				},
				{
					"name": "getHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>helpId</code>"
					},
					"description": "Gets current value of property <code>helpId</code>.\n\nUnique identifier used for help service\n\nDefault value is <code></code>."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nDefault value is <code></code>."
				},
				{
					"name": "getIconFirst",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>iconFirst</code>"
					},
					"description": "Gets current value of property <code>iconFirst</code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconHovered</code>"
					},
					"description": "Gets current value of property <code>iconHovered</code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code></code>."
				},
				{
					"name": "getIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconSelected</code>"
					},
					"description": "Gets current value of property <code>iconSelected</code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code></code>."
				},
				{
					"name": "getLite",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>lite</code>"
					},
					"description": "Gets current value of property <code>lite</code>.\n\nThe button is rendered as lite button.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Button."
				},
				{
					"name": "getStyle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ButtonStyle",
						"description": "Value of property <code>style</code>"
					},
					"description": "Gets current value of property <code>style</code>.\n\nStyle of the button.\n(e.g. emphasized)\n\nDefault value is <code>Default</code>."
				},
				{
					"name": "getStyled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>styled</code>"
					},
					"description": "Gets current value of property <code>styled</code>.\n\nIndicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nButton text displayed at runtime.\n\nDefault value is <code></code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nControl width as common CSS-size (px or % as unit, for example)"
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nSpecifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHelpId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>helpId</code>"
						}
					],
					"description": "Sets a new value for property <code>helpId</code>.\n\nUnique identifier used for help service\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setIconFirst",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIconFirst",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>iconFirst</code>"
						}
					],
					"description": "Sets a new value for property <code>iconFirst</code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconHovered",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconHovered</code>"
						}
					],
					"description": "Sets a new value for property <code>iconHovered</code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconSelected",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconSelected</code>"
						}
					],
					"description": "Sets a new value for property <code>iconSelected</code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setLite",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bLite",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>lite</code>"
						}
					],
					"description": "Sets a new value for property <code>lite</code>.\n\nThe button is rendered as lite button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setStyle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "sap.ui.commons.ButtonStyle",
							"optional": false,
							"description": "New value for property <code>style</code>"
						}
					],
					"description": "Sets a new value for property <code>style</code>.\n\nStyle of the button.\n(e.g. emphasized)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Default</code>."
				},
				{
					"name": "setStyled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bStyled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>styled</code>"
						}
					],
					"description": "Sets a new value for property <code>styled</code>.\n\nIndicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nButton text displayed at runtime.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nControl width as common CSS-size (px or % as unit, for example)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.ButtonStyle",
			"basename": "ButtonStyle",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "different styles for a button.",
			"properties": [
				{
					"name": "Accept",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Accept button (normally green)."
				},
				{
					"name": "Default",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "default style (no special styling)."
				},
				{
					"name": "Emph",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Button is emphasized."
				},
				{
					"name": "Reject",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Reject button (normally red)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Callout",
			"basename": "Callout",
			"resource": "sap/ui/commons/Callout.js",
			"module": "sap/ui/commons/Callout",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.CalloutBase",
			"description": "Callout is a small popup with some useful information and links that is shown when a mouse is hovered over a specific view element.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Popover</code> control."
			},
			"ui5-metadata": {
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Determines the content of the Callout",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Callout.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Callout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Callout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Callout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nDetermines the content of the Callout"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Callout."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Callout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.CalloutBase",
			"basename": "CalloutBase",
			"resource": "sap/ui/commons/CalloutBase.js",
			"module": "sap/ui/commons/CalloutBase",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.TooltipBase",
			"description": "CalloutBase is a building block for Callout. Do not use it directly. Use the Callout control instead",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Popover</code> control."
			},
			"ui5-metadata": {
				"events": [
					{
						"name": "open",
						"visibility": "public",
						"description": "The event is fired when the popup is opened.",
						"parameters": {
							"parent": {
								"name": "parent",
								"type": "sap.ui.core.Control",
								"description": "Parent control that has this Callout as a tooltip"
							}
						},
						"methods": [
							"attachOpen",
							"detachOpen",
							"fireOpen"
						]
					},
					{
						"name": "close",
						"visibility": "public",
						"description": "Event is fired when the Callout window is closed.",
						"methods": [
							"attachClose",
							"detachClose",
							"fireClose"
						]
					},
					{
						"name": "beforeOpen",
						"visibility": "public",
						"description": "Event is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content",
						"parameters": {
							"parent": {
								"name": "parent",
								"type": "sap.ui.core.Control",
								"description": "Parent control that has this Callout as a tooltip"
							}
						},
						"methods": [
							"attachBeforeOpen",
							"detachBeforeOpen",
							"fireBeforeOpen"
						]
					},
					{
						"name": "opened",
						"visibility": "public",
						"since": "1.11.0",
						"description": "Is fired when the Callout has been opened",
						"methods": [
							"attachOpened",
							"detachOpened",
							"fireOpened"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new CalloutBase.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "beforeOpen",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"parent": {
											"name": "parent",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "Parent control that has this Callout as a tooltip"
										}
									}
								}
							}
						}
					],
					"description": "Event is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content"
				},
				{
					"name": "close",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the Callout window is closed."
				},
				{
					"name": "open",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"parent": {
											"name": "parent",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "Parent control that has this Callout as a tooltip"
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the popup is opened."
				},
				{
					"name": "opened",
					"visibility": "public",
					"since": "1.11.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Is fired when the Callout has been opened"
				}
			],
			"methods": [
				{
					"name": "adjustPosition",
					"visibility": "public",
					"description": "Adjust position of the already opened Callout window.\nCall this method each time when the size of the opened\nCallout window may be changed due to new or changed\ncontents."
				},
				{
					"name": "attachBeforeOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeOpen</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase</code> itself.\n\nEvent is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content"
				},
				{
					"name": "attachClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>close</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase</code> itself.\n\nEvent is fired when the Callout window is closed."
				},
				{
					"name": "attachOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>open</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase</code> itself.\n\nThe event is fired when the popup is opened."
				},
				{
					"name": "attachOpened",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CalloutBase</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>opened</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase</code> itself.\n\nIs fired when the Callout has been opened"
				},
				{
					"name": "close",
					"visibility": "public",
					"description": "Closes Callout"
				},
				{
					"name": "detachBeforeOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeOpen</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>close</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>open</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachOpened",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>opened</code> event of this <code>sap.ui.commons.CalloutBase</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.CalloutBase with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}."
				},
				{
					"name": "fireBeforeOpen",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "Whether or not to prevent the default action"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>beforeOpen</code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>parent</code> of type <code>sap.ui.core.Control</code>Parent control that has this Callout as a tooltip</li>\n</ul>"
				},
				{
					"name": "fireClose",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>close</code> to attached listeners."
				},
				{
					"name": "fireOpen",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>open</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>parent</code> of type <code>sap.ui.core.Control</code>Parent control that has this Callout as a tooltip</li>\n</ul>"
				},
				{
					"name": "fireOpened",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>opened</code> to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.CalloutBase."
				},
				{
					"name": "setPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CalloutBase",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "myPosition",
							"type": "sap.ui.core.Dock",
							"optional": false,
							"description": "docking position of the Callout"
						},
						{
							"name": "atPosition",
							"type": "sap.ui.core.Dock",
							"optional": false,
							"description": "docking position of the parent control"
						}
					],
					"description": "Set position of the Callout window relative to the parent control.\nThis function automatically calculates and sets the correct offset,\nuse it instead of <code>setMyPosition/setAtPosition</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Carousel",
			"basename": "Carousel",
			"resource": "sap/ui/commons/Carousel.js",
			"module": "sap/ui/commons/Carousel",
			"static": true,
			"visibility": "public",
			"since": "1.8.0",
			"extends": "sap.ui.core.Control",
			"description": "Carousel holds multiple controls and displays them vertically or horizontally next to each other. You can define how many content items should be displayed at once or let the Carousel determine that for you. Navigation is done through buttons or keys.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Carousel</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "orientation",
						"type": "sap.ui.commons.enums.Orientation",
						"defaultValue": "horizontal",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"",
						"methods": [
							"getOrientation",
							"setOrientation"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the width of the Carousel",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the height of the Carousel",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "defaultItemHeight",
						"type": "int",
						"defaultValue": 150,
						"group": "Misc",
						"visibility": "public",
						"description": "Default height of the item in a carousel if no height can be determined",
						"methods": [
							"getDefaultItemHeight",
							"setDefaultItemHeight"
						]
					},
					{
						"name": "defaultItemWidth",
						"type": "int",
						"defaultValue": 150,
						"group": "Misc",
						"visibility": "public",
						"description": "Default width of the item in a carousel if no height can be determined",
						"methods": [
							"getDefaultItemWidth",
							"setDefaultItemWidth"
						]
					},
					{
						"name": "animationDuration",
						"type": "int",
						"defaultValue": 500,
						"group": "Misc",
						"visibility": "public",
						"description": "Duration for animation when navigating through the contents of the Carousel",
						"methods": [
							"getAnimationDuration",
							"setAnimationDuration"
						]
					},
					{
						"name": "visibleItems",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If defined, the carousel displays the number of items defined. Items will be resized to fit the area.",
						"methods": [
							"getVisibleItems",
							"setVisibleItems"
						]
					},
					{
						"name": "handleSize",
						"type": "int",
						"defaultValue": 22,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)",
						"methods": [
							"getHandleSize",
							"setHandleSize"
						]
					},
					{
						"name": "firstVisibleIndex",
						"type": "int",
						"defaultValue": 0,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.11.0",
						"description": "The index of the element in the content aggreation which is displayed first on rendering",
						"methods": [
							"getFirstVisibleIndex",
							"setFirstVisibleIndex"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "Controls which are displayed inside the Carousel",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent",
							"bindContent",
							"unbindContent"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "Object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Carousel.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "bindContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>content</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "calculateAndSetSize",
					"visibility": "public",
					"description": "Calculates and sets the size of the carousel, its items and its buttons"
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Carousel with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAnimationDuration",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>animationDuration</code>"
					},
					"description": "Gets current value of property <code>animationDuration</code>.\n\nDuration for animation when navigating through the contents of the Carousel\n\nDefault value is <code>500</code>."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nControls which are displayed inside the Carousel"
				},
				{
					"name": "getDefaultItemHeight",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>defaultItemHeight</code>"
					},
					"description": "Gets current value of property <code>defaultItemHeight</code>.\n\nDefault height of the item in a carousel if no height can be determined\n\nDefault value is <code>150</code>."
				},
				{
					"name": "getDefaultItemWidth",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>defaultItemWidth</code>"
					},
					"description": "Gets current value of property <code>defaultItemWidth</code>.\n\nDefault width of the item in a carousel if no height can be determined\n\nDefault value is <code>150</code>."
				},
				{
					"name": "getFirstVisibleIndex",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>firstVisibleIndex</code>"
					},
					"since": "1.11.0",
					"description": "Gets current value of property <code>firstVisibleIndex</code>.\n\nThe index of the element in the content aggreation which is displayed first on rendering\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getFocusDomRef",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery",
						"description": "The focused DOM element"
					},
					"description": "Returns the focused DOM element"
				},
				{
					"name": "getHandleSize",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>handleSize</code>"
					},
					"description": "Gets current value of property <code>handleSize</code>.\n\nDetermines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)\n\nDefault value is <code>22</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nDetermines the height of the Carousel"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Carousel."
				},
				{
					"name": "getOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.enums.Orientation",
						"description": "Value of property <code>orientation</code>"
					},
					"description": "Gets current value of property <code>orientation</code>.\n\nDetermines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"\n\nDefault value is <code>horizontal</code>."
				},
				{
					"name": "getVisibleItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>visibleItems</code>"
					},
					"description": "Gets current value of property <code>visibleItems</code>.\n\nIf defined, the carousel displays the number of items defined. Items will be resized to fit the area."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDetermines the width of the Carousel"
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "onswipeleft",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false
						}
					],
					"description": "If the device supports touch gestures and left swipe is triggered shows the next carousel item"
				},
				{
					"name": "onswiperight",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false
						}
					],
					"description": "If the device supports touch gestures and right swipe is triggered shows the previous carousel item"
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setAnimationDuration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iAnimationDuration",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>animationDuration</code>"
						}
					],
					"description": "Sets a new value for property <code>animationDuration</code>.\n\nDuration for animation when navigating through the contents of the Carousel\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>500</code>."
				},
				{
					"name": "setDefaultItemHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iDefaultItemHeight",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>defaultItemHeight</code>"
						}
					],
					"description": "Sets a new value for property <code>defaultItemHeight</code>.\n\nDefault height of the item in a carousel if no height can be determined\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>150</code>."
				},
				{
					"name": "setDefaultItemWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iDefaultItemWidth",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>defaultItemWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>defaultItemWidth</code>.\n\nDefault width of the item in a carousel if no height can be determined\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>150</code>."
				},
				{
					"name": "setFirstVisibleIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "iFirstVisibleIndex",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>firstVisibleIndex</code>"
						}
					],
					"description": "Setter for property <code>firstVisibleIndex</code>.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "setHandleSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iHandleSize",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>handleSize</code>"
						}
					],
					"description": "Sets a new value for property <code>handleSize</code>.\n\nDetermines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>22</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nDetermines the height of the Carousel\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sOrientation",
							"type": "sap.ui.commons.enums.Orientation",
							"optional": false,
							"description": "New value for property <code>orientation</code>"
						}
					],
					"description": "Sets a new value for property <code>orientation</code>.\n\nDetermines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>horizontal</code>."
				},
				{
					"name": "setVisibleItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iVisibleItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>visibleItems</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleItems</code>.\n\nIf defined, the carousel displays the number of items defined. Items will be resized to fit the area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDetermines the width of the Carousel\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "showElementWithId",
					"visibility": "public",
					"parameters": [
						{
							"name": "sElementId",
							"type": "string",
							"optional": false,
							"description": "Id of the element to slide to."
						}
					],
					"description": "Shows the element with the specified Id. This can be only used after the component is rendered."
				},
				{
					"name": "showNext",
					"visibility": "public",
					"description": "Shows the next item in carousel. This can be only used after the component is rendered."
				},
				{
					"name": "showPrevious",
					"visibility": "public",
					"description": "Shows the previous item in carousel. This can be only used after the component is rendered."
				},
				{
					"name": "unbindContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Carousel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>content</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.CheckBox",
			"basename": "CheckBox",
			"resource": "sap/ui/commons/CheckBox.js",
			"module": "sap/ui/commons/CheckBox",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "\nProvides a box which can be flagged, the box has a label. A check box can either stand alone, or in a group with other check boxes. As an option, the boxes can initially be set to status 'Not Editable'.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.CheckBox</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "checked",
						"type": "boolean",
						"defaultValue": false,
						"group": "Data",
						"visibility": "public",
						"bindable": true,
						"description": "Contains the state of the control whether it is flagged with a check mark, or not",
						"methods": [
							"getChecked",
							"setChecked",
							"bindChecked",
							"unbindChecked"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the text displayed next to the check box",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Using this property, the control could be disabled, if required.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether the user shall be allowed to select the check box.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Data",
						"visibility": "public",
						"description": "Accepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "The width can be set to an absolute value. If no value is set, the control width results from the text length.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "textDirection",
						"type": "sap.ui.core.TextDirection",
						"defaultValue": "Inherit",
						"group": "Appearance",
						"visibility": "public",
						"description": "The value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.",
						"methods": [
							"getTextDirection",
							"setTextDirection"
						]
					},
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.",
						"methods": [
							"getName",
							"setName"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Event is triggered when the control status is changed by the user by flagging or unflagging the checkbox.",
						"parameters": {
							"checked": {
								"name": "checked",
								"type": "boolean",
								"description": "Checks whether the box is flagged or not flagged."
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new CheckBox.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"checked": {
											"name": "checked",
											"type": "boolean",
											"optional": false,
											"description": "Checks whether the box is flagged or not flagged."
										}
									}
								}
							}
						}
					],
					"description": "Event is triggered when the control status is changed by the user by flagging or unflagging the checkbox."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.CheckBox</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.commons.CheckBox</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CheckBox</code> itself.\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox."
				},
				{
					"name": "bindChecked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds property <code>checked</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>"
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.commons.CheckBox</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.CheckBox with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>checked</code> of type <code>boolean</code>Checks whether the box is flagged or not flagged.</li>\n</ul>"
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getChecked",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>checked</code>"
					},
					"description": "Gets current value of property <code>checked</code>.\n\nContains the state of the control whether it is flagged with a check mark, or not\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nSpecifies whether the user shall be allowed to select the check box.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.CheckBox."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nDefines the text displayed next to the check box"
				},
				{
					"name": "getTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextDirection",
						"description": "Value of property <code>textDirection</code>"
					},
					"description": "Gets current value of property <code>textDirection</code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"description": "Gets current value of property <code>valueState</code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setChecked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bChecked",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>checked</code>"
						}
					],
					"description": "Sets a new value for property <code>checked</code>.\n\nContains the state of the control whether it is flagged with a check mark, or not\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nSpecifies whether the user shall be allowed to select the check box.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nUsing this property, the control could be disabled, if required.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nDefines the text displayed next to the check box\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "New value for property <code>textDirection</code>"
						}
					],
					"description": "Sets a new value for property <code>textDirection</code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "toggle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox"
					},
					"description": "\nInverts the current value of the control."
				},
				{
					"name": "unbindChecked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.CheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds property <code>checked</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ColorPicker",
			"basename": "ColorPicker",
			"resource": "sap/ui/commons/ColorPicker.js",
			"module": "sap/ui/commons/ColorPicker",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control gives the user the opportunity to choose a color. The color can be defined using HEX-, RGB- or HSV-values or a CSS colorname.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "colorString",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.",
						"methods": [
							"getColorString",
							"setColorString"
						]
					},
					{
						"name": "mode",
						"type": "sap.ui.commons.ColorPickerMode",
						"defaultValue": "HSV",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.1",
						"description": "Determines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)",
						"methods": [
							"getMode",
							"setMode"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Value was changed. This event is fired if the value has changed by an user action.",
						"parameters": {
							"r": {
								"name": "r",
								"type": "int",
								"description": "Parameter containing the RED value (0-255)"
							},
							"g": {
								"name": "g",
								"type": "int",
								"description": "Parameter containing the GREEN value (0-255)"
							},
							"b": {
								"name": "b",
								"type": "int",
								"description": "Parameter containing the BLUE value (0-255)"
							},
							"h": {
								"name": "h",
								"type": "int",
								"description": "Parameter containing the HUE value (0-360)"
							},
							"s": {
								"name": "s",
								"type": "int",
								"description": "Parameter containing the SATURATION value (0-100)"
							},
							"v": {
								"name": "v",
								"type": "int",
								"description": "Parameter containing the VALUE value (0-100)"
							},
							"l": {
								"name": "l",
								"type": "int",
								"description": "Parameter containing the LIGHTNESS value (0-100)"
							},
							"hex": {
								"name": "hex",
								"type": "string",
								"description": "Parameter containing the Hexadecimal string (#FFFFFF)"
							},
							"alpha": {
								"name": "alpha",
								"type": "string",
								"description": "Parameter containing the alpha value (transparency)"
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "liveChange",
						"visibility": "public",
						"description": "Value was changed. This event is fired during the mouse move. The normal change event ist only fired by mouseup.",
						"parameters": {
							"r": {
								"name": "r",
								"type": "int",
								"description": "Parameter containing the RED value (0-255)"
							},
							"g": {
								"name": "g",
								"type": "int",
								"description": "Parameter containing the GREEN value (0-255)"
							},
							"b": {
								"name": "b",
								"type": "int",
								"description": "Parameter containing the BLUE value (0-255)"
							},
							"h": {
								"name": "h",
								"type": "int",
								"description": "Parameter containing the HUE value (0-360)"
							},
							"s": {
								"name": "s",
								"type": "int",
								"description": "Parameter containing the SATURATION value (0-100)"
							},
							"v": {
								"name": "v",
								"type": "int",
								"description": "Parameter containing the VALUE value (0-100)"
							},
							"l": {
								"name": "l",
								"type": "int",
								"description": "Parameter containing the LIGHTNESS value (0-100)"
							},
							"hex": {
								"name": "hex",
								"type": "string",
								"description": "Parameter containing the Hexadecimal string (#FFFFFF)"
							},
							"alpha": {
								"name": "alpha",
								"type": "string",
								"description": "Parameter containing the alpha value (transparency)"
							}
						},
						"methods": [
							"attachLiveChange",
							"detachLiveChange",
							"fireLiveChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ColorPicker.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"r": {
											"name": "r",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the RED value (0-255)"
										},
										"g": {
											"name": "g",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the GREEN value (0-255)"
										},
										"b": {
											"name": "b",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the BLUE value (0-255)"
										},
										"h": {
											"name": "h",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the HUE value (0-360)"
										},
										"s": {
											"name": "s",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the SATURATION value (0-100)"
										},
										"v": {
											"name": "v",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the VALUE value (0-100)"
										},
										"l": {
											"name": "l",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the LIGHTNESS value (0-100)"
										},
										"hex": {
											"name": "hex",
											"type": "string",
											"optional": false,
											"description": "Parameter containing the Hexadecimal string (#FFFFFF)"
										},
										"alpha": {
											"name": "alpha",
											"type": "string",
											"optional": false,
											"description": "Parameter containing the alpha value (transparency)"
										}
									}
								}
							}
						}
					],
					"description": "Value was changed. This event is fired if the value has changed by an user action."
				},
				{
					"name": "liveChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"r": {
											"name": "r",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the RED value (0-255)"
										},
										"g": {
											"name": "g",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the GREEN value (0-255)"
										},
										"b": {
											"name": "b",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the BLUE value (0-255)"
										},
										"h": {
											"name": "h",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the HUE value (0-360)"
										},
										"s": {
											"name": "s",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the SATURATION value (0-100)"
										},
										"v": {
											"name": "v",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the VALUE value (0-100)"
										},
										"l": {
											"name": "l",
											"type": "int",
											"optional": false,
											"description": "Parameter containing the LIGHTNESS value (0-100)"
										},
										"hex": {
											"name": "hex",
											"type": "string",
											"optional": false,
											"description": "Parameter containing the Hexadecimal string (#FFFFFF)"
										},
										"alpha": {
											"name": "alpha",
											"type": "string",
											"optional": false,
											"description": "Parameter containing the alpha value (transparency)"
										}
									}
								}
							}
						}
					],
					"description": "Value was changed. This event is fired during the mouse move. The normal change event ist only fired by mouseup."
				}
			],
			"methods": [
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ColorPicker</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.commons.ColorPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ColorPicker</code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action."
				},
				{
					"name": "attachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ColorPicker</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>liveChange</code> event of this <code>sap.ui.commons.ColorPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ColorPicker</code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event ist only fired by mouseup."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.commons.ColorPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>liveChange</code> event of this <code>sap.ui.commons.ColorPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ColorPicker with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>r</code> of type <code>int</code>Parameter containing the RED value (0-255)</li>\n<li><code>g</code> of type <code>int</code>Parameter containing the GREEN value (0-255)</li>\n<li><code>b</code> of type <code>int</code>Parameter containing the BLUE value (0-255)</li>\n<li><code>h</code> of type <code>int</code>Parameter containing the HUE value (0-360)</li>\n<li><code>s</code> of type <code>int</code>Parameter containing the SATURATION value (0-100)</li>\n<li><code>v</code> of type <code>int</code>Parameter containing the VALUE value (0-100)</li>\n<li><code>l</code> of type <code>int</code>Parameter containing the LIGHTNESS value (0-100)</li>\n<li><code>hex</code> of type <code>string</code>Parameter containing the Hexadecimal string (#FFFFFF)</li>\n<li><code>alpha</code> of type <code>string</code>Parameter containing the alpha value (transparency)</li>\n</ul>"
				},
				{
					"name": "fireLiveChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>liveChange</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>r</code> of type <code>int</code>Parameter containing the RED value (0-255)</li>\n<li><code>g</code> of type <code>int</code>Parameter containing the GREEN value (0-255)</li>\n<li><code>b</code> of type <code>int</code>Parameter containing the BLUE value (0-255)</li>\n<li><code>h</code> of type <code>int</code>Parameter containing the HUE value (0-360)</li>\n<li><code>s</code> of type <code>int</code>Parameter containing the SATURATION value (0-100)</li>\n<li><code>v</code> of type <code>int</code>Parameter containing the VALUE value (0-100)</li>\n<li><code>l</code> of type <code>int</code>Parameter containing the LIGHTNESS value (0-100)</li>\n<li><code>hex</code> of type <code>string</code>Parameter containing the Hexadecimal string (#FFFFFF)</li>\n<li><code>alpha</code> of type <code>string</code>Parameter containing the alpha value (transparency)</li>\n</ul>"
				},
				{
					"name": "getColorString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>colorString</code>"
					},
					"description": "Gets current value of property <code>colorString</code>.\n\nThis is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ColorPicker."
				},
				{
					"name": "getMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ColorPickerMode",
						"description": "Value of property <code>mode</code>"
					},
					"since": "1.38.1",
					"description": "Gets current value of property <code>mode</code>.\n\nDetermines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)\n\nDefault value is <code>HSV</code>."
				},
				{
					"name": "getRGB",
					"visibility": "public",
					"returnValue": {
						"type": "object"
					},
					"description": "Deliver current RGB-values."
				},
				{
					"name": "setColorString",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColorString",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>colorString</code>"
						}
					],
					"description": "Sets a new value for property <code>colorString</code>.\n\nThis is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ColorPicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.1",
					"parameters": [
						{
							"name": "sMode",
							"type": "sap.ui.commons.ColorPickerMode",
							"optional": false,
							"description": "New value for property <code>mode</code>"
						}
					],
					"description": "Sets a new value for property <code>mode</code>.\n\nDetermines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>HSV</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.ColorPickerMode",
			"basename": "ColorPickerMode",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "different styles for a ColorPicker.",
			"properties": [
				{
					"name": "HSL",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Color picker works with HSL values."
				},
				{
					"name": "HSV",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Color picker works with HSV values."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ComboBox",
			"basename": "ComboBox",
			"resource": "sap/ui/commons/ComboBox.js",
			"module": "sap/ui/commons/ComboBox",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.TextField",
			"description": "\nThe control provides a field that allows end users to either enter some text, or to choose an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox</code>, single <code>ListItems</code>.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.ComboBox</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "maxPopupItems",
						"type": "int",
						"defaultValue": 10,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.",
						"methods": [
							"getMaxPopupItems",
							"setMaxPopupItems"
						]
					},
					{
						"name": "displaySecondaryValues",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates whether the <code>additionalText</code> property that is available for <code>sap.ui.core.ListItem</code> shall be displayed in the list.",
						"methods": [
							"getDisplaySecondaryValues",
							"setDisplaySecondaryValues"
						]
					},
					{
						"name": "selectedKey",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Key of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.",
						"methods": [
							"getSelectedKey",
							"setSelectedKey"
						]
					},
					{
						"name": "selectedItemId",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Id of the selected item. If the value has no corresponding item, the <code>selectedItemId</code> is empty.\n\nIf the <code>selectedItemId</code> is set to an not existing item, it will not be changed.",
						"methods": [
							"getSelectedItemId",
							"setSelectedItemId"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.core.ListItem",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "<code>ListItems</code> (see <code>sap.ui.core.ListBox</code>) that shall be displayed in the list.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems",
							"bindItems",
							"unbindItems"
						]
					},
					{
						"name": "myListBox",
						"singularName": "myListBox",
						"type": "sap.ui.commons.ListBox",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden <code>ListBox</code> which is only used when no shared <code>ListBox</code> is set via association listBox",
						"methods": [
							"getMyListBox",
							"destroyMyListBox",
							"setMyListBox"
						]
					}
				],
				"defaultAggregation": "items",
				"associations": [
					{
						"name": "listBox",
						"singularName": "listBox",
						"type": "sap.ui.commons.ListBox",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Using this method, you provide a <code>ListBox</code> control. This allows reuse of item lists in different controls. Either a control id can be used as new target, or a control instance.\n\n<b>Note:</b> The ListBox must not be rendered somewhere in the UI. But if you want to bind the <code>ListBox</code> items to a model it must be in the control tree.\nSo we suggest to add it as dependent somewhere (e.g. to the view or the first used <code>ComboBox</code>). If it is not set as child or dependant to an other control it will be automatically set as dependent to the first ComboBox where it is assigned.",
						"methods": [
							"getListBox",
							"setListBox"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new ComboBox.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"newValue": {
											"name": "newValue",
											"type": "string",
											"optional": false,
											"description": "The new / changed value of the ComboBox."
										},
										"selectedItem": {
											"name": "selectedItem",
											"type": "sap.ui.core.ListItem",
											"optional": false,
											"description": "The new / changed item of the ComboBox."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the text in the field has changed AND the focus leaves the ComboBox or the Enter key is pressed."
				}
			],
			"methods": [
				{
					"name": "_checkChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						},
						{
							"name": "bImmediate",
							"type": "boolean",
							"optional": true,
							"description": "indicate whether the check should happen immediately or delayed (e.g. to avoid focusout / click double event processing)"
						}
					],
					"description": "Compares the previous value with the current value and fires the \"Change\" event\nif the ComboBox is editable and the value has changed or whether the value has been changed\ne.g. via up/down or auto-complete feature"
				},
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.ListItem",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "bindItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>items</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ComboBox with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'newValue' of type <code>string</code> The new / changed value of the textfield.</li>\n<li>'selectedItem' of type <code>sap.ui.core.ListItem</code> selected item </li>\n</ul>"
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getDisplaySecondaryValues",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displaySecondaryValues</code>"
					},
					"description": "Gets current value of property <code>displaySecondaryValues</code>.\n\nIndicates whether the <code>additionalText</code> property that is available for <code>sap.ui.core.ListItem</code> shall be displayed in the list.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getF4ButtonDomRef",
					"visibility": "protected",
					"returnValue": {
						"type": "Element",
						"description": "The F4-element's DOM reference or null"
					},
					"description": "Returns the DomRef which represents the icon for value help.\nCould be overwritten in child-classes"
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ListItem[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\n<code>ListItems</code> (see <code>sap.ui.core.ListBox</code>) that shall be displayed in the list."
				},
				{
					"name": "getListBox",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox"
					},
					"description": "ID of the element which is the current target of the association <code>listBox</code>, or <code>null</code>."
				},
				{
					"name": "getMaxPopupItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxPopupItems</code>"
					},
					"description": "Gets current value of property <code>maxPopupItems</code>.\n\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.\n\nDefault value is <code>10</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ComboBox."
				},
				{
					"name": "getSelectedItemId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>selectedItemId</code>"
					},
					"description": "Gets current value of property <code>selectedItemId</code>.\n\nId of the selected item. If the value has no corresponding item, the <code>selectedItemId</code> is empty.\n\nIf the <code>selectedItemId</code> is set to an not existing item, it will not be changed."
				},
				{
					"name": "getSelectedKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>selectedKey</code>"
					},
					"description": "Gets current value of property <code>selectedKey</code>.\n\nKey of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.ListItem",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.ListItem</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.ListItem",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "onsapenter",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle sapenter pseudo events on the control"
				},
				{
					"name": "onsapescape",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle sapescape pseudo events on the control"
				},
				{
					"name": "onsaphide",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle saphide pseudo events on the control"
				},
				{
					"name": "onsapnextmodifiers",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle sapnextmodifiers pseudo events on the control\nif in toolbar prevent item navigation if popup is opened."
				},
				{
					"name": "onsapshow",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle sapshow pseudo events on the control"
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ListItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ListItem",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.core.ListItem",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "setDisplaySecondaryValues",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplaySecondaryValues",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displaySecondaryValues</code>"
						}
					],
					"description": "Sets a new value for property <code>displaySecondaryValues</code>.\n\nIndicates whether the <code>additionalText</code> property that is available for <code>sap.ui.core.ListItem</code> shall be displayed in the list.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setListBox",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oListBox",
							"type": "sap.ui.commons.ListBox",
							"optional": false,
							"description": "Id of an element which becomes the new target of this listBox association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>listBox</code>."
				},
				{
					"name": "setMaxPopupItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxPopupItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxPopupItems</code>"
						}
					],
					"description": "Sets a new value for property <code>maxPopupItems</code>.\n\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>10</code>."
				},
				{
					"name": "setSelectedItemId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSelectedItemId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>selectedItemId</code>"
						}
					],
					"description": "Sets a new value for property <code>selectedItemId</code>.\n\nId of the selected item. If the value has no corresponding item, the <code>selectedItemId</code> is empty.\n\nIf the <code>selectedItemId</code> is set to an not existing item, it will not be changed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelectedKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSelectedKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>selectedKey</code>"
						}
					],
					"description": "Sets a new value for property <code>selectedKey</code>.\n\nKey of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ComboBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>items</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.DatePicker",
			"basename": "DatePicker",
			"resource": "sap/ui/commons/DatePicker.js",
			"module": "sap/ui/commons/DatePicker",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.TextField",
			"description": "Allows end users to interact with dates.\nEntries can directly be written in, or selected from a calendar pad.\nNote: Dates can always be manually entered in the fix YYYYMMDD format, on top of the flexible \"locale\" format.\nIf the value is provided via data binding, using a Date.type the formatter of the Date.type is used.\nSince version 1.22 the unified.Calendar is used inside the datePicker. So applications using the DatePicker should load the unified library. Otherwise it will be loaded the first time a DatePicker is opened.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.DatePicker</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "locale",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.",
						"methods": [
							"getLocale",
							"setLocale"
						]
					},
					{
						"name": "yyyymmdd",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date",
						"methods": [
							"getYyyymmdd",
							"setYyyymmdd"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DatePicker.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.DatePicker with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.DatePicker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bInvalidValue",
							"type": "boolean",
							"optional": false,
							"description": "true is value is invalid"
						}
					],
					"description": "Fire event change to attached listeners.\n\nProvides the following event parameters:\n<ul>\n<li>'newValue' of type <code>string</code> The new / changed value of the DatePicker.</li>\n<li>'newYyyymmdd' of type <code>string</code> The new / changed Yyyymmdd of the DatePicker. </li>\n<li>'invalidValue' of type <code>boolean</code> The new / changed value of the DatePicker is not a valid date. </li>\n</ul>"
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getLocale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>locale</code>"
					},
					"description": "Gets current value of property <code>locale</code>.\n\nDefines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.DatePicker."
				},
				{
					"name": "getYyyymmdd",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>yyyymmdd</code>"
					},
					"description": "Gets current value of property <code>yyyymmdd</code>.\n\nDefines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date"
				},
				{
					"name": "setLocale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DatePicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLocale",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>locale</code>"
						}
					],
					"description": "Sets a new value for property <code>locale</code>.\n\nDefines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setYyyymmdd",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DatePicker",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sYyyymmdd",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>yyyymmdd</code>"
						}
					],
					"description": "Sets a new value for property <code>yyyymmdd</code>.\n\nDefines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Dialog",
			"basename": "Dialog",
			"resource": "sap/ui/commons/Dialog.js",
			"module": "sap/ui/commons/Dialog",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "An interactive window appearing on request displaying information to the user. The API supports features such as popups with fixed sizes, popups with unlimited width, scrolling bars for large windows, and control nesting (for example, a drop-down list can be included in the window).",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Dialog</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Outer width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Outer height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "scrollLeft",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Scroll position from left to right. \"0\" means leftmost position.",
						"methods": [
							"getScrollLeft",
							"setScrollLeft"
						]
					},
					{
						"name": "scrollTop",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Scroll position from top to bottom. \"0\" means topmost position.",
						"methods": [
							"getScrollTop",
							"setScrollTop"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "Dialog title displayed in the header.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "applyContentPadding",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Padding is theme-dependent. When set to \"false\", the content extends to the dialog borders.",
						"methods": [
							"getApplyContentPadding",
							"setApplyContentPadding"
						]
					},
					{
						"name": "showCloseButton",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Displays a close button in the title bar.",
						"methods": [
							"getShowCloseButton",
							"setShowCloseButton"
						]
					},
					{
						"name": "resizable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.",
						"methods": [
							"getResizable",
							"setResizable"
						]
					},
					{
						"name": "minWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Minimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller.",
						"methods": [
							"getMinWidth",
							"setMinWidth"
						]
					},
					{
						"name": "minHeight",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Minimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.",
						"methods": [
							"getMinHeight",
							"setMinHeight"
						]
					},
					{
						"name": "maxWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Maximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger.",
						"methods": [
							"getMaxWidth",
							"setMaxWidth"
						]
					},
					{
						"name": "maxHeight",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Maximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.",
						"methods": [
							"getMaxHeight",
							"setMaxHeight"
						]
					},
					{
						"name": "contentBorderDesign",
						"type": "sap.ui.commons.enums.BorderDesign",
						"defaultValue": "None",
						"group": "Appearance",
						"visibility": "public",
						"description": "Specifies the border design. Border design is theme dependent.",
						"methods": [
							"getContentBorderDesign",
							"setContentBorderDesign"
						]
					},
					{
						"name": "modal",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the dialog should be modal, or not. In case of <code>true</code> the focus is kept inside the dialog.",
						"methods": [
							"getModal",
							"setModal"
						]
					},
					{
						"name": "accessibleRole",
						"type": "sap.ui.core.AccessibleRole",
						"defaultValue": "Dialog",
						"group": "Accessibility",
						"visibility": "public",
						"description": "The ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".",
						"methods": [
							"getAccessibleRole",
							"setAccessibleRole"
						]
					},
					{
						"name": "keepInWindow",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.9.0",
						"description": "Specifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.",
						"methods": [
							"getKeepInWindow",
							"setKeepInWindow"
						]
					},
					{
						"name": "autoClose",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.10",
						"description": "If this property is set to true the Dialog will close if the Dialog loses its focus",
						"methods": [
							"getAutoClose",
							"setAutoClose"
						]
					}
				],
				"aggregations": [
					{
						"name": "buttons",
						"singularName": "button",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregation of the buttons to display at the bottom of the dialog, for example OK and Cancel. Association defaultButton can be used for one of the defined buttons.",
						"methods": [
							"getButtons",
							"destroyButtons",
							"insertButton",
							"addButton",
							"removeButton",
							"indexOfButton",
							"removeAllButtons"
						]
					},
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregation of the content of the dialog (one or more controls).\n\nWarning: when content is added with width given as a percentage, the Dialog itself should have a width set.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				],
				"defaultAggregation": "content",
				"associations": [
					{
						"name": "defaultButton",
						"singularName": "defaultButton",
						"type": "sap.ui.commons.Button",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Defines one of the buttons that have been provided via button aggregation to be the default button. This default button is initially selected, if no control is set via the initialFocus association explicitly. The default button is activated when Enter is pressed in the context of the dialog and when the currently selected element does not handle the Enter event itself.",
						"methods": [
							"getDefaultButton",
							"setDefaultButton"
						]
					},
					{
						"name": "initialFocus",
						"singularName": "initialFocu",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Defines the control that shall get the focus when the dialog is opened.",
						"methods": [
							"getInitialFocus",
							"setInitialFocus"
						]
					}
				],
				"events": [
					{
						"name": "closed",
						"visibility": "public",
						"description": "Event is fired when the dialog has been closed (after closing-animation etc.). Event parameters provide information about last position and last size.",
						"parameters": {
							"width": {
								"name": "width",
								"type": "int",
								"description": "The width of the dialog when closed"
							},
							"height": {
								"name": "height",
								"type": "int",
								"description": "The height of the dialog when closed"
							},
							"top": {
								"name": "top",
								"type": "int",
								"description": "The top position of the dialog when closed"
							},
							"left": {
								"name": "left",
								"type": "int",
								"description": "The left position of the dialog when closed"
							}
						},
						"methods": [
							"attachClosed",
							"detachClosed",
							"fireClosed"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Dialog.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "closed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"width": {
											"name": "width",
											"type": "int",
											"optional": false,
											"description": "The width of the dialog when closed"
										},
										"height": {
											"name": "height",
											"type": "int",
											"optional": false,
											"description": "The height of the dialog when closed"
										},
										"top": {
											"name": "top",
											"type": "int",
											"optional": false,
											"description": "The top position of the dialog when closed"
										},
										"left": {
											"name": "left",
											"type": "int",
											"optional": false,
											"description": "The left position of the dialog when closed"
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the dialog has been closed (after closing-animation etc.). Event parameters provide information about last position and last size."
				}
			],
			"methods": [
				{
					"name": "addButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the button to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some button to the aggregation <code>buttons</code>."
				},
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "attachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Dialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>closed</code> event of this <code>sap.ui.commons.Dialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Dialog</code> itself.\n\nEvent is fired when the dialog has been closed (after closing-animation etc.). Event parameters provide information about last position and last size."
				},
				{
					"name": "close",
					"visibility": "public",
					"description": "Closes the dialog control instance."
				},
				{
					"name": "destroyButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the buttons in the aggregation <code>buttons</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "detachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>closed</code> event of this <code>sap.ui.commons.Dialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Dialog with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireClosed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>closed</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>width</code> of type <code>int</code>The width of the dialog when closed</li>\n<li><code>height</code> of type <code>int</code>The height of the dialog when closed</li>\n<li><code>top</code> of type <code>int</code>The top position of the dialog when closed</li>\n<li><code>left</code> of type <code>int</code>The left position of the dialog when closed</li>\n</ul>"
				},
				{
					"name": "getAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.AccessibleRole",
						"description": "Value of property <code>accessibleRole</code>"
					},
					"description": "Gets current value of property <code>accessibleRole</code>.\n\nThe ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".\n\nDefault value is <code>Dialog</code>."
				},
				{
					"name": "getApplyContentPadding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>applyContentPadding</code>"
					},
					"description": "Gets current value of property <code>applyContentPadding</code>.\n\nPadding is theme-dependent. When set to \"false\", the content extends to the dialog borders.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getAutoClose",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>autoClose</code>"
					},
					"since": "1.10",
					"description": "Gets current value of property <code>autoClose</code>.\n\nIf this property is set to true the Dialog will close if the Dialog loses its focus\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>buttons</code>.\n\nAggregation of the buttons to display at the bottom of the dialog, for example OK and Cancel. Association defaultButton can be used for one of the defined buttons."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nAggregation of the content of the dialog (one or more controls).\n\nWarning: when content is added with width given as a percentage, the Dialog itself should have a width set."
				},
				{
					"name": "getContentBorderDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.enums.BorderDesign",
						"description": "Value of property <code>contentBorderDesign</code>"
					},
					"description": "Gets current value of property <code>contentBorderDesign</code>.\n\nSpecifies the border design. Border design is theme dependent.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getDefaultButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button"
					},
					"description": "ID of the element which is the current target of the association <code>defaultButton</code>, or <code>null</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "indicates whether the dialog is currently enabled or not."
					},
					"description": "Determines whether the dialog is currently enabled or not.\n\nApplications can't control the enabled state via a property. A dialog is implicitly\nenabled depending on its <code>openState</code>. Descendant controls that honor the\nenabled state of their ancestors will appear disabled after the dialog is closed.",
					"experimental": {
						"text": "Whether a dialog is regarded as \"enabled\" during the state transitions\n(OPENING, CLOSING) is not fully decided. Currently, it is enabled during the OPENING phase\nand disabled during the CLOSING phase. The only potential change would be to treat the\nOPENING phase as disabled as well. Applications should be prepared to receive events from\n\"enabled\" controls after they called open() on the dialog until close() is called on it.\nIf the mentioned potential change should happen, the dialog will become enabled only\nafter the transition to OPEN. Events from \"enabled\" children then can still only arrive\nbetween open() and close(), so applications that obey the previous rule should continue\nto work. Only end users or code  that explicitly triggers pseudo user events will notice\na difference. <br>\nA second aspect that might change is the visual behavior of the content: during the CLOSING\nphase it 'looks' enabled but in fact it is already disabled. This avoids unnecessary redraws\nfor content that becomes hidden soon. Should this show to be confusing for end users, it might\nbe changed."
					}
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nOuter height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content."
				},
				{
					"name": "getInitialFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>initialFocus</code>, or <code>null</code>."
				},
				{
					"name": "getKeepInWindow",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>keepInWindow</code>"
					},
					"since": "1.9.0",
					"description": "Gets current value of property <code>keepInWindow</code>.\n\nSpecifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMaxHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>maxHeight</code>"
					},
					"description": "Gets current value of property <code>maxHeight</code>.\n\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger."
				},
				{
					"name": "getMaxWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>maxWidth</code>"
					},
					"description": "Gets current value of property <code>maxWidth</code>.\n\nMaximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Dialog."
				},
				{
					"name": "getMinHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>minHeight</code>"
					},
					"description": "Gets current value of property <code>minHeight</code>.\n\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller."
				},
				{
					"name": "getMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>minWidth</code>"
					},
					"description": "Gets current value of property <code>minWidth</code>.\n\nMinimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller."
				},
				{
					"name": "getModal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>modal</code>"
					},
					"description": "Gets current value of property <code>modal</code>.\n\nSpecifies whether the dialog should be modal, or not. In case of <code>true</code> the focus is kept inside the dialog.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getOpenState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.OpenState"
					},
					"description": "Indicates whether the Dialog is currently open, closed, or transitioning between these states."
				},
				{
					"name": "getResizable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>resizable</code>"
					},
					"description": "Gets current value of property <code>resizable</code>.\n\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getScrollLeft",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>scrollLeft</code>"
					},
					"description": "Gets current value of property <code>scrollLeft</code>.\n\nScroll position from left to right. \"0\" means leftmost position.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getScrollTop",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>scrollTop</code>"
					},
					"description": "Gets current value of property <code>scrollTop</code>.\n\nScroll position from top to bottom. \"0\" means topmost position.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getShowCloseButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showCloseButton</code>"
					},
					"description": "Gets current value of property <code>showCloseButton</code>.\n\nDisplays a close button in the title bar.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nDialog title displayed in the header.\n\nDefault value is <code></code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nOuter width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content."
				},
				{
					"name": "indexOfButton",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The button whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>buttons</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the button to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex</code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"
						}
					],
					"description": "Inserts a button into the aggregation <code>buttons</code>."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "isOpen",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"description": "Indicates whether the Dialog is open (this includes opening and closing animations).\nFor more detailed information about the current state check Dialog.getOpenState()."
				},
				{
					"name": "open",
					"visibility": "public",
					"description": "Opens the dialog control instance."
				},
				{
					"name": "removeAllButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>buttons</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed button or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vButton",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The buttonto remove or its index or id"
						}
					],
					"description": "Removes a button from the aggregation <code>buttons</code>."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAccessibleRole",
							"type": "sap.ui.core.AccessibleRole",
							"optional": false,
							"description": "New value for property <code>accessibleRole</code>"
						}
					],
					"description": "Sets a new value for property <code>accessibleRole</code>.\n\nThe ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Dialog</code>."
				},
				{
					"name": "setApplyContentPadding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bApplyContentPadding",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>applyContentPadding</code>"
						}
					],
					"description": "Sets a new value for property <code>applyContentPadding</code>.\n\nPadding is theme-dependent. When set to \"false\", the content extends to the dialog borders.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setAutoClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.10",
					"parameters": [
						{
							"name": "bAutoClose",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>autoClose</code>"
						}
					],
					"description": "Sets a new value for property <code>autoClose</code>.\n\nIf this property is set to true the Dialog will close if the Dialog loses its focus\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setContentBorderDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContentBorderDesign",
							"type": "sap.ui.commons.enums.BorderDesign",
							"optional": false,
							"description": "New value for property <code>contentBorderDesign</code>"
						}
					],
					"description": "Sets a new value for property <code>contentBorderDesign</code>.\n\nSpecifies the border design. Border design is theme dependent.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setDefaultButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDefaultButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "Id of an element which becomes the new target of this defaultButton association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>defaultButton</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nOuter height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setInitialFocus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInitialFocus",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>initialFocus</code>."
				},
				{
					"name": "setKeepInWindow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.9.0",
					"parameters": [
						{
							"name": "bKeepInWindow",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>keepInWindow</code>"
						}
					],
					"description": "Sets a new value for property <code>keepInWindow</code>.\n\nSpecifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setMaxHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMaxHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>maxHeight</code>"
						}
					],
					"description": "Sets a new value for property <code>maxHeight</code>.\n\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMaxWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMaxWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>maxWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>maxWidth</code>.\n\nMaximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMinHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>minHeight</code>"
						}
					],
					"description": "Sets a new value for property <code>minHeight</code>.\n\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>minWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>minWidth</code>.\n\nMinimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setModal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bModal",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>modal</code>"
						}
					],
					"description": "Sets a new value for property <code>modal</code>.\n\nSpecifies whether the dialog should be modal, or not. In case of <code>true</code> the focus is kept inside the dialog.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setResizable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bResizable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>resizable</code>"
						}
					],
					"description": "Sets a new value for property <code>resizable</code>.\n\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setScrollLeft",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iScrollLeft",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>scrollLeft</code>"
						}
					],
					"description": "Sets a new value for property <code>scrollLeft</code>.\n\nScroll position from left to right. \"0\" means leftmost position.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setScrollTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iScrollTop",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>scrollTop</code>"
						}
					],
					"description": "Sets a new value for property <code>scrollTop</code>.\n\nScroll position from top to bottom. \"0\" means topmost position.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setShowCloseButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowCloseButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showCloseButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showCloseButton</code>.\n\nDisplays a close button in the title bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nDialog title displayed in the header.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Dialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nOuter width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.DropdownBox",
			"basename": "DropdownBox",
			"resource": "sap/ui/commons/DropdownBox.js",
			"module": "sap/ui/commons/DropdownBox",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.ComboBox",
			"description": "The control provides a field that allows end users to an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox</code>, single <code>ListItems</code>.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.ComboBox</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "searchHelpEnabled",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Whether the DropdownBox's search help should be enabled.",
						"methods": [
							"getSearchHelpEnabled",
							"setSearchHelpEnabled"
						]
					},
					{
						"name": "searchHelpText",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "(optional) The text to use for the search help entry.",
						"methods": [
							"getSearchHelpText",
							"setSearchHelpText"
						]
					},
					{
						"name": "searchHelpAdditionalText",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "(optional) The additional Text to use for the search help entry.",
						"methods": [
							"getSearchHelpAdditionalText",
							"setSearchHelpAdditionalText"
						]
					},
					{
						"name": "searchHelpIcon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "(optional) The URI of the icon to use for the search help entry.",
						"methods": [
							"getSearchHelpIcon",
							"setSearchHelpIcon"
						]
					},
					{
						"name": "maxHistoryItems",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Maximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.",
						"methods": [
							"getMaxHistoryItems",
							"setMaxHistoryItems"
						]
					}
				],
				"events": [
					{
						"name": "searchHelp",
						"visibility": "public",
						"description": "Event fired whenever the configured searchHelpItem is clicked or the searchHelpItem is configured and F4 key is pressed.",
						"parameters": {
							"value": {
								"name": "value",
								"type": "string",
								"description": "The current value of the DropdownBox."
							}
						},
						"methods": [
							"attachSearchHelp",
							"detachSearchHelp",
							"fireSearchHelp"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new DropdownBox.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "searchHelp",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "string",
											"optional": false,
											"description": "The current value of the DropdownBox."
										}
									}
								}
							}
						}
					],
					"description": "Event fired whenever the configured searchHelpItem is clicked or the searchHelpItem is configured and F4 key is pressed."
				}
			],
			"methods": [
				{
					"name": "attachSearchHelp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.DropdownBox</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>searchHelp</code> event of this <code>sap.ui.commons.DropdownBox</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.DropdownBox</code> itself.\n\nEvent fired whenever the configured searchHelpItem is clicked or the searchHelpItem is configured and F4 key is pressed."
				},
				{
					"name": "clearHistory",
					"visibility": "public",
					"description": "Using this method the history of the DropdownBox can be cleared.\nThis might be necessary if the items of the DropdownBox have changed. Otherwise invalid items may appear in the history."
				},
				{
					"name": "detachSearchHelp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>searchHelp</code> event of this <code>sap.ui.commons.DropdownBox</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.DropdownBox with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}."
				},
				{
					"name": "fireSearchHelp",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>searchHelp</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value</code> of type <code>string</code>The current value of the DropdownBox.</li>\n</ul>"
				},
				{
					"name": "getMaxHistoryItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxHistoryItems</code>"
					},
					"description": "Gets current value of property <code>maxHistoryItems</code>.\n\nMaximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.DropdownBox."
				},
				{
					"name": "getSearchHelpAdditionalText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>searchHelpAdditionalText</code>"
					},
					"description": "Gets current value of property <code>searchHelpAdditionalText</code>.\n\n(optional) The additional Text to use for the search help entry."
				},
				{
					"name": "getSearchHelpEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>searchHelpEnabled</code>"
					},
					"description": "Gets current value of property <code>searchHelpEnabled</code>.\n\nWhether the DropdownBox's search help should be enabled.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSearchHelpIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>searchHelpIcon</code>"
					},
					"description": "Gets current value of property <code>searchHelpIcon</code>.\n\n(optional) The URI of the icon to use for the search help entry."
				},
				{
					"name": "getSearchHelpText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>searchHelpText</code>"
					},
					"description": "Gets current value of property <code>searchHelpText</code>.\n\n(optional) The text to use for the search help entry."
				},
				{
					"name": "getTooltip_AsString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "string tooltip or undefined"
					},
					"description": "Extends the method inherited from sap.ui.core.Element by providing information on Search Help access (if needed)"
				},
				{
					"name": "onAfterRendering",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Ensure that handed in ListBoxes are taken from the visible UI immediately."
				},
				{
					"name": "onclick",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle the click event happening in the DropdownBox"
				},
				{
					"name": "onfocusin",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occuring event"
						}
					],
					"description": "Handle focusin event\nEnsures the text gets selected when focus gets into the field"
				},
				{
					"name": "onkeydown",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occuring event"
						}
					],
					"description": "Handle keydown event"
				},
				{
					"name": "onkeypress",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occuring event"
						}
					],
					"description": "Handle keypress event"
				},
				{
					"name": "onkeyup",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occuring event"
						}
					],
					"description": "Handle keyup event\nThis must only be considered if it is from Backspace-key in IE or after paste.\nIn case there is a keyup with a tab this results from being entered via tabbing and can be ignored, too."
				},
				{
					"name": "onpaste",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occuring event"
						}
					],
					"description": "Handle paste event"
				},
				{
					"name": "onsapdelete",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occuring event"
						}
					],
					"description": "Handle pseudo event onsapdelete.\nIf triggered with open dropdown and current item provided by history feature,\nremoves the selected item from this instance's history."
				},
				{
					"name": "onsaphome",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occuring event"
						}
					],
					"description": "Handle pseudo event onsaphome"
				},
				{
					"name": "onsapleft",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Move the cursor one step to the left (and adapt selection)"
				},
				{
					"name": "onsapright",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Move the cursor one step to the right (and adapt selection)"
				},
				{
					"name": "onsapshow",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle sapshow pseudo events on the control"
				},
				{
					"name": "onselect",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Handle the select event happening in the DropdownBox"
				},
				{
					"name": "setMaxHistoryItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxHistoryItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxHistoryItems</code>"
						}
					],
					"description": "Sets a new value for property <code>maxHistoryItems</code>.\n\nMaximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setSearchHelpAdditionalText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSearchHelpAdditionalText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>searchHelpAdditionalText</code>"
						}
					],
					"description": "Overwrite of Setter for property <code>searchHelpAdditionalText</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSearchHelpEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>searchHelpEnabled</code>"
						},
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>searchHelpText</code>"
						},
						{
							"name": "sAdditionalText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>searchHelpAdditionalText</code>"
						},
						{
							"name": "sIcon",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>searchHelpIcon</code>"
						}
					],
					"description": "Overwrite of Setter for property <code>searchHelpEnabled</code>.\nThis method accepts additional parameter to be compatiple with the\nprevious functionality\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setSearchHelpIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSearchHelpIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>searchHelpIcon</code>"
						}
					],
					"description": "Overwrite of Setter for property <code>searchHelpIcon</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSearchHelpText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.DropdownBox",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSearchHelpText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>searchHelpText</code>"
						}
					],
					"description": "Overwrite of Setter for property <code>searchHelpText</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.enums.AreaDesign",
			"basename": "AreaDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Value set for the background design of areas",
			"properties": [
				{
					"name": "Fill",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows the label in a filled look"
				},
				{
					"name": "Plain",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows the area in a plain look"
				},
				{
					"name": "Transparent",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows the background as transparent"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.enums.BorderDesign",
			"basename": "BorderDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Value set for the border design of areas",
			"properties": [
				{
					"name": "Box",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Draws the border as a box around the area"
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Suppresses the border"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.enums.Orientation",
			"basename": "Orientation",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Orientation of a UI element",
			"properties": [
				{
					"name": "horizontal",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Horizontal orientation"
				},
				{
					"name": "vertical",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Vertical orientation"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.FileUploader",
			"basename": "FileUploader",
			"resource": "sap/ui/commons/FileUploader.js",
			"module": "sap/ui/commons/FileUploader",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.unified.FileUploader",
			"description": "The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.",
			"deprecated": {
				"since": "1.21.0",
				"text": "Please use the control sap.ui.unified.FileUploader of the library sap.ui.unified instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FileUploader."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.FileUploader with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploader.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.FileUploader."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.FileUploaderParameter",
			"basename": "FileUploaderParameter",
			"resource": "sap/ui/commons/FileUploaderParameter.js",
			"module": "sap/ui/commons/FileUploaderParameter",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.unified.FileUploaderParameter",
			"description": "Represents a parameter for the FileUploader which is rendered as a hidden inputfield.",
			"deprecated": {
				"since": "1.21.0",
				"text": "Please use the element sap.ui.unified.FileUploaderParameter of the library sap.ui.unified instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FileUploaderParameter."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.FileUploaderParameter with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploaderParameter.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.FileUploaderParameter."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.Form",
			"basename": "Form",
			"resource": "sap/ui/commons/form/Form.js",
			"module": "sap/ui/commons/form/Form",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.form.Form",
			"description": "Form control.\nHolder for form control to be rendered in a specific form layout.\nA Form supports VariantLayoutData for it's conent to allow a simple switching of Layouts.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/Form."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.Form with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.Form.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.Form."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>visible</code>"
					},
					"since": "1.12.0",
					"description": "Getter for property <code>visible</code>.\nInvisible Forms are not rendered.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.form.Form",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.12.0",
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>visible</code>"
						}
					],
					"description": "Setter for property <code>visible</code>.\n\nDefault value is <code>true</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.FormContainer",
			"basename": "FormContainer",
			"resource": "sap/ui/commons/form/FormContainer.js",
			"module": "sap/ui/commons/form/FormContainer",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.form.FormContainer",
			"description": "Used to group form elements.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/FormContainer."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.FormContainer with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.FormContainer."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>visible</code>"
					},
					"since": "1.12.0",
					"description": "Getter for property <code>visible</code>.\nInvisible FormContainers are not rendered.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.form.FormContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.12.0",
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>visible</code>"
						}
					],
					"description": "Setter for property <code>visible</code>.\n\nDefault value is <code>true</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.FormElement",
			"basename": "FormElement",
			"resource": "sap/ui/commons/form/FormElement.js",
			"module": "sap/ui/commons/form/FormElement",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.form.FormElement",
			"description": "A form element is a combination of one label and different controls associated to this label.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/FormElement."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.FormElement with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.FormElement."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>visible</code>"
					},
					"since": "1.12.0",
					"description": "Getter for property <code>visible</code>.\nInvisible FormElements are not rendered.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.form.FormElement",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.12.0",
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>visible</code>"
						}
					],
					"description": "Setter for property <code>visible</code>.\n\nDefault value is <code>true</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.FormLayout",
			"basename": "FormLayout",
			"resource": "sap/ui/commons/form/FormLayout.js",
			"module": "sap/ui/commons/form/FormLayout",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.form.FormLayout",
			"description": "Base layout for Forms.\nOther Layouts must inherit from this one.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/FormLayout."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.FormLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormLayout.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.FormLayout."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.GridContainerData",
			"basename": "GridContainerData",
			"resource": "sap/ui/commons/form/GridContainerData.js",
			"module": "sap/ui/commons/form/GridContainerData",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.form.GridContainerData",
			"description": "Grid layout specific properties for FormContainers.\nThe width and height properties of the elements are ignored since the witdh and heights are defined by the grid cells.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/GridContainerData."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.GridContainerData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridContainerData.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.GridContainerData."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.GridElementData",
			"basename": "GridElementData",
			"resource": "sap/ui/commons/form/GridElementData.js",
			"module": "sap/ui/commons/form/GridElementData",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.form.GridElementData",
			"description": "The grid specific layout data for FormElement fields.\nThe width property of the elements is ignored since the width is defined by grid cells.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/GridElementData."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.GridElementData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridElementData.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.GridElementData."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.GridLayout",
			"basename": "GridLayout",
			"resource": "sap/ui/commons/form/GridLayout.js",
			"module": "sap/ui/commons/form/GridLayout",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.form.GridLayout",
			"description": "This Layout implements a guideline 2.0 grid. This can be a 16 column grid or an 8 column grid.\n\nTo adjust the content inside the GridLayout GridContainerData and GridElementData could be used.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/GridLayout."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.GridLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridLayout.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.GridLayout."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.ResponsiveLayout",
			"basename": "ResponsiveLayout",
			"resource": "sap/ui/commons/form/ResponsiveLayout.js",
			"module": "sap/ui/commons/form/ResponsiveLayout",
			"static": true,
			"visibility": "public",
			"since": "1.10.0",
			"extends": "sap.ui.layout.form.ResponsiveLayout",
			"description": "Renders a form with responsive layout. Internally the ResponsiveFlowLayout is used.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/ResponsiveLayout."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.ResponsiveLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.ResponsiveLayout.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.ResponsiveLayout."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.form.SimpleForm",
			"basename": "SimpleForm",
			"resource": "sap/ui/commons/form/SimpleForm.js",
			"module": "sap/ui/commons/form/SimpleForm",
			"static": true,
			"visibility": "public",
			"since": "1.12",
			"extends": "sap.ui.layout.form.SimpleForm",
			"description": "Use the SimpleForm to create a form based on title, label and fields that are stacked in the content aggregation. Add Title to start a new FormContainer(Group). Add Label to start a new row in the container. Add Input/Display controls as needed. Use LayoutData to influence the layout for special cases in the Input/Display controls.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new form/SimpleForm."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.form.SimpleForm with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.form.SimpleForm.extend}."
				},
				{
					"name": "getLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.form.SimpleFormLayout",
						"description": "the value of property <code>layout</code>"
					},
					"since": "1.14",
					"description": "Getter for property <code>layout</code>.\nThe FormLayout that is used to render the SimpleForm\n\nDefault value is <code>ResponsiveLayout</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.form.SimpleForm."
				},
				{
					"name": "setLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.form.SimpleForm",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.14",
					"parameters": [
						{
							"name": "oLayout",
							"type": "sap.ui.commons.form.SimpleFormLayout",
							"optional": false,
							"description": "new value for property <code>layout</code>"
						}
					],
					"description": "Setter for property <code>layout</code>.\n\nDefault value is <code>ResponsiveLayout</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.FormattedTextView",
			"basename": "FormattedTextView",
			"resource": "sap/ui/commons/FormattedTextView.js",
			"module": "sap/ui/commons/FormattedTextView",
			"static": true,
			"visibility": "public",
			"since": "1.9.0",
			"extends": "sap.ui.core.Control",
			"description": "The FormattedTextView control allows the usage of a limited set of HTML tags for display.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.core.HTML</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "accessibleRole",
						"type": "sap.ui.core.AccessibleRole",
						"defaultValue": "Document",
						"group": "Accessibility",
						"visibility": "public",
						"description": "The ARIA role for the control.",
						"methods": [
							"getAccessibleRole",
							"setAccessibleRole"
						]
					},
					{
						"name": "htmlText",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines text with placeholders.",
						"methods": [
							"getHtmlText",
							"setHtmlText"
						]
					}
				],
				"aggregations": [
					{
						"name": "controls",
						"singularName": "control",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Array of controls that should be replaced within htmlText.",
						"methods": [
							"getControls",
							"destroyControls",
							"insertControl",
							"addControl",
							"removeControl",
							"indexOfControl",
							"removeAllControls"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new FormattedTextView.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.FormattedTextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some control to the aggregation <code>controls</code>."
				},
				{
					"name": "destroyControls",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.FormattedTextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the controls in the aggregation <code>controls</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.FormattedTextView with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.AccessibleRole",
						"description": "Value of property <code>accessibleRole</code>"
					},
					"description": "Gets current value of property <code>accessibleRole</code>.\n\nThe ARIA role for the control.\n\nDefault value is <code>Document</code>."
				},
				{
					"name": "getControls",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>controls</code>.\n\nArray of controls that should be replaced within htmlText."
				},
				{
					"name": "getHtmlText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>htmlText</code>"
					},
					"description": "Gets current value of property <code>htmlText</code>.\n\nDetermines text with placeholders.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.FormattedTextView."
				},
				{
					"name": "hasControls",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"description": "Indicates whether the FormattedTextView contains other controls."
				},
				{
					"name": "indexOfControl",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The control whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>controls</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.FormattedTextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the control should be inserted at; for\n             a negative value of <code>iIndex</code>, the control is inserted at position 0; for a value\n             greater than the current size of the aggregation, the control is inserted at\n             the last position"
						}
					],
					"description": "Inserts a control into the aggregation <code>controls</code>."
				},
				{
					"name": "removeAllControls",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>controls</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed control or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vControl",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The controlto remove or its index or id"
						}
					],
					"description": "Removes a control from the aggregation <code>controls</code>."
				},
				{
					"name": "setAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.FormattedTextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAccessibleRole",
							"type": "sap.ui.core.AccessibleRole",
							"optional": false,
							"description": "New value for property <code>accessibleRole</code>"
						}
					],
					"description": "Sets a new value for property <code>accessibleRole</code>.\n\nThe ARIA role for the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Document</code>."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"parameters": [
						{
							"name": "sHtmlText",
							"type": "string",
							"optional": false,
							"description": "Contains the corresponding HTML text"
						},
						{
							"name": "aControls",
							"type": "sap.ui.commons.FormattedTextViewControl",
							"optional": false,
							"description": "Array of controls that should be used within given HTML text"
						}
					],
					"description": "Sets text with placeholders and given array of controls."
				},
				{
					"name": "setHtmlText",
					"visibility": "public",
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "HTML text as a string"
						}
					],
					"description": "Sets the HTML text to be displayed."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.commons.FormattedTextViewControl",
			"basename": "FormattedTextViewControl",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Marker interface for common controls which are suitable for use within a FormattedTextView."
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.HorizontalDivider",
			"basename": "HorizontalDivider",
			"resource": "sap/ui/commons/HorizontalDivider.js",
			"module": "sap/ui/commons/HorizontalDivider",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Divides the screen in visual areas.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the width of the divider.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "type",
						"type": "sap.ui.commons.HorizontalDividerType",
						"defaultValue": "Area",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the type of the divider.",
						"methods": [
							"getType",
							"setType"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.commons.HorizontalDividerHeight",
						"defaultValue": "Medium",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the height of the divider.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HorizontalDivider.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.HorizontalDivider with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.HorizontalDividerHeight",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nDefines the height of the divider.\n\nDefault value is <code>Medium</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.HorizontalDivider."
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.HorizontalDividerType",
						"description": "Value of property <code>type</code>"
					},
					"description": "Gets current value of property <code>type</code>.\n\nDefines the type of the divider.\n\nDefault value is <code>Area</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDefines the width of the divider.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.HorizontalDivider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.commons.HorizontalDividerHeight",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nDefines the height of the divider.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Medium</code>."
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.HorizontalDivider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "sap.ui.commons.HorizontalDividerType",
							"optional": false,
							"description": "New value for property <code>type</code>"
						}
					],
					"description": "Sets a new value for property <code>type</code>.\n\nDefines the type of the divider.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Area</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.HorizontalDivider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDefines the width of the divider.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.HorizontalDividerHeight",
			"basename": "HorizontalDividerHeight",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible HorizontalDivider height settings.",
			"properties": [
				{
					"name": "Large",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Divider gets a large top and bottom margin."
				},
				{
					"name": "Medium",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Divider gets a medium top and bottom margin."
				},
				{
					"name": "Ruleheight",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Divider gets no top and bottom margin."
				},
				{
					"name": "Small",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Divider gets a small top and bottom margin."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.HorizontalDividerType",
			"basename": "HorizontalDividerType",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible HorizontalDivider types.",
			"properties": [
				{
					"name": "Area",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type Area"
				},
				{
					"name": "Page",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Type Page"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Image",
			"basename": "Image",
			"resource": "sap/ui/commons/Image.js",
			"module": "sap/ui/commons/Image",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "A wrapper around the IMG tag. The image can be loaded from a remote or local server.\nThere are various size setting options available, and the images can be combined with actions.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Image</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "src",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Relative or absolute path to URL where the image file is stored.",
						"methods": [
							"getSrc",
							"setSrc"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "When the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "When the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "decorative",
						"type": "boolean",
						"defaultValue": true,
						"group": "Accessibility",
						"visibility": "public",
						"description": "A decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.",
						"methods": [
							"getDecorative",
							"setDecorative"
						]
					},
					{
						"name": "alt",
						"type": "string",
						"defaultValue": null,
						"group": "Accessibility",
						"visibility": "public",
						"description": "The alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.",
						"methods": [
							"getAlt",
							"setAlt"
						]
					},
					{
						"name": "useMap",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the image map that defines the clickable areas",
						"methods": [
							"getUseMap",
							"setUseMap"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Event is fired when the user clicks on the control.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Image.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the user clicks on the control."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Image</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.commons.Image</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Image</code> itself.\n\nEvent is fired when the user clicks on the control."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.commons.Image</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Image with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getAlt",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>alt</code>"
					},
					"description": "Gets current value of property <code>alt</code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored."
				},
				{
					"name": "getDecorative",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>decorative</code>"
					},
					"description": "Gets current value of property <code>decorative</code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Image."
				},
				{
					"name": "getSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>src</code>"
					},
					"description": "Gets current value of property <code>src</code>.\n\nRelative or absolute path to URL where the image file is stored."
				},
				{
					"name": "getUseMap",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>useMap</code>"
					},
					"description": "Gets current value of property <code>useMap</code>.\n\nThe name of the image map that defines the clickable areas"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio."
				},
				{
					"name": "setAlt",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAlt",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>alt</code>"
						}
					],
					"description": "Sets a new value for property <code>alt</code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDecorative",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDecorative",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>decorative</code>"
						}
					],
					"description": "Sets a new value for property <code>decorative</code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSrc",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>src</code>"
						}
					],
					"description": "Sets a new value for property <code>src</code>.\n\nRelative or absolute path to URL where the image file is stored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUseMap",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUseMap",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>useMap</code>"
						}
					],
					"description": "Sets a new value for property <code>useMap</code>.\n\nThe name of the image map that defines the clickable areas\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Image",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ImageMap",
			"basename": "ImageMap",
			"resource": "sap/ui/commons/ImageMap.js",
			"module": "sap/ui/commons/ImageMap",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Combination of image areas where at runtime these areas are starting points for hyperlinks or actions",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Name for the image that serves as reference",
						"methods": [
							"getName",
							"setName"
						]
					}
				],
				"aggregations": [
					{
						"name": "areas",
						"singularName": "area",
						"type": "sap.ui.commons.Area",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Area representing the reference to the target location",
						"methods": [
							"getAreas",
							"destroyAreas",
							"insertArea",
							"addArea",
							"removeArea",
							"indexOfArea",
							"removeAllAreas"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Event for the areas that can be clicked in an ImageMap",
						"parameters": {
							"areaId": {
								"name": "areaId",
								"type": "string",
								"description": "Id of clicked Area."
							}
						},
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ImageMap.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"areaId": {
											"name": "areaId",
											"type": "string",
											"optional": false,
											"description": "Id of clicked Area."
										}
									}
								}
							}
						}
					],
					"description": "Event for the areas that can be clicked in an ImageMap"
				}
			],
			"methods": [
				{
					"name": "addArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oArea",
							"type": "sap.ui.commons.Area",
							"optional": false,
							"description": "the area to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some area to the aggregation <code>areas</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ImageMap</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.commons.ImageMap</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ImageMap</code> itself.\n\nEvent for the areas that can be clicked in an ImageMap"
				},
				{
					"name": "createArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "content",
							"type": "any",
							"optional": false,
							"description": "Area content to add"
						}
					],
					"description": "Adds areas to the Image Map.\n\nEach argument must be either a JSon object or a list of objects or the area element or elements."
				},
				{
					"name": "destroyAreas",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the areas in the aggregation <code>areas</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.commons.ImageMap</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ImageMap with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>areaId</code> of type <code>string</code>Id of clicked Area.</li>\n</ul>"
				},
				{
					"name": "getAreas",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Area[]"
					},
					"description": "Gets content of aggregation <code>areas</code>.\n\nArea representing the reference to the target location"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ImageMap."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nName for the image that serves as reference"
				},
				{
					"name": "indexOfArea",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oArea",
							"type": "sap.ui.commons.Area",
							"optional": false,
							"description": "The area whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.Area</code> in the aggregation <code>areas</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oArea",
							"type": "sap.ui.commons.Area",
							"optional": false,
							"description": "the area to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the area should be inserted at; for\n             a negative value of <code>iIndex</code>, the area is inserted at position 0; for a value\n             greater than the current size of the aggregation, the area is inserted at\n             the last position"
						}
					],
					"description": "Inserts a area into the aggregation <code>areas</code>."
				},
				{
					"name": "removeAllAreas",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Area[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>areas</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Area",
						"description": "The removed area or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vArea",
							"type": "int|string|sap.ui.commons.Area",
							"optional": false,
							"description": "The areato remove or its index or id"
						}
					],
					"description": "Removes a area from the aggregation <code>areas</code>."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ImageMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nName for the image that serves as reference\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.InPlaceEdit",
			"basename": "InPlaceEdit",
			"resource": "sap/ui/commons/InPlaceEdit.js",
			"module": "sap/ui/commons/InPlaceEdit",
			"static": true,
			"visibility": "public",
			"since": "1.8.0",
			"extends": "sap.ui.core.Control",
			"description": "The InPlaceEdit is a functionality to have text in display mode that can be changed in place.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Data",
						"visibility": "public",
						"description": "Visualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "undoEnabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If undo is enabled after changing the text an undo button appears.",
						"methods": [
							"getUndoEnabled",
							"setUndoEnabled"
						]
					},
					{
						"name": "design",
						"type": "sap.ui.commons.TextViewDesign",
						"defaultValue": "Standard",
						"group": "Data",
						"visibility": "public",
						"since": "1.9.0",
						"description": "Defines the visual appearance of the control.\nCurrently this is not supported for Labels.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Content control of the InPlaceEdit.\nThe following controls are allowed:\nTextField, ComboBox, DropdownBox and Link",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				],
				"defaultAggregation": "content",
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Event is fired when the text in the field has changed AND the focus leaves the InPlaceEdit or the Enter key is pressed.",
						"parameters": {
							"newValue": {
								"name": "newValue",
								"type": "string",
								"description": "The new / changed value of the InPlaceEdit."
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "liveChange",
						"visibility": "public",
						"since": "1.16.5",
						"description": "This event if fired during typing into the InPlaceEdit and returns the currently entered value. This is not the content of the value property. The value property is only updated by ENTER and by leaving the control.",
						"parameters": {
							"liveValue": {
								"name": "liveValue",
								"type": "string",
								"description": "Current value of the Textfield."
							}
						},
						"methods": [
							"attachLiveChange",
							"detachLiveChange",
							"fireLiveChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new InPlaceEdit.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"newValue": {
											"name": "newValue",
											"type": "string",
											"optional": false,
											"description": "The new / changed value of the InPlaceEdit."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the text in the field has changed AND the focus leaves the InPlaceEdit or the Enter key is pressed."
				},
				{
					"name": "liveChange",
					"visibility": "public",
					"since": "1.16.5",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"liveValue": {
											"name": "liveValue",
											"type": "string",
											"optional": false,
											"description": "Current value of the Textfield."
										}
									}
								}
							}
						}
					],
					"description": "This event if fired during typing into the InPlaceEdit and returns the currently entered value. This is not the content of the value property. The value property is only updated by ENTER and by leaving the control."
				}
			],
			"methods": [
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.InPlaceEdit</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.commons.InPlaceEdit</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.InPlaceEdit</code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the InPlaceEdit or the Enter key is pressed."
				},
				{
					"name": "attachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.16.5",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.InPlaceEdit</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>liveChange</code> event of this <code>sap.ui.commons.InPlaceEdit</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.InPlaceEdit</code> itself.\n\nThis event if fired during typing into the InPlaceEdit and returns the currently entered value. This is not the content of the value property. The value property is only updated by ENTER and by leaving the control."
				},
				{
					"name": "clearOldText",
					"visibility": "public",
					"description": "Clear the old text after a change to disable the undo functionality. If undoEnabled is false this has no effect."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the content in the aggregation <code>content</code>."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.commons.InPlaceEdit</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.16.5",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>liveChange</code> event of this <code>sap.ui.commons.InPlaceEdit</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.InPlaceEdit with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue</code> of type <code>string</code>The new / changed value of the InPlaceEdit.</li>\n</ul>"
				},
				{
					"name": "fireLiveChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.16.5",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>liveChange</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>liveValue</code> of type <code>string</code>Current value of the Textfield.</li>\n</ul>"
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nContent control of the InPlaceEdit.\nThe following controls are allowed:\nTextField, ComboBox, DropdownBox and Link"
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextViewDesign",
						"description": "Value of property <code>design</code>"
					},
					"since": "1.9.0",
					"description": "Gets current value of property <code>design</code>.\n\nDefines the visual appearance of the control.\nCurrently this is not supported for Labels.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.InPlaceEdit."
				},
				{
					"name": "getTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "string|sap.ui.core.TooltipBase",
						"description": "The tooltip for this Element."
					},
					"description": "Returns the tooltip for this InPlaceEdit if any or an undefined value.\nThe tooltip can either be a simple string or a subclass of\n{@link sap.ui.core.TooltipBase}.\n\nCallers that are only interested in tooltips of type string (e.g. to render\nthem as a <code>title</code> attribute), should call the convenience method\n{@link #getTooltip_AsString} instead. If they want to get a tooltip text no\nmatter where it comes from (be it a string tooltip or the text from a TooltipBase\ninstance) then they could call {@link #getTooltip_Text} instead.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case."
				},
				{
					"name": "getUndoEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>undoEnabled</code>"
					},
					"description": "Gets current value of property <code>undoEnabled</code>.\n\nIf undo is enabled after changing the text an undo button appears.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"description": "Gets current value of property <code>valueState</code>.\n\nVisualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content to set"
						}
					],
					"description": "Sets the aggregated <code>content</code>."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.9.0",
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.commons.TextViewDesign",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nDefines the visual appearance of the control.\nCurrently this is not supported for Labels.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "setTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTooltip",
							"type": "string|sap.ui.core.TooltipBase",
							"optional": false,
							"description": "Tooltip as string or RichTooltip."
						}
					],
					"description": "Sets a new tooltip for this InPlaceEdit. The tooltip can either be a simple string\n(which in most cases will be rendered as the <code>title</code> attribute of this\nElement) or an instance of {@link sap.ui.core.TooltipBase}.\n\nIf a new tooltip is set, any previously set tooltip is deactivated.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case."
				},
				{
					"name": "setUndoEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUndoEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>undoEnabled</code>"
						}
					],
					"description": "Sets a new value for property <code>undoEnabled</code>.\n\nIf undo is enabled after changing the text an undo button appears.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.InPlaceEdit",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nVisualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Label",
			"basename": "Label",
			"resource": "sap/ui/commons/Label.js",
			"module": "sap/ui/commons/Label",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "\nThe control is used for labeling other controls. The API provides formatting options, for example, for bold display or alignment. A label can have an icon.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Label</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "design",
						"type": "sap.ui.commons.LabelDesign",
						"defaultValue": "Standard",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines whether the labels are in bold format.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					},
					{
						"name": "textDirection",
						"type": "sap.ui.core.TextDirection",
						"defaultValue": "Inherit",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the text direction - right-to-left (RTL) and left-to-right (LTR).",
						"methods": [
							"getTextDirection",
							"setTextDirection"
						]
					},
					{
						"name": "wrapping",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Specifies whether a line wrapping width shall be displayed when the text value is longer than the width is.",
						"methods": [
							"getWrapping",
							"setWrapping"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "",
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the control width as common CSS-size (for example, px or % as unit).",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the text to be displayed.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the icon to be displayed in the control.\nThis can be an URI to an image or an icon font URI.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "textAlign",
						"type": "sap.ui.core.TextAlign",
						"defaultValue": "Begin",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the alignment of the text. Available options are <code>Begin</code>, <code>Center</code>, <code>End</code>, <code>Left</code>, and <code>Right</code>.",
						"methods": [
							"getTextAlign",
							"setTextAlign"
						]
					},
					{
						"name": "required",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.11.0",
						"description": "Allows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.",
						"methods": [
							"getRequired",
							"setRequired"
						]
					},
					{
						"name": "requiredAtBegin",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.14.0",
						"description": "Determines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).",
						"methods": [
							"getRequiredAtBegin",
							"setRequiredAtBegin"
						]
					}
				],
				"associations": [
					{
						"name": "labelFor",
						"singularName": "labelFor",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Defines the association to the labeled control.\nBy default, the label is set the for the attribute to the ID of the labeled control.\nThis can be changed with the implementation of function getIdForLabel on the labelled control.",
						"methods": [
							"getLabelFor",
							"setLabelFor"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Label.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Label with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.LabelDesign",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nDefines whether the labels are in bold format.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nDetermines the icon to be displayed in the control.\nThis can be an URI to an image or an icon font URI."
				},
				{
					"name": "getLabelFor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>labelFor</code>, or <code>null</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Label."
				},
				{
					"name": "getRequired",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>required</code>"
					},
					"since": "1.11.0",
					"description": "Gets current value of property <code>required</code>.\n\nAllows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getRequiredAtBegin",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>requiredAtBegin</code>"
					},
					"since": "1.14.0",
					"description": "Gets current value of property <code>requiredAtBegin</code>.\n\nDetermines whether the required indicator is at the beginning of the label (if set) or at the end (if not set)."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nDetermines the text to be displayed.\n\nDefault value is <code></code>."
				},
				{
					"name": "getTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextAlign",
						"description": "Value of property <code>textAlign</code>"
					},
					"description": "Gets current value of property <code>textAlign</code>.\n\nDetermines the alignment of the text. Available options are <code>Begin</code>, <code>Center</code>, <code>End</code>, <code>Left</code>, and <code>Right</code>.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "getTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextDirection",
						"description": "Value of property <code>textDirection</code>"
					},
					"description": "Gets current value of property <code>textDirection</code>.\n\nDetermines the text direction - right-to-left (RTL) and left-to-right (LTR).\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDetermines the control width as common CSS-size (for example, px or % as unit).\n\nDefault value is <code></code>."
				},
				{
					"name": "getWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>wrapping</code>"
					},
					"description": "Gets current value of property <code>wrapping</code>.\n\nSpecifies whether a line wrapping width shall be displayed when the text value is longer than the width is.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "isRequired",
					"visibility": "protected",
					"returnValue": {
						"type": "Boolean",
						"description": "Returns if the Label or the labelled control are required"
					},
					"description": "Checks whether the Label itself or the associated control is marked as required (they are mutually exclusive)."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.commons.LabelDesign",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nDefines whether the labels are in bold format.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nDetermines the icon to be displayed in the control.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabelFor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLabelFor",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this labelFor association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>labelFor</code>."
				},
				{
					"name": "setRequired",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "bRequired",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>required</code>"
						}
					],
					"description": "Sets a new value for property <code>required</code>.\n\nAllows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setRequiredAtBegin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.14.0",
					"parameters": [
						{
							"name": "bRequiredAtBegin",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>requiredAtBegin</code>"
						}
					],
					"description": "Sets a new value for property <code>requiredAtBegin</code>.\n\nDetermines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nDetermines the text to be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "New value for property <code>textAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>textAlign</code>.\n\nDetermines the alignment of the text. Available options are <code>Begin</code>, <code>Center</code>, <code>End</code>, <code>Left</code>, and <code>Right</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "setTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "New value for property <code>textDirection</code>"
						}
					],
					"description": "Sets a new value for property <code>textDirection</code>.\n\nDetermines the text direction - right-to-left (RTL) and left-to-right (LTR).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDetermines the control width as common CSS-size (for example, px or % as unit).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Label",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bWrapping",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>wrapping</code>"
						}
					],
					"description": "Sets a new value for property <code>wrapping</code>.\n\nSpecifies whether a line wrapping width shall be displayed when the text value is longer than the width is.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.LabelDesign",
			"basename": "LabelDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Available label display modes.",
			"properties": [
				{
					"name": "Bold",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the label in bold."
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the label in normal mode."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.AbsoluteLayout",
			"basename": "AbsoluteLayout",
			"resource": "sap/ui/commons/layout/AbsoluteLayout.js",
			"module": "sap/ui/commons/layout/AbsoluteLayout",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "\nThe Absolute Layout positions its child controls absolutely",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "The overall width of the control. When not set, 100% is automatically set.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "The overall height of the control. When not set, 100% is automatically set.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "verticalScrolling",
						"type": "sap.ui.core.Scrolling",
						"defaultValue": "Hidden",
						"group": "Behavior",
						"visibility": "public",
						"description": "'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.",
						"methods": [
							"getVerticalScrolling",
							"setVerticalScrolling"
						]
					},
					{
						"name": "horizontalScrolling",
						"type": "sap.ui.core.Scrolling",
						"defaultValue": "Hidden",
						"group": "Behavior",
						"visibility": "public",
						"description": "'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.",
						"methods": [
							"getHorizontalScrolling",
							"setHorizontalScrolling"
						]
					}
				],
				"aggregations": [
					{
						"name": "positions",
						"singularName": "position",
						"type": "sap.ui.commons.layout.PositionContainer",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Positioned child controls within the layout",
						"methods": [
							"getPositions",
							"destroyPositions",
							"insertPosition",
							"addPosition",
							"removePosition",
							"indexOfPosition",
							"removeAllPositions"
						]
					}
				],
				"defaultAggregation": "positions"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/AbsoluteLayout.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content to add; if empty, nothing is inserted."
						},
						{
							"name": "oPos",
							"type": "object",
							"optional": false,
							"description": "JSON-like object which defines the position of the child control in the layout. The object is expected to have one or more from the attribute set\n        top, bottom, left, right; each with a value of type sap.ui.core.CSSSize. If no object is given, the default is left=0px,right=0px"
						}
					],
					"description": "Adds the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining."
				},
				{
					"name": "addPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPosition",
							"type": "sap.ui.commons.layout.PositionContainer",
							"optional": false,
							"description": "the position to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some position to the aggregation <code>positions</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout"
					},
					"description": "Destroys all aggregated position containers and their child controls. Returns 'this' to allow method chaining."
				},
				{
					"name": "destroyPositions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the positions in the aggregation <code>positions</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.AbsoluteLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns an array of the controls contained in the aggregated position containers (might be empty)."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "getHorizontalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Scrolling",
						"description": "Value of property <code>horizontalScrolling</code>"
					},
					"description": "Gets current value of property <code>horizontalScrolling</code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.AbsoluteLayout."
				},
				{
					"name": "getPositions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer[]"
					},
					"description": "Gets content of aggregation <code>positions</code>.\n\nPositioned child controls within the layout"
				},
				{
					"name": "getVerticalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Scrolling",
						"description": "Value of property <code>verticalScrolling</code>"
					},
					"description": "Gets current value of property <code>verticalScrolling</code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content of which the index is looked for"
						}
					],
					"description": "Checks for the provided sap.ui.core.Control in the aggregated position containers, and returns the index of the container in the positions aggregation\nif found, or '-1' otherwise."
				},
				{
					"name": "indexOfPosition",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oPosition",
							"type": "sap.ui.commons.layout.PositionContainer",
							"optional": false,
							"description": "The position whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.layout.PositionContainer</code> in the aggregation <code>positions</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "The '0'-based index where the content shall be inserted at. For a negative value of iIndex, the content is inserted at position '0';\n        for a value greater than the current size of the aggregation, the content is inserted at the last position."
						},
						{
							"name": "oPos",
							"type": "object",
							"optional": false,
							"description": "JSON-like object which defines the position of the child control within the layout. The object is expected to have one or more\n        from the attribute set top, bottom, left, right; each with a value of type sap.ui.core.CSSSize. If no object is given, the default is left=0px,right=0px."
						}
					],
					"description": "Inserts the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining."
				},
				{
					"name": "insertPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPosition",
							"type": "sap.ui.commons.layout.PositionContainer",
							"optional": false,
							"description": "the position to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the position should be inserted at; for\n             a negative value of <code>iIndex</code>, the position is inserted at position 0; for a value\n             greater than the current size of the aggregation, the position is inserted at\n             the last position"
						}
					],
					"description": "Inserts a position into the aggregation <code>positions</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Removes all aggregated position containers. Returns an array of the controls contained in the removed position containers (might be empty)."
				},
				{
					"name": "removeAllPositions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>positions</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "object",
							"optional": false,
							"description": "The content control to remove, its ID, or the index of the corresponding position container in the 'positions' aggregation."
						}
					],
					"description": "Removes the given control and its corresponding position container from the aggregation named 'positions'."
				},
				{
					"name": "removePosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "The removed position or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vPosition",
							"type": "int|string|sap.ui.commons.layout.PositionContainer",
							"optional": false,
							"description": "The positionto remove or its index or id"
						}
					],
					"description": "Removes a position from the aggregation <code>positions</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setHorizontalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHorizontalScrolling",
							"type": "sap.ui.core.Scrolling",
							"optional": false,
							"description": "New value for property <code>horizontalScrolling</code>"
						}
					],
					"description": "Sets a new value for property <code>horizontalScrolling</code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden</code>."
				},
				{
					"name": "setPositionOfChild",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The child control for which to change the position information; if empty or not aggregated, nothing is changed"
						},
						{
							"name": "oPos",
							"type": "object",
							"optional": false,
							"description": "JSON-like object which defines the position of the child control. The object is expected to have one or more from the attribute set\n        top, bottom, left, right; each with a value of type sap.ui.core.CSSSize.\n        If no object is given, the default is used which is left=0px,right=0px."
						}
					],
					"description": "Allows to set or change the position information of the given child control"
				},
				{
					"name": "setVerticalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sVerticalScrolling",
							"type": "sap.ui.core.Scrolling",
							"optional": false,
							"description": "New value for property <code>verticalScrolling</code>"
						}
					],
					"description": "Sets a new value for property <code>verticalScrolling</code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.AbsoluteLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.layout.BackgroundDesign",
			"basename": "BackgroundDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Background design (i.e. color), e.g. of a layout cell.",
			"properties": [
				{
					"name": "Border",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA background design suitable for borders."
				},
				{
					"name": "Fill1",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nAn opaque background design that looks dark filled."
				},
				{
					"name": "Fill2",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nAn opaque background design that looks medium filled."
				},
				{
					"name": "Fill3",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nAn opaque background design that looks light filled."
				},
				{
					"name": "Header",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA background design suitable for headers."
				},
				{
					"name": "Plain",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA plain but opaque background design."
				},
				{
					"name": "Transparent",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA transparent background."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.BorderLayout",
			"basename": "BorderLayout",
			"resource": "sap/ui/commons/layout/BorderLayout.js",
			"module": "sap/ui/commons/layout/BorderLayout",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Based upon the border layout as it comes with the Java standard. Using this layout, you are able to divide your available UI space into five areas whose sizes can be defined. These areas are: Top: Header; Bottom: Footer; Begin: Left/right-hand side panel; Center: Content area\nin the middle; End: Right/left-hand side panel.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Page</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "rtl",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "The RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.",
						"deprecated": {
							"since": "1.5.2",
							"text": "RTL should not be configured on control level but is determined by a global configuration."
						},
						"methods": [
							"getRtl",
							"setRtl"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Defines the overall width of the layout",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Defines the overall height of the layout",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "top",
						"singularName": "top",
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Represents the Top area",
						"methods": [
							"getTop",
							"destroyTop",
							"setTop"
						]
					},
					{
						"name": "begin",
						"singularName": "begin",
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Represents the Begin area",
						"methods": [
							"getBegin",
							"destroyBegin",
							"setBegin"
						]
					},
					{
						"name": "center",
						"singularName": "center",
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Represents the Center area",
						"methods": [
							"getCenter",
							"destroyCenter",
							"setCenter"
						]
					},
					{
						"name": "end",
						"singularName": "end",
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Represents the End area",
						"methods": [
							"getEnd",
							"destroyEnd",
							"setEnd"
						]
					},
					{
						"name": "bottom",
						"singularName": "bottom",
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Represents the Bottom area",
						"methods": [
							"getBottom",
							"destroyBottom",
							"setBottom"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/BorderLayout.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area where controls will be added"
						},
						{
							"name": "oControls",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "N controls can be submitted to be added. Each control is submitted as one argument."
						}
					],
					"description": "Adds controls to the specified area"
				},
				{
					"name": "createArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea"
					},
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies which area will be created. If the area is already available, the method call is ignored."
						},
						{
							"name": "oControls",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Any number of controls can be submitted to be added to the newly created area; where each control is submitted as one argument."
						}
					],
					"description": "Creates the specified area and adds the given controls to it. Returns the created area."
				},
				{
					"name": "destroyBegin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the begin in the aggregation <code>begin</code>."
				},
				{
					"name": "destroyBottom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the bottom in the aggregation <code>bottom</code>."
				},
				{
					"name": "destroyCenter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the center in the aggregation <code>center</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area whose content will be destroyed"
						}
					],
					"description": "Destroys the content of the specified area"
				},
				{
					"name": "destroyEnd",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the end in the aggregation <code>end</code>."
				},
				{
					"name": "destroyTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the top in the aggregation <code>top</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.BorderLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutAreaTypes"
					},
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false
						},
						{
							"name": "bCreate",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Returns the area of the given type. If the area does not exist, it will be created when create is set to true."
				},
				{
					"name": "getAreaById",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea"
					},
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area whose object will be returned."
						}
					],
					"description": "Returns the object of the specified area. If the area does not exist, the area will be created and returned."
				},
				{
					"name": "getAreaData",
					"visibility": "public",
					"returnValue": {
						"type": "object"
					},
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area whose data will be returned"
						}
					],
					"description": "Returns a JSON-like object that contains all property values of the requested area"
				},
				{
					"name": "getBegin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea"
					},
					"description": "Gets content of aggregation <code>begin</code>.\n\nRepresents the Begin area"
				},
				{
					"name": "getBottom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea"
					},
					"description": "Gets content of aggregation <code>bottom</code>.\n\nRepresents the Bottom area"
				},
				{
					"name": "getCenter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea"
					},
					"description": "Gets content of aggregation <code>center</code>.\n\nRepresents the Center area"
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area whose content controls shall be returned."
						}
					],
					"description": "Returns all controls inside the specified area inside an array"
				},
				{
					"name": "getEnd",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea"
					},
					"description": "Gets content of aggregation <code>end</code>.\n\nRepresents the End area"
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nDefines the overall height of the layout\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.BorderLayout."
				},
				{
					"name": "getRtl",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>rtl</code>"
					},
					"description": "Gets current value of property <code>rtl</code>.\n\nThe RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.5.2",
						"text": "RTL should not be configured on control level but is determined by a global configuration."
					}
				},
				{
					"name": "getTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea"
					},
					"description": "Gets content of aggregation <code>top</code>.\n\nRepresents the Top area"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDefines the overall width of the layout\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int"
					},
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area that will be searched"
						},
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Specifies the control whose index will be searched"
						}
					],
					"description": "Determines the index of a given content control"
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area where the controls shall be inserted."
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "Specifies the index where the controls shall be added. For a negative value of iIndex, the content is inserted at\n        position '0'; for a value greater than the current size of the aggregation, the content is inserted at the last position."
						},
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "N controls can be submitted to be added. Each control is submitted as one argument."
						}
					],
					"description": "Inserts controls to an area at a given index."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area whose content shall be removed"
						}
					],
					"description": "Removes all content from an area"
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area whose content shall be removed"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "Specifies the index of the control that shall be removed"
						}
					],
					"description": "Removes the content with the given index from an area"
				},
				{
					"name": "setAreaData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "Specifies the area whose properties will be set"
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "JSON-like object that contains the values to be set"
						}
					],
					"description": "Sets the properties of the specified area with the given values"
				},
				{
					"name": "setBegin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBegin",
							"type": "sap.ui.commons.layout.BorderLayoutArea",
							"optional": false,
							"description": "The begin to set"
						}
					],
					"description": "Sets the aggregated <code>begin</code>."
				},
				{
					"name": "setBottom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBottom",
							"type": "sap.ui.commons.layout.BorderLayoutArea",
							"optional": false,
							"description": "The bottom to set"
						}
					],
					"description": "Sets the aggregated <code>bottom</code>."
				},
				{
					"name": "setCenter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCenter",
							"type": "sap.ui.commons.layout.BorderLayoutArea",
							"optional": false,
							"description": "The center to set"
						}
					],
					"description": "Sets the aggregated <code>center</code>."
				},
				{
					"name": "setEnd",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oEnd",
							"type": "sap.ui.commons.layout.BorderLayoutArea",
							"optional": false,
							"description": "The end to set"
						}
					],
					"description": "Sets the aggregated <code>end</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nDefines the overall height of the layout\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setRtl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bRtl",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>rtl</code>"
						}
					],
					"description": "Sets a new value for property <code>rtl</code>.\n\nThe RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.5.2",
						"text": "RTL should not be configured on control level but is determined by a global configuration."
					}
				},
				{
					"name": "setTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTop",
							"type": "sap.ui.commons.layout.BorderLayoutArea",
							"optional": false,
							"description": "The top to set"
						}
					],
					"description": "Sets the aggregated <code>top</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDefines the overall width of the layout\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.BorderLayoutArea",
			"basename": "BorderLayoutArea",
			"resource": "sap/ui/commons/layout/BorderLayoutArea.js",
			"module": "sap/ui/commons/layout/BorderLayoutArea",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The BorderLayoutArea represents one area of a BorderLayout",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Page</code> control."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "areaId",
						"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
						"defaultValue": "top",
						"group": "Identification",
						"visibility": "public",
						"description": "Defines which area the element represents: top, begin, center, end, bottom",
						"deprecated": {
							"since": "1.3.3",
							"text": "Redundant to the aggregation by the parent border layout."
						},
						"methods": [
							"getAreaId",
							"setAreaId"
						]
					},
					{
						"name": "overflowX",
						"type": "string",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The overflow mode of the area in horizontal direction as CSS value",
						"methods": [
							"getOverflowX",
							"setOverflowX"
						]
					},
					{
						"name": "overflowY",
						"type": "string",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The overflow mode of the area in vertical direction as CSS value",
						"methods": [
							"getOverflowY",
							"setOverflowY"
						]
					},
					{
						"name": "contentAlign",
						"type": "string",
						"defaultValue": "left",
						"group": "Misc",
						"visibility": "public",
						"description": "The content alignment as CSS value",
						"methods": [
							"getContentAlign",
							"setContentAlign"
						]
					},
					{
						"name": "size",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100px",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the height or the width. Is not used when the area element is in Center.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Invisible controls are not rendered",
						"methods": [
							"getVisible",
							"setVisible"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Controls within the area",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/BorderLayoutArea.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.BorderLayoutArea with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getAreaId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
						"description": "Value of property <code>areaId</code>"
					},
					"description": "Gets current value of property <code>areaId</code>.\n\nDefines which area the element represents: top, begin, center, end, bottom\n\nDefault value is <code>top</code>.",
					"deprecated": {
						"since": "1.3.3",
						"text": "Redundant to the aggregation by the parent border layout."
					}
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nControls within the area"
				},
				{
					"name": "getContentAlign",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>contentAlign</code>"
					},
					"description": "Gets current value of property <code>contentAlign</code>.\n\nThe content alignment as CSS value\n\nDefault value is <code>left</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.BorderLayoutArea."
				},
				{
					"name": "getOverflowX",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>overflowX</code>"
					},
					"description": "Gets current value of property <code>overflowX</code>.\n\nThe overflow mode of the area in horizontal direction as CSS value\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getOverflowY",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>overflowY</code>"
					},
					"description": "Gets current value of property <code>overflowY</code>.\n\nThe overflow mode of the area in vertical direction as CSS value\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\n\nDefines the height or the width. Is not used when the area element is in Center.\n\nDefault value is <code>100px</code>."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nInvisible controls are not rendered\n\nDefault value is <code>true</code>."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setAreaId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAreaId",
							"type": "sap.ui.commons.layout.BorderLayoutAreaTypes",
							"optional": false,
							"description": "New value for property <code>areaId</code>"
						}
					],
					"description": "Sets a new value for property <code>areaId</code>.\n\nDefines which area the element represents: top, begin, center, end, bottom\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>top</code>.",
					"deprecated": {
						"since": "1.3.3",
						"text": "Redundant to the aggregation by the parent border layout."
					}
				},
				{
					"name": "setContentAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContentAlign",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>contentAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>contentAlign</code>.\n\nThe content alignment as CSS value\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>left</code>."
				},
				{
					"name": "setOverflowX",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sOverflowX",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>overflowX</code>"
						}
					],
					"description": "Sets a new value for property <code>overflowX</code>.\n\nThe overflow mode of the area in horizontal direction as CSS value\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setOverflowY",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sOverflowY",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>overflowY</code>"
						}
					],
					"description": "Sets a new value for property <code>overflowY</code>.\n\nThe overflow mode of the area in vertical direction as CSS value\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\n\nDefines the height or the width. Is not used when the area element is in Center.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100px</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BorderLayoutArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\n\nInvisible controls are not rendered\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.layout.BorderLayoutAreaTypes",
			"basename": "BorderLayoutAreaTypes",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "The type (=position) of a BorderLayoutArea",
			"properties": [
				{
					"name": "begin",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Value to identify the begin area."
				},
				{
					"name": "bottom",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Value to identify the bottom area."
				},
				{
					"name": "center",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Value to identify the center area."
				},
				{
					"name": "end",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Value to identify the end area."
				},
				{
					"name": "top",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Value to identify the top area."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.layout.HAlign",
			"basename": "HAlign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Horizontal alignment, e.g. of a layout cell's content within the cell's borders.\nNote that some values depend on the current locale's writing direction while\nothers do not.",
			"properties": [
				{
					"name": "Begin",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nAligned towards the beginning of a line, in the current locale's writing direction."
				},
				{
					"name": "Center",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nHorizontally centered."
				},
				{
					"name": "End",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nAligned towards the end of a line, in the current locale's writing direction."
				},
				{
					"name": "Left",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nLeft aligned, regardless of the current locale's writing direction."
				},
				{
					"name": "Right",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nRight aligned, regardless of the current locale's writing direction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.HorizontalLayout",
			"basename": "HorizontalLayout",
			"resource": "sap/ui/commons/layout/HorizontalLayout.js",
			"module": "sap/ui/commons/layout/HorizontalLayout",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.layout.HorizontalLayout",
			"description": "A layout that provides support for horizontal alignment of controls",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.layout.HorizontalLayout</code> control."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/HorizontalLayout."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.HorizontalLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.HorizontalLayout.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.HorizontalLayout."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.MatrixLayout",
			"basename": "MatrixLayout",
			"resource": "sap/ui/commons/layout/MatrixLayout.js",
			"module": "sap/ui/commons/layout/MatrixLayout",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "\n<p>\nA matrix layout arranges controls in a grid structure, using rows which\nneed not have the same number of cells.\n</p>\n\n<p>\nIt uses predefined cell classes that guarantee appropriate distances\nbetween cells in the grid. The cell's <code>vGutter</code> property lets\nyou specify additional horizontal distances easily. You can set these\nadditional distances (known as gutters) with or without separators.\nThe distance for each cell is specified by assigning a specific\nenumeration value of the class <code>LayoutCellSeparator</code> of the\nmatrix data object.\n</p>\n\n<p>\nYou should <b>avoid nesting</b> matrix layouts. You should only use a\nmatrix layout if you need to align controls horizontally across rows.\n</p>",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.layout.Grid</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "CSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "CSS height of the matrix layout.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "layoutFixed",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Sets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.",
						"methods": [
							"getLayoutFixed",
							"setLayoutFixed"
						]
					},
					{
						"name": "columns",
						"type": "int",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of columns. If not specified, the number of columns will be determined from the given cells.",
						"methods": [
							"getColumns",
							"setColumns"
						]
					},
					{
						"name": "widths",
						"type": "sap.ui.core.CSSSize[]",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Widths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.",
						"methods": [
							"getWidths",
							"setWidths"
						]
					}
				],
				"aggregations": [
					{
						"name": "rows",
						"singularName": "row",
						"type": "sap.ui.commons.layout.MatrixLayoutRow",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The matrix layout's individual rows.",
						"methods": [
							"getRows",
							"destroyRows",
							"insertRow",
							"addRow",
							"removeRow",
							"indexOfRow",
							"removeAllRows"
						]
					}
				],
				"defaultAggregation": "rows"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/MatrixLayout.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.commons.layout.MatrixLayoutRow",
							"optional": false,
							"description": "the row to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some row to the aggregation <code>rows</code>."
				},
				{
					"name": "createRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "rowContent",
							"type": "sap.ui.core.Control|sap.ui.commons.layout.MatrixLayoutCell|string",
							"optional": false,
							"description": "to add"
						}
					],
					"description": "Creates a new matrix layout row and appends it to this matrix layout.\n\nEach argument must be either a matrix layout cell, which is added to the row\n\"as is\", or an arbitrary content control, which is wrapped with a new\n(default) matrix layout cell first and then added to the row."
				},
				{
					"name": "destroyRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the rows in the aggregation <code>rows</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.MatrixLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>columns</code>"
					},
					"description": "Gets current value of property <code>columns</code>.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nCSS height of the matrix layout."
				},
				{
					"name": "getLayoutFixed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>layoutFixed</code>"
					},
					"description": "Gets current value of property <code>layoutFixed</code>.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.MatrixLayout."
				},
				{
					"name": "getRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow[]"
					},
					"description": "Gets content of aggregation <code>rows</code>.\n\nThe matrix layout's individual rows."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nCSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided."
				},
				{
					"name": "getWidths",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize[]",
						"description": "Value of property <code>widths</code>"
					},
					"description": "Gets current value of property <code>widths</code>.\n\nWidths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width."
				},
				{
					"name": "indexOfRow",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.commons.layout.MatrixLayoutRow",
							"optional": false,
							"description": "The row whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutRow</code> in the aggregation <code>rows</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.commons.layout.MatrixLayoutRow",
							"optional": false,
							"description": "the row to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the row should be inserted at; for\n             a negative value of <code>iIndex</code>, the row is inserted at position 0; for a value\n             greater than the current size of the aggregation, the row is inserted at\n             the last position"
						}
					],
					"description": "Inserts a row into the aggregation <code>rows</code>."
				},
				{
					"name": "removeAllRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>rows</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow",
						"description": "The removed row or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vRow",
							"type": "int|string|sap.ui.commons.layout.MatrixLayoutRow",
							"optional": false,
							"description": "The rowto remove or its index or id"
						}
					],
					"description": "Removes a row from the aggregation <code>rows</code>."
				},
				{
					"name": "setColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iColumns",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>columns</code>"
						}
					],
					"description": "Sets a new value for property <code>columns</code>.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nCSS height of the matrix layout.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLayoutFixed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bLayoutFixed",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>layoutFixed</code>"
						}
					],
					"description": "Sets a new value for property <code>layoutFixed</code>.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nCSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidths",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidths",
							"type": "sap.ui.core.CSSSize[]",
							"optional": false,
							"description": "New value for property <code>widths</code>"
						}
					],
					"description": "Sets a new value for property <code>widths</code>.\n\nWidths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.MatrixLayoutCell",
			"basename": "MatrixLayoutCell",
			"resource": "sap/ui/commons/layout/MatrixLayoutCell.js",
			"module": "sap/ui/commons/layout/MatrixLayoutCell",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "\nNon-control element used as part of a matrix layout's inner structure.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.layout.Grid</code> control."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "backgroundDesign",
						"type": "sap.ui.commons.layout.BackgroundDesign",
						"defaultValue": "Transparent",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the matrix layout cell's background design.",
						"methods": [
							"getBackgroundDesign",
							"setBackgroundDesign"
						]
					},
					{
						"name": "colSpan",
						"type": "int",
						"defaultValue": 1,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.",
						"methods": [
							"getColSpan",
							"setColSpan"
						]
					},
					{
						"name": "hAlign",
						"type": "sap.ui.commons.layout.HAlign",
						"defaultValue": "Begin",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.",
						"methods": [
							"getHAlign",
							"setHAlign"
						]
					},
					{
						"name": "padding",
						"type": "sap.ui.commons.layout.Padding",
						"defaultValue": "End",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.",
						"methods": [
							"getPadding",
							"setPadding"
						]
					},
					{
						"name": "rowSpan",
						"type": "int",
						"defaultValue": 1,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.",
						"methods": [
							"getRowSpan",
							"setRowSpan"
						]
					},
					{
						"name": "separation",
						"type": "sap.ui.commons.layout.Separation",
						"defaultValue": "None",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.",
						"methods": [
							"getSeparation",
							"setSeparation"
						]
					},
					{
						"name": "vAlign",
						"type": "sap.ui.commons.layout.VAlign",
						"defaultValue": "Middle",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.",
						"methods": [
							"getVAlign",
							"setVAlign"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The matrix layout cell's content (arbitrary controls).\n\nIf the matrix row has a defined height and the matrix has layoutFixed = true, the controls inside of a cell should all use the same unit for its height property.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/MatrixLayoutCell.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "addStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the CSS class name to be added"
						}
					],
					"description": "The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n</pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this</code> to allow method chaining"
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutCell with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getBackgroundDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.BackgroundDesign",
						"description": "Value of property <code>backgroundDesign</code>"
					},
					"description": "Gets current value of property <code>backgroundDesign</code>.\n\nDetermines the matrix layout cell's background design.\n\nDefault value is <code>Transparent</code>."
				},
				{
					"name": "getColSpan",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>colSpan</code>"
					},
					"description": "Gets current value of property <code>colSpan</code>.\n\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nThe matrix layout cell's content (arbitrary controls).\n\nIf the matrix row has a defined height and the matrix has layoutFixed = true, the controls inside of a cell should all use the same unit for its height property."
				},
				{
					"name": "getHAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.HAlign",
						"description": "Value of property <code>hAlign</code>"
					},
					"description": "Gets current value of property <code>hAlign</code>.\n\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutCell."
				},
				{
					"name": "getPadding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.Padding",
						"description": "Value of property <code>padding</code>"
					},
					"description": "Gets current value of property <code>padding</code>.\n\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.\n\nDefault value is <code>End</code>."
				},
				{
					"name": "getRowSpan",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>rowSpan</code>"
					},
					"description": "Gets current value of property <code>rowSpan</code>.\n\nDetermines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "getSeparation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.Separation",
						"description": "Value of property <code>separation</code>"
					},
					"description": "Gets current value of property <code>separation</code>.\n\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getVAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.VAlign",
						"description": "Value of property <code>vAlign</code>"
					},
					"description": "Gets current value of property <code>vAlign</code>.\n\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Middle</code>."
				},
				{
					"name": "hasStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the style to check for"
						}
					],
					"description": "Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass()."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "removeStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the style to be removed"
						}
					],
					"description": "Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this</code> to allow method chaining"
				},
				{
					"name": "setBackgroundDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBackgroundDesign",
							"type": "sap.ui.commons.layout.BackgroundDesign",
							"optional": false,
							"description": "New value for property <code>backgroundDesign</code>"
						}
					],
					"description": "Sets a new value for property <code>backgroundDesign</code>.\n\nDetermines the matrix layout cell's background design.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent</code>."
				},
				{
					"name": "setColSpan",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iColSpan",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>colSpan</code>"
						}
					],
					"description": "Sets a new value for property <code>colSpan</code>.\n\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "setHAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHAlign",
							"type": "sap.ui.commons.layout.HAlign",
							"optional": false,
							"description": "New value for property <code>hAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>hAlign</code>.\n\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "setPadding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPadding",
							"type": "sap.ui.commons.layout.Padding",
							"optional": false,
							"description": "New value for property <code>padding</code>"
						}
					],
					"description": "Sets a new value for property <code>padding</code>.\n\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>End</code>."
				},
				{
					"name": "setRowSpan",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iRowSpan",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>rowSpan</code>"
						}
					],
					"description": "Sets a new value for property <code>rowSpan</code>.\n\nDetermines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "setSeparation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSeparation",
							"type": "sap.ui.commons.layout.Separation",
							"optional": false,
							"description": "New value for property <code>separation</code>"
						}
					],
					"description": "Sets a new value for property <code>separation</code>.\n\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setVAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sVAlign",
							"type": "sap.ui.commons.layout.VAlign",
							"optional": false,
							"description": "New value for property <code>vAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>vAlign</code>.\n\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Middle</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.MatrixLayoutRow",
			"basename": "MatrixLayoutRow",
			"resource": "sap/ui/commons/layout/MatrixLayoutRow.js",
			"module": "sap/ui/commons/layout/MatrixLayoutRow",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "\nNon-control element used as part of a matrix layout's inner structure.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.layout.Grid</code> control."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Height of the row.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "cells",
						"singularName": "cell",
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The matrix layout row's individual cells.",
						"methods": [
							"getCells",
							"destroyCells",
							"insertCell",
							"addCell",
							"removeCell",
							"indexOfCell",
							"removeAllCells"
						]
					}
				],
				"defaultAggregation": "cells"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/MatrixLayoutRow.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addCell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCell",
							"type": "sap.ui.commons.layout.MatrixLayoutCell",
							"optional": false,
							"description": "the cell to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some cell to the aggregation <code>cells</code>."
				},
				{
					"name": "addStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the CSS class name to be added"
						}
					],
					"description": "The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n</pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this</code> to allow method chaining"
				},
				{
					"name": "destroyCells",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the cells in the aggregation <code>cells</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutRow with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getCells",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell[]"
					},
					"description": "Gets content of aggregation <code>cells</code>.\n\nThe matrix layout row's individual cells."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nHeight of the row."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutRow."
				},
				{
					"name": "hasStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the style to check for"
						}
					],
					"description": "Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass()."
				},
				{
					"name": "indexOfCell",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCell",
							"type": "sap.ui.commons.layout.MatrixLayoutCell",
							"optional": false,
							"description": "The cell whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutCell</code> in the aggregation <code>cells</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertCell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCell",
							"type": "sap.ui.commons.layout.MatrixLayoutCell",
							"optional": false,
							"description": "the cell to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the cell should be inserted at; for\n             a negative value of <code>iIndex</code>, the cell is inserted at position 0; for a value\n             greater than the current size of the aggregation, the cell is inserted at\n             the last position"
						}
					],
					"description": "Inserts a cell into the aggregation <code>cells</code>."
				},
				{
					"name": "removeAllCells",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>cells</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeCell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutCell",
						"description": "The removed cell or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vCell",
							"type": "int|string|sap.ui.commons.layout.MatrixLayoutCell",
							"optional": false,
							"description": "The cellto remove or its index or id"
						}
					],
					"description": "Removes a cell from the aggregation <code>cells</code>."
				},
				{
					"name": "removeStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the style to be removed"
						}
					],
					"description": "Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this</code> to allow method chaining"
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.MatrixLayoutRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nHeight of the row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.layout.Padding",
			"basename": "Padding",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Padding, e.g. of a layout cell's content within the cell's borders.\nNote that all options except \"None\" include a padding of 2px at the top and\nbottom, and differ only in the presence of a 4px padding towards the beginning\nor end of a line, in the current locale's writing direction.",
			"properties": [
				{
					"name": "Begin",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nTop and bottom padding of 2px.\nPadding of 4px towards the beginning of a line, in the current locale's\nwriting direction, but none towards its end."
				},
				{
					"name": "Both",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nTop and bottom padding of 2px.\nPadding of 4px towards both the beginning and end of a line."
				},
				{
					"name": "End",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nTop and bottom padding of 2px.\nPadding of 4px towards the end of a line, in the current locale's\nwriting direction, but none towards its beginning."
				},
				{
					"name": "Neither",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nTop and bottom padding of 2px.\nNo padding towards neither the beginning nor end of a line."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nNo padding at all."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.PositionContainer",
			"basename": "PositionContainer",
			"resource": "sap/ui/commons/layout/PositionContainer.js",
			"module": "sap/ui/commons/layout/PositionContainer",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Is used to specify the position of a control in the AbsoluteLayout",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "top",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Defines the distance to the top of the layout (as specified in HTML)",
						"methods": [
							"getTop",
							"setTop"
						]
					},
					{
						"name": "bottom",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Defines the distance to the bottom of the layout (as specified in HTML)",
						"methods": [
							"getBottom",
							"setBottom"
						]
					},
					{
						"name": "left",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Defines the distance to the left of the layout (as specified in HTML)",
						"methods": [
							"getLeft",
							"setLeft"
						]
					},
					{
						"name": "right",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Defines the distance to the right of the layout (as specified in HTML)",
						"methods": [
							"getRight",
							"setRight"
						]
					},
					{
						"name": "centerHorizontally",
						"type": "boolean",
						"defaultValue": false,
						"group": "Dimension",
						"visibility": "public",
						"description": "Indicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.",
						"methods": [
							"getCenterHorizontally",
							"setCenterHorizontally"
						]
					},
					{
						"name": "centerVertically",
						"type": "boolean",
						"defaultValue": false,
						"group": "Dimension",
						"visibility": "public",
						"description": "Indicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.",
						"methods": [
							"getCenterVertically",
							"setCenterVertically"
						]
					}
				],
				"aggregations": [
					{
						"name": "control",
						"singularName": "control",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Child control of the position container",
						"methods": [
							"getControl",
							"destroyControl",
							"setControl"
						]
					}
				],
				"defaultAggregation": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/PositionContainer.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "destroyControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the control in the aggregation <code>control</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.PositionContainer with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getBottom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>bottom</code>"
					},
					"description": "Gets current value of property <code>bottom</code>.\n\nDefines the distance to the bottom of the layout (as specified in HTML)"
				},
				{
					"name": "getCenterHorizontally",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>centerHorizontally</code>"
					},
					"description": "Gets current value of property <code>centerHorizontally</code>.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getCenterVertically",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>centerVertically</code>"
					},
					"description": "Gets current value of property <code>centerVertically</code>.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>control</code>.\n\nChild control of the position container"
				},
				{
					"name": "getLeft",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>left</code>"
					},
					"description": "Gets current value of property <code>left</code>.\n\nDefines the distance to the left of the layout (as specified in HTML)"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.PositionContainer."
				},
				{
					"name": "getRight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>right</code>"
					},
					"description": "Gets current value of property <code>right</code>.\n\nDefines the distance to the right of the layout (as specified in HTML)"
				},
				{
					"name": "getTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>top</code>"
					},
					"description": "Gets current value of property <code>top</code>.\n\nDefines the distance to the top of the layout (as specified in HTML)"
				},
				{
					"name": "setBottom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBottom",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>bottom</code>"
						}
					],
					"description": "Sets a new value for property <code>bottom</code>.\n\nDefines the distance to the bottom of the layout (as specified in HTML)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setCenterHorizontally",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bCenterHorizontally",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>centerHorizontally</code>"
						}
					],
					"description": "Sets a new value for property <code>centerHorizontally</code>.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setCenterVertically",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bCenterVertically",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>centerVertically</code>"
						}
					],
					"description": "Sets a new value for property <code>centerVertically</code>.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The control to set"
						}
					],
					"description": "Sets the aggregated <code>control</code>."
				},
				{
					"name": "setLeft",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLeft",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>left</code>"
						}
					],
					"description": "Sets a new value for property <code>left</code>.\n\nDefines the distance to the left of the layout (as specified in HTML)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sRight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>right</code>"
						}
					],
					"description": "Sets a new value for property <code>right</code>.\n\nDefines the distance to the right of the layout (as specified in HTML)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.layout.PositionContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTop",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>top</code>"
						}
					],
					"description": "Sets a new value for property <code>top</code>.\n\nDefines the distance to the top of the layout (as specified in HTML)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "updatePosition",
					"visibility": "public",
					"parameters": [
						{
							"name": "oPos",
							"type": "object",
							"optional": false,
							"description": "JSON-like object which defines the position of the child control in the absolute layout. The object is expected\n        to have one or more out of the attributes top, bottom, left, right (each with a value of type sap.ui.core.CSSSize). If no object\n        is given, nothing is updated."
						}
					],
					"description": "Updates the position properties of the container according to the given position in JSON style."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.ResponsiveFlowLayout",
			"basename": "ResponsiveFlowLayout",
			"resource": "sap/ui/commons/layout/ResponsiveFlowLayout.js",
			"module": "sap/ui/commons/layout/ResponsiveFlowLayout",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.ResponsiveFlowLayout",
			"description": "This is a layout where several controls can be added. These controls are blown up to fit a whole line. If the window resizes the controls are moved between the lines and resized again.",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/ResponsiveFlowLayout."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayout.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayout."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.ResponsiveFlowLayoutData",
			"basename": "ResponsiveFlowLayoutData",
			"resource": "sap/ui/commons/layout/ResponsiveFlowLayoutData.js",
			"module": "sap/ui/commons/layout/ResponsiveFlowLayoutData",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"extends": "sap.ui.layout.ResponsiveFlowLayoutData",
			"description": "This is a LayoutData Element that can be added to a control if this control is used within a ResponsiveFlowLayout",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/ResponsiveFlowLayoutData."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayoutData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayoutData.extend}."
				},
				{
					"name": "getMargin",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>margin</code>"
					},
					"since": "1.11.0",
					"description": "Getter for property <code>margin</code>.\nThis property prevents any margin of the element if set to false\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayoutData."
				},
				{
					"name": "setMargin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.layout.ResponsiveFlowLayoutData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "bMargin",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>margin</code>"
						}
					],
					"description": "Setter for property <code>margin</code>.\n\nDefault value is <code>true</code>"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.layout.Separation",
			"basename": "Separation",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Separation, e.g. of a layout cell from its neighbor, via a vertical gutter of\ndefined width, with or without a vertical line in its middle.",
			"properties": [
				{
					"name": "Large",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA large (63px) vertical gutter without a vertical line."
				},
				{
					"name": "LargeWithLine",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA large (63px) vertical gutter with a vertical line in its middle."
				},
				{
					"name": "Medium",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA medium (31px) vertical gutter without a vertical line."
				},
				{
					"name": "MediumWithLine",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA medium (31px) vertical gutter with a vertical line in its middle."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nNo gutter at all (0px), and without a vertical line, of course."
				},
				{
					"name": "Small",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA small (17px) vertical gutter without a vertical line."
				},
				{
					"name": "SmallWithLine",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nA small (17px) vertical gutter with a vertical line in its middle."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.layout.VAlign",
			"basename": "VAlign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Vertical alignment, e.g. of a layout cell's content within the cell's borders.",
			"properties": [
				{
					"name": "Bottom",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nAligned at the bottom."
				},
				{
					"name": "Middle",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nVertically centered."
				},
				{
					"name": "Top",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "\nAligned at the top."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.layout.VerticalLayout",
			"basename": "VerticalLayout",
			"resource": "sap/ui/commons/layout/VerticalLayout.js",
			"module": "sap/ui/commons/layout/VerticalLayout",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.layout.VerticalLayout",
			"description": "In this layout the elemnts are orderd one below the other",
			"deprecated": {
				"since": "1.16.0",
				"text": "Moved to sap.ui.layout library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new layout/VerticalLayout."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.layout.VerticalLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.layout.VerticalLayout."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Link",
			"basename": "Link",
			"resource": "sap/ui/commons/Link.js",
			"module": "sap/ui/commons/Link",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "\nProvides an absolute or relative reference to an internal or external URL. The classical target parameters are supported.\nAnother usage scenario is triggering an action, for example to open a popup window. In both cases, the link is a hypertext link.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Link</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Link text to be displayed.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Whether the link can be triggered by the user.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "helpId",
						"type": "string",
						"defaultValue": "",
						"group": "Behavior",
						"visibility": "public",
						"description": "Unique identifier used for help service.",
						"methods": [
							"getHelpId",
							"setHelpId"
						]
					},
					{
						"name": "href",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.",
						"methods": [
							"getHref",
							"setHref"
						]
					},
					{
						"name": "target",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Options are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.",
						"methods": [
							"getTarget",
							"setTarget"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"since": "1.8.0",
						"description": "Width of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Event is fired when the user clicks the control.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Link.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event is fired when the user clicks the control."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Link</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.commons.Link</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Link</code> itself.\n\nEvent is fired when the user clicks the control."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.commons.Link</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Link with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "Whether or not to prevent the default action"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
				},
				{
					"name": "focus",
					"visibility": "public",
					"description": "Puts the focus to the link."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nWhether the link can be triggered by the user.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>helpId</code>"
					},
					"description": "Gets current value of property <code>helpId</code>.\n\nUnique identifier used for help service.\n\nDefault value is <code></code>."
				},
				{
					"name": "getHref",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>href</code>"
					},
					"description": "Gets current value of property <code>href</code>.\n\nThe link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Link."
				},
				{
					"name": "getTarget",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>target</code>"
					},
					"description": "Gets current value of property <code>target</code>.\n\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nLink text to be displayed.\n\nDefault value is <code></code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"since": "1.8.0",
					"description": "Gets current value of property <code>width</code>.\n\nWidth of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nWhether the link can be triggered by the user.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHelpId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>helpId</code>"
						}
					],
					"description": "Sets a new value for property <code>helpId</code>.\n\nUnique identifier used for help service.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setHref",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHref",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>href</code>"
						}
					],
					"description": "Sets a new value for property <code>href</code>.\n\nThe link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTarget",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>target</code>"
						}
					],
					"description": "Sets a new value for property <code>target</code>.\n\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nLink text to be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.8.0",
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ListBox",
			"basename": "ListBox",
			"resource": "sap/ui/commons/ListBox.js",
			"module": "sap/ui/commons/ListBox",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Provides a list of items from which users can choose an item.\nFor the design of the list box, features such as defining the list box height, fixing the number of visible items,\nchoosing one item to be the item that is marked by default when the list box is shown,\nor a scroll bar for large list boxes are available.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.List</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "allowMultiSelect",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether multiple selection is allowed.",
						"methods": [
							"getAllowMultiSelect",
							"setAllowMultiSelect"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Control width as common CSS-size (px or % as unit, for example).",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Control height as common CSS-size (px or % as unit, for example).\nThe setting overrides any definitions made for the setVisibleItems() method.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "scrollTop",
						"type": "int",
						"defaultValue": -1,
						"group": "Behavior",
						"visibility": "public",
						"description": "Scroll bar position from the top.\nSetting the scrollTop property and calling scrollToIndex are two operations\ninfluencing the same \"physical\" property, so the last call \"wins\".",
						"methods": [
							"getScrollTop",
							"setScrollTop"
						]
					},
					{
						"name": "displayIcons",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.",
						"methods": [
							"getDisplayIcons",
							"setDisplayIcons"
						]
					},
					{
						"name": "displaySecondaryValues",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.",
						"methods": [
							"getDisplaySecondaryValues",
							"setDisplaySecondaryValues"
						]
					},
					{
						"name": "valueTextAlign",
						"type": "sap.ui.core.TextAlign",
						"defaultValue": "Begin",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the text alignment in the primary ListBox column.",
						"methods": [
							"getValueTextAlign",
							"setValueTextAlign"
						]
					},
					{
						"name": "secondaryValueTextAlign",
						"type": "sap.ui.core.TextAlign",
						"defaultValue": "Begin",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the text alignment in the secondary ListBox text column (if available).",
						"methods": [
							"getSecondaryValueTextAlign",
							"setSecondaryValueTextAlign"
						]
					},
					{
						"name": "minWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the minimum width of the ListBox. If not set, there is no minimum width.",
						"methods": [
							"getMinWidth",
							"setMinWidth"
						]
					},
					{
						"name": "maxWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the maximum width of the ListBox. If not set, there is no maximum width.",
						"methods": [
							"getMaxWidth",
							"setMaxWidth"
						]
					},
					{
						"name": "visibleItems",
						"type": "int",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "The ListBox height in number of items that are initially displayed without scrolling.\nThis setting overwrites height settings in terms of CSS size that have been made.\nWhen the items have different heights, the height of the first item is used for all\nother item height calculations.\nNote that if there are one or more separators between the visible ListBox items,\nthe displayed items might not relate 1:1 to the initially specified number of items.\nWhen the value is retrieved, it equals the previously set value if it was set;\notherwise, it will be the number of items completely fitting into the ListBox without\nscrolling in the case the control was already rendered.\nNote that if the control was not rendered, the behavior will be undefined,\nit may return -1 or any other number.",
						"methods": [
							"getVisibleItems",
							"setVisibleItems"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.core.Item",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregation of items to be displayed. Must be either of type sap.ui.core.ListItem or sap.ui.core.SeparatorItem.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					}
				],
				"defaultAggregation": "items",
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Event is fired when selection is changed by user interaction.",
						"parameters": {
							"id": {
								"name": "id",
								"type": "string",
								"description": "ID of the ListBox which triggered the event."
							},
							"selectedIndex": {
								"name": "selectedIndex",
								"type": "int",
								"description": "The currently selected index of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected indices -\nthe one whose selection has triggered the selection change.\nTo get all currently selected indices, use selectedIndices."
							},
							"selectedItem": {
								"name": "selectedItem",
								"type": "sap.ui.core.Item",
								"description": "The currently selected item of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected items -\nthe one whose selection has triggered the selection change."
							},
							"selectedIndices": {
								"name": "selectedIndices",
								"type": "int[]",
								"description": "Array containing the indices which are selected."
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new ListBox.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"id": {
											"name": "id",
											"type": "string",
											"optional": false,
											"description": "ID of the ListBox which triggered the event."
										},
										"selectedIndex": {
											"name": "selectedIndex",
											"type": "int",
											"optional": false,
											"description": "The currently selected index of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected indices -\nthe one whose selection has triggered the selection change.\nTo get all currently selected indices, use selectedIndices."
										},
										"selectedItem": {
											"name": "selectedItem",
											"type": "sap.ui.core.Item",
											"optional": false,
											"description": "The currently selected item of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected items -\nthe one whose selection has triggered the selection change."
										},
										"selectedIndices": {
											"name": "selectedIndices",
											"type": "int[]",
											"optional": false,
											"description": "Array containing the indices which are selected."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when selection is changed by user interaction."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "addSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iSelectedIndex",
							"type": "int",
							"optional": false,
							"description": "Index to add to selection.."
						}
					],
					"description": "Adds the given index to current selection.\nWhen multiple selection is disabled, this replaces the current selection.\nWhen the given index is invalid, the call is ignored."
				},
				{
					"name": "addSelectedIndices",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "aSelectedIndices",
							"type": "int[]",
							"optional": false,
							"description": "Indices of the items that shall additionally be selected."
						}
					],
					"description": "Adds the given indices to selection. Any invalid indices are ignored."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ListBox</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.commons.ListBox</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ListBox</code> itself.\n\nEvent is fired when selection is changed by user interaction."
				},
				{
					"name": "clearSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"description": "Removes complete selection."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.commons.ListBox</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ListBox with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>id</code> of type <code>string</code>ID of the ListBox which triggered the event.</li>\n<li><code>selectedIndex</code> of type <code>int</code>The currently selected index of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected indices -\nthe one whose selection has triggered the selection change.\nTo get all currently selected indices, use selectedIndices.</li>\n<li><code>selectedItem</code> of type <code>sap.ui.core.Item</code>The currently selected item of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected items -\nthe one whose selection has triggered the selection change.</li>\n<li><code>selectedIndices</code> of type <code>int[]</code>Array containing the indices which are selected.</li>\n</ul>"
				},
				{
					"name": "getAllowMultiSelect",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>allowMultiSelect</code>"
					},
					"description": "Gets current value of property <code>allowMultiSelect</code>.\n\nDetermines whether multiple selection is allowed.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getDisplayIcons",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displayIcons</code>"
					},
					"description": "Gets current value of property <code>displayIcons</code>.\n\nDetermines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getDisplaySecondaryValues",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displaySecondaryValues</code>"
					},
					"description": "Gets current value of property <code>displaySecondaryValues</code>.\n\nDetermines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nDetermines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nDetermines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nControl height as common CSS-size (px or % as unit, for example).\nThe setting overrides any definitions made for the setVisibleItems() method."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\nAggregation of items to be displayed. Must be either of type sap.ui.core.ListItem or sap.ui.core.SeparatorItem."
				},
				{
					"name": "getMaxWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>maxWidth</code>"
					},
					"description": "Gets current value of property <code>maxWidth</code>.\n\nDetermines the maximum width of the ListBox. If not set, there is no maximum width."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ListBox."
				},
				{
					"name": "getMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>minWidth</code>"
					},
					"description": "Gets current value of property <code>minWidth</code>.\n\nDetermines the minimum width of the ListBox. If not set, there is no minimum width."
				},
				{
					"name": "getScrollTop",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Vertical scroll position."
					},
					"description": "Returns how many pixels the ListBox contents are currently scrolled down."
				},
				{
					"name": "getSecondaryValueTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextAlign",
						"description": "Value of property <code>secondaryValueTextAlign</code>"
					},
					"description": "Gets current value of property <code>secondaryValueTextAlign</code>.\n\nDetermines the text alignment in the secondary ListBox text column (if available).\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "getSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Selected index"
					},
					"description": "Zero-based index of selected item. Index value for no selection is -1.\nWhen multiple selection is enabled and multiple items are selected,\nthe method returns the first selected item."
				},
				{
					"name": "getSelectedIndices",
					"visibility": "public",
					"returnValue": {
						"type": "int[]",
						"description": "Array of selected indices."
					},
					"description": "Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\"."
				},
				{
					"name": "getSelectedItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "Selected item"
					},
					"description": "Returns selected item. When no item is selected, \"null\" is returned.\nWhen multi-selection is enabled and multiple items are selected, only the first selected item is returned."
				},
				{
					"name": "getSelectedItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item[]",
						"description": "Selected items."
					},
					"description": "Returns an array containing the selected items. In the case of no selection, an empty array is returned."
				},
				{
					"name": "getSelectedKeys",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Array with selected keys."
					},
					"description": "Returns the keys of the selected items in an array.\nIf a selected item does not have a key, the respective array entry will be undefined."
				},
				{
					"name": "getValueTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextAlign",
						"description": "Value of property <code>valueTextAlign</code>"
					},
					"description": "Gets current value of property <code>valueTextAlign</code>.\n\nDetermines the text alignment in the primary ListBox column.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "getVisibleItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Number of visible items."
					},
					"description": "Returns the number of visible items."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nControl width as common CSS-size (px or % as unit, for example)."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "isIndexSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether index is selected."
					},
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "Index which is checked for selection state."
						}
					],
					"description": "Returns whether the given index is selected."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.core.Item",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "removeSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "Index that shall be removed from selection."
						}
					],
					"description": "Removes the given index from this selection. When the index is invalid or not selected, the call is ignored."
				},
				{
					"name": "scrollToIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "The index to which the ListBox should scroll."
						},
						{
							"name": "bLazy",
							"type": "boolean",
							"optional": false,
							"description": "If set to true, the ListBox only scrolls if the item is not completely visible, and it scrolls for exactly the space to make it fully visible. If set to false, the item is scrolled to the top position (if possible)."
						}
					],
					"description": "If the ListBox has a scroll bar because the number of items is larger than the number of visible items,\nthis method scrolls to the item with the given index.\nIf there are enough items, this item will then appear at the topmost visible position in the ListBox.\nIf bLazy is true, it only scrolls as far as required to make the item visible.\nSetting the scrollTop property and calling scrollToIndex are two operations\ninfluencing the same \"physical\" property, so the last call \"wins\"."
				},
				{
					"name": "setAllowMultiSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bAllowMultiSelect",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>allowMultiSelect</code>"
						}
					],
					"description": "Sets a new value for property <code>allowMultiSelect</code>.\n\nDetermines whether multiple selection is allowed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setDisplayIcons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplayIcons",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displayIcons</code>"
						}
					],
					"description": "Sets a new value for property <code>displayIcons</code>.\n\nDetermines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setDisplaySecondaryValues",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplaySecondaryValues",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displaySecondaryValues</code>"
						}
					],
					"description": "Sets a new value for property <code>displaySecondaryValues</code>.\n\nDetermines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nDetermines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nDetermines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New height for the ListBox."
						}
					],
					"description": "Sets the height of this ListBox in CSS units."
				},
				{
					"name": "setItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "aItems",
							"type": "sap.ui.core.ListItem[]",
							"optional": false,
							"description": "The items to set for this ListBox."
						},
						{
							"name": "bDestroyItems",
							"type": "boolean",
							"optional": false,
							"description": "Optional boolean parameter to indicate that the formerly set items should be destroyed, instead of just removed."
						}
					],
					"description": "Allows setting the list items as array for this instance of ListBox."
				},
				{
					"name": "setMaxWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMaxWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>maxWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>maxWidth</code>.\n\nDetermines the maximum width of the ListBox. If not set, there is no maximum width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>minWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>minWidth</code>.\n\nDetermines the minimum width of the ListBox. If not set, there is no minimum width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setScrollTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iScrollTop",
							"type": "int",
							"optional": false,
							"description": "Vertical scroll position in pixels."
						}
					],
					"description": "Positions the ListBox contents so that they are scrolled-down by the given number of pixels."
				},
				{
					"name": "setSecondaryValueTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSecondaryValueTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "New value for property <code>secondaryValueTextAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>secondaryValueTextAlign</code>.\n\nDetermines the text alignment in the secondary ListBox text column (if available).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "setSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iSelectedIndex",
							"type": "int",
							"optional": false,
							"description": "Index to be selected."
						}
					],
					"description": "Sets the zero-based index of the currently selected item.\nThis method removes any previous selections. When the given index is invalid, the call is ignored."
				},
				{
					"name": "setSelectedIndices",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "aSelectedIndices",
							"type": "int[]",
							"optional": false,
							"description": "Indices of the items to be selected."
						}
					],
					"description": "Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".\nWhen multiple selection is disabled and multiple items are given,\nthe selection is set to the index of the first valid index in the given array.\nAny invalid indices are ignored.\nThe previous selection is in any case replaced."
				},
				{
					"name": "setSelectedKeys",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "aSelectedKeys",
							"type": "string[]",
							"optional": false,
							"description": "The keys of the items to be selected."
						}
					],
					"description": "Keys of the items to be selected, wrapped in an array. An empty array means no selection.\nWhen multiple selection is disabled, and multiple keys are given,\nthe selection is set to the item with the first valid key in the given array.\nAny invalid keys are ignored.\nThe previous selection is replaced in any case."
				},
				{
					"name": "setValueTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "New value for property <code>valueTextAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>valueTextAlign</code>.\n\nDetermines the text alignment in the primary ListBox column.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "setVisibleItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iItemCount",
							"type": "int",
							"optional": false,
							"description": "The number of items that should fit into the ListBox without scrolling."
						}
					],
					"description": "Makes the ListBox render with a height that allows it to display exactly the given number of items."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ListBox",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New width for the ListBox."
						}
					],
					"description": "Sets the width of this ListBox in CSS units."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Menu",
			"basename": "Menu",
			"resource": "sap/ui/commons/Menu.js",
			"module": "sap/ui/commons/Menu",
			"static": true,
			"visibility": "public",
			"since": "1.0.0",
			"extends": "sap.ui.unified.Menu",
			"description": "A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.",
			"deprecated": {
				"since": "1.21.0",
				"text": "Please use the control sap.ui.unified.Menu of the library sap.ui.unified instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Menu control."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Menu with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.Menu.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Menu."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MenuBar",
			"basename": "MenuBar",
			"resource": "sap/ui/commons/MenuBar.js",
			"module": "sap/ui/commons/MenuBar",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Represents a user interface area which is the entry point for menus with their menu items. MenuBar is useful for applications which shall offer a\nset of actions that shall be provided in a structured way. The MenuBar contains the menu titles from where users navigate to the single items. The control supports\nfor example long menu item texts, automated scrolling for menu items when the browser space is not large enough to display all items, defining images for single\nor all items in a menu, automated layouting of items with or w/o image, and active/non-active items.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.OverflowToolbar</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "When the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Specifies the width of the MenuBar",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "design",
						"type": "sap.ui.commons.MenuBarDesign",
						"defaultValue": "Standard",
						"group": "Appearance",
						"visibility": "public",
						"description": "Available design options are Header and Standard. Note that design settings are theme-dependent.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.unified.MenuItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregation of menu items.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					}
				],
				"defaultAggregation": "items"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MenuBar.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.MenuItem",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.MenuBar with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuBarDesign",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nAvailable design options are Header and Standard. Note that design settings are theme-dependent.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nWhen the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItem[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\nAggregation of menu items."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.MenuBar."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nSpecifies the width of the MenuBar\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.MenuItem",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.unified.MenuItem</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.unified.MenuItem",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.MenuItem",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.unified.MenuItem",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.commons.MenuBarDesign",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nAvailable design options are Header and Standard. Note that design settings are theme-dependent.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nWhen the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nSpecifies the width of the MenuBar\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.MenuBarDesign",
			"basename": "MenuBarDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Determines the visual design of a MenuBar. The feature might be not supported by all themes.",
			"properties": [
				{
					"name": "Header",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The MenuBar appears in header design."
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The MenuBar appears in standard design."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MenuButton",
			"basename": "MenuButton",
			"resource": "sap/ui/commons/MenuButton.js",
			"module": "sap/ui/commons/MenuButton",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.Button",
			"description": "Common button control that opens a menu when clicked by the user. The control provides an API for configuring the docking position\nof the menu.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.MenuButton</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "dockButton",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.",
						"methods": [
							"getDockButton",
							"setDockButton"
						]
					},
					{
						"name": "dockMenu",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.",
						"methods": [
							"getDockMenu",
							"setDockMenu"
						]
					}
				],
				"aggregations": [
					{
						"name": "menu",
						"singularName": "menu",
						"type": "sap.ui.unified.Menu",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Menu that shall be opened when the button is clicked",
						"methods": [
							"getMenu",
							"destroyMenu",
							"setMenu"
						]
					}
				],
				"defaultAggregation": "menu",
				"events": [
					{
						"name": "itemSelected",
						"visibility": "public",
						"description": "Event that is fired when a menu item is selected by the user",
						"parameters": {
							"itemId": {
								"name": "itemId",
								"type": "string",
								"description": "The ID of the selected item"
							},
							"item": {
								"name": "item",
								"type": "sap.ui.unified.MenuItemBase",
								"description": "The selected item"
							}
						},
						"methods": [
							"attachItemSelected",
							"detachItemSelected",
							"fireItemSelected"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MenuButton.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "itemSelected",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"itemId": {
											"name": "itemId",
											"type": "string",
											"optional": false,
											"description": "The ID of the selected item"
										},
										"item": {
											"name": "item",
											"type": "sap.ui.unified.MenuItemBase",
											"optional": false,
											"description": "The selected item"
										}
									}
								}
							}
						}
					],
					"description": "Event that is fired when a menu item is selected by the user"
				},
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"itemId": {
											"name": "itemId",
											"type": "string",
											"optional": false,
											"description": "The id of the selected item"
										},
										"item": {
											"name": "item",
											"type": "sap.ui.commons.MenuItemBase",
											"optional": false,
											"description": "The selected item"
										}
									}
								}
							}
						}
					],
					"description": "Fired when an item from the menu was selected."
				}
			],
			"methods": [
				{
					"name": "attachItemSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.MenuButton</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>itemSelected</code> event of this <code>sap.ui.commons.MenuButton</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.MenuButton</code> itself.\n\nEvent that is fired when a menu item is selected by the user"
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'press' event of this <code>sap.ui.commons.MenuButton</code>.<br/>\n\nEvent is fired when an item from the menu was selected."
				},
				{
					"name": "destroyMenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the menu in the aggregation\nnamed <code>menu</code>."
				},
				{
					"name": "detachItemSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>itemSelected</code> event of this <code>sap.ui.commons.MenuButton</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'press' event of this <code>sap.ui.commons.MenuButton</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.MenuButton with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}."
				},
				{
					"name": "fireItemSelected",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>itemSelected</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>itemId</code> of type <code>string</code>The ID of the selected item</li>\n<li><code>item</code> of type <code>sap.ui.unified.MenuItemBase</code>The selected item</li>\n</ul>"
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getDockButton",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>dockButton</code>"
					},
					"description": "Gets current value of property <code>dockButton</code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'."
				},
				{
					"name": "getDockMenu",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>dockMenu</code>"
					},
					"description": "Gets current value of property <code>dockMenu</code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'."
				},
				{
					"name": "getMenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.unified.Menu"
					},
					"description": "Gets content of aggregation <code>menu</code>.\n\nMenu that shall be opened when the button is clicked"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.MenuButton."
				},
				{
					"name": "setDockButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDockButton",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>dockButton</code>"
						}
					],
					"description": "Sets a new value for property <code>dockButton</code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDockMenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDockMenu",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>dockMenu</code>"
						}
					],
					"description": "Sets a new value for property <code>dockMenu</code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MenuButton",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMenu",
							"type": "sap.ui.unified.Menu",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>menu</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MenuItem",
			"basename": "MenuItem",
			"resource": "sap/ui/commons/MenuItem.js",
			"module": "sap/ui/commons/MenuItem",
			"static": true,
			"visibility": "public",
			"since": "1.0.0",
			"extends": "sap.ui.unified.MenuItem",
			"description": "Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically.",
			"deprecated": {
				"since": "1.21.0",
				"text": "Please use the element <code>sap.ui.unified.MenuItem</code> of the library <code>sap.ui.unified</code> instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new MenuItem element."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.MenuItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItem.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.MenuItem."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MenuItemBase",
			"basename": "MenuItemBase",
			"resource": "sap/ui/commons/MenuItemBase.js",
			"module": "sap/ui/commons/MenuItemBase",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.0.0",
			"extends": "sap.ui.unified.MenuItemBase",
			"description": "Abstract base class for menu item which provides common properties and events for all concrete item implementations.",
			"deprecated": {
				"since": "1.21.0",
				"text": "Please use the element <code>sap.ui.unified.MenuItemBase</code> of the library <code>sap.ui.unified</code> instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Abstract base class <code>MenuItemBase</code> for menu item elements. Please use concrete subclasses."
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MenuTextFieldItem",
			"basename": "MenuTextFieldItem",
			"resource": "sap/ui/commons/MenuTextFieldItem.js",
			"module": "sap/ui/commons/MenuTextFieldItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.unified.MenuTextFieldItem",
			"description": "Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
			"deprecated": {
				"since": "1.21.0",
				"text": "Please use the control <code>sap.ui.unified.MenuTextFieldItem</code> of the library <code>sap.ui.unified</code> instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new MenuTextFieldItem element."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.MenuTextFieldItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.MenuTextFieldItem.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.MenuTextFieldItem."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Message",
			"basename": "Message",
			"resource": "sap/ui/commons/Message.js",
			"module": "sap/ui/commons/Message",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Creates the \"Message\"s to be supplied to the \"MessageBar\" Control.",
			"deprecated": {
				"since": "1.4.0",
				"text": "A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "type",
						"type": "sap.ui.commons.MessageType",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)",
						"methods": [
							"getType",
							"setType"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Message short text. (Mandatory)",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "associatedElementId",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Associated UI element ID. (Optional)\nFor navigation to error field.",
						"methods": [
							"getAssociatedElementId",
							"setAssociatedElementId"
						]
					},
					{
						"name": "design",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Internal attribute, used to force the display of the \"short\" or the \"long\" text only.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Message.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "bindDetails",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnCallBack",
							"type": "function",
							"optional": false,
							"description": "the callback function"
						}
					],
					"description": "Registers a callback function to be invoked if long text Details are to be made available.\n\nThis callback function will be supplied the corresponding Message \"id\", and should\nreturn the (simple) HTML string to be displayed within the Message Details Dialog.\n\nE.g.: myMessage.bindDetails(getDetails);\nfunction getDetails(sId) {... return htmlString;}"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Message with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAssociatedElementId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>associatedElementId</code>"
					},
					"description": "Gets current value of property <code>associatedElementId</code>.\n\nAssociated UI element ID. (Optional)\nFor navigation to error field."
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nInternal attribute, used to force the display of the \"short\" or the \"long\" text only."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Message."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nMessage short text. (Mandatory)"
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageType",
						"description": "Value of property <code>type</code>"
					},
					"description": "Gets current value of property <code>type</code>.\n\n\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)"
				},
				{
					"name": "setAssociatedElementId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAssociatedElementId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>associatedElementId</code>"
						}
					],
					"description": "Sets a new value for property <code>associatedElementId</code>.\n\nAssociated UI element ID. (Optional)\nFor navigation to error field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nInternal attribute, used to force the display of the \"short\" or the \"long\" text only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nMessage short text. (Mandatory)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "sap.ui.commons.MessageType",
							"optional": false,
							"description": "New value for property <code>type</code>"
						}
					],
					"description": "Sets a new value for property <code>type</code>.\n\n\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MessageBar",
			"basename": "MessageBar",
			"resource": "sap/ui/commons/MessageBar.js",
			"module": "sap/ui/commons/MessageBar",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Creates an instance of a MessageBar Control, for displaying messages.",
			"deprecated": {
				"since": "1.4.0",
				"text": "Instead, use the <code>sap.m.MessagePopover</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "anchorID",
						"type": "string",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Element ID upon which the MessageBar will be initially positioned.",
						"methods": [
							"getAnchorID",
							"setAnchorID"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether or not the MessageBar is visible. Invisible controls are not rendered.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "maxToasted",
						"type": "int",
						"defaultValue": 3,
						"group": "Misc",
						"visibility": "public",
						"description": "Maximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.",
						"methods": [
							"getMaxToasted",
							"setMaxToasted"
						]
					},
					{
						"name": "maxListed",
						"type": "int",
						"defaultValue": 7,
						"group": "Misc",
						"visibility": "public",
						"description": "Maximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit.",
						"methods": [
							"getMaxListed",
							"setMaxListed"
						]
					},
					{
						"name": "anchorSnapPoint",
						"type": "string",
						"defaultValue": "begin top",
						"group": "Misc",
						"visibility": "public",
						"description": "Type: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.",
						"methods": [
							"getAnchorSnapPoint",
							"setAnchorSnapPoint"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new MessageBar.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addMessages",
					"visibility": "public",
					"parameters": [
						{
							"name": "aAMessages",
							"type": "sap.ui.commons.Message[]",
							"optional": false,
							"description": "Array of messages."
						}
					],
					"description": "Adds/updates a supplied list of messages.\nThe MessageBar will appear if at least one message exists."
				},
				{
					"name": "deleteAllMessages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageBar",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Deletes all messages."
				},
				{
					"name": "deleteMessages",
					"visibility": "public",
					"parameters": [
						{
							"name": "aIds",
							"type": "string[]",
							"optional": false,
							"description": "Messages IDs to be deleted."
						}
					],
					"description": "Deletes a supplied list of messages.\nThe MessageBar will disappear when no message remains."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.MessageBar with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAnchorID",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>anchorID</code>"
					},
					"description": "Gets current value of property <code>anchorID</code>.\n\nElement ID upon which the MessageBar will be initially positioned.\n\nDefault value is <code></code>."
				},
				{
					"name": "getAnchorSnapPoint",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>anchorSnapPoint</code>"
					},
					"description": "Gets current value of property <code>anchorSnapPoint</code>.\n\nType: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.\n\nDefault value is <code>begin top</code>."
				},
				{
					"name": "getMaxListed",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxListed</code>"
					},
					"description": "Gets current value of property <code>maxListed</code>.\n\nMaximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7</code>."
				},
				{
					"name": "getMaxToasted",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxToasted</code>"
					},
					"description": "Gets current value of property <code>maxToasted</code>.\n\nMaximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.\n\nDefault value is <code>3</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.MessageBar."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nSpecifies whether or not the MessageBar is visible. Invisible controls are not rendered.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setAnchorID",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAnchorID",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>anchorID</code>"
						}
					],
					"description": "Sets a new value for property <code>anchorID</code>.\n\nElement ID upon which the MessageBar will be initially positioned.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setAnchorSnapPoint",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAnchorSnapPoint",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>anchorSnapPoint</code>"
						}
					],
					"description": "Sets a new value for property <code>anchorSnapPoint</code>.\n\nType: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>begin top</code>."
				},
				{
					"name": "setMaxListed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxListed",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxListed</code>"
						}
					],
					"description": "Sets a new value for property <code>maxListed</code>.\n\nMaximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>7</code>."
				},
				{
					"name": "setMaxToasted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxToasted",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxToasted</code>"
						}
					],
					"description": "Sets a new value for property <code>maxToasted</code>.\n\nMaximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>3</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageBar",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Setter for property <code>visible</code>.\n\nDefault value is <code>true</code>\n\nThe default implementation of function <code>setVisible()</code> is enhanced\nin order to toggle the <code>visibility:hidden;</code> attribute over the control."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.commons.MessageBox",
			"basename": "MessageBox",
			"resource": "sap/ui/commons/MessageBox.js",
			"module": "sap/ui/commons/MessageBox",
			"static": true,
			"visibility": "public",
			"since": "0.8.8",
			"description": "Provides methods to create standard alerts, confirmation dialogs, or arbitrary message boxes.\n\nAs <code>MessageBox</code> is a static class, a <code>jQuery.sap.require(\"sap.ui.commons.MessageBox\");</code> statement\nmust be explicitly executed before the class can be used. Example:\n<pre>\n  jQuery.sap.require(\"sap.ui.commons.MessageBox\");\n  sap.ui.commons.MessageBox.show(\n      \"This message should appear in the message box.\",\n      sap.ui.commons.MessageBox.Icon.INFORMATION,\n      \"My message box title\",\n      [sap.ui.commons.MessageBox.Action.YES, sap.ui.commons.MessageBox.Action.NO],\n      function() { / * do something * / }\n  );\n</pre>",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.MessageBox</code> control."
			},
			"methods": [
				{
					"name": "alert",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "vMessage",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "Message to be displayed in the alert box"
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": true,
							"description": "callback function to be called when the user closed the dialog"
						},
						{
							"name": "sTitle",
							"type": "string",
							"optional": true,
							"description": "Title to be displayed in the alert box"
						},
						{
							"name": "sDialogId",
							"type": "string",
							"optional": true,
							"description": "ID to be used for the alert box. Intended for test scenarios, not recommended for productive apps"
						}
					],
					"description": "Displays an alert box with the given message and an OK button (no icons).\nIf a callback is given, it is called after the alert box has been closed\nby the user via the OK button or via the Close icon. The callback is called\nwith the following signature:\n\n<pre>\n  function ()\n</pre>\n\nThe alert box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback</code> to continue work after the\nuser closed the alert box."
				},
				{
					"name": "confirm",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "vMessage",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "Message to display"
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": true,
							"description": "Callback to be called"
						},
						{
							"name": "sTitle",
							"type": "string",
							"optional": true,
							"description": "Title to display"
						},
						{
							"name": "sDialogId",
							"type": "string",
							"optional": true,
							"description": "ID to be used for the confirmation dialog. Intended for test scenarios, not recommended for productive apps"
						}
					],
					"description": "Displays a confirmation dialog box with the given message, a question icon,\nan OK button, and a Cancel button. If a callback is given, it is called after the\nalert box has been closed by the user via one of the buttons or via the close icon.\nThe callback is called with the following signature\n\n<pre>\n  function(bConfirmed)\n</pre>\n\nwhere bConfirmed is set to true when the user has activated the OK button.\n\nThe confirmation dialog box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback</code> to continue work after the\nuser closed the alert box."
				},
				{
					"name": "show",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "vMessage",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "The message to be displayed."
						},
						{
							"name": "oIcon",
							"type": "sap.ui.commons.MessageBox.Icon",
							"optional": true,
							"defaultValue": "None",
							"description": "The icon to be displayed."
						},
						{
							"name": "sTitle",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "The title of the message box."
						},
						{
							"name": "vActions",
							"type": "sap.ui.commons.MessageBox.Action|sap.ui.commons.MessageBox.Action[]",
							"optional": true,
							"description": "Either a single action, or an array of actions.\n     If no action(s) are given, the single action MessageBox.Action.OK is taken as a default for the parameter."
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": true,
							"description": "Function to be called when the user has pressed a button or has closed the message box."
						},
						{
							"name": "oDefaultAction",
							"type": "sap.ui.commons.MessageBox.Action",
							"optional": true,
							"description": "Must be one of the actions provided in vActions."
						},
						{
							"name": "sDialogId",
							"type": "string",
							"optional": true,
							"description": "ID to be used for the dialog. Intended for test scenarios, not recommended for productive apps"
						}
					],
					"description": "Creates and displays a simple message box with the given text and buttons, and optionally other parts.\nAfter the user has selected a button or closed the message box using the close icon, the <code>callback</code>\nfunction is invoked when given.\n\nThe only mandatory parameter is <code>vMessage</code>. Either a string with the corresponding text or even\na layout control could be provided.\n\nThe created dialog box is executed asynchronously. When it has been created and registered for rendering,\nthis function returns without waiting for a user reaction.\n\nWhen applications have to react on the users choice, they have to provide a callback function and\npostpone any reaction on the user choice until that callback is triggered.\n\nThe signature of the callback is\n\n  function (oAction);\n\nwhere <code>oAction</code> is the button that the user has pressed. When the user has pressed the close button,\na MessageBox.Action.Close is returned."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.MessageBox.Action",
			"basename": "Action",
			"resource": "sap/ui/commons/MessageBox.js",
			"module": "sap/ui/commons/MessageBox",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of supported actions in a MessageBox.\n\nEach action is represented as a button in the message box. The values of this enumeration are used for both,\nspecifying the set of allowed actions as well as reporting back the user choice.",
			"properties": [
				{
					"name": "ABORT",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds an \"Abort\" button to the message box."
				},
				{
					"name": "CANCEL",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds a \"Cancel\" button to the message box."
				},
				{
					"name": "CLOSE",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds a \"Close\" button to the message box."
				},
				{
					"name": "IGNORE",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds an \"Ignore\" button to the message box."
				},
				{
					"name": "NO",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds a \"No\" button to the message box."
				},
				{
					"name": "OK",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds an \"Ok\" button to the message box."
				},
				{
					"name": "RETRY",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds a \"Retry\" button to the message box."
				},
				{
					"name": "YES",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Adds a \"Yes\" button to the message box."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.MessageBox.Icon",
			"basename": "Icon",
			"resource": "sap/ui/commons/MessageBox.js",
			"module": "sap/ui/commons/MessageBox",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of the pre-defined icons that can be used in a MessageBox.",
			"properties": [
				{
					"name": "CRITICAL",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Shows the critical error icon in the message box.",
					"deprecated": {
						"since": "1.9.1",
						"text": "The error icon is used instead"
					}
				},
				{
					"name": "ERROR",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Shows the error icon in the message box."
				},
				{
					"name": "INFORMATION",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Shows the information icon in the message box."
				},
				{
					"name": "NONE",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Shows no icon in the message box."
				},
				{
					"name": "QUESTION",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Shows the question icon in the message box."
				},
				{
					"name": "SUCCESS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Shows the success icon in the message box."
				},
				{
					"name": "WARNING",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Shows the warning icon in the message box."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MessageList",
			"basename": "MessageList",
			"resource": "sap/ui/commons/MessageList.js",
			"module": "sap/ui/commons/MessageList",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Instantiated by the \"MessageBar\" Control if the user requests to generate the corresponding \"MessageList\".",
			"deprecated": {
				"since": "1.4.0",
				"text": "A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether or not the MessageList is visible. Invisible controls are not rendered.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "anchorId",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "ID of the anchor under which the MessageList will render.",
						"methods": [
							"getAnchorId",
							"setAnchorId"
						]
					},
					{
						"name": "maxListed",
						"type": "string",
						"defaultValue": "7",
						"group": "Misc",
						"visibility": "public",
						"description": "Maximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.",
						"methods": [
							"getMaxListed",
							"setMaxListed"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new MessageList.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.MessageList with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAnchorId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>anchorId</code>"
					},
					"description": "Gets current value of property <code>anchorId</code>.\n\nID of the anchor under which the MessageList will render."
				},
				{
					"name": "getMaxListed",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>maxListed</code>"
					},
					"description": "Gets current value of property <code>maxListed</code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.MessageList."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nSpecifies whether or not the MessageList is visible. Invisible controls are not rendered.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setAnchorId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAnchorId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>anchorId</code>"
						}
					],
					"description": "Sets a new value for property <code>anchorId</code>.\n\nID of the anchor under which the MessageList will render.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMaxListed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageList",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMaxListed",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>maxListed</code>"
						}
					],
					"description": "Sets a new value for property <code>maxListed</code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>7</code>."
				},
				{
					"name": "setMessages",
					"visibility": "public",
					"parameters": [
						{
							"name": "aMessages",
							"type": "sap.ui.commons.Message[]",
							"optional": false,
							"description": "Message list."
						}
					],
					"description": "Sets the list of Messages to be displayed and re-renders this Control if it is visible."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageList",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Setter for property <code>visible</code>.\n\nDefault value is <code>true</code>\n\nThe default implementation of function \"setVisible()\" is overwritten\nin order to invoke the open() and close() of the MessageList Popup."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.MessageToast",
			"basename": "MessageToast",
			"resource": "sap/ui/commons/MessageToast.js",
			"module": "sap/ui/commons/MessageToast",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Responsible for displaying the new incoming messages, one at the time, on top of the MessageBar.",
			"deprecated": {
				"since": "1.4.0",
				"text": "Instead, use the <code>sap.m.MessageToast</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "anchorId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "ID of the anchor on top of which the MessageToast is to render.",
						"methods": [
							"getAnchorId",
							"setAnchorId"
						]
					}
				],
				"events": [
					{
						"name": "next",
						"visibility": "public",
						"description": "Fired once the <code>toast()</code> method is over, so that the MessageBar can \"toast\" another message if needed.",
						"methods": [
							"attachNext",
							"detachNext",
							"fireNext"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new MessageToast.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "next",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired once the <code>toast()</code> method is over, so that the MessageBar can \"toast\" another message if needed."
				}
			],
			"methods": [
				{
					"name": "attachNext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageToast",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.MessageToast</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>next</code> event of this <code>sap.ui.commons.MessageToast</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.MessageToast</code> itself.\n\nFired once the <code>toast()</code> method is over, so that the MessageBar can \"toast\" another message if needed."
				},
				{
					"name": "detachNext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageToast",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>next</code> event of this <code>sap.ui.commons.MessageToast</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.MessageToast with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireNext",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.MessageToast",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>next</code> to attached listeners."
				},
				{
					"name": "getAnchorId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>anchorId</code>"
					},
					"description": "Gets current value of property <code>anchorId</code>.\n\nID of the anchor on top of which the MessageToast is to render."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.MessageToast."
				},
				{
					"name": "isIdle",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"description": "Returns the idle state of the control. Returns true if no message is being toasted."
				},
				{
					"name": "setAnchorId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.MessageToast",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAnchorId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>anchorId</code>"
						}
					],
					"description": "Sets a new value for property <code>anchorId</code>.\n\nID of the anchor on top of which the MessageToast is to render.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "toast",
					"visibility": "public",
					"parameters": [
						{
							"name": "oMessage",
							"type": "sap.ui.commons.Message",
							"optional": false,
							"description": "The Message to be toasted."
						},
						{
							"name": "sAnchorId",
							"type": "string",
							"optional": false,
							"description": "DOM ID of the anchor against which the Toast Arrow should align for a given Toast."
						}
					],
					"description": "Triggers the toasting of a message, on top of the MessageBar.\nIf no message is supplied, displays the \"Multiple new messages...\" message.\n\nReceives the list of Messages to be displayed,\nand re-renders this Control if it is visible."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.MessageType",
			"basename": "MessageType",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "[Enter description for MessageType]",
			"properties": [
				{
					"name": "Error",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Error message"
				},
				{
					"name": "Success",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Successful message"
				},
				{
					"name": "Warning",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Warning message"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Paginator",
			"basename": "Paginator",
			"resource": "sap/ui/commons/Paginator.js",
			"module": "sap/ui/commons/Paginator",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Provides navigation between pages within a list of numbered pages.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "currentPage",
						"type": "int",
						"defaultValue": 1,
						"group": "Misc",
						"visibility": "public",
						"description": "Represents the current page (first page has index 1, not 0, to match the visual number)",
						"methods": [
							"getCurrentPage",
							"setCurrentPage"
						]
					},
					{
						"name": "numberOfPages",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Represents the overall number of pages that are embedded into the parent control",
						"methods": [
							"getNumberOfPages",
							"setNumberOfPages"
						]
					}
				],
				"events": [
					{
						"name": "page",
						"visibility": "public",
						"description": "Event is fired when the user navigates to another page by selecting it directly, or by jumping forward/backward.",
						"parameters": {
							"srcPage": {
								"name": "srcPage",
								"type": "int",
								"description": "The page which is the current one before the page event is fired (and another page is displayed)"
							},
							"targetPage": {
								"name": "targetPage",
								"type": "int",
								"description": "The page that shall be displayed next after the page event is fired.\n\nThe page number is 1-based: the first page has index 1, not 0, to match the number visible in the UI."
							},
							"type": {
								"name": "type",
								"type": "sap.ui.commons.PaginatorEvent",
								"description": "Provides the values 'First', 'Last', 'Next', 'Previous', 'Goto'. The event parameter informs the application\nhow the user navigated to the new page: Whether the 'Next' button was used, or another button, or whether the page was directly\nselected"
							}
						},
						"methods": [
							"attachPage",
							"detachPage",
							"firePage"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Paginator.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "page",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"srcPage": {
											"name": "srcPage",
											"type": "int",
											"optional": false,
											"description": "The page which is the current one before the page event is fired (and another page is displayed)"
										},
										"targetPage": {
											"name": "targetPage",
											"type": "int",
											"optional": false,
											"description": "The page that shall be displayed next after the page event is fired.\n\nThe page number is 1-based: the first page has index 1, not 0, to match the number visible in the UI."
										},
										"type": {
											"name": "type",
											"type": "sap.ui.commons.PaginatorEvent",
											"optional": false,
											"description": "Provides the values 'First', 'Last', 'Next', 'Previous', 'Goto'. The event parameter informs the application\nhow the user navigated to the new page: Whether the 'Next' button was used, or another button, or whether the page was directly\nselected"
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the user navigates to another page by selecting it directly, or by jumping forward/backward."
				}
			],
			"methods": [
				{
					"name": "attachPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Paginator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Paginator</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>page</code> event of this <code>sap.ui.commons.Paginator</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Paginator</code> itself.\n\nEvent is fired when the user navigates to another page by selecting it directly, or by jumping forward/backward."
				},
				{
					"name": "detachPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Paginator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>page</code> event of this <code>sap.ui.commons.Paginator</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Paginator with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePage",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Paginator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>page</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>srcPage</code> of type <code>int</code>The page which is the current one before the page event is fired (and another page is displayed)</li>\n<li><code>targetPage</code> of type <code>int</code>The page that shall be displayed next after the page event is fired.\n\nThe page number is 1-based: the first page has index 1, not 0, to match the number visible in the UI.</li>\n<li><code>type</code> of type <code>sap.ui.commons.PaginatorEvent</code>Provides the values 'First', 'Last', 'Next', 'Previous', 'Goto'. The event parameter informs the application\nhow the user navigated to the new page: Whether the 'Next' button was used, or another button, or whether the page was directly\nselected</li>\n</ul>"
				},
				{
					"name": "getCurrentPage",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>currentPage</code>"
					},
					"description": "Gets current value of property <code>currentPage</code>.\n\nRepresents the current page (first page has index 1, not 0, to match the visual number)\n\nDefault value is <code>1</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Paginator."
				},
				{
					"name": "getNumberOfPages",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>numberOfPages</code>"
					},
					"description": "Gets current value of property <code>numberOfPages</code>.\n\nRepresents the overall number of pages that are embedded into the parent control"
				},
				{
					"name": "setCurrentPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Paginator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCurrentPage",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>currentPage</code>"
						}
					],
					"description": "Sets a new value for property <code>currentPage</code>.\n\nRepresents the current page (first page has index 1, not 0, to match the visual number)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "setNumberOfPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Paginator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iNumberOfPages",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>numberOfPages</code>"
						}
					],
					"description": "Sets a new value for property <code>numberOfPages</code>.\n\nRepresents the overall number of pages that are embedded into the parent control\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.PaginatorEvent",
			"basename": "PaginatorEvent",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Distinct paginator event types",
			"properties": [
				{
					"name": "First",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "First page event"
				},
				{
					"name": "Goto",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Go to page event"
				},
				{
					"name": "Last",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Last page event"
				},
				{
					"name": "Next",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Next page event"
				},
				{
					"name": "Previous",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Previous page event"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Panel",
			"basename": "Panel",
			"resource": "sap/ui/commons/Panel.js",
			"module": "sap/ui/commons/Panel",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Represents a container with scroll functionality, that can be used for text and controls.\nThe Panel does not layout the embedded controls.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Panel</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the width of the Panel in CSS size.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the height of the Panel in CSS size.\nPer default, the height for the Panel is automatically adjusted to the content.\nDimension allows to explicitly specify the height.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Represents the state of the of the Panel (enabled or disabled)",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "scrollLeft",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines the scroll position from left to right. Value \"0\" means leftmost position.",
						"methods": [
							"getScrollLeft",
							"setScrollLeft"
						]
					},
					{
						"name": "scrollTop",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines the scroll position from top to bottom. Value \"0\" means topmost position.",
						"methods": [
							"getScrollTop",
							"setScrollTop"
						]
					},
					{
						"name": "applyContentPadding",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the Panel will have padding.\nPadding is theme-dependent.",
						"methods": [
							"getApplyContentPadding",
							"setApplyContentPadding"
						]
					},
					{
						"name": "collapsed",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one.",
						"methods": [
							"getCollapsed",
							"setCollapsed"
						]
					},
					{
						"name": "areaDesign",
						"type": "sap.ui.commons.enums.AreaDesign",
						"defaultValue": "Fill",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the background color.\nNote that color settings are theme-dependent.",
						"methods": [
							"getAreaDesign",
							"setAreaDesign"
						]
					},
					{
						"name": "borderDesign",
						"type": "sap.ui.commons.enums.BorderDesign",
						"defaultValue": "Box",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.",
						"methods": [
							"getBorderDesign",
							"setBorderDesign"
						]
					},
					{
						"name": "showCollapseIcon",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the Panel will have an icon for collapsing/expanding, or not.",
						"methods": [
							"getShowCollapseIcon",
							"setShowCollapseIcon"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the text that is rendered in the Panel header.\nCan be used to create a simple titles that do not require an icon in the header.",
						"methods": [
							"getText",
							"setText"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregates the controls that are contained in the Panel.\nIt is recommended to use a layout control as single direct child.\nWhen the Panel dimensions are set, the child control may have width and height of 100%.\nWhen the dimensions are not set, the child defines the size of the Panel.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "title",
						"singularName": "title",
						"type": "sap.ui.core.Title",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Aggregates the title element of the Panel.\nFor text titles only, you alternatively could use setText() which also creates a title in the background.",
						"methods": [
							"getTitle",
							"destroyTitle",
							"setTitle"
						]
					},
					{
						"name": "buttons",
						"singularName": "button",
						"type": "sap.ui.commons.Button",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The buttons that shall be displayed in the Panel header",
						"methods": [
							"getButtons",
							"destroyButtons",
							"insertButton",
							"addButton",
							"removeButton",
							"indexOfButton",
							"removeAllButtons"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Panel.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "the button to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some button to the aggregation <code>buttons</code>."
				},
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "destroyButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the buttons in the aggregation <code>buttons</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "destroyTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the title in the aggregation <code>title</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Panel with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getApplyContentPadding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>applyContentPadding</code>"
					},
					"description": "Gets current value of property <code>applyContentPadding</code>.\n\nDetermines whether the Panel will have padding.\nPadding is theme-dependent.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getAreaDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.enums.AreaDesign",
						"description": "Value of property <code>areaDesign</code>"
					},
					"description": "Gets current value of property <code>areaDesign</code>.\n\nDetermines the background color.\nNote that color settings are theme-dependent.\n\nDefault value is <code>Fill</code>."
				},
				{
					"name": "getBorderDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.enums.BorderDesign",
						"description": "Value of property <code>borderDesign</code>"
					},
					"description": "Gets current value of property <code>borderDesign</code>.\n\nDetermines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.\n\nDefault value is <code>Box</code>."
				},
				{
					"name": "getButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button[]"
					},
					"description": "Gets content of aggregation <code>buttons</code>.\n\nThe buttons that shall be displayed in the Panel header"
				},
				{
					"name": "getCollapsed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>collapsed</code>"
					},
					"description": "Gets current value of property <code>collapsed</code>.\n\nDetermines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nAggregates the controls that are contained in the Panel.\nIt is recommended to use a layout control as single direct child.\nWhen the Panel dimensions are set, the child control may have width and height of 100%.\nWhen the dimensions are not set, the child defines the size of the Panel."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nRepresents the state of the of the Panel (enabled or disabled)\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getFocusInfo",
					"visibility": "protected"
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nDetermines the height of the Panel in CSS size.\nPer default, the height for the Panel is automatically adjusted to the content.\nDimension allows to explicitly specify the height."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Panel."
				},
				{
					"name": "getScrollLeft",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The scroll position."
					},
					"description": "Returns the scroll position of the panel in pixels from the left.\nReturns 0 if not rendered yet.\nAlso internally updates the control property."
				},
				{
					"name": "getScrollTop",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The scroll position."
					},
					"description": "Returns the scroll position of the panel in pixels from the top.\nReturns 0 if not rendered yet.\nAlso internally updates the control property."
				},
				{
					"name": "getShowCollapseIcon",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showCollapseIcon</code>"
					},
					"description": "Gets current value of property <code>showCollapseIcon</code>.\n\nDetermines whether the Panel will have an icon for collapsing/expanding, or not.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The text in the Panel header."
					},
					"description": "Returns the text that is rendered in the Panel header.\nIf a Title control was used it returns the text of the Title control."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Title"
					},
					"description": "Gets content of aggregation <code>title</code>.\n\nAggregates the title element of the Panel.\nFor text titles only, you alternatively could use setText() which also creates a title in the background."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDetermines the width of the Panel in CSS size.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "indexOfButton",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "The button whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.Button</code> in the aggregation <code>buttons</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "the button to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex</code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"
						}
					],
					"description": "Inserts a button into the aggregation <code>buttons</code>."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>buttons</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "The removed button or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vButton",
							"type": "int|string|sap.ui.commons.Button",
							"optional": false,
							"description": "The buttonto remove or its index or id"
						}
					],
					"description": "Removes a button from the aggregation <code>buttons</code>."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setApplyContentPadding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "bPadding",
							"type": "boolean",
							"optional": false,
							"description": "Whether the Panel should have padding."
						}
					],
					"description": "Property setter for the padding"
				},
				{
					"name": "setAreaDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAreaDesign",
							"type": "sap.ui.commons.enums.AreaDesign",
							"optional": false,
							"description": "New value for property <code>areaDesign</code>"
						}
					],
					"description": "Sets a new value for property <code>areaDesign</code>.\n\nDetermines the background color.\nNote that color settings are theme-dependent.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Fill</code>."
				},
				{
					"name": "setBorderDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBorderDesign",
							"type": "sap.ui.commons.enums.BorderDesign",
							"optional": false,
							"description": "New value for property <code>borderDesign</code>"
						}
					],
					"description": "Sets a new value for property <code>borderDesign</code>.\n\nDetermines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Box</code>."
				},
				{
					"name": "setCollapsed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "bCollapsed",
							"type": "boolean",
							"optional": false,
							"description": "Whether the Panel should be collapsed or not."
						}
					],
					"description": "Property setter for the \"collapsed\" state"
				},
				{
					"name": "setDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "The width of the panel as CSS size."
						},
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "The height of the panel as CSS size."
						}
					],
					"description": "Sets the dimensions of the panel."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "Whether the Panel should be enabled or not."
						}
					],
					"description": "Property setter for the \"enabled\" state"
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "The height of the panel as CSS size."
						}
					],
					"description": "Sets the height of the panel."
				},
				{
					"name": "setScrollLeft",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iPosition",
							"type": "int",
							"optional": false,
							"description": "The position to scroll to."
						}
					],
					"description": "Sets the scroll position of the panel in pixels from the left."
				},
				{
					"name": "setScrollTop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iPosition",
							"type": "int",
							"optional": false,
							"description": "The position to scroll to."
						}
					],
					"description": "Sets the scrolls position of the panel in pixels from the top."
				},
				{
					"name": "setShowCollapseIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowCollapseIcon",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showCollapseIcon</code>"
						}
					],
					"description": "Sets a new value for property <code>showCollapseIcon</code>.\n\nDetermines whether the Panel will have an icon for collapsing/expanding, or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "The text to render in the header."
						}
					],
					"description": "Sets the text that will be rendered in the Panel header."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "oTitle",
							"type": "sap.ui.core.Title",
							"optional": false,
							"description": "The Title to render in the header."
						}
					],
					"description": "Sets a Tille control that will be rendered in the Panel header."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Panel",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "The width of the panel as CSS size."
						}
					],
					"description": "Sets the width of the panel."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.PasswordField",
			"basename": "PasswordField",
			"resource": "sap/ui/commons/PasswordField.js",
			"module": "sap/ui/commons/PasswordField",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.TextField",
			"description": "A text field with masked characters which borrows its properties and methods from TextField.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Input</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new PasswordField."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.PasswordField with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.PasswordField."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ProgressIndicator",
			"basename": "ProgressIndicator",
			"resource": "sap/ui/commons/ProgressIndicator.js",
			"module": "sap/ui/commons/ProgressIndicator",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Shows the progress of a process in a graphical way.\nThe indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate.\nThe indicator status can be interactive.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.ProgressIndicator</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "barColor",
						"type": "sap.ui.core.BarColor",
						"defaultValue": "NEUTRAL",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).",
						"methods": [
							"getBarColor",
							"setBarColor"
						]
					},
					{
						"name": "displayValue",
						"type": "string",
						"defaultValue": "0%",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the text value that will be displayed in the bar.",
						"methods": [
							"getDisplayValue",
							"setDisplayValue"
						]
					},
					{
						"name": "percentValue",
						"type": "int",
						"defaultValue": 0,
						"group": "Data",
						"visibility": "public",
						"description": "Determines the numerical value for the displayed length of the progress bar.",
						"methods": [
							"getPercentValue",
							"setPercentValue"
						]
					},
					{
						"name": "showValue",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the percent value shall be rendered inside the bar.",
						"methods": [
							"getShowValue",
							"setShowValue"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the width of the control.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new ProgressIndicator.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ProgressIndicator with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getBarColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.BarColor",
						"description": "Value of property <code>barColor</code>"
					},
					"description": "Gets current value of property <code>barColor</code>.\n\nDetermines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nDefault value is <code>NEUTRAL</code>."
				},
				{
					"name": "getDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>displayValue</code>"
					},
					"description": "Gets current value of property <code>displayValue</code>.\n\nDetermines the text value that will be displayed in the bar.\n\nDefault value is <code>0%</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nDetermines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ProgressIndicator."
				},
				{
					"name": "getPercentValue",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>percentValue</code>"
					},
					"description": "Gets current value of property <code>percentValue</code>.\n\nDetermines the numerical value for the displayed length of the progress bar.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getShowValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showValue</code>"
					},
					"description": "Gets current value of property <code>showValue</code>.\n\nDetermines whether the percent value shall be rendered inside the bar.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDetermines the width of the control.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setBarColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ProgressIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBarColor",
							"type": "sap.ui.core.BarColor",
							"optional": false,
							"description": "New value for property <code>barColor</code>"
						}
					],
					"description": "Sets a new value for property <code>barColor</code>.\n\nDetermines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>NEUTRAL</code>."
				},
				{
					"name": "setDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ProgressIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>displayValue</code>"
						}
					],
					"description": "Sets a new value for property <code>displayValue</code>.\n\nDetermines the text value that will be displayed in the bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0%</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ProgressIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nDetermines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setPercentValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ProgressIndicator",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "iPercentValue",
							"type": "int",
							"optional": false,
							"description": "The new percent value of the ProgressIndicator."
						}
					],
					"description": "Sets the new percent value which the ProgressIndicator should display.\nA new rendering is not necessary, only the bar has to be moved."
				},
				{
					"name": "setShowValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ProgressIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowValue",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showValue</code>"
						}
					],
					"description": "Sets a new value for property <code>showValue</code>.\n\nDetermines whether the percent value shall be rendered inside the bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ProgressIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDetermines the width of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RadioButton",
			"basename": "RadioButton",
			"resource": "sap/ui/commons/RadioButton.js",
			"module": "sap/ui/commons/RadioButton",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options.\n\nUsually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using\nsap.ui.commons.RadioButtonGroup), thus providing a limited choice for the user. An event is triggered when\nthe user makes a change of the selection.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.RadioButton</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Defines the text displayed next to the RadioButton.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Displays the disabled controls in another color, depending on the customer settings.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether the user can select the RadioButton.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "selected",
						"type": "boolean",
						"defaultValue": false,
						"group": "Data",
						"visibility": "public",
						"description": "Specifies the select state of the RadioButton.",
						"methods": [
							"getSelected",
							"setSelected"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Data",
						"visibility": "public",
						"description": "Enumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "textDirection",
						"type": "sap.ui.core.TextDirection",
						"defaultValue": "Inherit",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container.",
						"methods": [
							"getTextDirection",
							"setTextDirection"
						]
					},
					{
						"name": "groupName",
						"type": "string",
						"defaultValue": "sapUiRbDefaultGroup",
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.",
						"methods": [
							"getGroupName",
							"setGroupName"
						]
					},
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Can be used for subsequent actions.",
						"methods": [
							"getKey",
							"setKey"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Triggers when the user makes a change on the RadioButton.",
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new RadioButton.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Triggers when the user makes a change on the RadioButton."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RadioButton</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.commons.RadioButton</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RadioButton</code> itself.\n\nTriggers when the user makes a change on the RadioButton."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.commons.RadioButton</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RadioButton with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners."
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nSpecifies whether the user can select the RadioButton.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nDisplays the disabled controls in another color, depending on the customer settings.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getGroupName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>groupName</code>"
					},
					"description": "Gets current value of property <code>groupName</code>.\n\nDefines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.\n\nDefault value is <code>sapUiRbDefaultGroup</code>."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\n\nCan be used for subsequent actions."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RadioButton."
				},
				{
					"name": "getSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>selected</code>"
					},
					"description": "Gets current value of property <code>selected</code>.\n\nSpecifies the select state of the RadioButton.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nDefines the text displayed next to the RadioButton."
				},
				{
					"name": "getTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextDirection",
						"description": "Value of property <code>textDirection</code>"
					},
					"description": "Gets current value of property <code>textDirection</code>.\n\nDefines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"description": "Gets current value of property <code>valueState</code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDetermines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nSpecifies whether the user can select the RadioButton.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nDisplays the disabled controls in another color, depending on the customer settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setGroupName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sGroupName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>groupName</code>"
						}
					],
					"description": "Sets a new value for property <code>groupName</code>.\n\nDefines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>sapUiRbDefaultGroup</code>."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\n\nCan be used for subsequent actions.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSelected",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>selected</code>"
						}
					],
					"description": "Sets a new value for property <code>selected</code>.\n\nSpecifies the select state of the RadioButton.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nDefines the text displayed next to the RadioButton.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "New value for property <code>textDirection</code>"
						}
					],
					"description": "Sets a new value for property <code>textDirection</code>.\n\nDefines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDetermines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RadioButtonGroup",
			"basename": "RadioButtonGroup",
			"resource": "sap/ui/commons/RadioButtonGroup.js",
			"module": "sap/ui/commons/RadioButtonGroup",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The RadioButtonGroup is a basic control that is used to provide area for making interactive\nchoice out of a set of options. It represents a list with items where exactly one item can\nbe selected in a session. For the representation of the single group entries, the RadioButton\nitems are created automatically. For the RadioButton choice, mouse and keyboard navigation\nusage is supported.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.RadioButtonGroup</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Defines the width of the RadioButtonGroup.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "columns",
						"type": "int",
						"defaultValue": 1,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the maximum number of RadioButtons displayed in one line.",
						"methods": [
							"getColumns",
							"setColumns"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Data",
						"visibility": "public",
						"description": "Тhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "selectedIndex",
						"type": "int",
						"defaultValue": 0,
						"group": "Data",
						"visibility": "public",
						"description": "The index of the selected/checked RadioButton.",
						"methods": [
							"getSelectedIndex",
							"setSelectedIndex"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.10.3",
						"description": "Enables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.core.Item",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "The RadioButtons of this RadioButtonGroup.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems",
							"bindItems",
							"unbindItems"
						]
					}
				],
				"defaultAggregation": "items",
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Fires when selection is changed by user interaction.",
						"parameters": {
							"selectedIndex": {
								"name": "selectedIndex",
								"type": "int",
								"description": "Index of the selected RadioButton."
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new RadioButtonGroup.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectedIndex": {
											"name": "selectedIndex",
											"type": "int",
											"optional": false,
											"description": "Index of the selected RadioButton."
										}
									}
								}
							}
						}
					],
					"description": "Fires when selection is changed by user interaction."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RadioButtonGroup</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.commons.RadioButtonGroup</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RadioButtonGroup</code> itself.\n\nFires when selection is changed by user interaction."
				},
				{
					"name": "bindItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>items</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "clone",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "New instance of RadioButtonGroup"
					},
					"description": "Creates a new instance of RadioButtonGroup, with the same settings as the RadioButtonGroup\non which the method is called.\nEvent handlers are not cloned."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.commons.RadioButtonGroup</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RadioButtonGroup with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedIndex</code> of type <code>int</code>Index of the selected RadioButton.</li>\n</ul>"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>columns</code>"
					},
					"description": "Gets current value of property <code>columns</code>.\n\nDetermines the maximum number of RadioButtons displayed in one line.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nSpecifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"since": "1.10.3",
					"description": "Gets current value of property <code>enabled</code>.\n\nEnables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\nThe RadioButtons of this RadioButtonGroup."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RadioButtonGroup."
				},
				{
					"name": "getSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>selectedIndex</code>"
					},
					"description": "Gets current value of property <code>selectedIndex</code>.\n\nThe index of the selected/checked RadioButton.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getSelectedItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "Selected Item"
					},
					"description": "When no item is selected, \"null\" is returned."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"description": "Gets current value of property <code>valueState</code>.\n\nТhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDefines the width of the RadioButtonGroup."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Item</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.core.Item",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "setColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iColumns",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>columns</code>"
						}
					],
					"description": "Sets a new value for property <code>columns</code>.\n\nDetermines the maximum number of RadioButtons displayed in one line.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nSpecifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.10.3",
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nEnables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iSelectedIndex",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>selectedIndex</code>"
						}
					],
					"description": "Sets a new value for property <code>selectedIndex</code>.\n\nThe index of the selected/checked RadioButton.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setSelectedItem",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSelectedItem",
							"type": "sap.ui.core.Item",
							"optional": false,
							"description": "Selected item"
						}
					],
					"description": "Sets the Item as selected and removes the selection from the previous one."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nТhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDefines the width of the RadioButtonGroup.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RadioButtonGroup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>items</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RangeSlider",
			"basename": "RangeSlider",
			"resource": "sap/ui/commons/RangeSlider.js",
			"module": "sap/ui/commons/RangeSlider",
			"static": true,
			"visibility": "public",
			"since": "1.8.0",
			"extends": "sap.ui.commons.Slider",
			"description": "The interactive control is displayed either as a horizontal or a vertical line with two pointers and units of measurement.\nUsers can move the pointers along the line to change a range with graphical support.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.RangeSlider</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value2",
						"type": "float",
						"defaultValue": 80,
						"group": "Appearance",
						"visibility": "public",
						"description": "Current second value of the slider. (Position of the second grip.)\n\n<b>Note:</b> If the value is not in the valid range (between <code>min</code> and <code>max</code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value</code> it will be set to the same value.",
						"methods": [
							"getValue2",
							"setValue2"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>RangeSlider</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RangeSlider with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.Slider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RangeSlider."
				},
				{
					"name": "getValue2",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value2</code>"
					},
					"description": "Gets current value of property <code>value2</code>.\n\nCurrent second value of the slider. (Position of the second grip.)\n\n<b>Note:</b> If the value is not in the valid range (between <code>min</code> and <code>max</code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value</code> it will be set to the same value.\n\nDefault value is <code>80</code>."
				},
				{
					"name": "setValue2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RangeSlider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue2",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value2</code>"
						}
					],
					"description": "Sets a new value for property <code>value2</code>.\n\nCurrent second value of the slider. (Position of the second grip.)\n\n<b>Note:</b> If the value is not in the valid range (between <code>min</code> and <code>max</code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value</code> it will be set to the same value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>80</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RatingIndicator",
			"basename": "RatingIndicator",
			"resource": "sap/ui/commons/RatingIndicator.js",
			"module": "sap/ui/commons/RatingIndicator",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "RatingIndicator is used to let the user do some rating on a given topic. The amount of\nrating symbols can be specified, as well as the URIs to the image icons which shall be\nused as rating symbols. When the user performs a rating, an event is fired.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.RatingIndicator</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines if the rating symbols can be edited.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "maxValue",
						"type": "int",
						"defaultValue": 5,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines the number of displayed rating symbols",
						"methods": [
							"getMaxValue",
							"setMaxValue"
						]
					},
					{
						"name": "value",
						"type": "float",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"bindable": true,
						"description": "Determines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown.",
						"methods": [
							"getValue",
							"setValue",
							"bindValue",
							"unbindValue"
						]
					},
					{
						"name": "averageValue",
						"type": "float",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.",
						"methods": [
							"getAverageValue",
							"setAverageValue"
						]
					},
					{
						"name": "iconSelected",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "The URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set.",
						"methods": [
							"getIconSelected",
							"setIconSelected"
						]
					},
					{
						"name": "iconUnselected",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "The URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.",
						"methods": [
							"getIconUnselected",
							"setIconUnselected"
						]
					},
					{
						"name": "iconHovered",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "The URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.",
						"methods": [
							"getIconHovered",
							"setIconHovered"
						]
					},
					{
						"name": "visualMode",
						"type": "sap.ui.commons.RatingIndicatorVisualMode",
						"defaultValue": "Half",
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)",
						"methods": [
							"getVisualMode",
							"setVisualMode"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "The event is fired when the user has done a rating.",
						"parameters": {
							"value": {
								"name": "value",
								"type": "int",
								"description": "The value of the user rating"
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new RatingIndicator.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "int",
											"optional": false,
											"description": "The value of the user rating"
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the user has done a rating."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RatingIndicator</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.commons.RatingIndicator</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RatingIndicator</code> itself.\n\nThe event is fired when the user has done a rating."
				},
				{
					"name": "bindValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds property <code>value</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>"
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.commons.RatingIndicator</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RatingIndicator with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value</code> of type <code>int</code>The value of the user rating</li>\n</ul>"
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getAverageValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>averageValue</code>"
					},
					"description": "Gets current value of property <code>averageValue</code>.\n\nDetermines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nDetermines if the rating symbols can be edited.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconHovered</code>"
					},
					"description": "Gets current value of property <code>iconHovered</code>.\n\nThe URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set."
				},
				{
					"name": "getIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconSelected</code>"
					},
					"description": "Gets current value of property <code>iconSelected</code>.\n\nThe URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set."
				},
				{
					"name": "getIconUnselected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconUnselected</code>"
					},
					"description": "Gets current value of property <code>iconUnselected</code>.\n\nThe URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set."
				},
				{
					"name": "getMaxValue",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxValue</code>"
					},
					"description": "Gets current value of property <code>maxValue</code>.\n\nDetermines the number of displayed rating symbols\n\nDefault value is <code>5</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RatingIndicator."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nDetermines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getVisualMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicatorVisualMode",
						"description": "Value of property <code>visualMode</code>"
					},
					"description": "Gets current value of property <code>visualMode</code>.\n\nDefines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)\n\nDefault value is <code>Half</code>."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setAverageValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fAverageValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>averageValue</code>"
						}
					],
					"description": "Sets a new value for property <code>averageValue</code>.\n\nDetermines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nDetermines if the rating symbols can be edited.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconHovered",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconHovered</code>"
						}
					],
					"description": "Sets a new value for property <code>iconHovered</code>.\n\nThe URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconSelected",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconSelected</code>"
						}
					],
					"description": "Sets a new value for property <code>iconSelected</code>.\n\nThe URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIconUnselected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconUnselected",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconUnselected</code>"
						}
					],
					"description": "Sets a new value for property <code>iconUnselected</code>.\n\nThe URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMaxValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxValue",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>maxValue</code>"
						}
					],
					"description": "Setter for property <code>maxValue</code>.\n\nDefault value is <code>5</code>\nMinimum value is <code>1</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nDetermines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setVisualMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sVisualMode",
							"type": "sap.ui.commons.RatingIndicatorVisualMode",
							"optional": false,
							"description": "New value for property <code>visualMode</code>"
						}
					],
					"description": "Sets a new value for property <code>visualMode</code>.\n\nDefines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Half</code>."
				},
				{
					"name": "unbindValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RatingIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds property <code>value</code> from model data."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.RatingIndicatorVisualMode",
			"basename": "RatingIndicatorVisualMode",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Possible values for the visualization of float values in the RatingIndicator Control.",
			"properties": [
				{
					"name": "Continuous",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Values are not rounded."
				},
				{
					"name": "Full",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Values are rounded to the nearest integer value (e.g. 1.7 -> 2)."
				},
				{
					"name": "Half",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Values are rounded to the nearest half value (e.g. 1.7 -> 1.5)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ResponsiveContainer",
			"basename": "ResponsiveContainer",
			"resource": "sap/ui/commons/ResponsiveContainer.js",
			"module": "sap/ui/commons/ResponsiveContainer",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Is used to provide a container, which can show different content depending on its current width. It fires an event, whenever a new range is reached. In addition the content of the new range is automatically shown, if it is set.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "The width of the responsive container.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "The width of the responsive container.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "ranges",
						"singularName": "range",
						"type": "sap.ui.commons.ResponsiveContainerRange",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The ranges defined for this container",
						"methods": [
							"getRanges",
							"destroyRanges",
							"insertRange",
							"addRange",
							"removeRange",
							"indexOfRange",
							"removeAllRanges"
						]
					},
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The currently shown content, either the default content or content of a range",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				],
				"associations": [
					{
						"name": "defaultContent",
						"singularName": "defaultContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The default content to show, in case the range does not provide content",
						"methods": [
							"getDefaultContent",
							"setDefaultContent"
						]
					}
				],
				"events": [
					{
						"name": "rangeSwitch",
						"visibility": "public",
						"description": "The event is fired the width of the container reaches a new range.",
						"parameters": {
							"currentRange": {
								"name": "currentRange",
								"type": "sap.ui.commons.ResponsiveContainerRange",
								"description": "The current range"
							}
						},
						"methods": [
							"attachRangeSwitch",
							"detachRangeSwitch",
							"fireRangeSwitch"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ResponsiveContainer.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "rangeSwitch",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"currentRange": {
											"name": "currentRange",
											"type": "sap.ui.commons.ResponsiveContainerRange",
											"optional": false,
											"description": "The current range"
										}
									}
								}
							}
						}
					],
					"description": "The event is fired the width of the container reaches a new range."
				}
			],
			"methods": [
				{
					"name": "addRange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRange",
							"type": "sap.ui.commons.ResponsiveContainerRange",
							"optional": false,
							"description": "the range to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some range to the aggregation <code>ranges</code>."
				},
				{
					"name": "attachRangeSwitch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ResponsiveContainer</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>rangeSwitch</code> event of this <code>sap.ui.commons.ResponsiveContainer</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ResponsiveContainer</code> itself.\n\nThe event is fired the width of the container reaches a new range."
				},
				{
					"name": "destroyRanges",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the ranges in the aggregation <code>ranges</code>."
				},
				{
					"name": "detachRangeSwitch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>rangeSwitch</code> event of this <code>sap.ui.commons.ResponsiveContainer</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ResponsiveContainer with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireRangeSwitch",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>rangeSwitch</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>currentRange</code> of type <code>sap.ui.commons.ResponsiveContainerRange</code>The current range</li>\n</ul>"
				},
				{
					"name": "getDefaultContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>defaultContent</code>, or <code>null</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ResponsiveContainer."
				},
				{
					"name": "getRanges",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainerRange[]"
					},
					"description": "Gets content of aggregation <code>ranges</code>.\n\nThe ranges defined for this container"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "indexOfRange",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oRange",
							"type": "sap.ui.commons.ResponsiveContainerRange",
							"optional": false,
							"description": "The range whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.ResponsiveContainerRange</code> in the aggregation <code>ranges</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertRange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRange",
							"type": "sap.ui.commons.ResponsiveContainerRange",
							"optional": false,
							"description": "the range to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the range should be inserted at; for\n             a negative value of <code>iIndex</code>, the range is inserted at position 0; for a value\n             greater than the current size of the aggregation, the range is inserted at\n             the last position"
						}
					],
					"description": "Inserts a range into the aggregation <code>ranges</code>."
				},
				{
					"name": "removeAllRanges",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainerRange[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>ranges</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeRange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainerRange",
						"description": "The removed range or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vRange",
							"type": "int|string|sap.ui.commons.ResponsiveContainerRange",
							"optional": false,
							"description": "The rangeto remove or its index or id"
						}
					],
					"description": "Removes a range from the aggregation <code>ranges</code>."
				},
				{
					"name": "setDefaultContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDefaultContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this defaultContent association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>defaultContent</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nThe width of the responsive container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the responsive container.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ResponsiveContainerRange",
			"basename": "ResponsiveContainerRange",
			"resource": "sap/ui/commons/ResponsiveContainerRange.js",
			"module": "sap/ui/commons/ResponsiveContainerRange",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Defines a range for the ResponsiveContainer",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "",
						"group": "Dimension",
						"visibility": "public",
						"description": "The minimal width for this range to be displayed.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "",
						"group": "Dimension",
						"visibility": "public",
						"description": "The minimal height for this range to be displayed.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "key",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "A key which can be used to identify the range (optional).",
						"methods": [
							"getKey",
							"setKey"
						]
					}
				],
				"associations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The content to show for this range (optional).",
						"methods": [
							"getContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ResponsiveContainerRange.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ResponsiveContainerRange with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>content</code>, or <code>null</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nThe minimal height for this range to be displayed.\n\nDefault value is <code></code>."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\n\nA key which can be used to identify the range (optional).\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ResponsiveContainerRange."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe minimal width for this range to be displayed.\n\nDefault value is <code></code>."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainerRange",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this content association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>content</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainerRange",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nThe minimal height for this range to be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainerRange",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\n\nA key which can be used to identify the range (optional).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ResponsiveContainerRange",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe minimal width for this range to be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RichTooltip",
			"basename": "RichTooltip",
			"resource": "sap/ui/commons/RichTooltip.js",
			"module": "sap/ui/commons/RichTooltip",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.TooltipBase",
			"description": "\nIs used to provide tool tips that can have long text, image and title. This tool tip extends the TooltipBase.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Popover</code> control."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Tool tip title to be displayed in the header.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "imageSrc",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If RichTooltip contains an image, this property is used to define the source path.",
						"methods": [
							"getImageSrc",
							"setImageSrc"
						]
					},
					{
						"name": "valueStateText",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.11.1",
						"description": "This property is an individual text that will be used instead of the default ValueState text",
						"methods": [
							"getValueStateText",
							"setValueStateText"
						]
					},
					{
						"name": "imageAltText",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.11.1",
						"description": "This is the alt text for the image",
						"methods": [
							"getImageAltText",
							"setImageAltText"
						]
					}
				],
				"aggregations": [
					{
						"name": "formattedText",
						"singularName": "formattedText",
						"type": "sap.ui.commons.FormattedTextView",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "FormattedTextView control used in the content area to enable HTML-text within the content",
						"methods": [
							"getFormattedText",
							"destroyFormattedText",
							"setFormattedText"
						]
					},
					{
						"name": "individualStateText",
						"singularName": "individualStateText",
						"type": "sap.ui.commons.FormattedTextView",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Value State Text that can be specified individually.",
						"methods": [
							"getIndividualStateText",
							"destroyIndividualStateText",
							"setIndividualStateText"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new RichTooltip.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RichTooltip with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}."
				},
				{
					"name": "getImageAltText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>imageAltText</code>"
					},
					"since": "1.11.1",
					"description": "Gets current value of property <code>imageAltText</code>.\n\nThis is the alt text for the image"
				},
				{
					"name": "getImageSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>imageSrc</code>"
					},
					"description": "Gets current value of property <code>imageSrc</code>.\n\nIf RichTooltip contains an image, this property is used to define the source path."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RichTooltip."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nTool tip title to be displayed in the header."
				},
				{
					"name": "getValueStateText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the ValueState text that was previously set."
					},
					"description": "This returns the previously set text. Since a FormattedTextView is used for\nrendering and stuff the corresponding property of the FormattedTextView is\nbeing read and returned. If no text was set an empty string is being\nreturned."
				},
				{
					"name": "onAfterRendering",
					"visibility": "protected",
					"description": "Calculates the height of the RichTooltip to set a proper min-height.\nAdditionally the ARIA attributes are set to the corresponding elements."
				},
				{
					"name": "setImageAltText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RichTooltip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.1",
					"parameters": [
						{
							"name": "sImageAltText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>imageAltText</code>"
						}
					],
					"description": "Sets a new value for property <code>imageAltText</code>.\n\nThis is the alt text for the image\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setImageSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RichTooltip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sImageSrc",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>imageSrc</code>"
						}
					],
					"description": "Sets a new value for property <code>imageSrc</code>.\n\nIf RichTooltip contains an image, this property is used to define the source path.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RichTooltip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nTool tip title to be displayed in the header.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValueStateText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RichTooltip",
						"description": "Returns <code>this</code> to facilitate method chaining."
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "the text that should be shown as individual ValueState text"
						}
					],
					"description": "This sets an individual text for the ValueState of the parent element of the RichTooltip."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RoadMap",
			"basename": "RoadMap",
			"resource": "sap/ui/commons/RoadMap.js",
			"module": "sap/ui/commons/RoadMap",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "RoadMap is used to display step-by-step work flows of a clearly defined work process.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Wizard</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "numberOfVisibleSteps",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Total number of steps to be displayed at once",
						"methods": [
							"getNumberOfVisibleSteps",
							"setNumberOfVisibleSteps"
						]
					},
					{
						"name": "firstVisibleStep",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "ID of the first step to be displayed",
						"methods": [
							"getFirstVisibleStep",
							"setFirstVisibleStep"
						]
					},
					{
						"name": "selectedStep",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "ID of the step which is currently selected",
						"methods": [
							"getSelectedStep",
							"setSelectedStep"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Determines the control width in CSS size",
						"methods": [
							"getWidth",
							"setWidth"
						]
					}
				],
				"aggregations": [
					{
						"name": "steps",
						"singularName": "step",
						"type": "sap.ui.commons.RoadMapStep",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Steps that are composing the RoadMap",
						"methods": [
							"getSteps",
							"destroySteps",
							"insertStep",
							"addStep",
							"removeStep",
							"indexOfStep",
							"removeAllSteps"
						]
					}
				],
				"defaultAggregation": "steps",
				"events": [
					{
						"name": "stepSelected",
						"visibility": "public",
						"description": "Event is fired when the user selects a step.",
						"parameters": {
							"stepId": {
								"name": "stepId",
								"type": "string",
								"description": "ID of the selected step"
							}
						},
						"methods": [
							"attachStepSelected",
							"detachStepSelected",
							"fireStepSelected"
						]
					},
					{
						"name": "stepExpanded",
						"visibility": "public",
						"description": "Event is fired when a given step is expanded or collapsed by user.",
						"parameters": {
							"stepId": {
								"name": "stepId",
								"type": "string",
								"description": "ID of the expanded/collapsed step"
							}
						},
						"methods": [
							"attachStepExpanded",
							"detachStepExpanded",
							"fireStepExpanded"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new RoadMap.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "stepExpanded",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"stepId": {
											"name": "stepId",
											"type": "string",
											"optional": false,
											"description": "ID of the expanded/collapsed step"
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when a given step is expanded or collapsed by user."
				},
				{
					"name": "stepSelected",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"stepId": {
											"name": "stepId",
											"type": "string",
											"optional": false,
											"description": "ID of the selected step"
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the user selects a step."
				}
			],
			"methods": [
				{
					"name": "addStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStep",
							"type": "sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "the step to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some step to the aggregation <code>steps</code>."
				},
				{
					"name": "attachStepExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RoadMap</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>stepExpanded</code> event of this <code>sap.ui.commons.RoadMap</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RoadMap</code> itself.\n\nEvent is fired when a given step is expanded or collapsed by user."
				},
				{
					"name": "attachStepSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RoadMap</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>stepSelected</code> event of this <code>sap.ui.commons.RoadMap</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RoadMap</code> itself.\n\nEvent is fired when the user selects a step."
				},
				{
					"name": "destroySteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the steps in the aggregation <code>steps</code>."
				},
				{
					"name": "detachStepExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>stepExpanded</code> event of this <code>sap.ui.commons.RoadMap</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStepSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>stepSelected</code> event of this <code>sap.ui.commons.RoadMap</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RoadMap with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireStepExpanded",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>stepExpanded</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>stepId</code> of type <code>string</code>ID of the expanded/collapsed step</li>\n</ul>"
				},
				{
					"name": "fireStepSelected",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>stepSelected</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>stepId</code> of type <code>string</code>ID of the selected step</li>\n</ul>"
				},
				{
					"name": "getFirstVisibleStep",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>firstVisibleStep</code>"
					},
					"description": "Gets current value of property <code>firstVisibleStep</code>.\n\nID of the first step to be displayed"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RoadMap."
				},
				{
					"name": "getNumberOfVisibleSteps",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>numberOfVisibleSteps</code>"
					},
					"description": "Gets current value of property <code>numberOfVisibleSteps</code>.\n\nTotal number of steps to be displayed at once"
				},
				{
					"name": "getSelectedStep",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>selectedStep</code>"
					},
					"description": "Gets current value of property <code>selectedStep</code>.\n\nID of the step which is currently selected"
				},
				{
					"name": "getSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep[]"
					},
					"description": "Gets content of aggregation <code>steps</code>.\n\nSteps that are composing the RoadMap"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nDetermines the control width in CSS size\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "indexOfStep",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oStep",
							"type": "sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "The step whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.RoadMapStep</code> in the aggregation <code>steps</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oStep",
							"type": "sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "the step to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the step should be inserted at; for\n             a negative value of <code>iIndex</code>, the step is inserted at position 0; for a value\n             greater than the current size of the aggregation, the step is inserted at\n             the last position"
						}
					],
					"description": "Inserts a step into the aggregation <code>steps</code>."
				},
				{
					"name": "removeAllSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>steps</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "The removed step or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vStep",
							"type": "int|string|sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "The stepto remove or its index or id"
						}
					],
					"description": "Removes a step from the aggregation <code>steps</code>."
				},
				{
					"name": "setFirstVisibleStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFirstVisibleStep",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>firstVisibleStep</code>"
						}
					],
					"description": "Sets a new value for property <code>firstVisibleStep</code>.\n\nID of the first step to be displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setNumberOfVisibleSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iNumberOfVisibleSteps",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>numberOfVisibleSteps</code>"
						}
					],
					"description": "Sets a new value for property <code>numberOfVisibleSteps</code>.\n\nTotal number of steps to be displayed at once\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelectedStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSelectedStep",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>selectedStep</code>"
						}
					],
					"description": "Sets a new value for property <code>selectedStep</code>.\n\nID of the step which is currently selected\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMap",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nDetermines the control width in CSS size\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RoadMapStep",
			"basename": "RoadMapStep",
			"resource": "sap/ui/commons/RoadMapStep.js",
			"module": "sap/ui/commons/RoadMapStep",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Step used within a RoadMap Control.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Wizard</code> control."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Label of the step",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the user shall be allowed to click a step, or not",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "expanded",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "This property is only relevant when using sub steps.",
						"deprecated": {
							"since": "1.10.5",
							"text": "Note that sub steps will not be supported in future. This feature might be removed in one of the next releases."
						},
						"methods": [
							"getExpanded",
							"setExpanded"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Step is visible",
						"methods": [
							"getVisible",
							"setVisible"
						]
					}
				],
				"aggregations": [
					{
						"name": "subSteps",
						"singularName": "subStep",
						"type": "sap.ui.commons.RoadMapStep",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Sub steps for the current step. Will be displayed only in the case that the step is expanded. Otherwise, special arrows show the availability\nof sub steps. One level of sub steps supported.",
						"deprecated": {
							"since": "1.10.5",
							"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
						},
						"methods": [
							"getSubSteps",
							"destroySubSteps",
							"insertSubStep",
							"addSubStep",
							"removeSubStep",
							"indexOfSubStep",
							"removeAllSubSteps"
						]
					}
				],
				"defaultAggregation": "subSteps"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new RoadMapStep.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addSubStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSubStep",
							"type": "sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "the subStep to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some subStep to the aggregation <code>subSteps</code>.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "destroySubSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the subSteps in the aggregation <code>subSteps</code>.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RoadMapStep with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nSpecifies whether the user shall be allowed to click a step, or not\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>expanded</code>"
					},
					"description": "Gets current value of property <code>expanded</code>.\n\nThis property is only relevant when using sub steps.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Note that sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nLabel of the step"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RoadMapStep."
				},
				{
					"name": "getSubSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep[]"
					},
					"description": "Gets content of aggregation <code>subSteps</code>.\n\nSub steps for the current step. Will be displayed only in the case that the step is expanded. Otherwise, special arrows show the availability\nof sub steps. One level of sub steps supported.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nStep is visible\n\nDefault value is <code>true</code>."
				},
				{
					"name": "indexOfSubStep",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSubStep",
							"type": "sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "The subStep whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.RoadMapStep</code> in the aggregation <code>subSteps</code>.\nand returns its index if found or -1 otherwise.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "insertSubStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSubStep",
							"type": "sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "the subStep to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the subStep should be inserted at; for\n             a negative value of <code>iIndex</code>, the subStep is inserted at position 0; for a value\n             greater than the current size of the aggregation, the subStep is inserted at\n             the last position"
						}
					],
					"description": "Inserts a subStep into the aggregation <code>subSteps</code>.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "removeAllSubSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>subSteps</code>.\n\nAdditionally, it unregisters them from the hosting UIArea.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "removeSubStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "The removed subStep or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSubStep",
							"type": "int|string|sap.ui.commons.RoadMapStep",
							"optional": false,
							"description": "The subStepto remove or its index or id"
						}
					],
					"description": "Removes a subStep from the aggregation <code>subSteps</code>.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nSpecifies whether the user shall be allowed to click a step, or not\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bExpanded",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>expanded</code>"
						}
					],
					"description": "Sets a new value for property <code>expanded</code>.\n\nThis property is only relevant when using sub steps.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "1.10.5",
						"text": "Note that sub steps will not be supported in future. This feature might be removed in one of the next releases."
					}
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nLabel of the step\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RoadMapStep",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\n\nStep is visible\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RowRepeater",
			"basename": "RowRepeater",
			"resource": "sap/ui/commons/RowRepeater.js",
			"module": "sap/ui/commons/RowRepeater",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control displays items in a stacked list format, allowing the user to page in order to see more items or to use the offered filtering and sorting capabilities in order to manipulate the displayed data.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.table.Table</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "numberOfRows",
						"type": "int",
						"defaultValue": 5,
						"group": "Dimension",
						"visibility": "public",
						"description": "Number of rows displayed.",
						"methods": [
							"getNumberOfRows",
							"setNumberOfRows"
						]
					},
					{
						"name": "currentPage",
						"type": "int",
						"defaultValue": 1,
						"group": "Data",
						"visibility": "public",
						"description": "The index of the page currently displayed. The index starts at 1.",
						"methods": [
							"getCurrentPage",
							"setCurrentPage"
						]
					},
					{
						"name": "showMoreSteps",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Step size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.",
						"methods": [
							"getShowMoreSteps",
							"setShowMoreSteps"
						]
					},
					{
						"name": "fixedRowHeight",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Row height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.",
						"methods": [
							"getFixedRowHeight",
							"setFixedRowHeight"
						]
					},
					{
						"name": "design",
						"type": "sap.ui.commons.RowRepeaterDesign",
						"defaultValue": "Standard",
						"group": "Appearance",
						"visibility": "public",
						"description": "The visual design of the control.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					},
					{
						"name": "threshold",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Threshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.",
						"methods": [
							"getThreshold",
							"setThreshold"
						]
					}
				],
				"aggregations": [
					{
						"name": "rows",
						"singularName": "row",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "Rows to be repeated.",
						"methods": [
							"getRows",
							"destroyRows",
							"insertRow",
							"addRow",
							"removeRow",
							"indexOfRow",
							"removeAllRows",
							"bindRows",
							"unbindRows"
						]
					},
					{
						"name": "title",
						"singularName": "title",
						"type": "sap.ui.core.Title",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Title to be displayed in top left corner. Either text or icon.",
						"methods": [
							"getTitle",
							"destroyTitle",
							"setTitle"
						]
					},
					{
						"name": "filters",
						"singularName": "filter",
						"type": "sap.ui.commons.RowRepeaterFilter",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Filters to be provided in toolbar.",
						"methods": [
							"getFilters",
							"destroyFilters",
							"insertFilter",
							"addFilter",
							"removeFilter",
							"indexOfFilter",
							"removeAllFilters"
						]
					},
					{
						"name": "sorters",
						"singularName": "sorter",
						"type": "sap.ui.commons.RowRepeaterSorter",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Sorters to be provided in secondary toolbar.",
						"methods": [
							"getSorters",
							"destroySorters",
							"insertSorter",
							"addSorter",
							"removeSorter",
							"indexOfSorter",
							"removeAllSorters"
						]
					},
					{
						"name": "noData",
						"singularName": "noData",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "This control is shown, in case there is no data available to be displayed in the RowRepeater.",
						"methods": [
							"getNoData",
							"destroyNoData",
							"setNoData"
						]
					},
					{
						"name": "filterToolbar",
						"singularName": "filterToolbar",
						"type": "sap.ui.commons.Toolbar",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "A Toolbar which used internally by the RowRepeater",
						"methods": [
							"getFilterToolbar",
							"destroyFilterToolbar",
							"setFilterToolbar"
						]
					},
					{
						"name": "sorterToolbar",
						"singularName": "sorterToolbar",
						"type": "sap.ui.commons.Toolbar",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "A Toolbar which used internally by the RowRepeater",
						"methods": [
							"getSorterToolbar",
							"destroySorterToolbar",
							"setSorterToolbar"
						]
					},
					{
						"name": "headerShowMoreButton",
						"singularName": "headerShowMoreButton",
						"type": "sap.ui.commons.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "A Button which used internally by the RowRepeater",
						"methods": [
							"getHeaderShowMoreButton",
							"destroyHeaderShowMoreButton",
							"setHeaderShowMoreButton"
						]
					},
					{
						"name": "footerShowMoreButton",
						"singularName": "footerShowMoreButton",
						"type": "sap.ui.commons.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "A Button which used internally by the RowRepeater",
						"methods": [
							"getFooterShowMoreButton",
							"destroyFooterShowMoreButton",
							"setFooterShowMoreButton"
						]
					},
					{
						"name": "footerPager",
						"singularName": "footerPager",
						"type": "sap.ui.commons.Paginator",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "A Paginator which used internally by the RowRepeater",
						"methods": [
							"getFooterPager",
							"destroyFooterPager",
							"setFooterPager"
						]
					}
				],
				"defaultAggregation": "rows",
				"events": [
					{
						"name": "filter",
						"visibility": "public",
						"description": "This event is triggered when a filter is set.",
						"parameters": {
							"filterId": {
								"name": "filterId",
								"type": "string",
								"description": "The ID of the filter that has just been applied."
							}
						},
						"methods": [
							"attachFilter",
							"detachFilter",
							"fireFilter"
						]
					},
					{
						"name": "sort",
						"visibility": "public",
						"description": "This event is triggered when a sorting is applied.",
						"parameters": {
							"sorterId": {
								"name": "sorterId",
								"type": "string",
								"description": "The ID of the sorter that has just been applied."
							}
						},
						"methods": [
							"attachSort",
							"detachSort",
							"fireSort"
						]
					},
					{
						"name": "page",
						"visibility": "public",
						"description": "This event is triggered when paging was executed.",
						"parameters": {
							"currentPage": {
								"name": "currentPage",
								"type": "int",
								"description": "The value of the currentPage property after the change."
							},
							"previousPage": {
								"name": "previousPage",
								"type": "int",
								"description": "The value of the currentPage property before the change."
							}
						},
						"methods": [
							"attachPage",
							"detachPage",
							"firePage"
						]
					},
					{
						"name": "resize",
						"visibility": "public",
						"description": "This event is triggered when the number of rows was changed.",
						"parameters": {
							"numberOfRows": {
								"name": "numberOfRows",
								"type": "int",
								"description": "The value of the numberOfRows property after the change."
							},
							"previousNumberOfRows": {
								"name": "previousNumberOfRows",
								"type": "int",
								"description": "The value of the numberOfRows property before the change."
							}
						},
						"methods": [
							"attachResize",
							"detachResize",
							"fireResize"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new RowRepeater.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "filter",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"filterId": {
											"name": "filterId",
											"type": "string",
											"optional": false,
											"description": "The ID of the filter that has just been applied."
										}
									}
								}
							}
						}
					],
					"description": "This event is triggered when a filter is set."
				},
				{
					"name": "page",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"currentPage": {
											"name": "currentPage",
											"type": "int",
											"optional": false,
											"description": "The value of the currentPage property after the change."
										},
										"previousPage": {
											"name": "previousPage",
											"type": "int",
											"optional": false,
											"description": "The value of the currentPage property before the change."
										}
									}
								}
							}
						}
					],
					"description": "This event is triggered when paging was executed."
				},
				{
					"name": "resize",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"numberOfRows": {
											"name": "numberOfRows",
											"type": "int",
											"optional": false,
											"description": "The value of the numberOfRows property after the change."
										},
										"previousNumberOfRows": {
											"name": "previousNumberOfRows",
											"type": "int",
											"optional": false,
											"description": "The value of the numberOfRows property before the change."
										}
									}
								}
							}
						}
					],
					"description": "This event is triggered when the number of rows was changed."
				},
				{
					"name": "sort",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"sorterId": {
											"name": "sorterId",
											"type": "string",
											"optional": false,
											"description": "The ID of the sorter that has just been applied."
										}
									}
								}
							}
						}
					],
					"description": "This event is triggered when a sorting is applied."
				}
			],
			"methods": [
				{
					"name": "addFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilter",
							"type": "sap.ui.commons.RowRepeaterFilter",
							"optional": false,
							"description": "the filter to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some filter to the aggregation <code>filters</code>."
				},
				{
					"name": "addRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the row to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some row to the aggregation <code>rows</code>."
				},
				{
					"name": "addSorter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSorter",
							"type": "sap.ui.commons.RowRepeaterSorter",
							"optional": false,
							"description": "the sorter to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some sorter to the aggregation <code>sorters</code>."
				},
				{
					"name": "applyFilter",
					"visibility": "public",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "The ID if the filter."
						}
					],
					"description": "Applies a filter."
				},
				{
					"name": "attachFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>filter</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater</code> itself.\n\nThis event is triggered when a filter is set."
				},
				{
					"name": "attachPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>page</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater</code> itself.\n\nThis event is triggered when paging was executed."
				},
				{
					"name": "attachResize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>resize</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater</code> itself.\n\nThis event is triggered when the number of rows was changed."
				},
				{
					"name": "attachSort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.RowRepeater</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>sort</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater</code> itself.\n\nThis event is triggered when a sorting is applied."
				},
				{
					"name": "bindRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>rows</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyFilters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the filters in the aggregation <code>filters</code>."
				},
				{
					"name": "destroyNoData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the noData in the aggregation <code>noData</code>."
				},
				{
					"name": "destroyRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the rows in the aggregation <code>rows</code>."
				},
				{
					"name": "destroySorters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the sorters in the aggregation <code>sorters</code>."
				},
				{
					"name": "destroyTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the title in the aggregation <code>title</code>."
				},
				{
					"name": "detachFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>filter</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>page</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachResize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>resize</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>sort</code> event of this <code>sap.ui.commons.RowRepeater</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RowRepeater with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireFilter",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>filter</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>filterId</code> of type <code>string</code>The ID of the filter that has just been applied.</li>\n</ul>"
				},
				{
					"name": "firePage",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>page</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>currentPage</code> of type <code>int</code>The value of the currentPage property after the change.</li>\n<li><code>previousPage</code> of type <code>int</code>The value of the currentPage property before the change.</li>\n</ul>"
				},
				{
					"name": "fireResize",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>resize</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>numberOfRows</code> of type <code>int</code>The value of the numberOfRows property after the change.</li>\n<li><code>previousNumberOfRows</code> of type <code>int</code>The value of the numberOfRows property before the change.</li>\n</ul>"
				},
				{
					"name": "fireSort",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>sort</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>sorterId</code> of type <code>string</code>The ID of the sorter that has just been applied.</li>\n</ul>"
				},
				{
					"name": "firstPage",
					"visibility": "public",
					"description": "Switch to first page."
				},
				{
					"name": "getCurrentPage",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>currentPage</code>"
					},
					"description": "Gets current value of property <code>currentPage</code>.\n\nThe index of the page currently displayed. The index starts at 1.\n\nDefault value is <code>1</code>."
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterDesign",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nThe visual design of the control.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "getFilters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterFilter[]"
					},
					"description": "Gets content of aggregation <code>filters</code>.\n\nFilters to be provided in toolbar."
				},
				{
					"name": "getFixedRowHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>fixedRowHeight</code>"
					},
					"description": "Gets current value of property <code>fixedRowHeight</code>.\n\nRow height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RowRepeater."
				},
				{
					"name": "getNoData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>noData</code>.\n\nThis control is shown, in case there is no data available to be displayed in the RowRepeater."
				},
				{
					"name": "getNumberOfRows",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>numberOfRows</code>"
					},
					"description": "Gets current value of property <code>numberOfRows</code>.\n\nNumber of rows displayed.\n\nDefault value is <code>5</code>."
				},
				{
					"name": "getRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>rows</code>.\n\nRows to be repeated."
				},
				{
					"name": "getShowMoreSteps",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>showMoreSteps</code>"
					},
					"description": "Gets current value of property <code>showMoreSteps</code>.\n\nStep size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getSorters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterSorter[]"
					},
					"description": "Gets content of aggregation <code>sorters</code>.\n\nSorters to be provided in secondary toolbar."
				},
				{
					"name": "getThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>threshold</code>"
					},
					"description": "Gets current value of property <code>threshold</code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Title"
					},
					"description": "Gets content of aggregation <code>title</code>.\n\nTitle to be displayed in top left corner. Either text or icon."
				},
				{
					"name": "gotoPage",
					"visibility": "public",
					"parameters": [
						{
							"name": "iPageNumber",
							"type": "int",
							"optional": false,
							"description": "The index of the page to go to."
						}
					],
					"description": "Switch to specified page."
				},
				{
					"name": "indexOfFilter",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFilter",
							"type": "sap.ui.commons.RowRepeaterFilter",
							"optional": false,
							"description": "The filter whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.RowRepeaterFilter</code> in the aggregation <code>filters</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfRow",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The row whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>rows</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSorter",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSorter",
							"type": "sap.ui.commons.RowRepeaterSorter",
							"optional": false,
							"description": "The sorter whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.RowRepeaterSorter</code> in the aggregation <code>sorters</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilter",
							"type": "sap.ui.commons.RowRepeaterFilter",
							"optional": false,
							"description": "the filter to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the filter should be inserted at; for\n             a negative value of <code>iIndex</code>, the filter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filter is inserted at\n             the last position"
						}
					],
					"description": "Inserts a filter into the aggregation <code>filters</code>."
				},
				{
					"name": "insertRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the row to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the row should be inserted at; for\n             a negative value of <code>iIndex</code>, the row is inserted at position 0; for a value\n             greater than the current size of the aggregation, the row is inserted at\n             the last position"
						}
					],
					"description": "Inserts a row into the aggregation <code>rows</code>."
				},
				{
					"name": "insertSorter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSorter",
							"type": "sap.ui.commons.RowRepeaterSorter",
							"optional": false,
							"description": "the sorter to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the sorter should be inserted at; for\n             a negative value of <code>iIndex</code>, the sorter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the sorter is inserted at\n             the last position"
						}
					],
					"description": "Inserts a sorter into the aggregation <code>sorters</code>."
				},
				{
					"name": "lastPage",
					"visibility": "public",
					"description": "Switch to last page."
				},
				{
					"name": "nextPage",
					"visibility": "public",
					"description": "Switch to next page."
				},
				{
					"name": "previousPage",
					"visibility": "public",
					"description": "Switch to previous page."
				},
				{
					"name": "removeAllFilters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterFilter[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>filters</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>rows</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSorters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterSorter[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>sorters</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterFilter",
						"description": "The removed filter or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vFilter",
							"type": "int|string|sap.ui.commons.RowRepeaterFilter",
							"optional": false,
							"description": "The filterto remove or its index or id"
						}
					],
					"description": "Removes a filter from the aggregation <code>filters</code>."
				},
				{
					"name": "removeRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed row or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vRow",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The rowto remove or its index or id"
						}
					],
					"description": "Removes a row from the aggregation <code>rows</code>."
				},
				{
					"name": "removeSorter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterSorter",
						"description": "The removed sorter or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSorter",
							"type": "int|string|sap.ui.commons.RowRepeaterSorter",
							"optional": false,
							"description": "The sorterto remove or its index or id"
						}
					],
					"description": "Removes a sorter from the aggregation <code>sorters</code>."
				},
				{
					"name": "resize",
					"visibility": "public",
					"parameters": [
						{
							"name": "iNumberOfRows",
							"type": "int",
							"optional": false,
							"description": "The new value of number of rows displayed."
						}
					],
					"description": "Resizes the row repeater by changing the number of displayed rows. This method will only resize the RowRepeater if the property showMoreSteps is set."
				},
				{
					"name": "setCurrentPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCurrentPage",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>currentPage</code>"
						}
					],
					"description": "Setter for property <code>currentPage</code>."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.commons.RowRepeaterDesign",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nThe visual design of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "setFixedRowHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFixedRowHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>fixedRowHeight</code>"
						}
					],
					"description": "Sets a new value for property <code>fixedRowHeight</code>.\n\nRow height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setNoData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNoData",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The noData to set"
						}
					],
					"description": "Sets the aggregated <code>noData</code>."
				},
				{
					"name": "setNumberOfRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iNumberOfRows",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>numberOfRows</code>"
						}
					],
					"description": "Setter for property <code>numberOfRows</code>.\n\nDefault value is <code>5</code>"
				},
				{
					"name": "setShowMoreSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iShowMoreSteps",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>showMoreSteps</code>"
						}
					],
					"description": "Override the default behavior of <code>setShowMoreSteps</code> to update the\npaging mode flag. Any change to the paging mode flag will result in the current\npage being set to the first page."
				},
				{
					"name": "setThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iThreshold",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>threshold</code>"
						}
					],
					"description": "Sets a new value for property <code>threshold</code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitle",
							"type": "sap.ui.core.Title",
							"optional": false,
							"description": "The title to set"
						}
					],
					"description": "Sets the aggregated <code>title</code>."
				},
				{
					"name": "triggerShowMore",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "The <code>triggerShowMore</code> function increments the number of rows by the\nvalue of <code>showMoreSteps</code>.\n\nThis method will only trigger a showMore if the property showMoreSteps is set."
				},
				{
					"name": "triggerSort",
					"visibility": "public",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "The ID of the sorter."
						}
					],
					"description": "Sort the data."
				},
				{
					"name": "unbindRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeater",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>rows</code> from model data."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.RowRepeaterDesign",
			"basename": "RowRepeaterDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Determines the visual design of a RowRepeater.",
			"properties": [
				{
					"name": "BareShell",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The RowRepeater will be displayed without header, toolbar or footer. Background will be transparent."
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The RowRepeater header and footer elements, as well as the row container background, appear solid."
				},
				{
					"name": "Transparent",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The RowRepeater header and footer elements, as well as the row container background, appear transparent."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RowRepeaterFilter",
			"basename": "RowRepeaterFilter",
			"resource": "sap/ui/commons/RowRepeaterFilter.js",
			"module": "sap/ui/commons/RowRepeaterFilter",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "This element is used by the RowRepeater and allows to define a filter in this context along with the related data such as a text and an icon.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.table.Table</code> control."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The filter title if needed for display.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The filter icon if needed for display.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "filters",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The set of filter objects.",
						"methods": [
							"getFilters",
							"setFilters"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new RowRepeaterFilter.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RowRepeaterFilter with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getFilters",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>filters</code>"
					},
					"description": "Gets current value of property <code>filters</code>.\n\nThe set of filter objects."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nThe filter icon if needed for display."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RowRepeaterFilter."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nThe filter title if needed for display."
				},
				{
					"name": "setFilters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterFilter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilters",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>filters</code>"
						}
					],
					"description": "Sets a new value for property <code>filters</code>.\n\nThe set of filter objects.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterFilter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nThe filter icon if needed for display.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterFilter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nThe filter title if needed for display.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.RowRepeaterSorter",
			"basename": "RowRepeaterSorter",
			"resource": "sap/ui/commons/RowRepeaterSorter.js",
			"module": "sap/ui/commons/RowRepeaterSorter",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "This element is used by the RowRepeater and allows to define a sorter in this context along with the related data such as a text and an icon.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.table.Table</code> control."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The sorter title if needed for display.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The sorter icon if needed for display.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "sorter",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The sorter object.",
						"methods": [
							"getSorter",
							"setSorter"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new RowRepeaterSorter.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.RowRepeaterSorter with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nThe sorter icon if needed for display."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.RowRepeaterSorter."
				},
				{
					"name": "getSorter",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>sorter</code>"
					},
					"description": "Gets current value of property <code>sorter</code>.\n\nThe sorter object."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nThe sorter title if needed for display."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterSorter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nThe sorter icon if needed for display.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSorter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterSorter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSorter",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>sorter</code>"
						}
					],
					"description": "Sets a new value for property <code>sorter</code>.\n\nThe sorter object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.RowRepeaterSorter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nThe sorter title if needed for display.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.SearchField",
			"basename": "SearchField",
			"resource": "sap/ui/commons/SearchField.js",
			"module": "sap/ui/commons/SearchField",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Allows the user to type search queries and to trigger the search. Optionally, suggestions can be added.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.SearchField</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "enableListSuggest",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines whether a pop up list shall be provided for suggestions",
						"methods": [
							"getEnableListSuggest",
							"setEnableListSuggest"
						]
					},
					{
						"name": "showListExpander",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.",
						"methods": [
							"getShowListExpander",
							"setShowListExpander"
						]
					},
					{
						"name": "enableClear",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines whether the clear functionality shall be active",
						"methods": [
							"getEnableClear",
							"setEnableClear"
						]
					},
					{
						"name": "showExternalButton",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines whether an additional search button shall be displayed",
						"methods": [
							"getShowExternalButton",
							"setShowExternalButton"
						]
					},
					{
						"name": "enableCache",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.10.3",
						"description": "When list suggestion is enabled all suggestions are cached and no suggest event is fired.",
						"methods": [
							"getEnableCache",
							"setEnableCache"
						]
					},
					{
						"name": "enableFilterMode",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.",
						"methods": [
							"getEnableFilterMode",
							"setEnableFilterMode"
						]
					},
					{
						"name": "value",
						"type": "string",
						"defaultValue": "",
						"group": "Data",
						"visibility": "public",
						"description": "Text that shall be displayed within the search field",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Disabled fields have different colors, and they can not be focused.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Non-editable controls have different colors, depending on custom settings",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Control width in CSS-size",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "maxLength",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Maximum number of characters. Value '0' means the feature is switched off.",
						"methods": [
							"getMaxLength",
							"setMaxLength"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.32",
						"description": "Visualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "placeholder",
						"type": "string",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"since": "1.32",
						"description": "Placeholder for the input field.",
						"methods": [
							"getPlaceholder",
							"setPlaceholder"
						]
					},
					{
						"name": "textAlign",
						"type": "sap.ui.core.TextAlign",
						"defaultValue": "Begin",
						"group": "Appearance",
						"visibility": "public",
						"description": "Sets the horizontal alignment of the text",
						"methods": [
							"getTextAlign",
							"setTextAlign"
						]
					},
					{
						"name": "visibleItemCount",
						"type": "int",
						"defaultValue": 20,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.",
						"methods": [
							"getVisibleItemCount",
							"setVisibleItemCount"
						]
					},
					{
						"name": "startSuggestion",
						"type": "int",
						"defaultValue": 3,
						"group": "Behavior",
						"visibility": "public",
						"description": "Minimum length of the entered string triggering the suggestion list.",
						"methods": [
							"getStartSuggestion",
							"setStartSuggestion"
						]
					},
					{
						"name": "maxSuggestionItems",
						"type": "int",
						"defaultValue": 10,
						"group": "Behavior",
						"visibility": "public",
						"description": "Maximum number of suggestion items in the suggestion list.",
						"methods": [
							"getMaxSuggestionItems",
							"setMaxSuggestionItems"
						]
					},
					{
						"name": "maxHistoryItems",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Maximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.",
						"methods": [
							"getMaxHistoryItems",
							"setMaxHistoryItems"
						]
					}
				],
				"aggregations": [
					{
						"name": "searchProvider",
						"singularName": "searchProvider",
						"type": "sap.ui.core.search.SearchProvider",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Search provider instance which handles the suggestions for this SearchField (e.g. Open Search Protocol).",
						"methods": [
							"getSearchProvider",
							"destroySearchProvider",
							"setSearchProvider"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "search",
						"visibility": "public",
						"description": "Event which is fired when the user triggers a search",
						"parameters": {
							"query": {
								"name": "query",
								"type": "string",
								"description": "The search query"
							}
						},
						"methods": [
							"attachSearch",
							"detachSearch",
							"fireSearch"
						]
					},
					{
						"name": "suggest",
						"visibility": "public",
						"description": "Event which is fired when new suggest values are required.",
						"parameters": {
							"value": {
								"name": "value",
								"type": "string",
								"description": "The value for which suggestions are required."
							}
						},
						"methods": [
							"attachSuggest",
							"detachSuggest",
							"fireSuggest"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new SearchField.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "search",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"query": {
											"name": "query",
											"type": "string",
											"optional": false,
											"description": "The search query"
										}
									}
								}
							}
						}
					],
					"description": "Event which is fired when the user triggers a search"
				},
				{
					"name": "suggest",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "string",
											"optional": false,
											"description": "The value for which suggestions are required."
										}
									}
								}
							}
						}
					],
					"description": "Event which is fired when new suggest values are required."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.SearchField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>search</code> event of this <code>sap.ui.commons.SearchField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SearchField</code> itself.\n\nEvent which is fired when the user triggers a search"
				},
				{
					"name": "attachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.SearchField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>suggest</code> event of this <code>sap.ui.commons.SearchField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SearchField</code> itself.\n\nEvent which is fired when new suggest values are required."
				},
				{
					"name": "clearHistory",
					"visibility": "public",
					"description": "Clears the history of the control"
				},
				{
					"name": "destroySearchProvider",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the searchProvider in the aggregation <code>searchProvider</code>."
				},
				{
					"name": "detachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>search</code> event of this <code>sap.ui.commons.SearchField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>suggest</code> event of this <code>sap.ui.commons.SearchField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.SearchField with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireSearch",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>search</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>query</code> of type <code>string</code>The search query</li>\n</ul>"
				},
				{
					"name": "fireSuggest",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>suggest</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value</code> of type <code>string</code>The value for which suggestions are required.</li>\n</ul>"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nNon-editable controls have different colors, depending on custom settings\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnableCache",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableCache</code>"
					},
					"since": "1.10.3",
					"description": "Gets current value of property <code>enableCache</code>.\n\nWhen list suggestion is enabled all suggestions are cached and no suggest event is fired.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnableClear",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableClear</code>"
					},
					"description": "Gets current value of property <code>enableClear</code>.\n\nDefines whether the clear functionality shall be active\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nDisabled fields have different colors, and they can not be focused.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnableFilterMode",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableFilterMode</code>"
					},
					"description": "Gets current value of property <code>enableFilterMode</code>.\n\nDefines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEnableListSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableListSuggest</code>"
					},
					"description": "Gets current value of property <code>enableListSuggest</code>.\n\nDefines whether a pop up list shall be provided for suggestions\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMaxHistoryItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxHistoryItems</code>"
					},
					"description": "Gets current value of property <code>maxHistoryItems</code>.\n\nMaximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getMaxLength",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxLength</code>"
					},
					"description": "Gets current value of property <code>maxLength</code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getMaxSuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxSuggestionItems</code>"
					},
					"description": "Gets current value of property <code>maxSuggestionItems</code>.\n\nMaximum number of suggestion items in the suggestion list.\n\nDefault value is <code>10</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.SearchField."
				},
				{
					"name": "getPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>placeholder</code>"
					},
					"since": "1.32",
					"description": "Gets current value of property <code>placeholder</code>.\n\nPlaceholder for the input field.\n\nDefault value is <code></code>."
				},
				{
					"name": "getSearchProvider",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.search.SearchProvider"
					},
					"description": "Gets content of aggregation <code>searchProvider</code>.\n\nSearch provider instance which handles the suggestions for this SearchField (e.g. Open Search Protocol)."
				},
				{
					"name": "getShowExternalButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showExternalButton</code>"
					},
					"description": "Gets current value of property <code>showExternalButton</code>.\n\nDefines whether an additional search button shall be displayed\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowListExpander",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showListExpander</code>"
					},
					"description": "Gets current value of property <code>showListExpander</code>.\n\nDefines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getStartSuggestion",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>startSuggestion</code>"
					},
					"description": "Gets current value of property <code>startSuggestion</code>.\n\nMinimum length of the entered string triggering the suggestion list.\n\nDefault value is <code>3</code>."
				},
				{
					"name": "getTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextAlign",
						"description": "Value of property <code>textAlign</code>"
					},
					"description": "Gets current value of property <code>textAlign</code>.\n\nSets the horizontal alignment of the text\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nText that shall be displayed within the search field\n\nDefault value is <code></code>."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"since": "1.32",
					"description": "Gets current value of property <code>valueState</code>.\n\nVisualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getVisibleItemCount",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>visibleItemCount</code>"
					},
					"description": "Gets current value of property <code>visibleItemCount</code>.\n\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.\n\nDefault value is <code>20</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nControl width in CSS-size"
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nNon-editable controls have different colors, depending on custom settings\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnableCache",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.10.3",
					"parameters": [
						{
							"name": "bEnableCache",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableCache</code>"
						}
					],
					"description": "Sets a new value for property <code>enableCache</code>.\n\nWhen list suggestion is enabled all suggestions are cached and no suggest event is fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnableClear",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableClear",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableClear</code>"
						}
					],
					"description": "Sets a new value for property <code>enableClear</code>.\n\nDefines whether the clear functionality shall be active\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nDisabled fields have different colors, and they can not be focused.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnableFilterMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableFilterMode",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableFilterMode</code>"
						}
					],
					"description": "Sets a new value for property <code>enableFilterMode</code>.\n\nDefines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setEnableListSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableListSuggest",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableListSuggest</code>"
						}
					],
					"description": "Sets a new value for property <code>enableListSuggest</code>.\n\nDefines whether a pop up list shall be provided for suggestions\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setMaxHistoryItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxHistoryItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxHistoryItems</code>"
						}
					],
					"description": "Sets a new value for property <code>maxHistoryItems</code>.\n\nMaximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setMaxLength",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxLength",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxLength</code>"
						}
					],
					"description": "Sets a new value for property <code>maxLength</code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setMaxSuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxSuggestionItems",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxSuggestionItems</code>"
						}
					],
					"description": "Sets a new value for property <code>maxSuggestionItems</code>.\n\nMaximum number of suggestion items in the suggestion list.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>10</code>."
				},
				{
					"name": "setPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "sPlaceholder",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>placeholder</code>"
						}
					],
					"description": "Sets a new value for property <code>placeholder</code>.\n\nPlaceholder for the input field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setSearchProvider",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSearchProvider",
							"type": "sap.ui.core.search.SearchProvider",
							"optional": false,
							"description": "The searchProvider to set"
						}
					],
					"description": "Sets the aggregated <code>searchProvider</code>."
				},
				{
					"name": "setShowExternalButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowExternalButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showExternalButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showExternalButton</code>.\n\nDefines whether an additional search button shall be displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowListExpander",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowListExpander",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showListExpander</code>"
						}
					],
					"description": "Sets a new value for property <code>showListExpander</code>.\n\nDefines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setStartSuggestion",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iStartSuggestion",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>startSuggestion</code>"
						}
					],
					"description": "Sets a new value for property <code>startSuggestion</code>.\n\nMinimum length of the entered string triggering the suggestion list.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>3</code>."
				},
				{
					"name": "setTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "New value for property <code>textAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>textAlign</code>.\n\nSets the horizontal alignment of the text\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nText that shall be displayed within the search field\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32",
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nVisualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setVisibleItemCount",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iVisibleItemCount",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>visibleItemCount</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleItemCount</code>.\n\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>20</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SearchField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nControl width in CSS-size\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "suggest",
					"visibility": "public",
					"parameters": [
						{
							"name": "sSSuggestValue",
							"type": "string",
							"optional": false,
							"description": "The value which was provided in the corresponding suggest event (parameter 'value')"
						},
						{
							"name": "aASuggestions",
							"type": "string[]",
							"optional": false,
							"description": "The list of suggestions belonging to the suggest value"
						}
					],
					"description": "Callback function used to provide the suggest values in the handler of the suggest event (only in list suggestion mode)"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.SearchProvider",
			"basename": "SearchProvider",
			"resource": "sap/ui/commons/SearchProvider.js",
			"module": "sap/ui/commons/SearchProvider",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.search.OpenSearchProvider",
			"description": "A SearchProvider which can be attached to a Search Field.",
			"deprecated": {
				"since": "1.6.0",
				"text": "Replaced by sap.ui.core.search.OpenSearchProvider"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new SearchProvider."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.SearchProvider with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.search.OpenSearchProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.SearchProvider."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.SegmentedButton",
			"basename": "SegmentedButton",
			"resource": "sap/ui/commons/SegmentedButton.js",
			"module": "sap/ui/commons/SegmentedButton",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The SegmentedButton provides a group of multiple buttons. Only one button can be active. The behaviour is more ore less like a radio button group.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.SegmentedButton</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "enabled",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					}
				],
				"aggregations": [
					{
						"name": "buttons",
						"singularName": "button",
						"type": "sap.ui.commons.Button",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Buttons",
						"methods": [
							"getButtons",
							"destroyButtons",
							"insertButton",
							"addButton",
							"removeButton",
							"indexOfButton",
							"removeAllButtons"
						]
					}
				],
				"associations": [
					{
						"name": "selectedButton",
						"singularName": "selectedButton",
						"type": "sap.ui.commons.Button",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Selected Button",
						"methods": [
							"getSelectedButton",
							"setSelectedButton"
						]
					}
				],
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Event fired when button selected",
						"parameters": {
							"selectedButtonId": {
								"name": "selectedButtonId",
								"type": "string",
								"description": "Id of selected ToggleButton"
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new SegmentedButton.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectedButtonId": {
											"name": "selectedButtonId",
											"type": "string",
											"optional": false,
											"description": "Id of selected ToggleButton"
										}
									}
								}
							}
						}
					],
					"description": "Event fired when button selected"
				}
			],
			"methods": [
				{
					"name": "_rerenderButtons",
					"visibility": "protected",
					"description": "Rerendering of the Buttons"
				},
				{
					"name": "addButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "the button to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some button to the aggregation <code>buttons</code>."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.SegmentedButton</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.commons.SegmentedButton</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SegmentedButton</code> itself.\n\nEvent fired when button selected"
				},
				{
					"name": "destroyButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the buttons in the aggregation <code>buttons</code>."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.commons.SegmentedButton</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.SegmentedButton with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedButtonId</code> of type <code>string</code>Id of selected ToggleButton</li>\n</ul>"
				},
				{
					"name": "getButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button[]"
					},
					"description": "Gets content of aggregation <code>buttons</code>.\n\nButtons"
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nenabled\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.SegmentedButton."
				},
				{
					"name": "getSelectedButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button"
					},
					"description": "ID of the element which is the current target of the association <code>selectedButton</code>, or <code>null</code>."
				},
				{
					"name": "indexOfButton",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "The button whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.Button</code> in the aggregation <code>buttons</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "the button to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex</code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"
						}
					],
					"description": "Inserts a button into the aggregation <code>buttons</code>."
				},
				{
					"name": "removeAllButtons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>buttons</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Button",
						"description": "The removed button or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vButton",
							"type": "int|string|sap.ui.commons.Button",
							"optional": false,
							"description": "The buttonto remove or its index or id"
						}
					],
					"description": "Removes a button from the aggregation <code>buttons</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nenabled\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSelectedButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SegmentedButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedButton",
							"type": "sap.ui.commons.Button",
							"optional": false,
							"description": "Id of an element which becomes the new target of this selectedButton association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>selectedButton</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Slider",
			"basename": "Slider",
			"resource": "sap/ui/commons/Slider.js",
			"module": "sap/ui/commons/Slider",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The interactive control is displayed either as a horizontal or a vertical line with a pointer and units of measurement.\nUsers can move the pointer along the line to change values with graphical support.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Slider</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Width of the horizontal slider.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "min",
						"type": "float",
						"defaultValue": 0,
						"group": "Appearance",
						"visibility": "public",
						"description": "Minimal value of the slider.\n\n<b>Note:</b> If <code>min</code> is larger than <code>max</code> both values will be switched",
						"methods": [
							"getMin",
							"setMin"
						]
					},
					{
						"name": "max",
						"type": "float",
						"defaultValue": 100,
						"group": "Appearance",
						"visibility": "public",
						"description": "Maximal value of the slider\n\n<b>Note:</b> If <code>min</code> is larger than <code>max</code> both values will be switched",
						"methods": [
							"getMax",
							"setMax"
						]
					},
					{
						"name": "value",
						"type": "float",
						"defaultValue": 50,
						"group": "Appearance",
						"visibility": "public",
						"description": "Current value of the slider. (Position of the grip.)\n\n<b>Note:</b> If the value is not in the valid range (between <code>min</code> and <code>max</code>) it will be changed to be in the valid range.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "smallStepWidth",
						"type": "float",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The grip can only be moved in steps of this width.",
						"methods": [
							"getSmallStepWidth",
							"setSmallStepWidth"
						]
					},
					{
						"name": "totalUnits",
						"type": "int",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.",
						"methods": [
							"getTotalUnits",
							"setTotalUnits"
						]
					},
					{
						"name": "stepLabels",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Display step numbers for the ticks on the slider.",
						"methods": [
							"getStepLabels",
							"setStepLabels"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Using the slider interactively requires value \"true\".",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "labels",
						"type": "string[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Labels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:</b> To show the labels <code>stepLabels</code> must be activated.",
						"methods": [
							"getLabels",
							"setLabels"
						]
					},
					{
						"name": "vertical",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.7.1",
						"description": "Orientation of slider",
						"methods": [
							"getVertical",
							"setVertical"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"since": "1.7.1",
						"description": "Height of the vertical slider.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Value was changed. This event is fired if the value has changed by an user action.",
						"parameters": {
							"value": {
								"name": "value",
								"type": "float",
								"description": "Current value of the slider after a change."
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "liveChange",
						"visibility": "public",
						"description": "Value was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup.",
						"parameters": {
							"value": {
								"name": "value",
								"type": "float",
								"description": "Current value of the slider after a change."
							}
						},
						"methods": [
							"attachLiveChange",
							"detachLiveChange",
							"fireLiveChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>Slider</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "float",
											"optional": false,
											"description": "Current value of the slider after a change."
										}
									}
								}
							}
						}
					],
					"description": "Value was changed. This event is fired if the value has changed by an user action."
				},
				{
					"name": "liveChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "float",
											"optional": false,
											"description": "Current value of the slider after a change."
										}
									}
								}
							}
						}
					],
					"description": "Value was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Slider</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.commons.Slider</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Slider</code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action."
				},
				{
					"name": "attachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Slider</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>liveChange</code> event of this <code>sap.ui.commons.Slider</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Slider</code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.commons.Slider</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>liveChange</code> event of this <code>sap.ui.commons.Slider</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Slider with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value</code> of type <code>float</code>Current value of the slider after a change.</li>\n</ul>"
				},
				{
					"name": "fireLiveChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>liveChange</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value</code> of type <code>float</code>Current value of the slider after a change.</li>\n</ul>"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nUsing the slider interactively requires value \"true\".\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"since": "1.7.1",
					"description": "Gets current value of property <code>height</code>.\n\nHeight of the vertical slider.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "getLabels",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>labels</code>"
					},
					"description": "Gets current value of property <code>labels</code>.\n\nLabels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:</b> To show the labels <code>stepLabels</code> must be activated."
				},
				{
					"name": "getMax",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>max</code>"
					},
					"description": "Gets current value of property <code>max</code>.\n\nMaximal value of the slider\n\n<b>Note:</b> If <code>min</code> is larger than <code>max</code> both values will be switched\n\nDefault value is <code>100</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Slider."
				},
				{
					"name": "getMin",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>min</code>"
					},
					"description": "Gets current value of property <code>min</code>.\n\nMinimal value of the slider.\n\n<b>Note:</b> If <code>min</code> is larger than <code>max</code> both values will be switched\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getSmallStepWidth",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>smallStepWidth</code>"
					},
					"description": "Gets current value of property <code>smallStepWidth</code>.\n\nThe grip can only be moved in steps of this width."
				},
				{
					"name": "getStepLabels",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>stepLabels</code>"
					},
					"description": "Gets current value of property <code>stepLabels</code>.\n\nDisplay step numbers for the ticks on the slider.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getTotalUnits",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>totalUnits</code>"
					},
					"description": "Gets current value of property <code>totalUnits</code>.\n\nNumber of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nCurrent value of the slider. (Position of the grip.)\n\n<b>Note:</b> If the value is not in the valid range (between <code>min</code> and <code>max</code>) it will be changed to be in the valid range.\n\nDefault value is <code>50</code>."
				},
				{
					"name": "getVertical",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>vertical</code>"
					},
					"since": "1.7.1",
					"description": "Gets current value of property <code>vertical</code>.\n\nOrientation of slider\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWidth of the horizontal slider.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nUsing the slider interactively requires value \"true\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.7.1",
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nHeight of the vertical slider.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setLabels",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabels",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>labels</code>"
						}
					],
					"description": "Sets a new value for property <code>labels</code>.\n\nLabels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:</b> To show the labels <code>stepLabels</code> must be activated.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMax",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMax",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>max</code>"
						}
					],
					"description": "Sets a new value for property <code>max</code>.\n\nMaximal value of the slider\n\n<b>Note:</b> If <code>min</code> is larger than <code>max</code> both values will be switched\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100</code>."
				},
				{
					"name": "setMin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMin",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>min</code>"
						}
					],
					"description": "Sets a new value for property <code>min</code>.\n\nMinimal value of the slider.\n\n<b>Note:</b> If <code>min</code> is larger than <code>max</code> both values will be switched\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setSmallStepWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fSmallStepWidth",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>smallStepWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>smallStepWidth</code>.\n\nThe grip can only be moved in steps of this width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setStepLabels",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bStepLabels",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>stepLabels</code>"
						}
					],
					"description": "Sets a new value for property <code>stepLabels</code>.\n\nDisplay step numbers for the ticks on the slider.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setTotalUnits",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iTotalUnits",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>totalUnits</code>"
						}
					],
					"description": "Sets a new value for property <code>totalUnits</code>.\n\nNumber of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nCurrent value of the slider. (Position of the grip.)\n\n<b>Note:</b> If the value is not in the valid range (between <code>min</code> and <code>max</code>) it will be changed to be in the valid range.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>50</code>."
				},
				{
					"name": "setVertical",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.7.1",
					"parameters": [
						{
							"name": "bVertical",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>vertical</code>"
						}
					],
					"description": "Sets a new value for property <code>vertical</code>.\n\nOrientation of slider\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Slider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of the horizontal slider.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Splitter",
			"basename": "Splitter",
			"resource": "sap/ui/commons/Splitter.js",
			"module": "sap/ui/commons/Splitter",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Allows to split the screen into two areas. Make sure that the container for the splitter has an absolute height or set an absolute height for the splitter using the height property. Otherwise the height of the splitter is calculated by the height of its contents.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.ui.layout.Splitter</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "splitterOrientation",
						"type": "sap.ui.core.Orientation",
						"defaultValue": "Vertical",
						"group": "Behavior",
						"visibility": "public",
						"description": "The splitter can have horizontal or vertical orientation.",
						"methods": [
							"getSplitterOrientation",
							"setSplitterOrientation"
						]
					},
					{
						"name": "splitterPosition",
						"type": "sap.ui.core.Percentage",
						"defaultValue": "50%",
						"group": "Behavior",
						"visibility": "public",
						"description": "Position of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.",
						"methods": [
							"getSplitterPosition",
							"setSplitterPosition"
						]
					},
					{
						"name": "minSizeFirstPane",
						"type": "sap.ui.core.Percentage",
						"defaultValue": "0%",
						"group": "Behavior",
						"visibility": "public",
						"description": "The minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane",
						"methods": [
							"getMinSizeFirstPane",
							"setMinSizeFirstPane"
						]
					},
					{
						"name": "minSizeSecondPane",
						"type": "sap.ui.core.Percentage",
						"defaultValue": "0%",
						"group": "Behavior",
						"visibility": "public",
						"description": "The minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane",
						"methods": [
							"getMinSizeSecondPane",
							"setMinSizeSecondPane"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.commons.SplitterSize",
						"defaultValue": "100%",
						"group": "Behavior",
						"visibility": "public",
						"description": "The width of the split area in px or in %",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.commons.SplitterSize",
						"defaultValue": "100%",
						"group": "Behavior",
						"visibility": "public",
						"description": "The height of the split area in px or in %",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "showScrollBars",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.",
						"methods": [
							"getShowScrollBars",
							"setShowScrollBars"
						]
					},
					{
						"name": "splitterBarVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "set the splitter bar to be visible or not.",
						"methods": [
							"getSplitterBarVisible",
							"setSplitterBarVisible"
						]
					}
				],
				"aggregations": [
					{
						"name": "firstPaneContent",
						"singularName": "firstPaneContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Controls inside the first pane. These are the left ones in case of defining a vertical splitter, and the top ones in case of using the horizontal splitter.",
						"methods": [
							"getFirstPaneContent",
							"destroyFirstPaneContent",
							"insertFirstPaneContent",
							"addFirstPaneContent",
							"removeFirstPaneContent",
							"indexOfFirstPaneContent",
							"removeAllFirstPaneContent"
						]
					},
					{
						"name": "secondPaneContent",
						"singularName": "secondPaneContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Controls inside the second pane. These are the right ones in case of defining a vertical splitter, and the bottom ones in case of using the horizontal splitter.",
						"methods": [
							"getSecondPaneContent",
							"destroySecondPaneContent",
							"insertSecondPaneContent",
							"addSecondPaneContent",
							"removeSecondPaneContent",
							"indexOfSecondPaneContent",
							"removeAllSecondPaneContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Splitter.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addFirstPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFirstPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the firstPaneContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some firstPaneContent to the aggregation <code>firstPaneContent</code>."
				},
				{
					"name": "addSecondPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSecondPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the secondPaneContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some secondPaneContent to the aggregation <code>secondPaneContent</code>."
				},
				{
					"name": "destroyFirstPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the firstPaneContent in the aggregation <code>firstPaneContent</code>."
				},
				{
					"name": "destroySecondPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the secondPaneContent in the aggregation <code>secondPaneContent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Splitter with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getFirstPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>firstPaneContent</code>.\n\nControls inside the first pane. These are the left ones in case of defining a vertical splitter, and the top ones in case of using the horizontal splitter."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SplitterSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nThe height of the split area in px or in %\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Splitter."
				},
				{
					"name": "getMinSizeFirstPane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Percentage",
						"description": "Value of property <code>minSizeFirstPane</code>"
					},
					"description": "Gets current value of property <code>minSizeFirstPane</code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane\n\nDefault value is <code>0%</code>."
				},
				{
					"name": "getMinSizeSecondPane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Percentage",
						"description": "Value of property <code>minSizeSecondPane</code>"
					},
					"description": "Gets current value of property <code>minSizeSecondPane</code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane\n\nDefault value is <code>0%</code>."
				},
				{
					"name": "getSecondPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>secondPaneContent</code>.\n\nControls inside the second pane. These are the right ones in case of defining a vertical splitter, and the bottom ones in case of using the horizontal splitter."
				},
				{
					"name": "getShowScrollBars",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showScrollBars</code>"
					},
					"description": "Gets current value of property <code>showScrollBars</code>.\n\nSpecifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSplitterBarVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>splitterBarVisible</code>"
					},
					"description": "Gets current value of property <code>splitterBarVisible</code>.\n\nset the splitter bar to be visible or not.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSplitterOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Orientation",
						"description": "Value of property <code>splitterOrientation</code>"
					},
					"description": "Gets current value of property <code>splitterOrientation</code>.\n\nThe splitter can have horizontal or vertical orientation.\n\nDefault value is <code>Vertical</code>."
				},
				{
					"name": "getSplitterPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Percentage",
						"description": "Value of property <code>splitterPosition</code>"
					},
					"description": "Gets current value of property <code>splitterPosition</code>.\n\nPosition of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.\n\nDefault value is <code>50%</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.SplitterSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the split area in px or in %\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "indexOfFirstPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFirstPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The firstPaneContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>firstPaneContent</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSecondPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSecondPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The secondPaneContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>secondPaneContent</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertFirstPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFirstPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the firstPaneContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the firstPaneContent should be inserted at; for\n             a negative value of <code>iIndex</code>, the firstPaneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the firstPaneContent is inserted at\n             the last position"
						}
					],
					"description": "Inserts a firstPaneContent into the aggregation <code>firstPaneContent</code>."
				},
				{
					"name": "insertSecondPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSecondPaneContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the secondPaneContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the secondPaneContent should be inserted at; for\n             a negative value of <code>iIndex</code>, the secondPaneContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the secondPaneContent is inserted at\n             the last position"
						}
					],
					"description": "Inserts a secondPaneContent into the aggregation <code>secondPaneContent</code>."
				},
				{
					"name": "removeAllFirstPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>firstPaneContent</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSecondPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>secondPaneContent</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeFirstPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed firstPaneContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vFirstPaneContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The firstPaneContentto remove or its index or id"
						}
					],
					"description": "Removes a firstPaneContent from the aggregation <code>firstPaneContent</code>."
				},
				{
					"name": "removeSecondPaneContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed secondPaneContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSecondPaneContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The secondPaneContentto remove or its index or id"
						}
					],
					"description": "Removes a secondPaneContent from the aggregation <code>secondPaneContent</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.commons.SplitterSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nThe height of the split area in px or in %\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setMinSizeFirstPane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinSizeFirstPane",
							"type": "sap.ui.core.Percentage",
							"optional": false,
							"description": "New value for property <code>minSizeFirstPane</code>"
						}
					],
					"description": "Sets a new value for property <code>minSizeFirstPane</code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0%</code>."
				},
				{
					"name": "setMinSizeSecondPane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinSizeSecondPane",
							"type": "sap.ui.core.Percentage",
							"optional": false,
							"description": "New value for property <code>minSizeSecondPane</code>"
						}
					],
					"description": "Sets a new value for property <code>minSizeSecondPane</code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0%</code>."
				},
				{
					"name": "setShowScrollBars",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowScrollBars",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showScrollBars</code>"
						}
					],
					"description": "Sets a new value for property <code>showScrollBars</code>.\n\nSpecifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSplitterBarVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSplitterBarVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>splitterBarVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>splitterBarVisible</code>.\n\nset the splitter bar to be visible or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSplitterOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSplitterOrientation",
							"type": "sap.ui.core.Orientation",
							"optional": false,
							"description": "New value for property <code>splitterOrientation</code>"
						}
					],
					"description": "Sets a new value for property <code>splitterOrientation</code>.\n\nThe splitter can have horizontal or vertical orientation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Vertical</code>."
				},
				{
					"name": "setSplitterPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSplitterPosition",
							"type": "sap.ui.core.Percentage",
							"optional": false,
							"description": "New value for property <code>splitterPosition</code>"
						}
					],
					"description": "Sets a new value for property <code>splitterPosition</code>.\n\nPosition of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>50%</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Splitter",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.commons.SplitterSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the split area in px or in %\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.commons.SplitterSize",
			"basename": "SplitterSize",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "A string type that represents subset of CSS size values. For the Splitter only px and % are allowed."
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Tab",
			"basename": "Tab",
			"resource": "sap/ui/commons/Tab.js",
			"module": "sap/ui/commons/Tab",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.Panel",
			"description": "Represents a single tab in a TabStrip control.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.TabContainer</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "verticalScrolling",
						"type": "sap.ui.core.Scrolling",
						"defaultValue": "None",
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies the vertical scrolling.",
						"methods": [
							"getVerticalScrolling",
							"setVerticalScrolling"
						]
					},
					{
						"name": "horizontalScrolling",
						"type": "sap.ui.core.Scrolling",
						"defaultValue": "None",
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies the horizontal scrolling.",
						"methods": [
							"getHorizontalScrolling",
							"setHorizontalScrolling"
						]
					},
					{
						"name": "closable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies whether the tab contains a close button.",
						"methods": [
							"getClosable",
							"setClosable"
						]
					},
					{
						"name": "selected",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Defines whether the tab is the active one.",
						"deprecated": {
							"since": "0.17.0",
							"text": "This property is not used. To identify the selected tab in a TabStrip selectedIndex is used."
						},
						"methods": [
							"getSelected",
							"setSelected"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new Tab.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Tab with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.Panel.extend}."
				},
				{
					"name": "getClosable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>closable</code>"
					},
					"description": "Gets current value of property <code>closable</code>.\n\nSpecifies whether the tab contains a close button.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getHorizontalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Scrolling",
						"description": "Value of property <code>horizontalScrolling</code>"
					},
					"description": "Gets current value of property <code>horizontalScrolling</code>.\n\nSpecifies the horizontal scrolling.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Tab."
				},
				{
					"name": "getSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>selected</code>"
					},
					"description": "Gets current value of property <code>selected</code>.\n\nDefines whether the tab is the active one.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "0.17.0",
						"text": "This property is not used. To identify the selected tab in a TabStrip selectedIndex is used."
					}
				},
				{
					"name": "getVerticalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Scrolling",
						"description": "Value of property <code>verticalScrolling</code>"
					},
					"description": "Gets current value of property <code>verticalScrolling</code>.\n\nSpecifies the vertical scrolling.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setClosable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bClosable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>closable</code>"
						}
					],
					"description": "Sets a new value for property <code>closable</code>.\n\nSpecifies whether the tab contains a close button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setHorizontalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHorizontalScrolling",
							"type": "sap.ui.core.Scrolling",
							"optional": false,
							"description": "New value for property <code>horizontalScrolling</code>"
						}
					],
					"description": "Sets a new value for property <code>horizontalScrolling</code>.\n\nSpecifies the horizontal scrolling.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSelected",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>selected</code>"
						}
					],
					"description": "Sets a new value for property <code>selected</code>.\n\nDefines whether the tab is the active one.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"deprecated": {
						"since": "0.17.0",
						"text": "This property is not used. To identify the selected tab in a TabStrip selectedIndex is used."
					}
				},
				{
					"name": "setVerticalScrolling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sVerticalScrolling",
							"type": "sap.ui.core.Scrolling",
							"optional": false,
							"description": "New value for property <code>verticalScrolling</code>"
						}
					],
					"description": "Sets a new value for property <code>verticalScrolling</code>.\n\nSpecifies the vertical scrolling.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.TabStrip",
			"basename": "TabStrip",
			"resource": "sap/ui/commons/TabStrip.js",
			"module": "sap/ui/commons/TabStrip",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "\nTabStrip represents a container for tab controls, which contain the content and generally other controls.\nThe user switches between the tabs to display the content.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.TabContainer</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Specifies the height of the tab bar and content area.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Specifies the width of the bar and content area.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "selectedIndex",
						"type": "int",
						"defaultValue": 0,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the index of the currently selected tab.",
						"methods": [
							"getSelectedIndex",
							"setSelectedIndex"
						]
					},
					{
						"name": "enableTabReordering",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether tab reordering is enabled.",
						"methods": [
							"getEnableTabReordering",
							"setEnableTabReordering"
						]
					}
				],
				"aggregations": [
					{
						"name": "tabs",
						"singularName": "tab",
						"type": "sap.ui.commons.Tab",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The tabs contained in the TabStrip.",
						"methods": [
							"getTabs",
							"destroyTabs",
							"insertTab",
							"addTab",
							"removeTab",
							"indexOfTab",
							"removeAllTabs"
						]
					},
					{
						"name": "_leftArrowControl",
						"singularName": "_leftArrowControl",
						"type": "sap.ui.core.Icon",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The left arrow, used for tab scrolling.",
						"methods": [
							"get_leftArrowControl",
							"destroy_leftArrowControl",
							"set_leftArrowControl"
						]
					},
					{
						"name": "_rightArrowControl",
						"singularName": "_rightArrowControl",
						"type": "sap.ui.core.Icon",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The right arrow, used for tab scrolling.",
						"methods": [
							"get_rightArrowControl",
							"destroy_rightArrowControl",
							"set_rightArrowControl"
						]
					}
				],
				"defaultAggregation": "tabs",
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Fires when the user selects a tab.",
						"parameters": {
							"index": {
								"name": "index",
								"type": "int",
								"description": "The index of the selected tab."
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "close",
						"visibility": "public",
						"description": "Fires when the user closes a tab.",
						"parameters": {
							"index": {
								"name": "index",
								"type": "int",
								"description": "The index of the closed tab."
							}
						},
						"methods": [
							"attachClose",
							"detachClose",
							"fireClose"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new TabStrip.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "close",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"index": {
											"name": "index",
											"type": "int",
											"optional": false,
											"description": "The index of the closed tab."
										}
									}
								}
							}
						}
					],
					"description": "Fires when the user closes a tab."
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"index": {
											"name": "index",
											"type": "int",
											"optional": false,
											"description": "The index of the selected tab."
										}
									}
								}
							}
						}
					],
					"description": "Fires when the user selects a tab."
				}
			],
			"methods": [
				{
					"name": "addTab",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTab",
							"type": "sap.ui.commons.Tab",
							"optional": false,
							"description": "the tab to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some tab to the aggregation <code>tabs</code>."
				},
				{
					"name": "attachClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TabStrip</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>close</code> event of this <code>sap.ui.commons.TabStrip</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TabStrip</code> itself.\n\nFires when the user closes a tab."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TabStrip</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.commons.TabStrip</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TabStrip</code> itself.\n\nFires when the user selects a tab."
				},
				{
					"name": "closeTab",
					"visibility": "public",
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "The index of the tab that should be closed"
						}
					],
					"description": "Closes a tab (if the tab is selected, the next one will be selected;\nif it's the last tab, the previous one will be selected).\n\nThis method should be called if the close event is fired.\nIt can not be called automatically because the consumer might need to run some logic before the tab is closed."
				},
				{
					"name": "createTab",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab",
						"description": "oTab\n        The created tab control"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "Defines the title text of the newly created tab"
						},
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Defines the root control of the content area"
						}
					],
					"description": "Creates a Tab and adds it to the TabStrip."
				},
				{
					"name": "destroyTabs",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the tabs in the aggregation <code>tabs</code>."
				},
				{
					"name": "detachClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>close</code> event of this <code>sap.ui.commons.TabStrip</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.commons.TabStrip</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.TabStrip with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireClose",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>close</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>index</code> of type <code>int</code>The index of the closed tab.</li>\n</ul>"
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>index</code> of type <code>int</code>The index of the selected tab.</li>\n</ul>"
				},
				{
					"name": "getEnableTabReordering",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableTabReordering</code>"
					},
					"description": "Gets current value of property <code>enableTabReordering</code>.\n\nSpecifies whether tab reordering is enabled.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nSpecifies the height of the tab bar and content area."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.TabStrip."
				},
				{
					"name": "getSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>selectedIndex</code>"
					},
					"description": "Gets current value of property <code>selectedIndex</code>.\n\nSpecifies the index of the currently selected tab.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getTabs",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab[]"
					},
					"description": "Gets content of aggregation <code>tabs</code>.\n\nThe tabs contained in the TabStrip."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nSpecifies the width of the bar and content area."
				},
				{
					"name": "indexOfTab",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTab",
							"type": "sap.ui.commons.Tab",
							"optional": false,
							"description": "The tab whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.Tab</code> in the aggregation <code>tabs</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertTab",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTab",
							"type": "sap.ui.commons.Tab",
							"optional": false,
							"description": "the tab to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the tab should be inserted at; for\n             a negative value of <code>iIndex</code>, the tab is inserted at position 0; for a value\n             greater than the current size of the aggregation, the tab is inserted at\n             the last position"
						}
					],
					"description": "Inserts a tab into the aggregation <code>tabs</code>."
				},
				{
					"name": "onBeforeRendering",
					"visibility": "public",
					"description": "Called before the rendering of the control is started."
				},
				{
					"name": "removeAllTabs",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>tabs</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeTab",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tab",
						"description": "The removed tab or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vTab",
							"type": "int|string|sap.ui.commons.Tab",
							"optional": false,
							"description": "The tabto remove or its index or id"
						}
					],
					"description": "Removes a tab from the aggregation <code>tabs</code>."
				},
				{
					"name": "setEnableTabReordering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Pointer to the control instance for chaining."
					},
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "The value."
						}
					],
					"description": "Sets whether tab reordering is enabled."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nSpecifies the height of the tab bar and content area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iSelectedIndex",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>selectedIndex</code>"
						}
					],
					"description": "Sets a new value for property <code>selectedIndex</code>.\n\nSpecifies the index of the currently selected tab.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TabStrip",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nSpecifies the width of the bar and content area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.TextArea",
			"basename": "TextArea",
			"resource": "sap/ui/commons/TextArea.js",
			"module": "sap/ui/commons/TextArea",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.TextField",
			"description": "Control to enter or display multible row text.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.TextArea</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Height of text field. When it is set (CSS-size such as % or px), this is the exact size.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "cols",
						"type": "int",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Number of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.",
						"methods": [
							"getCols",
							"setCols"
						]
					},
					{
						"name": "rows",
						"type": "int",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Number of Rows. This proprty is only used if Height is not used.",
						"methods": [
							"getRows",
							"setRows"
						]
					},
					{
						"name": "wrapping",
						"type": "sap.ui.core.Wrapping",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Text wrapping. Possible values are: Soft, Hard, Off.",
						"methods": [
							"getWrapping",
							"setWrapping"
						]
					},
					{
						"name": "cursorPos",
						"type": "int",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Position of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip",
						"methods": [
							"getCursorPos",
							"setCursorPos"
						]
					},
					{
						"name": "explanation",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "text which appears, in case quick-help is switched on",
						"methods": [
							"getExplanation",
							"setExplanation"
						]
					},
					{
						"name": "labeledBy",
						"type": "string",
						"defaultValue": null,
						"group": "Identification",
						"visibility": "public",
						"description": "ID of label control",
						"deprecated": {
							"since": "1.5.2",
							"text": "Please use association AriaLabelledBy instead."
						},
						"methods": [
							"getLabeledBy",
							"setLabeledBy"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TextArea.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.TextArea with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}."
				},
				{
					"name": "getCols",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>cols</code>"
					},
					"description": "Gets current value of property <code>cols</code>.\n\nNumber of Columns. Cols means number of characters per row. This proprty is only used if Width is not used."
				},
				{
					"name": "getCursorPos",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>cursorPos</code>"
					},
					"description": "Gets current value of property <code>cursorPos</code>.\n\nPosition of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip"
				},
				{
					"name": "getExplanation",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>explanation</code>"
					},
					"description": "Gets current value of property <code>explanation</code>.\n\ntext which appears, in case quick-help is switched on"
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nHeight of text field. When it is set (CSS-size such as % or px), this is the exact size."
				},
				{
					"name": "getLabeledBy",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>labeledBy</code>"
					},
					"description": "Gets current value of property <code>labeledBy</code>.\n\nID of label control",
					"deprecated": {
						"since": "1.5.2",
						"text": "Please use association AriaLabelledBy instead."
					}
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.TextArea."
				},
				{
					"name": "getRows",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>rows</code>"
					},
					"description": "Gets current value of property <code>rows</code>.\n\nNumber of Rows. This proprty is only used if Height is not used."
				},
				{
					"name": "getWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Wrapping",
						"description": "Value of property <code>wrapping</code>"
					},
					"description": "Gets current value of property <code>wrapping</code>.\n\nText wrapping. Possible values are: Soft, Hard, Off."
				},
				{
					"name": "setCols",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCols",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>cols</code>"
						}
					],
					"description": "Sets a new value for property <code>cols</code>.\n\nNumber of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setCursorPos",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCursorPos",
							"type": "int",
							"optional": false,
							"description": "cursor position"
						}
					],
					"description": "Property setter for the cursor position"
				},
				{
					"name": "setExplanation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sExplanation",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>explanation</code>"
						}
					],
					"description": "Sets a new value for property <code>explanation</code>.\n\ntext which appears, in case quick-help is switched on\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nHeight of text field. When it is set (CSS-size such as % or px), this is the exact size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLabeledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabeledBy",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>labeledBy</code>"
						}
					],
					"description": "Sets a new value for property <code>labeledBy</code>.\n\nID of label control\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"since": "1.5.2",
						"text": "Please use association AriaLabelledBy instead."
					}
				},
				{
					"name": "setMaxLength",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxLength",
							"type": "int",
							"optional": false,
							"description": "maximal length of text"
						}
					],
					"description": "Property setter for MaxLength"
				},
				{
					"name": "setRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iRows",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>rows</code>"
						}
					],
					"description": "Sets a new value for property <code>rows</code>.\n\nNumber of Rows. This proprty is only used if Height is not used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWrapping",
							"type": "sap.ui.core.Wrapping",
							"optional": false,
							"description": "New value for property <code>wrapping</code>"
						}
					],
					"description": "Sets a new value for property <code>wrapping</code>.\n\nText wrapping. Possible values are: Soft, Hard, Off.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.TextField",
			"basename": "TextField",
			"resource": "sap/ui/commons/TextField.js",
			"module": "sap/ui/commons/TextField",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Renders a input field for text input.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Input</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "string",
						"defaultValue": "",
						"group": "Data",
						"visibility": "public",
						"bindable": true,
						"description": "Text inside the <code>TextField</code>",
						"methods": [
							"getValue",
							"setValue",
							"bindValue",
							"unbindValue"
						]
					},
					{
						"name": "textDirection",
						"type": "sap.ui.core.TextDirection",
						"defaultValue": "Inherit",
						"group": "Appearance",
						"visibility": "public",
						"description": "Direction of the text. Possible values: \"rtl\", \"ltr\".",
						"methods": [
							"getTextDirection",
							"setTextDirection"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "required",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Depending on theme the <code>TextField</code> is shown as required.\nIf a <code>Label</code> is assigned to the <code>TextField</code> it will visualize the requires state too.",
						"methods": [
							"getRequired",
							"setRequired"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "maxLength",
						"type": "int",
						"defaultValue": 0,
						"group": "Behavior",
						"visibility": "public",
						"description": "Maximum number of characters. Value '0' means the feature is switched off.",
						"methods": [
							"getMaxLength",
							"setMaxLength"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Data",
						"visibility": "public",
						"description": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "textAlign",
						"type": "sap.ui.core.TextAlign",
						"defaultValue": "Begin",
						"group": "Appearance",
						"visibility": "public",
						"description": "Sets the horizontal alignment of the text.",
						"methods": [
							"getTextAlign",
							"setTextAlign"
						]
					},
					{
						"name": "imeMode",
						"type": "sap.ui.core.ImeMode",
						"defaultValue": "Auto",
						"group": "Behavior",
						"visibility": "public",
						"description": "State of the Input Method Editor (IME).",
						"methods": [
							"getImeMode",
							"setImeMode"
						]
					},
					{
						"name": "design",
						"type": "sap.ui.core.Design",
						"defaultValue": "Standard",
						"group": "Appearance",
						"visibility": "public",
						"description": "Font type. valid values are Standard and Monospace.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					},
					{
						"name": "helpId",
						"type": "string",
						"defaultValue": "",
						"group": "Behavior",
						"visibility": "public",
						"description": "Unique identifier used for help service.",
						"methods": [
							"getHelpId",
							"setHelpId"
						]
					},
					{
						"name": "accessibleRole",
						"type": "sap.ui.core.AccessibleRole",
						"defaultValue": "Textbox",
						"group": "Accessibility",
						"visibility": "public",
						"description": "Accessibility role for the text field.",
						"methods": [
							"getAccessibleRole",
							"setAccessibleRole"
						]
					},
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The <code>name</code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "placeholder",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.14.0",
						"description": "Placeholder for the text field.",
						"methods": [
							"getPlaceholder",
							"setPlaceholder"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed.",
						"parameters": {
							"newValue": {
								"name": "newValue",
								"type": "string",
								"description": "The new / changed value of the <code>TextField</code>."
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "liveChange",
						"visibility": "public",
						"description": "This event if fired during typing into the <code>TextField</code> and returns the currently entered value.\n<b>Note:</b> This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control.",
						"parameters": {
							"liveValue": {
								"name": "liveValue",
								"type": "string",
								"description": "Current visible value of the <code>TextField</code>."
							}
						},
						"methods": [
							"attachLiveChange",
							"detachLiveChange",
							"fireLiveChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sID",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new TextField.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"newValue": {
											"name": "newValue",
											"type": "string",
											"optional": false,
											"description": "The new / changed value of the <code>TextField</code>."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
				},
				{
					"name": "liveChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"liveValue": {
											"name": "liveValue",
											"type": "string",
											"optional": false,
											"description": "Current visible value of the <code>TextField</code>."
										}
									}
								}
							}
						}
					],
					"description": "This event if fired during typing into the <code>TextField</code> and returns the currently entered value.\n<b>Note:</b> This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
				}
			],
			"methods": [
				{
					"name": "_checkChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Compares the previous value with the current value and fires the change event\nif the TextField is editable and the value has changed."
				},
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TextField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.commons.TextField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TextField</code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
				},
				{
					"name": "attachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TextField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>liveChange</code> event of this <code>sap.ui.commons.TextField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TextField</code> itself.\n\nThis event if fired during typing into the <code>TextField</code> and returns the currently entered value.\n<b>Note:</b> This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
				},
				{
					"name": "bindValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds property <code>value</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>"
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.commons.TextField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>liveChange</code> event of this <code>sap.ui.commons.TextField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.TextField with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue</code> of type <code>string</code>The new / changed value of the <code>TextField</code>.</li>\n</ul>"
				},
				{
					"name": "fireLiveChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>liveChange</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>liveValue</code> of type <code>string</code>Current visible value of the <code>TextField</code>.</li>\n</ul>"
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.AccessibleRole",
						"description": "Value of property <code>accessibleRole</code>"
					},
					"description": "Gets current value of property <code>accessibleRole</code>.\n\nAccessibility role for the text field.\n\nDefault value is <code>Textbox</code>."
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Design",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nFont type. valid values are Standard and Monospace.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nSwitches edit state of the control. Read-only fields have different colors, depending on theme setting.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getFocusInfo",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "an object representing the serialized focus information"
					},
					"description": "Returns an object representing the serialized focus information"
				},
				{
					"name": "getHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>helpId</code>"
					},
					"description": "Gets current value of property <code>helpId</code>.\n\nUnique identifier used for help service.\n\nDefault value is <code></code>."
				},
				{
					"name": "getImeMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ImeMode",
						"description": "Value of property <code>imeMode</code>"
					},
					"description": "Gets current value of property <code>imeMode</code>.\n\nState of the Input Method Editor (IME).\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "getInputDomRef",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "DOM reference or null"
					},
					"description": "Method for accessing the DOM Ref of the input element."
				},
				{
					"name": "getLiveValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "live value"
					},
					"description": "Returns the current value of the <code>TextField</code>.\nIn case of editing the <code>TextField</code> you can access the current value via this method.\nThe validated value is accessible via the property value."
				},
				{
					"name": "getMaxLength",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>maxLength</code>"
					},
					"description": "Gets current value of property <code>maxLength</code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.TextField."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nThe <code>name</code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
				},
				{
					"name": "getPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>placeholder</code>"
					},
					"since": "1.14.0",
					"description": "Gets current value of property <code>placeholder</code>.\n\nPlaceholder for the text field."
				},
				{
					"name": "getRequired",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>required</code>"
					},
					"description": "Gets current value of property <code>required</code>.\n\nDepending on theme the <code>TextField</code> is shown as required.\nIf a <code>Label</code> is assigned to the <code>TextField</code> it will visualize the requires state too.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextAlign",
						"description": "Value of property <code>textAlign</code>"
					},
					"description": "Gets current value of property <code>textAlign</code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "getTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextDirection",
						"description": "Value of property <code>textDirection</code>"
					},
					"description": "Gets current value of property <code>textDirection</code>.\n\nDirection of the text. Possible values: \"rtl\", \"ltr\".\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nText inside the <code>TextField</code>\n\nDefault value is <code></code>."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"description": "Gets current value of property <code>valueState</code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWidth of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
				},
				{
					"name": "onfocusin",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Event handler called when control is receiving the focus"
				},
				{
					"name": "onkeyup",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Event handler for keyup.\nfire the liveChange event"
				},
				{
					"name": "onsapenter",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Event handler called when enter key is pressed."
				},
				{
					"name": "onsapfocusleave",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Event handler called when control is losing the focus"
				},
				{
					"name": "onselectstart",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "The event object."
						}
					],
					"description": "Event handler called when text selection starts.\nWhen the text field is disabled, the text should not be selectable, so cancel the event."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAccessibleRole",
							"type": "sap.ui.core.AccessibleRole",
							"optional": false,
							"description": "New value for property <code>accessibleRole</code>"
						}
					],
					"description": "Sets a new value for property <code>accessibleRole</code>.\n\nAccessibility role for the text field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Textbox</code>."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.core.Design",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nFont type. valid values are Standard and Monospace.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nSwitches edit state of the control. Read-only fields have different colors, depending on theme setting.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHelpId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>helpId</code>"
						}
					],
					"description": "Sets a new value for property <code>helpId</code>.\n\nUnique identifier used for help service.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setImeMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sImeMode",
							"type": "sap.ui.core.ImeMode",
							"optional": false,
							"description": "New value for property <code>imeMode</code>"
						}
					],
					"description": "Sets a new value for property <code>imeMode</code>.\n\nState of the Input Method Editor (IME).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "setMaxLength",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxLength",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>maxLength</code>"
						}
					],
					"description": "Sets a new value for property <code>maxLength</code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nThe <code>name</code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.14.0",
					"parameters": [
						{
							"name": "sPlaceholder",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>placeholder</code>"
						}
					],
					"description": "Sets a new value for property <code>placeholder</code>.\n\nPlaceholder for the text field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRequired",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bRequired",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>required</code>"
						}
					],
					"description": "Sets a new value for property <code>required</code>.\n\nDepending on theme the <code>TextField</code> is shown as required.\nIf a <code>Label</code> is assigned to the <code>TextField</code> it will visualize the requires state too.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "New value for property <code>textAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>textAlign</code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "setTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "New value for property <code>textDirection</code>"
						}
					],
					"description": "Sets a new value for property <code>textDirection</code>.\n\nDirection of the text. Possible values: \"rtl\", \"ltr\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nText inside the <code>TextField</code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds property <code>value</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.TextView",
			"basename": "TextView",
			"resource": "sap/ui/commons/TextView.js",
			"module": "sap/ui/commons/TextView",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Is used to display some continous text. The control can inherit the text direction from its parent control.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"bindable": true,
						"description": "Text to be displayed.",
						"methods": [
							"getText",
							"setText",
							"bindText",
							"unbindText"
						]
					},
					{
						"name": "textDirection",
						"type": "sap.ui.core.TextDirection",
						"defaultValue": "Inherit",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.",
						"methods": [
							"getTextDirection",
							"setTextDirection"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Switches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "helpId",
						"type": "string",
						"defaultValue": "",
						"group": "Behavior",
						"visibility": "public",
						"description": "Unique identifier used for help services.",
						"methods": [
							"getHelpId",
							"setHelpId"
						]
					},
					{
						"name": "accessibleRole",
						"type": "sap.ui.core.AccessibleRole",
						"defaultValue": null,
						"group": "Accessibility",
						"visibility": "public",
						"description": "The ARIA role for the control.",
						"methods": [
							"getAccessibleRole",
							"setAccessibleRole"
						]
					},
					{
						"name": "design",
						"type": "sap.ui.commons.TextViewDesign",
						"defaultValue": "Standard",
						"group": "Data",
						"visibility": "public",
						"description": "Defines the visual appearance of the control.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					},
					{
						"name": "wrapping",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Disabled automatic wrapping of the text.",
						"methods": [
							"getWrapping",
							"setWrapping"
						]
					},
					{
						"name": "semanticColor",
						"type": "sap.ui.commons.TextViewColor",
						"defaultValue": "Default",
						"group": "Appearance",
						"visibility": "public",
						"description": "Semantic color of the text View",
						"methods": [
							"getSemanticColor",
							"setSemanticColor"
						]
					},
					{
						"name": "textAlign",
						"type": "sap.ui.core.TextAlign",
						"defaultValue": "Begin",
						"group": "Appearance",
						"visibility": "public",
						"description": "Sets the horizontal alignment of the text.",
						"methods": [
							"getTextAlign",
							"setTextAlign"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Width of the TextView",
						"methods": [
							"getWidth",
							"setWidth"
						]
					}
				],
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new TextView.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "bindText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds property <code>text</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.TextView with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.AccessibleRole",
						"description": "Value of property <code>accessibleRole</code>"
					},
					"description": "Gets current value of property <code>accessibleRole</code>.\n\nThe ARIA role for the control."
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextViewDesign",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nDefines the visual appearance of the control.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nSwitches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>helpId</code>"
					},
					"description": "Gets current value of property <code>helpId</code>.\n\nUnique identifier used for help services.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.TextView."
				},
				{
					"name": "getSemanticColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextViewColor",
						"description": "Value of property <code>semanticColor</code>"
					},
					"description": "Gets current value of property <code>semanticColor</code>.\n\nSemantic color of the text View\n\nDefault value is <code>Default</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nText to be displayed.\n\nDefault value is <code></code>."
				},
				{
					"name": "getTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextAlign",
						"description": "Value of property <code>textAlign</code>"
					},
					"description": "Gets current value of property <code>textAlign</code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "getTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextDirection",
						"description": "Value of property <code>textDirection</code>"
					},
					"description": "Gets current value of property <code>textDirection</code>.\n\nDetermines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWidth of the TextView"
				},
				{
					"name": "getWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>wrapping</code>"
					},
					"description": "Gets current value of property <code>wrapping</code>.\n\nDisabled automatic wrapping of the text.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setAccessibleRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAccessibleRole",
							"type": "sap.ui.core.AccessibleRole",
							"optional": false,
							"description": "New value for property <code>accessibleRole</code>"
						}
					],
					"description": "Sets a new value for property <code>accessibleRole</code>.\n\nThe ARIA role for the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.commons.TextViewDesign",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nDefines the visual appearance of the control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nSwitches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHelpId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHelpId",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>helpId</code>"
						}
					],
					"description": "Sets a new value for property <code>helpId</code>.\n\nUnique identifier used for help services.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setSemanticColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSemanticColor",
							"type": "sap.ui.commons.TextViewColor",
							"optional": false,
							"description": "New value for property <code>semanticColor</code>"
						}
					],
					"description": "Sets a new value for property <code>semanticColor</code>.\n\nSemantic color of the text View\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Default</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nText to be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setTextAlign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "New value for property <code>textAlign</code>"
						}
					],
					"description": "Sets a new value for property <code>textAlign</code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Begin</code>."
				},
				{
					"name": "setTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "New value for property <code>textDirection</code>"
						}
					],
					"description": "Sets a new value for property <code>textDirection</code>.\n\nDetermines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWidth of the TextView\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWrapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bWrapping",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>wrapping</code>"
						}
					],
					"description": "Sets a new value for property <code>wrapping</code>.\n\nDisabled automatic wrapping of the text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "unbindText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TextView",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds property <code>text</code> from model data."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.TextViewColor",
			"basename": "TextViewColor",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Semantic Colors of a text.",
			"properties": [
				{
					"name": "Critical",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Critical color"
				},
				{
					"name": "Default",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Default color"
				},
				{
					"name": "Negative",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Negative color"
				},
				{
					"name": "Positive",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Positive color"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.TextViewDesign",
			"basename": "TextViewDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Designs for TextView.",
			"properties": [
				{
					"name": "Bold",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in bold letters"
				},
				{
					"name": "H1",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in header 1 letters."
				},
				{
					"name": "H2",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in header 2 letters."
				},
				{
					"name": "H3",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in header 3 letters."
				},
				{
					"name": "H4",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in header 4 letters."
				},
				{
					"name": "H5",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in header 5 letters."
				},
				{
					"name": "H6",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in header 6 letters."
				},
				{
					"name": "Italic",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in italic letters"
				},
				{
					"name": "Monospace",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in monospace letters."
				},
				{
					"name": "Small",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in smaller letters."
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the text in standard letters."
				},
				{
					"name": "Underline",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "underlined Text"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Title",
			"basename": "Title",
			"resource": "sap/ui/commons/Title.js",
			"module": "sap/ui/commons/Title",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Title",
			"description": "Represents a title element that can be used for aggregation with other controls",
			"deprecated": {
				"since": "1.16.0",
				"text": "moved to sap.ui.core library. Please use this one."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Title."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Title with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Title.extend}."
				},
				{
					"name": "getLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TitleLevel",
						"description": "the value of property <code>level</code>"
					},
					"since": "1.9.1",
					"description": "Getter for property <code>level</code>.\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Title."
				},
				{
					"name": "setLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Title",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.9.1",
					"parameters": [
						{
							"name": "oLevel",
							"type": "sap.ui.commons.TitleLevel",
							"optional": false,
							"description": "new value for property <code>level</code>"
						}
					],
					"description": "Setter for property <code>level</code>.\n\nDefault value is <code>Auto</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ToggleButton",
			"basename": "ToggleButton",
			"resource": "sap/ui/commons/ToggleButton.js",
			"module": "sap/ui/commons/ToggleButton",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.Button",
			"description": "The ToggleButton Control is a Button that can be toggled between pressed and normal state",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.ToggleButton</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "pressed",
						"type": "boolean",
						"defaultValue": false,
						"group": "Data",
						"visibility": "public",
						"description": "The property is “true” when the control is toggled. The default state of this property is \"false\".",
						"methods": [
							"getPressed",
							"setPressed"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ToggleButton.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ToggleButton with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ToggleButton."
				},
				{
					"name": "getPressed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>pressed</code>"
					},
					"description": "Gets current value of property <code>pressed</code>.\n\nThe property is “true” when the control is toggled. The default state of this property is \"false\".\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setPressed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToggleButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPressed",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>pressed</code>"
						}
					],
					"description": "Sets a new value for property <code>pressed</code>.\n\nThe property is “true” when the control is toggled. The default state of this property is \"false\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Toolbar",
			"basename": "Toolbar",
			"resource": "sap/ui/commons/Toolbar.js",
			"module": "sap/ui/commons/Toolbar",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "A horizontal row of items where in many cases the single toolbar items are buttons containing icons. Note that all controls with the\nsap.ui.commons.ToolbarItem interface can be used as item: Button, ComboBox, TextField.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Toolbar</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "auto",
						"group": "Dimension",
						"visibility": "public",
						"description": "When there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "design",
						"type": "sap.ui.commons.ToolbarDesign",
						"defaultValue": "Flat",
						"group": "Appearance",
						"visibility": "public",
						"description": "Design settings are theme-dependent.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					},
					{
						"name": "standalone",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Per default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.",
						"methods": [
							"getStandalone",
							"setStandalone"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.commons.ToolbarItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregating the tool bar items.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					},
					{
						"name": "rightItems",
						"singularName": "rightItem",
						"type": "sap.ui.commons.ToolbarItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Aggregating the right side tool bar items.",
						"methods": [
							"getRightItems",
							"destroyRightItems",
							"insertRightItem",
							"addRightItem",
							"removeRightItem",
							"indexOfRightItem",
							"removeAllRightItems"
						]
					}
				],
				"defaultAggregation": "items"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Toolbar.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "addRightItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRightItem",
							"type": "sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "the rightItem to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some rightItem to the aggregation <code>rightItems</code>."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "destroyRightItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the rightItems in the aggregation <code>rightItems</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Toolbar with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarDesign",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nDesign settings are theme-dependent.\n\nDefault value is <code>Flat</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarItem[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\nAggregating the tool bar items."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Toolbar."
				},
				{
					"name": "getRightItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarItem[]"
					},
					"description": "Gets content of aggregation <code>rightItems</code>.\n\nAggregating the right side tool bar items."
				},
				{
					"name": "getStandalone",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>standalone</code>"
					},
					"description": "Gets current value of property <code>standalone</code>.\n\nPer default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nWhen there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.ToolbarItem</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfRightItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oRightItem",
							"type": "sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "The rightItem whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.ToolbarItem</code> in the aggregation <code>rightItems</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "insertRightItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRightItem",
							"type": "sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "the rightItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the rightItem should be inserted at; for\n             a negative value of <code>iIndex</code>, the rightItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the rightItem is inserted at\n             the last position"
						}
					],
					"description": "Inserts a rightItem into the aggregation <code>rightItems</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllRightItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>rightItems</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarItem",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "removeRightItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarItem",
						"description": "The removed rightItem or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vRightItem",
							"type": "int|string|sap.ui.commons.ToolbarItem",
							"optional": false,
							"description": "The rightItemto remove or its index or id"
						}
					],
					"description": "Removes a rightItem from the aggregation <code>rightItems</code>."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.commons.ToolbarDesign",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nDesign settings are theme-dependent.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Flat</code>."
				},
				{
					"name": "setStandalone",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bStandalone",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>standalone</code>"
						}
					],
					"description": "Sets a new value for property <code>standalone</code>.\n\nPer default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Toolbar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nWhen there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.ToolbarDesign",
			"basename": "ToolbarDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Determines the visual design of a Toolbar.",
			"properties": [
				{
					"name": "Flat",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The included controls have a very light appearance. The feature might be not supported by all themes."
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The toolbar elements such as buttons for example have their normal visual design, and the toolbar appears solid.\nThe feature might be not supported by all themes."
				},
				{
					"name": "Transparent",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The controls included in the toolbar have a normal visual design where the toolbar appears transparent.\nThe feature might be not supported by all themes."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.commons.ToolbarItem",
			"basename": "ToolbarItem",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Marker interface for common controls which are suitable for use within a toolbar.\nThe most prominent example of a toolbar item is a button which is mostly used with\nan icon instead of a text caption.\n\nToolbar items must have a fixed height compatible with the toolbar being\na single horizontal row. They can refer to the toolbar's marker class\n\"sapUiTb\" to adjust their own theming when used inside a toolbar."
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ToolbarSeparator",
			"basename": "ToolbarSeparator",
			"resource": "sap/ui/commons/ToolbarSeparator.js",
			"module": "sap/ui/commons/ToolbarSeparator",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "A small vertical line that is generally added to the tool bar between the items to visually separate them.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Toolbar</code> control."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "displayVisualSeparator",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "When set to false, there is no visual indication of separation by a vertical line but by a wider space.",
						"methods": [
							"getDisplayVisualSeparator",
							"setDisplayVisualSeparator"
						]
					},
					{
						"name": "design",
						"type": "sap.ui.commons.ToolbarSeparatorDesign",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Design of the Separator.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ToolbarSeparator.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ToolbarSeparator with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarSeparatorDesign",
						"description": "Value of property <code>design</code>"
					},
					"description": "Gets current value of property <code>design</code>.\n\nDesign of the Separator."
				},
				{
					"name": "getDisplayVisualSeparator",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displayVisualSeparator</code>"
					},
					"description": "Gets current value of property <code>displayVisualSeparator</code>.\n\nWhen set to false, there is no visual indication of separation by a vertical line but by a wider space.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ToolbarSeparator."
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarSeparator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDesign",
							"type": "sap.ui.commons.ToolbarSeparatorDesign",
							"optional": false,
							"description": "New value for property <code>design</code>"
						}
					],
					"description": "Sets a new value for property <code>design</code>.\n\nDesign of the Separator.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDisplayVisualSeparator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ToolbarSeparator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplayVisualSeparator",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displayVisualSeparator</code>"
						}
					],
					"description": "Sets a new value for property <code>displayVisualSeparator</code>.\n\nWhen set to false, there is no visual indication of separation by a vertical line but by a wider space.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.ToolbarSeparatorDesign",
			"basename": "ToolbarSeparatorDesign",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Design of the Toolbar Separator.",
			"properties": [
				{
					"name": "FullHeight",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "100% height Separator before and after specific controls"
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Standard Separator between controls"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.Tree",
			"basename": "Tree",
			"resource": "sap/ui/commons/Tree.js",
			"module": "sap/ui/commons/Tree",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Simple tree to display item in a hierarchical way",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Tree title",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Tree width",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Tree height",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "showHeader",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Tree Header is display. If false, the tree will be in a transparent mode",
						"methods": [
							"getShowHeader",
							"setShowHeader"
						]
					},
					{
						"name": "showHeaderIcons",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Show Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true",
						"methods": [
							"getShowHeaderIcons",
							"setShowHeaderIcons"
						]
					},
					{
						"name": "showHorizontalScrollbar",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Display horizontal scrollbar. If false, the overflow content will be hidden",
						"methods": [
							"getShowHorizontalScrollbar",
							"setShowHorizontalScrollbar"
						]
					},
					{
						"name": "minWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Minimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize",
						"methods": [
							"getMinWidth",
							"setMinWidth"
						]
					},
					{
						"name": "selectionMode",
						"type": "sap.ui.commons.TreeSelectionMode",
						"defaultValue": "Legacy",
						"group": "Behavior",
						"visibility": "public",
						"description": "Selection mode of the Tree.",
						"methods": [
							"getSelectionMode",
							"setSelectionMode"
						]
					}
				],
				"aggregations": [
					{
						"name": "nodes",
						"singularName": "node",
						"type": "sap.ui.commons.TreeNode",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "First level nodes",
						"methods": [
							"getNodes",
							"destroyNodes",
							"insertNode",
							"addNode",
							"removeNode",
							"indexOfNode",
							"removeAllNodes",
							"bindNodes",
							"unbindNodes"
						]
					}
				],
				"defaultAggregation": "nodes",
				"events": [
					{
						"name": "select",
						"visibility": "public",
						"description": "Event is fired when a tree node is selected.",
						"parameters": {
							"node": {
								"name": "node",
								"type": "sap.ui.commons.TreeNode",
								"description": "The node which has been selected."
							},
							"nodeContext": {
								"name": "nodeContext",
								"type": "object",
								"description": "The binding context of the selected node."
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "selectionChange",
						"visibility": "public",
						"description": "fired when the selection of the tree has been changed",
						"parameters": {
							"nodes": {
								"name": "nodes",
								"type": "sap.ui.commons.TreeNode[]",
								"description": "The nodes which has been selected."
							},
							"nodeContexts": {
								"name": "nodeContexts",
								"type": "object[]",
								"description": "The binding context of the selected nodes."
							}
						},
						"methods": [
							"attachSelectionChange",
							"detachSelectionChange",
							"fireSelectionChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Tree.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"node": {
											"name": "node",
											"type": "sap.ui.commons.TreeNode",
											"optional": false,
											"description": "The node which has been selected."
										},
										"nodeContext": {
											"name": "nodeContext",
											"type": "object",
											"optional": false,
											"description": "The binding context of the selected node."
										}
									}
								}
							}
						}
					],
					"description": "Event is fired when a tree node is selected."
				},
				{
					"name": "selectionChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"nodes": {
											"name": "nodes",
											"type": "sap.ui.commons.TreeNode[]",
											"optional": false,
											"description": "The nodes which has been selected."
										},
										"nodeContexts": {
											"name": "nodeContexts",
											"type": "object[]",
											"optional": false,
											"description": "The binding context of the selected nodes."
										}
									}
								}
							}
						}
					],
					"description": "fired when the selection of the tree has been changed"
				}
			],
			"methods": [
				{
					"name": "addNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.commons.TreeNode",
							"optional": false,
							"description": "the node to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some node to the aggregation <code>nodes</code>."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Tree</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>select</code> event of this <code>sap.ui.commons.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Tree</code> itself.\n\nEvent is fired when a tree node is selected."
				},
				{
					"name": "attachSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.Tree</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selectionChange</code> event of this <code>sap.ui.commons.Tree</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Tree</code> itself.\n\nfired when the selection of the tree has been changed"
				},
				{
					"name": "bindNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>nodes</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "collapseAll",
					"visibility": "public",
					"description": "Collapses all nodes in the tree"
				},
				{
					"name": "destroyNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the nodes in the aggregation <code>nodes</code>."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>select</code> event of this <code>sap.ui.commons.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selectionChange</code> event of this <code>sap.ui.commons.Tree</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "expandAll",
					"visibility": "public",
					"description": "Expands all nodes in the tree"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.Tree with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "Whether or not to prevent the default action"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>select</code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>node</code> of type <code>sap.ui.commons.TreeNode</code>The node which has been selected.</li>\n<li><code>nodeContext</code> of type <code>object</code>The binding context of the selected node.</li>\n</ul>"
				},
				{
					"name": "fireSelectionChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selectionChange</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>nodes</code> of type <code>sap.ui.commons.TreeNode[]</code>The nodes which has been selected.</li>\n<li><code>nodeContexts</code> of type <code>object[]</code>The binding context of the selected nodes.</li>\n</ul>"
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nTree height\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.Tree."
				},
				{
					"name": "getMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>minWidth</code>"
					},
					"description": "Gets current value of property <code>minWidth</code>.\n\nMinimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize"
				},
				{
					"name": "getNodeByContext",
					"visibility": "public",
					"since": "1.19",
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the context of the node to be retrieved"
						}
					],
					"description": "Returns the node with the given context, or null if no such node currently exists"
				},
				{
					"name": "getNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode[]"
					},
					"description": "Gets content of aggregation <code>nodes</code>.\n\nFirst level nodes"
				},
				{
					"name": "getSelectionMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeSelectionMode",
						"description": "Value of property <code>selectionMode</code>"
					},
					"description": "Gets current value of property <code>selectionMode</code>.\n\nSelection mode of the Tree.\n\nDefault value is <code>Legacy</code>."
				},
				{
					"name": "getShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showHeader</code>"
					},
					"description": "Gets current value of property <code>showHeader</code>.\n\nTree Header is display. If false, the tree will be in a transparent mode\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowHeaderIcons",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showHeaderIcons</code>"
					},
					"description": "Gets current value of property <code>showHeaderIcons</code>.\n\nShow Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowHorizontalScrollbar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showHorizontalScrollbar</code>"
					},
					"description": "Gets current value of property <code>showHorizontalScrollbar</code>.\n\nDisplay horizontal scrollbar. If false, the overflow content will be hidden\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nTree title"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nTree width\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "indexOfNode",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.commons.TreeNode",
							"optional": false,
							"description": "The node whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.TreeNode</code> in the aggregation <code>nodes</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.commons.TreeNode",
							"optional": false,
							"description": "the node to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex</code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"
						}
					],
					"description": "Inserts a node into the aggregation <code>nodes</code>."
				},
				{
					"name": "removeAllNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>nodes</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "The removed node or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vNode",
							"type": "int|string|sap.ui.commons.TreeNode",
							"optional": false,
							"description": "The nodeto remove or its index or id"
						}
					],
					"description": "Removes a node from the aggregation <code>nodes</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nTree height\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>minWidth</code>"
						}
					],
					"description": "Sets a new value for property <code>minWidth</code>.\n\nMinimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelectionMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSelectionMode",
							"type": "sap.ui.commons.TreeSelectionMode",
							"optional": false,
							"description": "New value for property <code>selectionMode</code>"
						}
					],
					"description": "Sets a new value for property <code>selectionMode</code>.\n\nSelection mode of the Tree.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Legacy</code>."
				},
				{
					"name": "setShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeader",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showHeader</code>"
						}
					],
					"description": "Sets a new value for property <code>showHeader</code>.\n\nTree Header is display. If false, the tree will be in a transparent mode\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowHeaderIcons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeaderIcons",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showHeaderIcons</code>"
						}
					],
					"description": "Sets a new value for property <code>showHeaderIcons</code>.\n\nShow Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowHorizontalScrollbar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHorizontalScrollbar",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showHorizontalScrollbar</code>"
						}
					],
					"description": "Sets a new value for property <code>showHorizontalScrollbar</code>.\n\nDisplay horizontal scrollbar. If false, the overflow content will be hidden\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nTree title\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nTree width\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "unbindNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Tree",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>nodes</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.TreeNode",
			"basename": "TreeNode",
			"resource": "sap/ui/commons/TreeNode.js",
			"module": "sap/ui/commons/TreeNode",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Tree node element",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Node text",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "expanded",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Node is expanded",
						"methods": [
							"getExpanded",
							"setExpanded"
						]
					},
					{
						"name": "hasExpander",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Should the node has an expander.",
						"methods": [
							"getHasExpander",
							"setHasExpander"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Icon to display in front of the node",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "isSelected",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Node is selected",
						"methods": [
							"getIsSelected",
							"setIsSelected"
						]
					},
					{
						"name": "selectable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "The node is selectable. If true, clicking on the node text triggers \"selected\" event",
						"methods": [
							"getSelectable",
							"setSelectable"
						]
					}
				],
				"aggregations": [
					{
						"name": "nodes",
						"singularName": "node",
						"type": "sap.ui.commons.TreeNode",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Subnodes for the current node",
						"methods": [
							"getNodes",
							"destroyNodes",
							"insertNode",
							"addNode",
							"removeNode",
							"indexOfNode",
							"removeAllNodes"
						]
					}
				],
				"defaultAggregation": "nodes",
				"associations": [
					{
						"name": "selectedForNodes",
						"singularName": "selectedForNode",
						"type": "sap.ui.commons.TreeNode",
						"cardinality": "0..n",
						"visibility": "hidden",
						"description": "When this node is collapsed and it has selected children, it looks as if it were\nselected itself.\nThis association holds the references of the selected children.",
						"methods": [
							"getSelectedForNodes",
							"addSelectedForNode",
							"removeSelectedForNode",
							"removeAllSelectedForNodes"
						]
					},
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "toggleOpenState",
						"visibility": "public",
						"description": "Node state has changed.",
						"parameters": {
							"opened": {
								"name": "opened",
								"type": "boolean",
								"description": "Node has been opened if true"
							}
						},
						"methods": [
							"attachToggleOpenState",
							"detachToggleOpenState",
							"fireToggleOpenState"
						]
					},
					{
						"name": "selected",
						"visibility": "public",
						"description": "Node is selected",
						"methods": [
							"attachSelected",
							"detachSelected",
							"fireSelected"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TreeNode.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "selected",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Node is selected"
				},
				{
					"name": "toggleOpenState",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"opened": {
											"name": "opened",
											"type": "boolean",
											"optional": false,
											"description": "Node has been opened if true"
										}
									}
								}
							}
						}
					],
					"description": "Node state has changed."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaDescribedBy into the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "addNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.commons.TreeNode",
							"optional": false,
							"description": "the node to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some node to the aggregation <code>nodes</code>."
				},
				{
					"name": "attachSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TreeNode</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selected</code> event of this <code>sap.ui.commons.TreeNode</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TreeNode</code> itself.\n\nNode is selected"
				},
				{
					"name": "attachToggleOpenState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TreeNode</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>toggleOpenState</code> event of this <code>sap.ui.commons.TreeNode</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TreeNode</code> itself.\n\nNode state has changed."
				},
				{
					"name": "collapse",
					"visibility": "public",
					"parameters": [
						{
							"name": "bCollapseChildren",
							"type": "boolean",
							"optional": false,
							"description": "Propagates collapse to node's children"
						},
						{
							"name": "bDisableCollapseFinishedHandler",
							"type": "boolean",
							"optional": false,
							"description": "Disables the collapse finished handler"
						}
					],
					"description": "Collapses the node."
				},
				{
					"name": "destroyNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the nodes in the aggregation <code>nodes</code>."
				},
				{
					"name": "detachSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selected</code> event of this <code>sap.ui.commons.TreeNode</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachToggleOpenState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>toggleOpenState</code> event of this <code>sap.ui.commons.TreeNode</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "expand",
					"visibility": "public",
					"parameters": [
						{
							"name": "bExpandChildren",
							"type": "boolean",
							"optional": false,
							"description": "Propagates expand to node's children"
						},
						{
							"name": "bDisableExpandFinishedHandler",
							"type": "boolean",
							"optional": false,
							"description": "Disables the expand finished handler"
						}
					],
					"description": "Expands the node."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.TreeNode with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireSelected",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selected</code> to attached listeners."
				},
				{
					"name": "fireToggleOpenState",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>toggleOpenState</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>opened</code> of type <code>boolean</code>Node has been opened if true</li>\n</ul>"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy</code>."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>expanded</code>"
					},
					"description": "Gets current value of property <code>expanded</code>.\n\nNode is expanded\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getHasExpander",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>hasExpander</code>"
					},
					"description": "Gets current value of property <code>hasExpander</code>.\n\nShould the node has an expander.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\n\nIcon to display in front of the node"
				},
				{
					"name": "getIsSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isSelected</code>"
					},
					"description": "Gets current value of property <code>isSelected</code>.\n\nNode is selected\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.TreeNode."
				},
				{
					"name": "getNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode[]"
					},
					"description": "Gets content of aggregation <code>nodes</code>.\n\nSubnodes for the current node"
				},
				{
					"name": "getSelectable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>selectable</code>"
					},
					"description": "Gets current value of property <code>selectable</code>.\n\nThe node is selectable. If true, clicking on the node text triggers \"selected\" event\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nNode text"
				},
				{
					"name": "indexOfNode",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.commons.TreeNode",
							"optional": false,
							"description": "The node whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.TreeNode</code> in the aggregation <code>nodes</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.ui.commons.TreeNode",
							"optional": false,
							"description": "the node to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex</code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"
						}
					],
					"description": "Inserts a node into the aggregation <code>nodes</code>."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAllNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>nodes</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaDescribedBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaDescribedByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaDescribedBy from the association named <code>ariaDescribedBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledByto be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "The removed node or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vNode",
							"type": "int|string|sap.ui.commons.TreeNode",
							"optional": false,
							"description": "The nodeto remove or its index or id"
						}
					],
					"description": "Removes a node from the aggregation <code>nodes</code>."
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "bSuppressEvent",
							"type": "boolean",
							"optional": false
						},
						{
							"name": "bDeselectOtherNodes",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Select the node, and if any, deselects the previously selected node"
				},
				{
					"name": "setExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bExpanded",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>expanded</code>"
						}
					],
					"description": "Sets a new value for property <code>expanded</code>.\n\nNode is expanded\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setHasExpander",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHasExpander",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>hasExpander</code>"
						}
					],
					"description": "Sets a new value for property <code>hasExpander</code>.\n\nShould the node has an expander.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\n\nIcon to display in front of the node\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIsSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsSelected",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>isSelected</code>"
						}
					],
					"description": "Redefinition of Setter for property <code>isSelected</code> for validation purpose\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSelectable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSelectable",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>selectable</code>"
						}
					],
					"description": "Redefinition of Setter for property <code>selectable</code> for validation purpose.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TreeNode",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nNode text\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.TreeSelectionMode",
			"basename": "TreeSelectionMode",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Selection mode of the tree",
			"properties": [
				{
					"name": "Legacy",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Behavior of the former Tree. It is possible to select a plurality of nodes via the API."
				},
				{
					"name": "Multi",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Select multiple rows at a time."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No rows can be selected."
				},
				{
					"name": "Single",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Select one row at a time."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.TriStateCheckBox",
			"basename": "TriStateCheckBox",
			"resource": "sap/ui/commons/TriStateCheckBox.js",
			"module": "sap/ui/commons/TriStateCheckBox",
			"static": true,
			"visibility": "public",
			"since": "1.7.2",
			"extends": "sap.ui.core.Control",
			"description": "TriStateCheckBox to reflect mixed state for checkboxes. The control can display three states, namely checked, unchecked and mixed. However, mixed state cannot be directly reached by user interaction on the particular control.\nIt can be only set by the control's public toggle function, to make a behaviour possible which is e.g. required in checkbox trees.",
			"deprecated": {
				"since": "1.38"
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "selectionState",
						"type": "sap.ui.commons.TriStateCheckBoxState",
						"defaultValue": "Unchecked",
						"group": "Data",
						"visibility": "public",
						"description": "Defines the states of the checkbox",
						"methods": [
							"getSelectionState",
							"setSelectionState"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the text displayed next to the check box",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Using this property, the control could be disabled, if required.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies whether the user shall be allowed to flag the check box",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "valueState",
						"type": "sap.ui.core.ValueState",
						"defaultValue": "None",
						"group": "Data",
						"visibility": "public",
						"description": "Accepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.",
						"methods": [
							"getValueState",
							"setValueState"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "The width can be set to an absolute value. If no value is set, the control width results from the text length.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "textDirection",
						"type": "sap.ui.core.TextDirection",
						"defaultValue": "Inherit",
						"group": "Appearance",
						"visibility": "public",
						"description": "The value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.",
						"methods": [
							"getTextDirection",
							"setTextDirection"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "Event is triggered when the control status is changed by the user by flagging or unflagging the checkbox.",
						"parameters": {
							"selectionState": {
								"name": "selectionState",
								"type": "string",
								"description": "Checks whether the box is flagged or not flagged."
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TriStateCheckBox.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectionState": {
											"name": "selectionState",
											"type": "string",
											"optional": false,
											"description": "Checks whether the box is flagged or not flagged."
										}
									}
								}
							}
						}
					],
					"description": "Event is triggered when the control status is changed by the user by flagging or unflagging the checkbox."
				}
			],
			"methods": [
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.TriStateCheckBox</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.commons.TriStateCheckBox</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TriStateCheckBox</code> itself.\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.commons.TriStateCheckBox</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.TriStateCheckBox with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionState</code> of type <code>string</code>Checks whether the box is flagged or not flagged.</li>\n</ul>"
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\n\nSpecifies whether the user shall be allowed to flag the check box\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.TriStateCheckBox."
				},
				{
					"name": "getSelectionState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBoxState",
						"description": "Value of property <code>selectionState</code>"
					},
					"description": "Gets current value of property <code>selectionState</code>.\n\nDefines the states of the checkbox\n\nDefault value is <code>Unchecked</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\n\nDefines the text displayed next to the check box"
				},
				{
					"name": "getTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextDirection",
						"description": "Value of property <code>textDirection</code>"
					},
					"description": "Gets current value of property <code>textDirection</code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "getValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "Value of property <code>valueState</code>"
					},
					"description": "Gets current value of property <code>valueState</code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length."
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>editable</code>"
						}
					],
					"description": "Sets a new value for property <code>editable</code>.\n\nSpecifies whether the user shall be allowed to flag the check box\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\n\nUsing this property, the control could be disabled, if required.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSelectionState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSelectionState",
							"type": "sap.ui.commons.TriStateCheckBoxState",
							"optional": false,
							"description": "New value for property <code>selectionState</code>"
						}
					],
					"description": "Sets a new value for property <code>selectionState</code>.\n\nDefines the states of the checkbox\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Unchecked</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\n\nDefines the text displayed next to the check box\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "New value for property <code>textDirection</code>"
						}
					],
					"description": "Sets a new value for property <code>textDirection</code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit</code>."
				},
				{
					"name": "setValueState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueState",
							"type": "sap.ui.core.ValueState",
							"optional": false,
							"description": "New value for property <code>valueState</code>"
						}
					],
					"description": "Sets a new value for property <code>valueState</code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.TriStateCheckBox",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "toggle",
					"visibility": "public",
					"parameters": [
						{
							"name": "destState",
							"type": "sap.ui.commons.TriStateCheckBoxState",
							"optional": false,
							"description": "destined selection state of checkbox"
						}
					],
					"description": "Method called whenever a user clicks on a tri-state checkbox"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.commons.TriStateCheckBoxState",
			"basename": "TriStateCheckBoxState",
			"resource": "sap/ui/commons/library.js",
			"module": "sap/ui/commons/library",
			"static": true,
			"visibility": "public",
			"since": "1.7.2",
			"description": "States for TriStateCheckBox",
			"properties": [
				{
					"name": "Checked",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "checked value for tri-state checkbox"
				},
				{
					"name": "Mixed",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "mixed state for tri-state checkbox"
				},
				{
					"name": "Unchecked",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "unchecked, default value for tri-state checkbox"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.commons.ValueHelpField",
			"basename": "ValueHelpField",
			"resource": "sap/ui/commons/ValueHelpField.js",
			"module": "sap/ui/commons/ValueHelpField",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.TextField",
			"description": "A TextField with an attached icon which triggeres an event.",
			"deprecated": {
				"since": "1.38",
				"text": "Instead, use the <code>sap.m.Input</code> control."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "iconURL",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "URL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.",
						"methods": [
							"getIconURL",
							"setIconURL"
						]
					},
					{
						"name": "iconHoverURL",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "URL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.",
						"methods": [
							"getIconHoverURL",
							"setIconHoverURL"
						]
					},
					{
						"name": "iconDisabledURL",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "URL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.",
						"methods": [
							"getIconDisabledURL",
							"setIconDisabledURL"
						]
					}
				],
				"events": [
					{
						"name": "valueHelpRequest",
						"visibility": "public",
						"description": "Event which is fired when the ValueHelp is requested.",
						"methods": [
							"attachValueHelpRequest",
							"detachValueHelpRequest",
							"fireValueHelpRequest"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new ValueHelpField.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "valueHelpRequest",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event which is fired when the ValueHelp is requested."
				}
			],
			"methods": [
				{
					"name": "attachValueHelpRequest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ValueHelpField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.commons.ValueHelpField</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>valueHelpRequest</code> event of this <code>sap.ui.commons.ValueHelpField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ValueHelpField</code> itself.\n\nEvent which is fired when the ValueHelp is requested."
				},
				{
					"name": "detachValueHelpRequest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ValueHelpField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>valueHelpRequest</code> event of this <code>sap.ui.commons.ValueHelpField</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.commons.ValueHelpField with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}."
				},
				{
					"name": "fireValueHelpRequest",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.commons.ValueHelpField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>valueHelpRequest</code> to attached listeners."
				},
				{
					"name": "getIconDisabledURL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconDisabledURL</code>"
					},
					"description": "Gets current value of property <code>iconDisabledURL</code>.\n\nURL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored."
				},
				{
					"name": "getIconHoverURL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconHoverURL</code>"
					},
					"description": "Gets current value of property <code>iconHoverURL</code>.\n\nURL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored."
				},
				{
					"name": "getIconURL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>iconURL</code>"
					},
					"description": "Gets current value of property <code>iconURL</code>.\n\nURL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.commons.ValueHelpField."
				},
				{
					"name": "onsapshow",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "the occurring event"
						}
					],
					"description": "Handle F4 event"
				},
				{
					"name": "setIconDisabledURL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ValueHelpField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconDisabledURL",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconDisabledURL</code>"
						}
					],
					"description": "Sets a new value for property <code>iconDisabledURL</code>.\n\nURL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIconHoverURL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ValueHelpField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconHoverURL",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconHoverURL</code>"
						}
					],
					"description": "Sets a new value for property <code>iconHoverURL</code>.\n\nURL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIconURL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ValueHelpField",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconURL",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>iconURL</code>"
						}
					],
					"description": "Sets a new value for property <code>iconURL</code>.\n\nURL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		}
	]
}