{"$schema-ref":"http://schemas.sap.com/sapui5/designtime/api.json/1.0","version":"1.54.3","library":"sap.ui.richtexteditor","symbols":[{"kind":"namespace","name":"sap.ui.richtexteditor","basename":"richtexteditor","resource":"sap/ui/richtexteditor/library.js","module":"sap/ui/richtexteditor/library","export":"","static":true,"visibility":"public","description":"<p>A rich text editor (RTE) control. Requires installation of an additional rich text editor library.</p>","component":"CA-UI5-CTR-RIL","hasSample":false,"title":"namespace sap.ui.richtexteditor","subTitle":"","nodes":[{"text":"EditorType","name":"sap.ui.richtexteditor.EditorType","ref":"#/api/sap.ui.richtexteditor.EditorType","description":"Determines which editor component should be used for editing the text."},{"text":"IToolbar","name":"sap.ui.richtexteditor.IToolbar","ref":"#/api/sap.ui.richtexteditor.IToolbar","description":"Interface for controls which are suitable as a Toolbar for RichTextEditor."},{"text":"RichTextEditor","name":"sap.ui.richtexteditor.RichTextEditor","ref":"#/api/sap.ui.richtexteditor.RichTextEditor","description":"The RichTextEditor-Control is used to enter formatted text."}]},{"kind":"enum","name":"sap.ui.richtexteditor.EditorType","basename":"EditorType","resource":"sap/ui/richtexteditor/library.js","module":"sap/ui/richtexteditor/library","export":"EditorType","static":true,"visibility":"public","description":"<p>Determines which editor component should be used for editing the text.</p>","properties":[{"name":"sap.ui.richtexteditor.EditorType.TinyMCE","visibility":"public","description":"<p>Uses TinyMCE version 3 as editor (default)</p>"},{"name":"sap.ui.richtexteditor.EditorType.TinyMCE4","visibility":"public","description":"<p>Uses TinyMCE version 4 as editor</p>"}],"component":"CA-UI5-CTR-RIL","hasSample":false,"title":"enum sap.ui.richtexteditor.EditorType","subTitle":""},{"kind":"interface","name":"sap.ui.richtexteditor.IToolbar","basename":"IToolbar","resource":"sap/ui/richtexteditor/library.js","module":"sap/ui/richtexteditor/library","export":"IToolbar","static":true,"visibility":"public","since":"1.50","description":"<p>Interface for controls which are suitable as a Toolbar for RichTextEditor.</p>","component":"CA-UI5-CTR-RIL","hasSample":false,"title":"interface sap.ui.richtexteditor.IToolbar","subTitle":""},{"kind":"class","name":"sap.ui.richtexteditor.RichTextEditor","basename":"RichTextEditor","resource":"sap/ui/richtexteditor/RichTextEditor.js","module":"sap/ui/richtexteditor/RichTextEditor","export":"","static":true,"visibility":"public","extends":"sap.ui.core.Control","description":"<p>The RichTextEditor-Control is used to enter formatted text.</p><p>The <code>RichTextEditor</code> uses a third party component, which might in some cases not be completely compatible with the way UI5's (re-)rendering mechanism works. <strong>If you keep hidden instances of the control (instances which are not visible in the DOM), you might run into problems with some browser versions.</strong> In this case please make sure you destroy the <code>RichTextEditor</code> instance instead of hiding it and create a new one when you show it again.</p><p>With version 1.48 onward, aside from the native toolbar of the TinyMCE, the RichTextEditor can also use a toolbar built with SAPUI5 controls. Which toolbar is used is taken into consideration only while the control is being initialized and it will not be possible to change it during runtime, because of lifecycle incompatibilities between the SAPUI5 and the third-party library. The custom toolbar acts like a wrapper to the native toolbar and takes care of synchronizing the state of its internal controls with the current state of the selection in the editor (bold, italics, font styles etc.).</p><p><b>Limitation:</b></p><p>The third-party component TinyMCE does not fully support the High Contrast themes. The control, which internally uses TinyMCE, is thus also not compliant to this product standard. Applications, which embed the RichTextEditor control and use the high-contrast theme, will not have a full High Contrast support. Certain buttons, menus etc. are available in the correct theme, but many elements are still showing up with a normal, non-contrast style.</p>","ui5-metadata":{"stereotype":"control","properties":[{"name":"showGroupClipboard","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing commands like Cut, Copy and Paste is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupClipboard","setShowGroupClipboard"]},{"name":"customToolbar","type":"boolean","defaultValue":false,"group":"Misc","visibility":"public","since":"1.48","description":"<p>Determines whether a Fiori Toolbar is used instead of the TinyMCE default toolbar one. It is applied only when the EditorType is TinyMCE4 and sap.m library is loaded. <b>Note:</b> The <code>customToolbar</code> property will have effect only on initial loading. Changing it during runtime will not affect the initially loaded toolbar.<br><br><i>Since: 1.48.</i></p>","methods":["getCustomToolbar","setCustomToolbar"]},{"name":"buttonGroups","type":"object[]","defaultValue":"[]","group":"Behavior","visibility":"public","description":"<p>An array of button configurations. These configurations contain the names of buttons as array in the property \"buttons\" and the name of the group in \"name\", they can also contain the \"row\" where the buttons should be placed, a \"priority\" and whether the buttons are \"visible\". See method addButtonGroup() for more details on the structure of the objects in this array.</p>","methods":["getButtonGroups","setButtonGroups"]},{"name":"showGroupInsert","type":"boolean","defaultValue":false,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing commands like Insert Image and Insert Smiley is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupInsert","setShowGroupInsert"]},{"name":"height","type":"sap.ui.core.CSSSize","defaultValue":"","group":"Dimension","visibility":"public","description":"<p>Height of RichTextEditor control in CSS units.</p>","methods":["getHeight","setHeight"]},{"name":"editorLocation","type":"string","defaultValue":"js/tiny_mce/tiny_mce_src.js","group":"Misc","visibility":"public","description":"<p>Relative or absolute URL where the editor is available. Must be on the same server. <b>Note:</b> Any attempts to set this property after the first rendering will not have any effect.</p>","methods":["getEditorLocation","setEditorLocation"],"deprecatedText":"Deprecated as of version 1.25.0. The editorLocation is set implicitly when choosing the editorType."},{"name":"editable","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"<p>Determines whether the editor content can be modified by the user. When set to \"false\" there might not be any editor toolbar.</p>","methods":["getEditable","setEditable"]},{"name":"editorType","type":"string","defaultValue":"TinyMCE","group":"Misc","visibility":"public","description":"<p>The editor implementation to use. Valid values are the ones found under sap.ui.richtexteditor.EditorType and any other editor identifier that may be introduced by other groups (hence this is not an enumeration). <b>Note:</b> Any attempts to set this property after the first rendering will not have any effect.</p>","methods":["getEditorType","setEditorType"]},{"name":"wrapping","type":"boolean","defaultValue":true,"group":"Appearance","visibility":"public","description":"<p>Determines whether the text in the editor is wrapped. This does not affect the editor's value, only the representation in the control.</p>","methods":["getWrapping","setWrapping"]},{"name":"showGroupTextAlign","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing text alignment commands is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupTextAlign","setShowGroupTextAlign"]},{"name":"showGroupFont","type":"boolean","defaultValue":false,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing commands like Font, Font Size and Colors is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupFont","setShowGroupFont"]},{"name":"plugins","type":"object[]","defaultValue":"[]","group":"Behavior","visibility":"public","description":"<p>An array of plugin configuration objects with the obligatory property \"name\". Each object has to contain a property \"name\" which then contains the plugin name/ID.</p>","methods":["getPlugins","setPlugins"]},{"name":"showGroupFontStyle","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing commands like Bold, Italic, Underline and Strikethrough is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupFontStyle","setShowGroupFontStyle"]},{"name":"showGroupLink","type":"boolean","defaultValue":false,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing commands like Create Link and Remove Link is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupLink","setShowGroupLink"]},{"name":"sanitizeValue","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"<p>Determines whether to run the HTML sanitizer once the value (HTML markup) is applied or not. To configure allowed URLs please use the whitelist API via <code>jQuery.sap.addUrlWhitelist</code></p>","methods":["getSanitizeValue","setSanitizeValue"]},{"name":"showGroupStructure","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing commands like Bullets and Indentation is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupStructure","setShowGroupStructure"]},{"name":"required","type":"boolean","defaultValue":false,"group":"Misc","visibility":"public","description":"<p>Determines whether a value is required.</p>","methods":["getRequired","setRequired"]},{"name":"showGroupUndo","type":"boolean","defaultValue":false,"group":"Misc","visibility":"public","description":"<p>Determines whether the toolbar button group containing commands like Undo and Redo is available. Changing this after the initial rendering will result in some visible redrawing.</p>","methods":["getShowGroupUndo","setShowGroupUndo"]},{"name":"textDirection","type":"sap.ui.core.TextDirection","defaultValue":"Inherit","group":"Appearance","visibility":"public","description":"<p>The text direction</p>","methods":["getTextDirection","setTextDirection"],"linkEnabled":true},{"name":"useLegacyTheme","type":"boolean","defaultValue":true,"group":"Appearance","visibility":"public","description":"<p>Determines whether or not to use the legacy theme for the toolbar buttons. If this is set to false, the default theme for the editor will be used (which might change slightly with every update). The legacy theme has the disadvantage that not all functionality has its own icon, so using non default buttons might lead to invisible buttons with the legacy theme - use the default editor theme in this case.</p>","methods":["getUseLegacyTheme","setUseLegacyTheme"]},{"name":"value","type":"string","defaultValue":"empty string","group":"Data","visibility":"public","description":"<p>An HTML string representing the editor content. Because this is HTML, the value cannot be generically escaped to prevent cross-site scripting, so the application is responsible for doing so. Overwriting this property would also reset editor's Undo manager and buttons \"Undo\"/\"Redo\" would be set to their initial state.</p>","methods":["getValue","setValue"]},{"name":"width","type":"sap.ui.core.CSSSize","defaultValue":"","group":"Dimension","visibility":"public","description":"<p>Width of RichTextEditor control in CSS units.</p>","methods":["getWidth","setWidth"]}],"aggregations":[{"name":"_toolbarWrapper","singularName":"_toolbarWrapper","type":"sap.ui.richtexteditor.IToolbar","cardinality":"0..1","visibility":"hidden","since":"1.48","description":"<p>Custom toolbar wrapper. The wrapper gets instantiated when customToolbar property is set to true.</p>","methods":["get_toolbarWrapper","destroy_toolbarWrapper","set_toolbarWrapper"],"linkEnabled":true},{"name":"customButtons","singularName":"customButton","type":"sap.ui.core.Control","cardinality":"0..n","visibility":"public","since":"1.48","description":"<p>Custom buttons are meant to extend the RichTextEditor's custom toolbar. Though type is set to sap.ui.Control, only sap.m.Button is allowed. <b>Note:</b> customButtons are available only when the customToolbar is enabled and all the requirements are fulfilled.</p>","methods":["getCustomButtons","destroyCustomButtons","insertCustomButton","addCustomButton","removeCustomButton","indexOfCustomButton","removeAllCustomButtons"],"linkEnabled":true}]},"constructor":{"visibility":"public","parameters":[{"name":"sId","optional":true,"description":"<p>id for the new control, generated automatically if no id is given</p>","phoneName":"sId","depth":0,"types":[{"name":"string","linkEnabled":false}],"defaultValue":""},{"name":"mSettings","optional":true,"description":"<p>initial settings for the new control</p>","phoneName":"mSettings","depth":0,"types":[{"name":"object","linkEnabled":false}],"defaultValue":""}],"description":"<p>Constructor for a new RichTextEditor.</p><p>The RichTextEditor uses a third party component, which might in some cases not be completely compatible with the way UI5's (re-)rendering mechanism works. If you keep hidden instances of the control (instances which are not visible in the DOM), you might run into problems with some browser versions. In this case please make sure you destroy the RichTextEditor instance instead of hiding it and create a new one when you show it again.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.base.ManagedObject/methods/constructor\" data-sap-ui-target=\"sap.ui.base.ManagedObject/methods/constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>","references":[],"codeExample":"<pre class=\"prettyprint\">new sap.ui.richtexteditor.RichTextEditor(sId?, mSettings?)</pre>"},"events":[{"name":"beforeEditorInit","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","linkEnabled":true,"description":""},{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false,"depth":1,"phoneName":"oControlEvent.getSource","linkEnabled":true,"description":""},{"name":"getParameters","type":"object","optional":false,"depth":1,"phoneName":"oControlEvent.getParameters","description":""}],"description":"<p>This event is fired right before the TinyMCE instance is created and can be used to change the settings object that will be given to TinyMCE. The parameter \"configuration\" is the javascript oject that will be given to TinyMCE upon first instantiation. The configuration parameter contains a map that can be changed in the case of TinyMCE.</p>"},{"name":"change","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","linkEnabled":true,"description":""},{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false,"depth":1,"phoneName":"oControlEvent.getSource","linkEnabled":true,"description":""},{"name":"getParameters","type":"object","optional":false,"depth":1,"phoneName":"oControlEvent.getParameters","description":""},{"name":"newValue","type":"string","optional":false,"description":"<p>The new control value.</p>","depth":2,"phoneName":"oControlEvent.getParameters.newValue"}],"description":"<p>Event is fired when the text in the field has changed AND the focus leaves the editor or when the Enter key is pressed.</p>"},{"name":"ready","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","linkEnabled":true,"description":""},{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false,"depth":1,"phoneName":"oControlEvent.getSource","linkEnabled":true,"description":""},{"name":"getParameters","type":"object","optional":false,"depth":1,"phoneName":"oControlEvent.getParameters","description":""}],"description":"<p>Fired when the used editor is loaded and ready (its HTML is also created).</p>"},{"name":"readyRecurring","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","linkEnabled":true,"description":""},{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false,"depth":1,"phoneName":"oControlEvent.getSource","linkEnabled":true,"description":""},{"name":"getParameters","type":"object","optional":false,"depth":1,"phoneName":"oControlEvent.getParameters","description":""}],"description":"<p>Analogous to the ready event, the event is fired when the used editor is loaded and ready. But the event is fired after every time the control is ready to use and not only once like the ready event.</p>"}],"methods":[{"name":"addButtonGroup","visibility":"public","returnValue":{"type":"object","description":"<p>Control instance (for method chaining)</p>","types":[{"value":"object"}]},"parameters":[{"name":"mGroup","optional":true,"description":"<p>Name/ID of a single button or map containing the group information</p>","types":[{"value":"map","href":"#/api/map"},{"value":"string","href":"#/api/string"}],"defaultValue":""},{"name":"buttons","optional":true,"description":"<p>Array of name/IDs of the buttons in the group</p>","depth":1,"types":[{"value":"[object Object][]","href":"#/api/[object Object]"}],"phoneName":"mGroup.buttons","defaultValue":""},{"name":"name","optional":true,"description":"<p>Name/ID of the group.</p>","depth":1,"types":[{"value":"string","href":"#/api/string"}],"phoneName":"mGroup.name","defaultValue":""},{"name":"visible","optional":true,"defaultValue":true,"description":"<p>(optional) The priority of the button group. Lower priorities are added first.</p>","depth":1,"types":[{"value":"boolean","href":"#/api/boolean"}],"phoneName":"mGroup.visible"},{"name":"row","optional":true,"defaultValue":0,"description":"<p>(optional) Row number in which the button should be</p>","depth":1,"types":[{"value":"int","href":"#/api/int"}],"phoneName":"mGroup.row"},{"name":"priority","optional":true,"defaultValue":10,"description":"<p>(optional) The priority of the button group. Lower priorities are added first.</p>","depth":1,"types":[{"value":"int","href":"#/api/int"}],"phoneName":"mGroup.priority"}],"description":"<p>Adds a button group to the editor.</p>","code":"<pre class=\"prettyprint\">addButtonGroup(mGroup?) : object</pre>"},{"name":"addCustomButton","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"since":"1.48","parameters":[{"name":"oCustomButton","optional":false,"description":"<p>The customButton to add; if empty, nothing is inserted</p>","types":[{"value":"sap.ui.core.Control","href":"#/api/sap.ui.core.Control","linkEnabled":true}],"defaultValue":""}],"description":"<p>Adds some customButton to the aggregation <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomButtons\" data-sap-ui-target=\"getCustomButtons\">customButtons</a>.</p>","code":"<pre class=\"prettyprint\">addCustomButton(oCustomButton) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"addPlugin","visibility":"public","returnValue":{"type":"object","description":"<p>Control instance (for method chaining)</p>","types":[{"value":"object"}]},"parameters":[{"name":"mPlugin","optional":true,"description":"<p>A map with the property name containing the plugin IDs/name or an object with the property \"name\".</p>","types":[{"value":"map","href":"#/api/map"},{"value":"string","href":"#/api/string"}],"defaultValue":""}],"description":"<p>Allows to add plugins (that must already be installed on the server) to the RichtextEditor.</p>","code":"<pre class=\"prettyprint\">addPlugin(mPlugin?) : object</pre>"},{"name":"attachBeforeEditorInit","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"oData","optional":true,"description":"<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""},{"name":"fnFunction","optional":false,"description":"<p>The function to be called when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":true,"description":"<p>Context object to call the event handler with. Defaults to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Attaches event handler <code>fnFunction</code> to the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/beforeEditorInit\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/beforeEditorInit\">beforeEditorInit</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself.</p><p>This event is fired right before the TinyMCE instance is created and can be used to change the settings object that will be given to TinyMCE. The parameter \"configuration\" is the javascript oject that will be given to TinyMCE upon first instantiation. The configuration parameter contains a map that can be changed in the case of TinyMCE.</p>","code":"<pre class=\"prettyprint\">attachBeforeEditorInit(oData?, fnFunction, oListener?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"attachChange","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"oData","optional":true,"description":"<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""},{"name":"fnFunction","optional":false,"description":"<p>The function to be called when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":true,"description":"<p>Context object to call the event handler with. Defaults to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Attaches event handler <code>fnFunction</code> to the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/change\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/change\">change</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself.</p><p>Event is fired when the text in the field has changed AND the focus leaves the editor or when the Enter key is pressed.</p>","code":"<pre class=\"prettyprint\">attachChange(oData?, fnFunction, oListener?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"attachReady","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"oData","optional":true,"description":"<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""},{"name":"fnFunction","optional":false,"description":"<p>The function to be called when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":true,"description":"<p>Context object to call the event handler with. Defaults to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Attaches event handler <code>fnFunction</code> to the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/ready\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/ready\">ready</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself.</p><p>Fired when the used editor is loaded and ready (its HTML is also created).</p>","code":"<pre class=\"prettyprint\">attachReady(oData?, fnFunction, oListener?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"attachReadyRecurring","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"oData","optional":true,"description":"<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""},{"name":"fnFunction","optional":false,"description":"<p>The function to be called when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":true,"description":"<p>Context object to call the event handler with. Defaults to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Attaches event handler <code>fnFunction</code> to the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/readyRecurring\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/readyRecurring\">readyRecurring</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.richtexteditor.RichTextEditor</code> itself.</p><p>Analogous to the ready event, the event is fired when the used editor is loaded and ready. But the event is fired after every time the control is ready to use and not only once like the ready event.</p>","code":"<pre class=\"prettyprint\">attachReadyRecurring(oData?, fnFunction, oListener?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"destroyCustomButtons","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"since":"1.48","description":"<p>Destroys all the customButtons in the aggregation <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomButtons\" data-sap-ui-target=\"getCustomButtons\">customButtons</a>.</p>","code":"<pre class=\"prettyprint\">destroyCustomButtons() : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"detachBeforeEditorInit","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"fnFunction","optional":false,"description":"<p>The function to be called, when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":false,"description":"<p>Context object on which the given function had to be called</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Detaches event handler <code>fnFunction</code> from the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/beforeEditorInit\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/beforeEditorInit\">beforeEditorInit</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>","code":"<pre class=\"prettyprint\">detachBeforeEditorInit(fnFunction, oListener) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"detachChange","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"fnFunction","optional":false,"description":"<p>The function to be called, when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":false,"description":"<p>Context object on which the given function had to be called</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Detaches event handler <code>fnFunction</code> from the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/change\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/change\">change</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>","code":"<pre class=\"prettyprint\">detachChange(fnFunction, oListener) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"detachReady","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"fnFunction","optional":false,"description":"<p>The function to be called, when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":false,"description":"<p>Context object on which the given function had to be called</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Detaches event handler <code>fnFunction</code> from the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/ready\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/ready\">ready</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>","code":"<pre class=\"prettyprint\">detachReady(fnFunction, oListener) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"detachReadyRecurring","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"fnFunction","optional":false,"description":"<p>The function to be called, when the event occurs</p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""},{"name":"oListener","optional":false,"description":"<p>Context object on which the given function had to be called</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Detaches event handler <code>fnFunction</code> from the <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/readyRecurring\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/readyRecurring\">readyRecurring</a> event of this <code>sap.ui.richtexteditor.RichTextEditor</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>","code":"<pre class=\"prettyprint\">detachReadyRecurring(fnFunction, oListener) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"sap.ui.richtexteditor.RichTextEditor.extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"<p>Created class / constructor function</p>","types":[{"value":"function"}]},"parameters":[{"name":"sClassName","optional":false,"description":"<p>Name of the class being created</p>","types":[{"value":"string","href":"#/api/string"}],"defaultValue":""},{"name":"oClassInfo","optional":true,"description":"<p>Object literal with information about the class</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""},{"name":"FNMetaImpl","optional":true,"description":"<p>Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code></p>","types":[{"value":"function","href":"#/api/function"}],"defaultValue":""}],"description":"<p>Creates a new subclass of class sap.ui.richtexteditor.RichTextEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.core.Control.extend\" data-sap-ui-target=\"extend\">sap.ui.core.Control.extend</a>.</p>","code":"<pre class=\"prettyprint\">sap.ui.richtexteditor.RichTextEditor.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"},{"name":"fireBeforeEditorInit","visibility":"protected","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"mParameters","optional":true,"description":"<p>Parameters to pass along with the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Fires event <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/beforeEditorInit\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/beforeEditorInit\">beforeEditorInit</a> to attached listeners.</p>","code":"<pre class=\"prettyprint\">fireBeforeEditorInit(mParameters?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"fireChange","visibility":"protected","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"mParameters","optional":true,"description":"<p>Parameters to pass along with the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""},{"name":"newValue","optional":true,"description":"<p>The new control value.</p>","depth":1,"types":[{"value":"string","href":"#/api/string"}],"phoneName":"mParameters.newValue","defaultValue":""}],"description":"<p>Fires event <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/change\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/change\">change</a> to attached listeners.</p>","code":"<pre class=\"prettyprint\">fireChange(mParameters?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"fireReady","visibility":"protected","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"mParameters","optional":true,"description":"<p>Parameters to pass along with the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Fires event <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/ready\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/ready\">ready</a> to attached listeners.</p>","code":"<pre class=\"prettyprint\">fireReady(mParameters?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"fireReadyRecurring","visibility":"protected","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"mParameters","optional":true,"description":"<p>Parameters to pass along with the event</p>","types":[{"value":"object","href":"#/api/object"}],"defaultValue":""}],"description":"<p>Fires event <a class=\"jsdoclink scrollToEvent\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/events/readyRecurring\" data-sap-ui-target=\"sap.ui.richtexteditor.RichTextEditor/events/readyRecurring\">readyRecurring</a> to attached listeners.</p>","code":"<pre class=\"prettyprint\">fireReadyRecurring(mParameters?) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"getButtonGroups","visibility":"public","returnValue":{"type":"[object Object][]","description":"<p>Value of property <code>buttonGroups</code></p>","types":[{"value":"[object Object][]"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getButtonGroups\" data-sap-ui-target=\"getButtonGroups\">buttonGroups</a>.</p><p>An array of button configurations. These configurations contain the names of buttons as array in the property \"buttons\" and the name of the group in \"name\", they can also contain the \"row\" where the buttons should be placed, a \"priority\" and whether the buttons are \"visible\". See method addButtonGroup() for more details on the structure of the objects in this array.</p><p>Default value is <code>[]</code>.</p>","code":"<pre class=\"prettyprint\">getButtonGroups() : [object Object][]</pre>"},{"name":"getCustomButtons","visibility":"public","returnValue":{"type":"[object Object][]","types":[{"value":"[object Object][]"}],"description":""},"since":"1.48","description":"<p>Gets content of aggregation <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomButtons\" data-sap-ui-target=\"getCustomButtons\">customButtons</a>.</p><p>Custom buttons are meant to extend the RichTextEditor's custom toolbar. Though type is set to sap.ui.Control, only sap.m.Button is allowed. <b>Note:</b> customButtons are available only when the customToolbar is enabled and all the requirements are fulfilled.</p>","code":"<pre class=\"prettyprint\">getCustomButtons() : [object Object][]</pre>"},{"name":"getCustomToolbar","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>customToolbar</code></p>","types":[{"value":"boolean"}]},"since":"1.48","description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomToolbar\" data-sap-ui-target=\"getCustomToolbar\">customToolbar</a>.</p><p>Determines whether a Fiori Toolbar is used instead of the TinyMCE default toolbar one. It is applied only when the EditorType is TinyMCE4 and sap.m library is loaded. <b>Note:</b> The <code>customToolbar</code> property will have effect only on initial loading. Changing it during runtime will not affect the initially loaded toolbar.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">getCustomToolbar() : boolean</pre>"},{"name":"getEditable","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>editable</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getEditable\" data-sap-ui-target=\"getEditable\">editable</a>.</p><p>Determines whether the editor content can be modified by the user. When set to \"false\" there might not be any editor toolbar.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getEditable() : boolean</pre>"},{"name":"getEditorLocation","visibility":"public","returnValue":{"type":"string","description":"<p>Value of property <code>editorLocation</code></p>","types":[{"value":"string"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getEditorLocation\" data-sap-ui-target=\"getEditorLocation\">editorLocation</a>.</p><p>Relative or absolute URL where the editor is available. Must be on the same server. <b>Note:</b> Any attempts to set this property after the first rendering will not have any effect.</p><p>Default value is <code>js/tiny_mce/tiny_mce_src.js</code>.</p>","deprecated":{"since":"1.25.0","text":"The editorLocation is set implicitly when choosing the editorType."},"deprecatedText":"Deprecated as of version 1.25.0. The editorLocation is set implicitly when choosing the editorType.","code":"<pre class=\"prettyprint\">getEditorLocation() : string</pre>"},{"name":"getEditorType","visibility":"public","returnValue":{"type":"string","description":"<p>Value of property <code>editorType</code></p>","types":[{"value":"string"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getEditorType\" data-sap-ui-target=\"getEditorType\">editorType</a>.</p><p>The editor implementation to use. Valid values are the ones found under sap.ui.richtexteditor.EditorType and any other editor identifier that may be introduced by other groups (hence this is not an enumeration). <b>Note:</b> Any attempts to set this property after the first rendering will not have any effect.</p><p>Default value is <code>TinyMCE</code>.</p>","code":"<pre class=\"prettyprint\">getEditorType() : string</pre>"},{"name":"getHeight","visibility":"public","returnValue":{"type":"sap.ui.core.CSSSize","description":"<p>Value of property <code>height</code></p>","types":[{"value":"sap.ui.core.CSSSize"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getHeight\" data-sap-ui-target=\"getHeight\">height</a>.</p><p>Height of RichTextEditor control in CSS units.</p>","code":"<pre class=\"prettyprint\">getHeight() : sap.ui.core.CSSSize</pre>"},{"name":"sap.ui.richtexteditor.RichTextEditor.getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.base.Metadata","description":"<p>Metadata object describing this class</p>","types":[{"value":"sap.ui.base.Metadata","linkEnabled":true}]},"description":"<p>Returns a metadata object for class sap.ui.richtexteditor.RichTextEditor.</p>","code":"<pre class=\"prettyprint\">sap.ui.richtexteditor.RichTextEditor.getMetadata() : sap.ui.base.Metadata</pre>"},{"name":"getNativeApi","visibility":"public","returnValue":{"type":"object","description":"<p>The native editor object (here: The TinyMCE editor instance)</p>","types":[{"value":"object"}]},"description":"<p>Returns the current editor's instance. CAUTION: using the native editor introduces a dependency to that editor and breaks the wrapping character of the RichTextEditor control, so it should only be done in justified cases.</p>","code":"<pre class=\"prettyprint\">getNativeApi() : object</pre>"},{"name":"getPlugins","visibility":"public","returnValue":{"type":"[object Object][]","description":"<p>Value of property <code>plugins</code></p>","types":[{"value":"[object Object][]"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getPlugins\" data-sap-ui-target=\"getPlugins\">plugins</a>.</p><p>An array of plugin configuration objects with the obligatory property \"name\". Each object has to contain a property \"name\" which then contains the plugin name/ID.</p><p>Default value is <code>[]</code>.</p>","code":"<pre class=\"prettyprint\">getPlugins() : [object Object][]</pre>"},{"name":"getRequired","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>required</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getRequired\" data-sap-ui-target=\"getRequired\">required</a>.</p><p>Determines whether a value is required.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">getRequired() : boolean</pre>"},{"name":"getSanitizeValue","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>sanitizeValue</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getSanitizeValue\" data-sap-ui-target=\"getSanitizeValue\">sanitizeValue</a>.</p><p>Determines whether to run the HTML sanitizer once the value (HTML markup) is applied or not. To configure allowed URLs please use the whitelist API via <code>jQuery.sap.addUrlWhitelist</code></p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getSanitizeValue() : boolean</pre>"},{"name":"getShowGroupClipboard","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupClipboard</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupClipboard\" data-sap-ui-target=\"getShowGroupClipboard\">showGroupClipboard</a>.</p><p>Determines whether the toolbar button group containing commands like Cut, Copy and Paste is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupClipboard() : boolean</pre>"},{"name":"getShowGroupFont","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupFont</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupFont\" data-sap-ui-target=\"getShowGroupFont\">showGroupFont</a>.</p><p>Determines whether the toolbar button group containing commands like Font, Font Size and Colors is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupFont() : boolean</pre>"},{"name":"getShowGroupFontStyle","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupFontStyle</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupFontStyle\" data-sap-ui-target=\"getShowGroupFontStyle\">showGroupFontStyle</a>.</p><p>Determines whether the toolbar button group containing commands like Bold, Italic, Underline and Strikethrough is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupFontStyle() : boolean</pre>"},{"name":"getShowGroupInsert","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupInsert</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupInsert\" data-sap-ui-target=\"getShowGroupInsert\">showGroupInsert</a>.</p><p>Determines whether the toolbar button group containing commands like Insert Image and Insert Smiley is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupInsert() : boolean</pre>"},{"name":"getShowGroupLink","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupLink</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupLink\" data-sap-ui-target=\"getShowGroupLink\">showGroupLink</a>.</p><p>Determines whether the toolbar button group containing commands like Create Link and Remove Link is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupLink() : boolean</pre>"},{"name":"getShowGroupStructure","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupStructure</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupStructure\" data-sap-ui-target=\"getShowGroupStructure\">showGroupStructure</a>.</p><p>Determines whether the toolbar button group containing commands like Bullets and Indentation is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupStructure() : boolean</pre>"},{"name":"getShowGroupTextAlign","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupTextAlign</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupTextAlign\" data-sap-ui-target=\"getShowGroupTextAlign\">showGroupTextAlign</a>.</p><p>Determines whether the toolbar button group containing text alignment commands is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupTextAlign() : boolean</pre>"},{"name":"getShowGroupUndo","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>showGroupUndo</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupUndo\" data-sap-ui-target=\"getShowGroupUndo\">showGroupUndo</a>.</p><p>Determines whether the toolbar button group containing commands like Undo and Redo is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">getShowGroupUndo() : boolean</pre>"},{"name":"getTextDirection","visibility":"public","returnValue":{"type":"sap.ui.core.TextDirection","description":"<p>Value of property <code>textDirection</code></p>","types":[{"value":"sap.ui.core.TextDirection","linkEnabled":true}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getTextDirection\" data-sap-ui-target=\"getTextDirection\">textDirection</a>.</p><p>The text direction</p><p>Default value is <code>Inherit</code>.</p>","code":"<pre class=\"prettyprint\">getTextDirection() : sap.ui.core.TextDirection</pre>"},{"name":"getUseLegacyTheme","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>useLegacyTheme</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getUseLegacyTheme\" data-sap-ui-target=\"getUseLegacyTheme\">useLegacyTheme</a>.</p><p>Determines whether or not to use the legacy theme for the toolbar buttons. If this is set to false, the default theme for the editor will be used (which might change slightly with every update). The legacy theme has the disadvantage that not all functionality has its own icon, so using non default buttons might lead to invisible buttons with the legacy theme - use the default editor theme in this case.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getUseLegacyTheme() : boolean</pre>"},{"name":"getValue","visibility":"public","returnValue":{"type":"string","description":"<p>Value of property <code>value</code></p>","types":[{"value":"string"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getValue\" data-sap-ui-target=\"getValue\">value</a>.</p><p>An HTML string representing the editor content. Because this is HTML, the value cannot be generically escaped to prevent cross-site scripting, so the application is responsible for doing so. Overwriting this property would also reset editor's Undo manager and buttons \"Undo\"/\"Redo\" would be set to their initial state.</p><p>Default value is <code>empty string</code>.</p>","code":"<pre class=\"prettyprint\">getValue() : string</pre>"},{"name":"getWidth","visibility":"public","returnValue":{"type":"sap.ui.core.CSSSize","description":"<p>Value of property <code>width</code></p>","types":[{"value":"sap.ui.core.CSSSize"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getWidth\" data-sap-ui-target=\"getWidth\">width</a>.</p><p>Width of RichTextEditor control in CSS units.</p>","code":"<pre class=\"prettyprint\">getWidth() : sap.ui.core.CSSSize</pre>"},{"name":"getWrapping","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>wrapping</code></p>","types":[{"value":"boolean"}]},"description":"<p>Gets current value of property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getWrapping\" data-sap-ui-target=\"getWrapping\">wrapping</a>.</p><p>Determines whether the text in the editor is wrapped. This does not affect the editor's value, only the representation in the control.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">getWrapping() : boolean</pre>"},{"name":"indexOfCustomButton","visibility":"public","returnValue":{"type":"int","description":"<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>","types":[{"value":"int"}]},"since":"1.48","parameters":[{"name":"oCustomButton","optional":false,"description":"<p>The customButton whose index is looked for</p>","types":[{"value":"sap.ui.core.Control","href":"#/api/sap.ui.core.Control","linkEnabled":true}],"defaultValue":""}],"description":"<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomButtons\" data-sap-ui-target=\"getCustomButtons\">customButtons</a>. and returns its index if found or -1 otherwise.</p>","code":"<pre class=\"prettyprint\">indexOfCustomButton(oCustomButton) : int</pre>"},{"name":"insertCustomButton","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"since":"1.48","parameters":[{"name":"oCustomButton","optional":false,"description":"<p>The customButton to insert; if empty, nothing is inserted</p>","types":[{"value":"sap.ui.core.Control","href":"#/api/sap.ui.core.Control","linkEnabled":true}],"defaultValue":""},{"name":"iIndex","optional":false,"description":"<p>The <code>0</code>-based index the customButton should be inserted at; for a negative value of <code>iIndex</code>, the customButton is inserted at position 0; for a value greater than the current size of the aggregation, the customButton is inserted at the last position</p>","types":[{"value":"int","href":"#/api/int"}],"defaultValue":""}],"description":"<p>Inserts a customButton into the aggregation <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomButtons\" data-sap-ui-target=\"getCustomButtons\">customButtons</a>.</p>","code":"<pre class=\"prettyprint\">insertCustomButton(oCustomButton, iIndex) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"removeAllCustomButtons","visibility":"public","returnValue":{"type":"[object Object][]","description":"<p>An array of the removed elements (might be empty)</p>","types":[{"value":"[object Object][]"}]},"since":"1.48","description":"<p>Removes all the controls from the aggregation <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomButtons\" data-sap-ui-target=\"getCustomButtons\">customButtons</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>","code":"<pre class=\"prettyprint\">removeAllCustomButtons() : [object Object][]</pre>"},{"name":"removeCustomButton","visibility":"public","returnValue":{"type":"sap.ui.core.Control","description":"<p>The removed customButton or <code>null</code></p>","types":[{"value":"sap.ui.core.Control","linkEnabled":true}]},"since":"1.48","parameters":[{"name":"vCustomButton","optional":false,"description":"<p>The customButton to remove or its index or id</p>","types":[{"value":"int","href":"#/api/int"},{"value":"string","href":"#/api/string"},{"value":"sap.ui.core.Control","href":"#/api/sap.ui.core.Control","linkEnabled":true}],"defaultValue":""}],"description":"<p>Removes a customButton from the aggregation <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomButtons\" data-sap-ui-target=\"getCustomButtons\">customButtons</a>.</p>","code":"<pre class=\"prettyprint\">removeCustomButton(vCustomButton) : sap.ui.core.Control</pre>"},{"name":"removePlugin","visibility":"public","returnValue":{"type":"object","description":"<p>Control instance (for method chaining)</p>","types":[{"value":"object"}]},"parameters":[{"name":"sPluginName","optional":true,"description":"<p>The name/ID of the plugin to remove</p>","types":[{"value":"string","href":"#/api/string"}],"defaultValue":""}],"description":"<p>Removes the plugin with the given name/ID from the list of plugins to load</p>","code":"<pre class=\"prettyprint\">removePlugin(sPluginName?) : object</pre>"},{"name":"setButtonGroups","visibility":"public","returnValue":{"type":"object","description":"<p>Control instance (for method chaining)</p>","types":[{"value":"object"}]},"parameters":[{"name":"aGroups","optional":true,"description":"<p>Array of names or objects containing the group information</p>","types":[{"value":"array","href":"#/api/array"}],"defaultValue":""}],"description":"<p>Sets the button groups to the editor.</p>","code":"<pre class=\"prettyprint\">setButtonGroups(aGroups?) : object</pre>"},{"name":"setCustomToolbar","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"since":"1.48","parameters":[{"name":"bCustomToolbar","optional":false,"description":"<p>New value for property <code>customToolbar</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getCustomToolbar\" data-sap-ui-target=\"getCustomToolbar\">customToolbar</a>.</p><p>Determines whether a Fiori Toolbar is used instead of the TinyMCE default toolbar one. It is applied only when the EditorType is TinyMCE4 and sap.m library is loaded. <b>Note:</b> The <code>customToolbar</code> property will have effect only on initial loading. Changing it during runtime will not affect the initially loaded toolbar.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">setCustomToolbar(bCustomToolbar) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setEditable","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bEditable","optional":false,"description":"<p>New value for property <code>editable</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getEditable\" data-sap-ui-target=\"getEditable\">editable</a>.</p><p>Determines whether the editor content can be modified by the user. When set to \"false\" there might not be any editor toolbar.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">setEditable(bEditable) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setEditorLocation","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"sEditorLocation","optional":false,"description":"<p>New value for property <code>editorLocation</code></p>","types":[{"value":"string","href":"#/api/string"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getEditorLocation\" data-sap-ui-target=\"getEditorLocation\">editorLocation</a>.</p><p>Relative or absolute URL where the editor is available. Must be on the same server. <b>Note:</b> Any attempts to set this property after the first rendering will not have any effect.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>js/tiny_mce/tiny_mce_src.js</code>.</p>","deprecated":{"since":"1.25.0","text":"The editorLocation is set implicitly when choosing the editorType."},"deprecatedText":"Deprecated as of version 1.25.0. The editorLocation is set implicitly when choosing the editorType.","code":"<pre class=\"prettyprint\">setEditorLocation(sEditorLocation) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setEditorType","visibility":"public","returnValue":{"type":"object","description":"<p>Control instance (for method chaining)</p>","types":[{"value":"object"}]},"parameters":[{"name":"sEditorType","optional":true,"description":"<p>Which editor type to be used (currently only TinyMCE 3 and 4)</p>","types":[{"value":"string","href":"#/api/string"}],"defaultValue":""}],"description":"<p>Switches the editor type and sets the default settings for the editor. All plugins and button groups should be set after this has been invoked</p>","code":"<pre class=\"prettyprint\">setEditorType(sEditorType?) : object</pre>"},{"name":"setHeight","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"sHeight","optional":false,"description":"<p>New value for property <code>height</code></p>","types":[{"value":"sap.ui.core.CSSSize","href":"#/api/sap.ui.core.CSSSize"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getHeight\" data-sap-ui-target=\"getHeight\">height</a>.</p><p>Height of RichTextEditor control in CSS units.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>","code":"<pre class=\"prettyprint\">setHeight(sHeight) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setPlugins","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"sPlugins","optional":false,"description":"<p>New value for property <code>plugins</code></p>","types":[{"value":"[object Object][]","href":"#/api/[object Object]"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getPlugins\" data-sap-ui-target=\"getPlugins\">plugins</a>.</p><p>An array of plugin configuration objects with the obligatory property \"name\". Each object has to contain a property \"name\" which then contains the plugin name/ID.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>[]</code>.</p>","code":"<pre class=\"prettyprint\">setPlugins(sPlugins) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setRequired","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bRequired","optional":false,"description":"<p>New value for property <code>required</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getRequired\" data-sap-ui-target=\"getRequired\">required</a>.</p><p>Determines whether a value is required.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">setRequired(bRequired) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setSanitizeValue","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bSanitizeValue","optional":false,"description":"<p>New value for property <code>sanitizeValue</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getSanitizeValue\" data-sap-ui-target=\"getSanitizeValue\">sanitizeValue</a>.</p><p>Determines whether to run the HTML sanitizer once the value (HTML markup) is applied or not. To configure allowed URLs please use the whitelist API via <code>jQuery.sap.addUrlWhitelist</code></p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">setSanitizeValue(bSanitizeValue) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupClipboard","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupClipboard","optional":false,"description":"<p>New value for property <code>showGroupClipboard</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupClipboard\" data-sap-ui-target=\"getShowGroupClipboard\">showGroupClipboard</a>.</p><p>Determines whether the toolbar button group containing commands like Cut, Copy and Paste is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupClipboard(bShowGroupClipboard) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupFont","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupFont","optional":false,"description":"<p>New value for property <code>showGroupFont</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupFont\" data-sap-ui-target=\"getShowGroupFont\">showGroupFont</a>.</p><p>Determines whether the toolbar button group containing commands like Font, Font Size and Colors is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupFont(bShowGroupFont) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupFontStyle","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupFontStyle","optional":false,"description":"<p>New value for property <code>showGroupFontStyle</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupFontStyle\" data-sap-ui-target=\"getShowGroupFontStyle\">showGroupFontStyle</a>.</p><p>Determines whether the toolbar button group containing commands like Bold, Italic, Underline and Strikethrough is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupFontStyle(bShowGroupFontStyle) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupInsert","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupInsert","optional":false,"description":"<p>New value for property <code>showGroupInsert</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupInsert\" data-sap-ui-target=\"getShowGroupInsert\">showGroupInsert</a>.</p><p>Determines whether the toolbar button group containing commands like Insert Image and Insert Smiley is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupInsert(bShowGroupInsert) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupLink","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupLink","optional":false,"description":"<p>New value for property <code>showGroupLink</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupLink\" data-sap-ui-target=\"getShowGroupLink\">showGroupLink</a>.</p><p>Determines whether the toolbar button group containing commands like Create Link and Remove Link is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupLink(bShowGroupLink) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupStructure","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupStructure","optional":false,"description":"<p>New value for property <code>showGroupStructure</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupStructure\" data-sap-ui-target=\"getShowGroupStructure\">showGroupStructure</a>.</p><p>Determines whether the toolbar button group containing commands like Bullets and Indentation is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupStructure(bShowGroupStructure) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupTextAlign","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupTextAlign","optional":false,"description":"<p>New value for property <code>showGroupTextAlign</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupTextAlign\" data-sap-ui-target=\"getShowGroupTextAlign\">showGroupTextAlign</a>.</p><p>Determines whether the toolbar button group containing text alignment commands is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupTextAlign(bShowGroupTextAlign) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setShowGroupUndo","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bShowGroupUndo","optional":false,"description":"<p>New value for property <code>showGroupUndo</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getShowGroupUndo\" data-sap-ui-target=\"getShowGroupUndo\">showGroupUndo</a>.</p><p>Determines whether the toolbar button group containing commands like Undo and Redo is available. Changing this after the initial rendering will result in some visible redrawing.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>","code":"<pre class=\"prettyprint\">setShowGroupUndo(bShowGroupUndo) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setTextDirection","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"sTextDirection","optional":false,"description":"<p>New value for property <code>textDirection</code></p>","types":[{"value":"sap.ui.core.TextDirection","href":"#/api/sap.ui.core.TextDirection","linkEnabled":true}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getTextDirection\" data-sap-ui-target=\"getTextDirection\">textDirection</a>.</p><p>The text direction</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Inherit</code>.</p>","code":"<pre class=\"prettyprint\">setTextDirection(sTextDirection) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setUseLegacyTheme","visibility":"public","returnValue":{"type":"object","description":"<p>Control instance (for method chaining)</p>","types":[{"value":"object"}]},"parameters":[{"name":"bUseLegacyTheme","optional":true,"description":"<p>Whether to use the legacy button theme</p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Allows to opt out of the legacy theme that is applied to keep the old button look. In case butons are used that are not in the legacy theme, this can be disabled in order to show the button correctly.</p>","code":"<pre class=\"prettyprint\">setUseLegacyTheme(bUseLegacyTheme?) : object</pre>"},{"name":"setValue","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"sValue","optional":false,"description":"<p>New value for property <code>value</code></p>","types":[{"value":"string","href":"#/api/string"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getValue\" data-sap-ui-target=\"getValue\">value</a>.</p><p>An HTML string representing the editor content. Because this is HTML, the value cannot be generically escaped to prevent cross-site scripting, so the application is responsible for doing so. Overwriting this property would also reset editor's Undo manager and buttons \"Undo\"/\"Redo\" would be set to their initial state.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>","code":"<pre class=\"prettyprint\">setValue(sValue) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setWidth","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"sWidth","optional":false,"description":"<p>New value for property <code>width</code></p>","types":[{"value":"sap.ui.core.CSSSize","href":"#/api/sap.ui.core.CSSSize"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getWidth\" data-sap-ui-target=\"getWidth\">width</a>.</p><p>Width of RichTextEditor control in CSS units.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>","code":"<pre class=\"prettyprint\">setWidth(sWidth) : sap.ui.richtexteditor.RichTextEditor</pre>"},{"name":"setWrapping","visibility":"public","returnValue":{"type":"sap.ui.richtexteditor.RichTextEditor","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.richtexteditor.RichTextEditor","linkEnabled":true}]},"parameters":[{"name":"bWrapping","optional":false,"description":"<p>New value for property <code>wrapping</code></p>","types":[{"value":"boolean","href":"#/api/boolean"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a class=\"jsdoclink scrollToMethod\" target=\"_self\" href=\"#/api/sap.ui.richtexteditor.RichTextEditor/methods/getWrapping\" data-sap-ui-target=\"getWrapping\">wrapping</a>.</p><p>Determines whether the text in the editor is wrapped. This does not affect the editor's value, only the representation in the control.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>","code":"<pre class=\"prettyprint\">setWrapping(bWrapping) : sap.ui.richtexteditor.RichTextEditor</pre>"}],"component":"CA-UI5-CTR-RIL","hasSample":true,"title":"class sap.ui.richtexteditor.RichTextEditor","subTitle":""}],"defaultComponent":"CA-UI5-CTR-RIL"}