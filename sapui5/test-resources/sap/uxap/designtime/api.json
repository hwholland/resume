{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.uxap",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.uxap",
			"basename": "uxap",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "SAP UxAP"
		},
		{
			"kind": "class",
			"name": "sap.uxap.AnchorBar",
			"basename": "AnchorBar",
			"resource": "sap/uxap/AnchorBar.js",
			"module": "sap/uxap/AnchorBar",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.m.Toolbar",
			"description": "Anchor bar is the navigation bar of an Object page. Its purpose is to provide links to all Sections and Subsections. Takes the form of a Select on phone.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "showPopover",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.",
						"methods": [
							"getShowPopover",
							"setShowPopover"
						]
					},
					{
						"name": "upperCase",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the Anchor bar items are displayed in upper case.",
						"methods": [
							"getUpperCase",
							"setUpperCase"
						]
					}
				],
				"aggregations": [
					{
						"name": "_select",
						"singularName": "_select",
						"type": "sap.uxap.HierarchicalSelect",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_select",
							"destroy_select",
							"set_select"
						]
					},
					{
						"name": "_popovers",
						"singularName": "_popover",
						"type": "sap.m.Popover",
						"cardinality": "0..n",
						"visibility": "hidden",
						"methods": [
							"get_popovers",
							"destroy_popovers",
							"insert_popover",
							"add_popover",
							"remove_popover",
							"indexOf_popover",
							"removeAll_popovers"
						]
					},
					{
						"name": "_scrollArrowLeft",
						"singularName": "_scrollArrowLeft",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_scrollArrowLeft",
							"destroy_scrollArrowLeft",
							"set_scrollArrowLeft"
						]
					},
					{
						"name": "_scrollArrowRight",
						"singularName": "_scrollArrowRight",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_scrollArrowRight",
							"destroy_scrollArrowRight",
							"set_scrollArrowRight"
						]
					}
				],
				"associations": [
					{
						"name": "selectedButton",
						"singularName": "selectedButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The button that represents the Section being scrolled by the user.",
						"methods": [
							"getSelectedButton",
							"setSelectedButton"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new AnchorBar.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.AnchorBar with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Toolbar.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.AnchorBar."
				},
				{
					"name": "getScrollDelegate",
					"visibility": "public",
					"returnValue": {
						"type": "object"
					},
					"description": "Returns a sap.ui.core.delegate.ScrollEnablement object used to handle scrolling."
				},
				{
					"name": "getSelectedButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button"
					},
					"description": "ID of the element which is the current target of the association <code>selectedButton</code>, or <code>null</code>."
				},
				{
					"name": "getShowPopover",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showPopover</code>"
					},
					"description": "Gets current value of property <code>showPopover</code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUpperCase",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>upperCase</code>"
					},
					"description": "Gets current value of property <code>upperCase</code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "scrollToSection",
					"visibility": "public",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "The Section ID to scroll to"
						},
						{
							"name": "duration",
							"type": "int",
							"optional": false,
							"description": "Scroll duration (in ms). Default value is 0"
						}
					],
					"description": "Scroll to a specific Section."
				},
				{
					"name": "setSelectedButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.AnchorBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedButton",
							"type": "sap.m.Button",
							"optional": false,
							"description": "Id of an element which becomes the new target of this selectedButton association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>selectedButton</code>."
				},
				{
					"name": "setShowPopover",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.AnchorBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowPopover",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showPopover</code>"
						}
					],
					"description": "Sets a new value for property <code>showPopover</code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUpperCase",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.AnchorBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUpperCase",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>upperCase</code>"
						}
					],
					"description": "Sets a new value for property <code>upperCase</code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.BlockBase",
			"basename": "BlockBase",
			"resource": "sap/uxap/BlockBase.js",
			"module": "sap/uxap/BlockBase",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.ui.core.Control",
			"description": "\nA block is the main element that will be displayed, mainly in an object page, but not necessarily\nonly there.\n\nA block is a control that use a XML view for storing its internal control tree.\nA block is a control that has modes and a view associated to each modes.\nAt rendering time, the view associated to the mode is rendered.\n\n<b>Note:</b> The control supports only XML views.\n\nAs any UI5 views, the XML view can have a controller which automatically comes a this.oParentBlock attribute (so that the controller can interacts with the block).\nIf the controller implements the onParentBlockModeChange method, this method will get called with the sMode parameter when the view is used or re-used by the block.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "mode",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the mode of the block.\nWhen block is used inside ObjectPage this mode is inherited my the SubSection.\nThe mode of the block is changed when SubSection mode changes.",
						"methods": [
							"getMode",
							"setMode"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the visibility of the block.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "columnLayout",
						"type": "sap.uxap.BlockBaseColumnLayout",
						"defaultValue": "auto",
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines on how columns the layout will be rendered.\nAllowed values are integers from 1 to 4 and \"auto\".",
						"methods": [
							"getColumnLayout",
							"setColumnLayout"
						]
					},
					{
						"name": "formAdjustment",
						"type": "sap.uxap.BlockBaseFormAdjustment",
						"defaultValue": "BlockColumns",
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.",
						"methods": [
							"getFormAdjustment",
							"setFormAdjustment"
						]
					},
					{
						"name": "showSubSectionMore",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the show more button should be shown.",
						"methods": [
							"getShowSubSectionMore",
							"setShowSubSectionMore"
						]
					}
				],
				"aggregations": [
					{
						"name": "mappings",
						"singularName": "mapping",
						"type": "sap.uxap.ModelMapping",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Map external UI5 model and internal Block model",
						"methods": [
							"getMappings",
							"destroyMappings",
							"insertMapping",
							"addMapping",
							"removeMapping",
							"indexOfMapping",
							"removeAllMappings"
						]
					},
					{
						"name": "_views",
						"singularName": "view",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "hidden",
						"description": "Internal aggregation that contains all views inside this Block",
						"methods": [
							"get_views",
							"destroy_views",
							"insertView",
							"addView",
							"removeView",
							"indexOfView",
							"removeAll_views"
						]
					}
				],
				"defaultAggregation": "mappings",
				"associations": [
					{
						"name": "selectedView",
						"singularName": "selectedView",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The view that is rendered now.\nCan be used as getter for the rendered view.",
						"methods": [
							"getSelectedView",
							"setSelectedView"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new BlockBase.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addMapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BlockBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMapping",
							"type": "sap.uxap.ModelMapping",
							"optional": false,
							"description": "the mapping to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some mapping to the aggregation <code>mappings</code>."
				},
				{
					"name": "destroyMappings",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BlockBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the mappings in the aggregation <code>mappings</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.BlockBase with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getColumnLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BlockBaseColumnLayout",
						"description": "Value of property <code>columnLayout</code>"
					},
					"description": "Gets current value of property <code>columnLayout</code>.\n\nDetermines on how columns the layout will be rendered.\nAllowed values are integers from 1 to 4 and \"auto\".\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "getFormAdjustment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BlockBaseFormAdjustment",
						"description": "Value of property <code>formAdjustment</code>"
					},
					"description": "Gets current value of property <code>formAdjustment</code>.\n\nDetermines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nDefault value is <code>BlockColumns</code>."
				},
				{
					"name": "getMappings",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ModelMapping[]"
					},
					"description": "Gets content of aggregation <code>mappings</code>.\n\nMap external UI5 model and internal Block model"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.BlockBase."
				},
				{
					"name": "getMode",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>mode</code>"
					},
					"description": "Gets current value of property <code>mode</code>.\n\nDetermines the mode of the block.\nWhen block is used inside ObjectPage this mode is inherited my the SubSection.\nThe mode of the block is changed when SubSection mode changes."
				},
				{
					"name": "getSelectedView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>selectedView</code>, or <code>null</code>."
				},
				{
					"name": "getShowSubSectionMore",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSubSectionMore</code>"
					},
					"description": "Gets current value of property <code>showSubSectionMore</code>.\n\nDetermines whether the show more button should be shown.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nDetermines the visibility of the block.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "indexOfMapping",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oMapping",
							"type": "sap.uxap.ModelMapping",
							"optional": false,
							"description": "The mapping whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.uxap.ModelMapping</code> in the aggregation <code>mappings</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertMapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BlockBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMapping",
							"type": "sap.uxap.ModelMapping",
							"optional": false,
							"description": "the mapping to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the mapping should be inserted at; for\n             a negative value of <code>iIndex</code>, the mapping is inserted at position 0; for a value\n             greater than the current size of the aggregation, the mapping is inserted at\n             the last position"
						}
					],
					"description": "Inserts a mapping into the aggregation <code>mappings</code>."
				},
				{
					"name": "removeAllMappings",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ModelMapping[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>mappings</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeMapping",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ModelMapping",
						"description": "The removed mapping or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vMapping",
							"type": "int|string|sap.uxap.ModelMapping",
							"optional": false,
							"description": "The mappingto remove or its index or id"
						}
					],
					"description": "Removes a mapping from the aggregation <code>mappings</code>."
				},
				{
					"name": "setColumnLayout",
					"visibility": "public",
					"parameters": [
						{
							"name": "sLayout",
							"type": "string",
							"optional": false,
							"description": "The column layout to apply to the control"
						}
					],
					"description": "Set the column layout for this particular block."
				},
				{
					"name": "setFormAdjustment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BlockBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFormAdjustment",
							"type": "sap.uxap.BlockBaseFormAdjustment",
							"optional": false,
							"description": "New value for property <code>formAdjustment</code>"
						}
					],
					"description": "Sets a new value for property <code>formAdjustment</code>.\n\nDetermines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>BlockColumns</code>."
				},
				{
					"name": "setMode",
					"visibility": "public",
					"returnValue": {
						"type": "*",
						"description": "this"
					},
					"parameters": [
						{
							"name": "sMode",
							"type": "string",
							"optional": false,
							"description": "the mode to apply to the control (that should be synchronized with view declared)"
						}
					],
					"description": "Set the view mode for this particular block."
				},
				{
					"name": "setSelectedView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BlockBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedView",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this selectedView association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>selectedView</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"description": "Setter for the visibility of the block."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.uxap.BlockBaseColumnLayout",
			"basename": "BlockBaseColumnLayout",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "Used by the BlockBase control to define how many columns should it be assigned by the objectPageSubSection.\n    The allowed values can be auto (subsection assigned a number of columns based on the parent objectPageLayout subsectionLayout property), 1, 2 or 3\n    (This may not be a valid value for some subSectionLayout, for example asking for 3 columns in a 2 column layout would raise warnings)."
		},
		{
			"kind": "enum",
			"name": "sap.uxap.BlockBaseFormAdjustment",
			"basename": "BlockBaseFormAdjustment",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "Used by the BlockBase control to define if it should do automatic adjustment of its nested forms.",
			"properties": [
				{
					"name": "BlockColumns",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Any form within the block will be automatically adjusted to have as many columns as the colspan of its parent block."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No automatic adjustment of forms."
				},
				{
					"name": "OneColumn",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Any form within the block will be automatically adjusted to have only one column."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.BreadCrumbs",
			"basename": "BreadCrumbs",
			"resource": "sap/uxap/BreadCrumbs.js",
			"module": "sap/uxap/BreadCrumbs",
			"static": true,
			"visibility": "public",
			"since": "1.30",
			"extends": "sap.ui.core.Control",
			"description": "\nThe BreadCrumbs control represents the navigation steps up to the current location in the application and allows\nthe user to quickly navigate to a previous location on the path that got him to the current location.\nIt has two main modes of operation. One is a trail of links followed by separators (when there's enough space\nfor the control to fit on one line), and the other is a dropdown list with the links (when the trail of links\nwouldn't fit on one line).",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "showCurrentLocation",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Sets the visibility of the current/last element in the BreadCrumbs path.",
						"methods": [
							"getShowCurrentLocation",
							"setShowCurrentLocation"
						]
					}
				],
				"aggregations": [
					{
						"name": "links",
						"singularName": "link",
						"type": "sap.m.Link",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "A list of all the active link elements in the BreadCrumbs control.",
						"methods": [
							"getLinks",
							"destroyLinks",
							"insertLink",
							"addLink",
							"removeLink",
							"indexOfLink",
							"removeAllLinks"
						]
					},
					{
						"name": "currentLocation",
						"singularName": "currentLocation",
						"type": "sap.m.Text",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The current/last element in the BreadCrumbs path.",
						"methods": [
							"getCurrentLocation",
							"destroyCurrentLocation",
							"setCurrentLocation"
						]
					},
					{
						"name": "_tubeIcon",
						"singularName": "_tubeIcon",
						"type": "sap.ui.core.Icon",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "An icon that is used as a separator after each link in the standard mode.",
						"methods": [
							"get_tubeIcon",
							"destroy_tubeIcon",
							"set_tubeIcon"
						]
					},
					{
						"name": "_overflowSelect",
						"singularName": "_overflowSelect",
						"type": "sap.m.Select",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "A select control which is used to display the BreadCrumbs content on smaller mobile devices or\nwhen there's not enough space for the control to fit on one line.",
						"methods": [
							"get_overflowSelect",
							"destroy_overflowSelect",
							"set_overflowSelect"
						]
					}
				],
				"defaultAggregation": "links"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new BreadCrumbs.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BreadCrumbs",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLink",
							"type": "sap.m.Link",
							"optional": false,
							"description": "the link to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some link to the aggregation <code>links</code>."
				},
				{
					"name": "destroyCurrentLocation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BreadCrumbs",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the currentLocation in the aggregation <code>currentLocation</code>."
				},
				{
					"name": "destroyLinks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BreadCrumbs",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the links in the aggregation <code>links</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.BreadCrumbs with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getCurrentLocation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Text"
					},
					"description": "Gets content of aggregation <code>currentLocation</code>.\n\nThe current/last element in the BreadCrumbs path."
				},
				{
					"name": "getLinks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Link[]"
					},
					"description": "Gets content of aggregation <code>links</code>.\n\nA list of all the active link elements in the BreadCrumbs control."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.BreadCrumbs."
				},
				{
					"name": "getShowCurrentLocation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showCurrentLocation</code>"
					},
					"description": "Gets current value of property <code>showCurrentLocation</code>.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "indexOfLink",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oLink",
							"type": "sap.m.Link",
							"optional": false,
							"description": "The link whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.m.Link</code> in the aggregation <code>links</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BreadCrumbs",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLink",
							"type": "sap.m.Link",
							"optional": false,
							"description": "the link to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the link should be inserted at; for\n             a negative value of <code>iIndex</code>, the link is inserted at position 0; for a value\n             greater than the current size of the aggregation, the link is inserted at\n             the last position"
						}
					],
					"description": "Inserts a link into the aggregation <code>links</code>."
				},
				{
					"name": "removeAllLinks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Link[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>links</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Link",
						"description": "The removed link or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vLink",
							"type": "int|string|sap.m.Link",
							"optional": false,
							"description": "The linkto remove or its index or id"
						}
					],
					"description": "Removes a link from the aggregation <code>links</code>."
				},
				{
					"name": "setCurrentLocation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BreadCrumbs",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCurrentLocation",
							"type": "sap.m.Text",
							"optional": false,
							"description": "The currentLocation to set"
						}
					],
					"description": "Sets the aggregated <code>currentLocation</code>."
				},
				{
					"name": "setShowCurrentLocation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.BreadCrumbs",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowCurrentLocation",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showCurrentLocation</code>"
						}
					],
					"description": "Sets a new value for property <code>showCurrentLocation</code>.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.HierarchicalSelect",
			"basename": "HierarchicalSelect",
			"resource": "sap/uxap/HierarchicalSelect.js",
			"module": "sap/uxap/HierarchicalSelect",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.m.Select",
			"description": "A select that display items on 2 level of hierarchy.\nIf a provided item has a custom data named \"secondLevel\", then it will be displayed as a second level, otherwise it would be displayed as a first level.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "upperCase",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the HierarchicalSelect items are displayed in upper case.",
						"methods": [
							"getUpperCase",
							"setUpperCase"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HierarchicalSelect.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.HierarchicalSelect with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Select.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.HierarchicalSelect."
				},
				{
					"name": "getUpperCase",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>upperCase</code>"
					},
					"description": "Gets current value of property <code>upperCase</code>.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setUpperCase",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.HierarchicalSelect",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUpperCase",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>upperCase</code>"
						}
					],
					"description": "Sets a new value for property <code>upperCase</code>.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.uxap.Importance",
			"basename": "Importance",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"description": "Used by the ObjectSectionBase control to define the importance of the content contained in it.",
			"properties": [
				{
					"name": "High",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "High importance of the content"
				},
				{
					"name": "Low",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Low importance of the content"
				},
				{
					"name": "Medium",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Medium importance of the content"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ModelMapping",
			"basename": "ModelMapping",
			"resource": "sap/uxap/ModelMapping.js",
			"module": "sap/uxap/ModelMapping",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.ui.core.Element",
			"description": "\nDefine the entity that will be passed to the ObjectPageLayout.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "externalModelName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the the external model name.",
						"methods": [
							"getExternalModelName",
							"setExternalModelName"
						]
					},
					{
						"name": "internalModelName",
						"type": "string",
						"defaultValue": "Model",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the the internal model name.",
						"methods": [
							"getInternalModelName",
							"setInternalModelName"
						]
					},
					{
						"name": "externalPath",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the the external path.",
						"methods": [
							"getExternalPath",
							"setExternalPath"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new ModelMapping.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ModelMapping with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getExternalModelName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>externalModelName</code>"
					},
					"description": "Gets current value of property <code>externalModelName</code>.\n\nDetermines the the external model name."
				},
				{
					"name": "getExternalPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>externalPath</code>"
					},
					"description": "Gets current value of property <code>externalPath</code>.\n\nDetermines the the external path."
				},
				{
					"name": "getInternalModelName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>internalModelName</code>"
					},
					"description": "Gets current value of property <code>internalModelName</code>.\n\nDetermines the the internal model name.\n\nDefault value is <code>Model</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ModelMapping."
				},
				{
					"name": "setExternalModelName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ModelMapping",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sExternalModelName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>externalModelName</code>"
						}
					],
					"description": "Sets a new value for property <code>externalModelName</code>.\n\nDetermines the the external model name.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setExternalPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ModelMapping",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sExternalPath",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>externalPath</code>"
						}
					],
					"description": "Sets a new value for property <code>externalPath</code>.\n\nDetermines the the external path.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setInternalModelName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ModelMapping",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sInternalModelName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>internalModelName</code>"
						}
					],
					"description": "Sets a new value for property <code>internalModelName</code>.\n\nDetermines the the internal model name.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Model</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.uxap.ObjectPageConfigurationMode",
			"basename": "ObjectPageConfigurationMode",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "Used by the sap.uxap.component.Component how to initialize the ObjectPageLayout sections and subsections.",
			"properties": [
				{
					"name": "JsonModel",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Determines the JSON model"
				},
				{
					"name": "JsonURL",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Determines the JSON url"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageHeader",
			"basename": "ObjectPageHeader",
			"resource": "sap/uxap/ObjectPageHeader.js",
			"module": "sap/uxap/ObjectPageHeader",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.ui.core.Control",
			"description": "ObjectPageHeader represents the static part of an Object page header.\nTypically used to display the basic information about a business object, such as title/description/picture, as well as a list of common actions.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "objectImageURI",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The URL of the image, representing the business object",
						"methods": [
							"getObjectImageURI",
							"setObjectImageURI"
						]
					},
					{
						"name": "objectImageAlt",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property",
						"methods": [
							"getObjectImageAlt",
							"setObjectImageAlt"
						]
					},
					{
						"name": "objectImageDensityAware",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "The value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.",
						"methods": [
							"getObjectImageDensityAware",
							"setObjectImageDensityAware"
						]
					},
					{
						"name": "objectTitle",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The title of the object",
						"methods": [
							"getObjectTitle",
							"setObjectTitle"
						]
					},
					{
						"name": "objectSubtitle",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The description of the object",
						"methods": [
							"getObjectSubtitle",
							"setObjectSubtitle"
						]
					},
					{
						"name": "objectImageShape",
						"type": "sap.uxap.ObjectPageHeaderPictureShape",
						"defaultValue": "Square",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the picture should be displayed in a square or with a circle-shaped mask.",
						"methods": [
							"getObjectImageShape",
							"setObjectImageShape"
						]
					},
					{
						"name": "isObjectIconAlwaysVisible",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the icon should always be visible or visible only when the header is snapped.",
						"methods": [
							"getIsObjectIconAlwaysVisible",
							"setIsObjectIconAlwaysVisible"
						]
					},
					{
						"name": "isObjectTitleAlwaysVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the title should always be visible or visible only when the header is snapped.",
						"methods": [
							"getIsObjectTitleAlwaysVisible",
							"setIsObjectTitleAlwaysVisible"
						]
					},
					{
						"name": "isObjectSubtitleAlwaysVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the subtitle should always be visible or visible only when the header is snapped.",
						"methods": [
							"getIsObjectSubtitleAlwaysVisible",
							"setIsObjectSubtitleAlwaysVisible"
						]
					},
					{
						"name": "isActionAreaAlwaysVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the action buttons should always be visible or visible only when the header is snapped.",
						"methods": [
							"getIsActionAreaAlwaysVisible",
							"setIsActionAreaAlwaysVisible"
						]
					},
					{
						"name": "headerDesign",
						"type": "sap.uxap.ObjectPageHeaderDesign",
						"defaultValue": "Light",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the design of the header - Light or Dark",
						"methods": [
							"getHeaderDesign",
							"setHeaderDesign"
						]
					},
					{
						"name": "showTitleSelector",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "When set to true, the selector arrow icon/image is shown and can be pressed.",
						"methods": [
							"getShowTitleSelector",
							"setShowTitleSelector"
						]
					},
					{
						"name": "markFavorite",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Set the favorite state to true or false. The showMarkers property must be true for this property to take effect.",
						"methods": [
							"getMarkFavorite",
							"setMarkFavorite"
						]
					},
					{
						"name": "markFlagged",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Set the flagged state to true or false. The showMarkers property must be true for this property to take effect.",
						"methods": [
							"getMarkFlagged",
							"setMarkFlagged"
						]
					},
					{
						"name": "showMarkers",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates if object page header title supports showing markers such as flagged and favorite.",
						"methods": [
							"getShowMarkers",
							"setShowMarkers"
						]
					},
					{
						"name": "markLocked",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Set the locked state of the objectPageHeader.",
						"methods": [
							"getMarkLocked",
							"setMarkLocked"
						]
					},
					{
						"name": "showPlaceholder",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Enables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.",
						"methods": [
							"getShowPlaceholder",
							"setShowPlaceholder"
						]
					},
					{
						"name": "markChanges",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Marks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.",
						"methods": [
							"getMarkChanges",
							"setMarkChanges"
						]
					}
				],
				"aggregations": [
					{
						"name": "_breadCrumbs",
						"singularName": "_breadCrumb",
						"type": "sap.m.Breadcrumbs",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal aggregation for the BreadCrumbs in the header.",
						"methods": [
							"get_breadCrumbs",
							"destroy_breadCrumbs",
							"set_breadCrumbs"
						]
					},
					{
						"name": "breadCrumbsLinks",
						"singularName": "breadCrumbLink",
						"type": "sap.m.Link",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "A list of all the active link elements in the BreadCrumbs control.",
						"methods": [
							"getBreadCrumbsLinks",
							"destroyBreadCrumbsLinks",
							"insertBreadCrumbLink",
							"addBreadCrumbLink",
							"removeBreadCrumbLink",
							"indexOfBreadCrumbLink",
							"removeAllBreadCrumbsLinks"
						]
					},
					{
						"name": "_overflowButton",
						"singularName": "_overflowButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal aggregation for the overflow button in the header.",
						"methods": [
							"get_overflowButton",
							"destroy_overflowButton",
							"set_overflowButton"
						]
					},
					{
						"name": "_expandButton",
						"singularName": "_expandButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal aggregation for the expand header button.",
						"methods": [
							"get_expandButton",
							"destroy_expandButton",
							"set_expandButton"
						]
					},
					{
						"name": "_objectImage",
						"singularName": "_objectImage",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Icon for the identifier line.",
						"methods": [
							"get_objectImage",
							"destroy_objectImage",
							"set_objectImage"
						]
					},
					{
						"name": "_lockIconCont",
						"singularName": "_lockIconCont",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_lockIconCont",
							"destroy_lockIconCont",
							"set_lockIconCont"
						]
					},
					{
						"name": "_lockIcon",
						"singularName": "_lockIcon",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_lockIcon",
							"destroy_lockIcon",
							"set_lockIcon"
						]
					},
					{
						"name": "_titleArrowIconCont",
						"singularName": "_titleArrowIconCont",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_titleArrowIconCont",
							"destroy_titleArrowIconCont",
							"set_titleArrowIconCont"
						]
					},
					{
						"name": "_titleArrowIcon",
						"singularName": "_titleArrowIcon",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_titleArrowIcon",
							"destroy_titleArrowIcon",
							"set_titleArrowIcon"
						]
					},
					{
						"name": "_favIcon",
						"singularName": "_favIcon",
						"type": "sap.ui.core.Icon",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_favIcon",
							"destroy_favIcon",
							"set_favIcon"
						]
					},
					{
						"name": "_flagIcon",
						"singularName": "_flagIcon",
						"type": "sap.ui.core.Icon",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_flagIcon",
							"destroy_flagIcon",
							"set_flagIcon"
						]
					},
					{
						"name": "_overflowActionSheet",
						"singularName": "_overflowActionSheet",
						"type": "sap.m.ActionSheet",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_overflowActionSheet",
							"destroy_overflowActionSheet",
							"set_overflowActionSheet"
						]
					},
					{
						"name": "_changesIconCont",
						"singularName": "_changesIconCont",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_changesIconCont",
							"destroy_changesIconCont",
							"set_changesIconCont"
						]
					},
					{
						"name": "_changesIcon",
						"singularName": "_changesIcon",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_changesIcon",
							"destroy_changesIcon",
							"set_changesIcon"
						]
					},
					{
						"name": "_sideContentBtn",
						"singularName": "_sideContentBtn",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_sideContentBtn",
							"destroy_sideContentBtn",
							"set_sideContentBtn"
						]
					},
					{
						"name": "navigationBar",
						"singularName": "navigationBar",
						"type": "sap.m.Bar",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "An instance of sap.m.Bar to be embedded in the header",
						"methods": [
							"getNavigationBar",
							"destroyNavigationBar",
							"setNavigationBar"
						]
					},
					{
						"name": "actions",
						"singularName": "action",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "List of actions that will be displayed in the header.\nYou can use ObjectPageHeaderActionButton controls to achieve a different visual representation of the action buttons in the action bar and the action sheet (overflow menu).\nYou can use ObjectPageHeaderLayoutData to display a visual separator.",
						"methods": [
							"getActions",
							"destroyActions",
							"insertAction",
							"addAction",
							"removeAction",
							"indexOfAction",
							"removeAllActions"
						]
					},
					{
						"name": "sideContentButton",
						"singularName": "sideContentButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "public",
						"since": "1.38.0",
						"description": "A button that is used for opening the side content of the page or some additional content.",
						"methods": [
							"getSideContentButton",
							"destroySideContentButton",
							"setSideContentButton"
						]
					}
				],
				"defaultAggregation": "actions",
				"events": [
					{
						"name": "titleSelectorPress",
						"visibility": "public",
						"description": "The event is fired when the objectPage header title selector (down-arrow) is pressed",
						"parameters": {
							"domRef": {
								"name": "domRef",
								"type": "string",
								"description": "DOM reference of the title item's icon to be used for positioning."
							}
						},
						"methods": [
							"attachTitleSelectorPress",
							"detachTitleSelectorPress",
							"fireTitleSelectorPress"
						]
					},
					{
						"name": "markLockedPress",
						"visibility": "public",
						"description": "The event is fired when the Locked button is pressed",
						"parameters": {
							"domRef": {
								"name": "domRef",
								"type": "string",
								"description": "DOM reference of the lock item's icon to be used for positioning."
							}
						},
						"methods": [
							"attachMarkLockedPress",
							"detachMarkLockedPress",
							"fireMarkLockedPress"
						]
					},
					{
						"name": "markChangesPress",
						"visibility": "public",
						"description": "The event is fired when the unsaved changes button is pressed",
						"parameters": {
							"domRef": {
								"name": "domRef",
								"type": "string",
								"since": "1.34.0",
								"description": "DOM reference of the changed item's icon to be used for positioning."
							}
						},
						"methods": [
							"attachMarkChangesPress",
							"detachMarkChangesPress",
							"fireMarkChangesPress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageHeader.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "markChangesPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"domRef": {
											"name": "domRef",
											"type": "string",
											"optional": false,
											"description": "DOM reference of the changed item's icon to be used for positioning."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the unsaved changes button is pressed"
				},
				{
					"name": "markLockedPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"domRef": {
											"name": "domRef",
											"type": "string",
											"optional": false,
											"description": "DOM reference of the lock item's icon to be used for positioning."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the Locked button is pressed"
				},
				{
					"name": "titleSelectorPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"domRef": {
											"name": "domRef",
											"type": "string",
											"optional": false,
											"description": "DOM reference of the title item's icon to be used for positioning."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the objectPage header title selector (down-arrow) is pressed"
				}
			],
			"methods": [
				{
					"name": "addAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the action to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some action to the aggregation <code>actions</code>."
				},
				{
					"name": "addBreadCrumbLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBreadCrumbLink",
							"type": "sap.m.Link",
							"optional": false,
							"description": "the breadCrumbLink to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some breadCrumbLink to the aggregation <code>breadCrumbsLinks</code>."
				},
				{
					"name": "attachMarkChangesPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>markChangesPress</code> event of this <code>sap.uxap.ObjectPageHeader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader</code> itself.\n\nThe event is fired when the unsaved changes button is pressed"
				},
				{
					"name": "attachMarkLockedPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>markLockedPress</code> event of this <code>sap.uxap.ObjectPageHeader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader</code> itself.\n\nThe event is fired when the Locked button is pressed"
				},
				{
					"name": "attachTitleSelectorPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>titleSelectorPress</code> event of this <code>sap.uxap.ObjectPageHeader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader</code> itself.\n\nThe event is fired when the objectPage header title selector (down-arrow) is pressed"
				},
				{
					"name": "destroyActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the actions in the aggregation <code>actions</code>."
				},
				{
					"name": "destroyBreadCrumbsLinks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the breadCrumbsLinks in the aggregation <code>breadCrumbsLinks</code>."
				},
				{
					"name": "destroyNavigationBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the navigationBar in the aggregation <code>navigationBar</code>."
				},
				{
					"name": "destroySideContentButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"description": "Destroys the sideContentButton in the aggregation <code>sideContentButton</code>."
				},
				{
					"name": "detachMarkChangesPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>markChangesPress</code> event of this <code>sap.uxap.ObjectPageHeader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachMarkLockedPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>markLockedPress</code> event of this <code>sap.uxap.ObjectPageHeader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachTitleSelectorPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>titleSelectorPress</code> event of this <code>sap.uxap.ObjectPageHeader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageHeader with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireMarkChangesPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>markChangesPress</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef</code> of type <code>string</code>DOM reference of the changed item's icon to be used for positioning.</li>\n</ul>"
				},
				{
					"name": "fireMarkLockedPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>markLockedPress</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef</code> of type <code>string</code>DOM reference of the lock item's icon to be used for positioning.</li>\n</ul>"
				},
				{
					"name": "fireTitleSelectorPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>titleSelectorPress</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef</code> of type <code>string</code>DOM reference of the title item's icon to be used for positioning.</li>\n</ul>"
				},
				{
					"name": "getActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>actions</code>.\n\nList of actions that will be displayed in the header.\nYou can use ObjectPageHeaderActionButton controls to achieve a different visual representation of the action buttons in the action bar and the action sheet (overflow menu).\nYou can use ObjectPageHeaderLayoutData to display a visual separator."
				},
				{
					"name": "getBreadCrumbsLinks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Link[]"
					},
					"description": "Gets content of aggregation <code>breadCrumbsLinks</code>.\n\nA list of all the active link elements in the BreadCrumbs control."
				},
				{
					"name": "getHeaderDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderDesign",
						"description": "Value of property <code>headerDesign</code>"
					},
					"description": "Gets current value of property <code>headerDesign</code>.\n\nDetermines the design of the header - Light or Dark\n\nDefault value is <code>Light</code>."
				},
				{
					"name": "getIsActionAreaAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isActionAreaAlwaysVisible</code>"
					},
					"description": "Gets current value of property <code>isActionAreaAlwaysVisible</code>.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getIsObjectIconAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isObjectIconAlwaysVisible</code>"
					},
					"description": "Gets current value of property <code>isObjectIconAlwaysVisible</code>.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getIsObjectSubtitleAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isObjectSubtitleAlwaysVisible</code>"
					},
					"description": "Gets current value of property <code>isObjectSubtitleAlwaysVisible</code>.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getIsObjectTitleAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isObjectTitleAlwaysVisible</code>"
					},
					"description": "Gets current value of property <code>isObjectTitleAlwaysVisible</code>.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getMarkChanges",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>markChanges</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>markChanges</code>.\n\nMarks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMarkFavorite",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>markFavorite</code>"
					},
					"description": "Gets current value of property <code>markFavorite</code>.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMarkFlagged",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>markFlagged</code>"
					},
					"description": "Gets current value of property <code>markFlagged</code>.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMarkLocked",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>markLocked</code>"
					},
					"description": "Gets current value of property <code>markLocked</code>.\n\nSet the locked state of the objectPageHeader.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageHeader."
				},
				{
					"name": "getNavigationBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Bar"
					},
					"description": "Gets content of aggregation <code>navigationBar</code>.\n\nAn instance of sap.m.Bar to be embedded in the header"
				},
				{
					"name": "getObjectImageAlt",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>objectImageAlt</code>"
					},
					"description": "Gets current value of property <code>objectImageAlt</code>.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nDefault value is <code></code>."
				},
				{
					"name": "getObjectImageDensityAware",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>objectImageDensityAware</code>"
					},
					"description": "Gets current value of property <code>objectImageDensityAware</code>.\n\nThe value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getObjectImageShape",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderPictureShape",
						"description": "Value of property <code>objectImageShape</code>"
					},
					"description": "Gets current value of property <code>objectImageShape</code>.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nDefault value is <code>Square</code>."
				},
				{
					"name": "getObjectImageURI",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>objectImageURI</code>"
					},
					"description": "Gets current value of property <code>objectImageURI</code>.\n\nThe URL of the image, representing the business object"
				},
				{
					"name": "getObjectSubtitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>objectSubtitle</code>"
					},
					"description": "Gets current value of property <code>objectSubtitle</code>.\n\nThe description of the object"
				},
				{
					"name": "getObjectTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>objectTitle</code>"
					},
					"description": "Gets current value of property <code>objectTitle</code>.\n\nThe title of the object"
				},
				{
					"name": "getShowMarkers",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showMarkers</code>"
					},
					"description": "Gets current value of property <code>showMarkers</code>.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showPlaceholder</code>"
					},
					"description": "Gets current value of property <code>showPlaceholder</code>.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowTitleSelector",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showTitleSelector</code>"
					},
					"description": "Gets current value of property <code>showTitleSelector</code>.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSideContentButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button"
					},
					"since": "1.38.0",
					"description": "Gets content of aggregation <code>sideContentButton</code>.\n\nA button that is used for opening the side content of the page or some additional content."
				},
				{
					"name": "indexOfAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The action whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>actions</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfBreadCrumbLink",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oBreadCrumbLink",
							"type": "sap.m.Link",
							"optional": false,
							"description": "The breadCrumbLink whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.m.Link</code> in the aggregation <code>breadCrumbsLinks</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the action to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the action should be inserted at; for\n             a negative value of <code>iIndex</code>, the action is inserted at position 0; for a value\n             greater than the current size of the aggregation, the action is inserted at\n             the last position"
						}
					],
					"description": "Inserts a action into the aggregation <code>actions</code>."
				},
				{
					"name": "insertBreadCrumbLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBreadCrumbLink",
							"type": "sap.m.Link",
							"optional": false,
							"description": "the breadCrumbLink to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the breadCrumbLink should be inserted at; for\n             a negative value of <code>iIndex</code>, the breadCrumbLink is inserted at position 0; for a value\n             greater than the current size of the aggregation, the breadCrumbLink is inserted at\n             the last position"
						}
					],
					"description": "Inserts a breadCrumbLink into the aggregation <code>breadCrumbsLinks</code>."
				},
				{
					"name": "removeAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed action or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAction",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The actionto remove or its index or id"
						}
					],
					"description": "Removes a action from the aggregation <code>actions</code>."
				},
				{
					"name": "removeAllActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>actions</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllBreadCrumbsLinks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Link[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>breadCrumbsLinks</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeBreadCrumbLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Link",
						"description": "The removed breadCrumbLink or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vBreadCrumbLink",
							"type": "int|string|sap.m.Link",
							"optional": false,
							"description": "The breadCrumbLinkto remove or its index or id"
						}
					],
					"description": "Removes a breadCrumbLink from the aggregation <code>breadCrumbsLinks</code>."
				},
				{
					"name": "setHeaderDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeaderDesign",
							"type": "sap.uxap.ObjectPageHeaderDesign",
							"optional": false,
							"description": "New value for property <code>headerDesign</code>"
						}
					],
					"description": "Sets a new value for property <code>headerDesign</code>.\n\nDetermines the design of the header - Light or Dark\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Light</code>."
				},
				{
					"name": "setIsActionAreaAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsActionAreaAlwaysVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isActionAreaAlwaysVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>isActionAreaAlwaysVisible</code>.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setIsObjectIconAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsObjectIconAlwaysVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isObjectIconAlwaysVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>isObjectIconAlwaysVisible</code>.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setIsObjectSubtitleAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsObjectSubtitleAlwaysVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isObjectSubtitleAlwaysVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>isObjectSubtitleAlwaysVisible</code>.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setIsObjectTitleAlwaysVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsObjectTitleAlwaysVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isObjectTitleAlwaysVisible</code>"
						}
					],
					"description": "Sets a new value for property <code>isObjectTitleAlwaysVisible</code>.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setMarkChanges",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bMarkChanges",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>markChanges</code>"
						}
					],
					"description": "Sets a new value for property <code>markChanges</code>.\n\nMarks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setMarkFavorite",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bMarkFavorite",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>markFavorite</code>"
						}
					],
					"description": "Sets a new value for property <code>markFavorite</code>.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setMarkFlagged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bMarkFlagged",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>markFlagged</code>"
						}
					],
					"description": "Sets a new value for property <code>markFlagged</code>.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setMarkLocked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bMarkLocked",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>markLocked</code>"
						}
					],
					"description": "Sets a new value for property <code>markLocked</code>.\n\nSet the locked state of the objectPageHeader.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setObjectImageAlt",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sObjectImageAlt",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>objectImageAlt</code>"
						}
					],
					"description": "Sets a new value for property <code>objectImageAlt</code>.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setObjectImageDensityAware",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bObjectImageDensityAware",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>objectImageDensityAware</code>"
						}
					],
					"description": "Sets a new value for property <code>objectImageDensityAware</code>.\n\nThe value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setObjectImageShape",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sObjectImageShape",
							"type": "sap.uxap.ObjectPageHeaderPictureShape",
							"optional": false,
							"description": "New value for property <code>objectImageShape</code>"
						}
					],
					"description": "Sets a new value for property <code>objectImageShape</code>.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Square</code>."
				},
				{
					"name": "setObjectImageURI",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sObjectImageURI",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>objectImageURI</code>"
						}
					],
					"description": "Sets a new value for property <code>objectImageURI</code>.\n\nThe URL of the image, representing the business object\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setObjectSubtitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sObjectSubtitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>objectSubtitle</code>"
						}
					],
					"description": "Sets a new value for property <code>objectSubtitle</code>.\n\nThe description of the object\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setShowMarkers",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowMarkers",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showMarkers</code>"
						}
					],
					"description": "Sets a new value for property <code>showMarkers</code>.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowPlaceholder",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowPlaceholder",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showPlaceholder</code>"
						}
					],
					"description": "Sets a new value for property <code>showPlaceholder</code>.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowTitleSelector",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowTitleSelector",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showTitleSelector</code>"
						}
					],
					"description": "Sets a new value for property <code>showTitleSelector</code>.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSideContentButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "oSideContentButton",
							"type": "sap.m.Button",
							"optional": false,
							"description": "The sideContentButton to set"
						}
					],
					"description": "Sets the aggregated <code>sideContentButton</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageHeaderActionButton",
			"basename": "ObjectPageHeaderActionButton",
			"resource": "sap/uxap/ObjectPageHeaderActionButton.js",
			"module": "sap/uxap/ObjectPageHeaderActionButton",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.m.Button",
			"description": "\nButton that can be used in the ObjectPageHeader action aggregation.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "hideText",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Hide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.",
						"methods": [
							"getHideText",
							"setHideText"
						]
					},
					{
						"name": "hideIcon",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Hide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.",
						"methods": [
							"getHideIcon",
							"setHideIcon"
						]
					},
					{
						"name": "importance",
						"type": "sap.uxap.Importance",
						"defaultValue": "library.Importance.High",
						"group": "Behavior",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Determines the order in which the button overflows.",
						"methods": [
							"getImportance",
							"setImportance"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageHeaderActionButton.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageHeaderActionButton with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Button.extend}."
				},
				{
					"name": "getHideIcon",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>hideIcon</code>"
					},
					"description": "Gets current value of property <code>hideIcon</code>.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getHideText",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>hideText</code>"
					},
					"description": "Gets current value of property <code>hideText</code>.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getImportance",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.Importance",
						"description": "Value of property <code>importance</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>importance</code>.\n\nDetermines the order in which the button overflows.\n\nDefault value is <code>library.Importance.High</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageHeaderActionButton."
				},
				{
					"name": "setHideIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderActionButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHideIcon",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>hideIcon</code>"
						}
					],
					"description": "Sets a new value for property <code>hideIcon</code>.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setHideText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderActionButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHideText",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>hideText</code>"
						}
					],
					"description": "Sets a new value for property <code>hideText</code>.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setImportance",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderActionButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sImportance",
							"type": "sap.uxap.Importance",
							"optional": false,
							"description": "New value for property <code>importance</code>"
						}
					],
					"description": "Sets a new value for property <code>importance</code>.\n\nDetermines the order in which the button overflows.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>library.Importance.High</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageHeaderContent",
			"basename": "ObjectPageHeaderContent",
			"resource": "sap/uxap/ObjectPageHeaderContent.js",
			"module": "sap/uxap/ObjectPageHeaderContent",
			"static": true,
			"visibility": "public",
			"since": "1.30",
			"extends": "sap.ui.core.Control",
			"description": "ObjectPageHeaderContent represents the dynamic part of an Object page header. May contain any control.\nUnlike the Object page header title, the Object page header content is part of the scrolling area of the Object page.\nThis enables it to hold any amount of information and still be usable on a mobile device.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "contentDesign",
						"type": "sap.uxap.ObjectPageHeaderDesign",
						"defaultValue": "Light",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the design of the header - Light or Dark",
						"methods": [
							"getContentDesign",
							"setContentDesign"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The list of Objects of type sap.ui.core.Control.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "_editHeaderButton",
						"singularName": "_editHeaderButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal aggregation for the \"Edit Header\" button.",
						"methods": [
							"get_editHeaderButton",
							"destroy_editHeaderButton",
							"set_editHeaderButton"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageHeaderContent.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderContent",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderContent",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageHeaderContent with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nThe list of Objects of type sap.ui.core.Control."
				},
				{
					"name": "getContentDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderDesign",
						"description": "Value of property <code>contentDesign</code>"
					},
					"description": "Gets current value of property <code>contentDesign</code>.\n\nDetermines the design of the header - Light or Dark\n\nDefault value is <code>Light</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageHeaderContent."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderContent",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setContentDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderContent",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContentDesign",
							"type": "sap.uxap.ObjectPageHeaderDesign",
							"optional": false,
							"description": "New value for property <code>contentDesign</code>"
						}
					],
					"description": "Sets a new value for property <code>contentDesign</code>.\n\nDetermines the design of the header - Light or Dark\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Light</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.uxap.ObjectPageHeaderDesign",
			"basename": "ObjectPageHeaderDesign",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "Used by the ObjectPageHeader control to define which design to use.",
			"properties": [
				{
					"name": "Dark",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Dark theme for the ObjectPageHeader."
				},
				{
					"name": "Light",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Light theme for the ObjectPageHeader."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageHeaderLayoutData",
			"basename": "ObjectPageHeaderLayoutData",
			"resource": "sap/uxap/ObjectPageHeaderLayoutData.js",
			"module": "sap/uxap/ObjectPageHeaderLayoutData",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.ui.core.LayoutData",
			"description": "This is a LayoutData Element that can be added to a control if this control is used within an ObjectPage headerContent aggregation",
			"ui5-metadata": {
				"properties": [
					{
						"name": "visibleS",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set the control will be visible (or not) in a small sized layout.",
						"methods": [
							"getVisibleS",
							"setVisibleS"
						]
					},
					{
						"name": "visibleM",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set the control will be visible (or not) in a medium sized layout.",
						"methods": [
							"getVisibleM",
							"setVisibleM"
						]
					},
					{
						"name": "visibleL",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set the control will be visible (or not) in a large sized layout.",
						"methods": [
							"getVisibleL",
							"setVisibleL"
						]
					},
					{
						"name": "showSeparatorBefore",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set the control will display a separator before it.",
						"methods": [
							"getShowSeparatorBefore",
							"setShowSeparatorBefore"
						]
					},
					{
						"name": "showSeparatorAfter",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set the control will display a separator after it.",
						"methods": [
							"getShowSeparatorAfter",
							"setShowSeparatorAfter"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set the control will take the provided size.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageHeaderLayoutData.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageHeaderLayoutData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageHeaderLayoutData."
				},
				{
					"name": "getShowSeparatorAfter",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSeparatorAfter</code>"
					},
					"description": "Gets current value of property <code>showSeparatorAfter</code>.\n\nIf this property is set the control will display a separator after it.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowSeparatorBefore",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSeparatorBefore</code>"
					},
					"description": "Gets current value of property <code>showSeparatorBefore</code>.\n\nIf this property is set the control will display a separator before it.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getVisibleL",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleL</code>"
					},
					"description": "Gets current value of property <code>visibleL</code>.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getVisibleM",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleM</code>"
					},
					"description": "Gets current value of property <code>visibleM</code>.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getVisibleS",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visibleS</code>"
					},
					"description": "Gets current value of property <code>visibleS</code>.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nIf this property is set the control will take the provided size.\n\nDefault value is <code>auto</code>."
				},
				{
					"name": "setShowSeparatorAfter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSeparatorAfter",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSeparatorAfter</code>"
						}
					],
					"description": "Sets a new value for property <code>showSeparatorAfter</code>.\n\nIf this property is set the control will display a separator after it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowSeparatorBefore",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSeparatorBefore",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSeparatorBefore</code>"
						}
					],
					"description": "Sets a new value for property <code>showSeparatorBefore</code>.\n\nIf this property is set the control will display a separator before it.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setVisibleL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisibleL",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visibleL</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleL</code>.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setVisibleM",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisibleM",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visibleM</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleM</code>.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setVisibleS",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisibleS",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visibleS</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleS</code>.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeaderLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nIf this property is set the control will take the provided size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>auto</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.uxap.ObjectPageHeaderPictureShape",
			"basename": "ObjectPageHeaderPictureShape",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "Used by the ObjectPageHeader control to define which shape to use for the image.",
			"properties": [
				{
					"name": "Circle",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Circle shape for the images in the ObjectPageHeader."
				},
				{
					"name": "Square",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Square shape for the images in the ObjectPageHeader."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageLayout",
			"basename": "ObjectPageLayout",
			"resource": "sap/uxap/ObjectPageLayout.js",
			"module": "sap/uxap/ObjectPageLayout",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.ui.core.Control",
			"description": "An ObjectPageLayout is the layout control, used to put together all parts of an Object page - Header, Navigation bar and Sections/Subsections.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "showAnchorBar",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the Navigation bar (Anchor bar) is displayed.",
						"methods": [
							"getShowAnchorBar",
							"setShowAnchorBar"
						]
					},
					{
						"name": "showAnchorBarPopover",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.",
						"methods": [
							"getShowAnchorBarPopover",
							"setShowAnchorBarPopover"
						]
					},
					{
						"name": "upperCaseAnchorBar",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether the Anchor bar items are displayed in upper case.",
						"methods": [
							"getUpperCaseAnchorBar",
							"setUpperCaseAnchorBar"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the height of the ObjectPage.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "enableLazyLoading",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Enable lazy loading for the Object page Subsections.",
						"methods": [
							"getEnableLazyLoading",
							"setEnableLazyLoading"
						]
					},
					{
						"name": "subSectionLayout",
						"type": "sap.uxap.ObjectPageSubSectionLayout",
						"defaultValue": "TitleOnTop",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines whether Subsection titles are displayed on top or to the left of the Subsection content.",
						"methods": [
							"getSubSectionLayout",
							"setSubSectionLayout"
						]
					},
					{
						"name": "useIconTabBar",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Use sap.m.IconTabBar instead of the default Anchor bar",
						"methods": [
							"getUseIconTabBar",
							"setUseIconTabBar"
						]
					},
					{
						"name": "showHeaderContent",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the visibility of the Header content (headerContent aggregation).",
						"methods": [
							"getShowHeaderContent",
							"setShowHeaderContent"
						]
					},
					{
						"name": "useTwoColumnsForLargeScreen",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the to use two column layout for the L screen size.",
						"methods": [
							"getUseTwoColumnsForLargeScreen",
							"setUseTwoColumnsForLargeScreen"
						]
					},
					{
						"name": "showTitleInHeaderContent",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the title, image, markers and selectTitleArrow are shown in the Header content area.",
						"methods": [
							"getShowTitleInHeaderContent",
							"setShowTitleInHeaderContent"
						]
					},
					{
						"name": "showOnlyHighImportance",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.32.0",
						"description": "Determines whether sections and subsections with importance Low and Medium are hidden even on large screens.",
						"methods": [
							"getShowOnlyHighImportance",
							"setShowOnlyHighImportance"
						]
					},
					{
						"name": "isChildPage",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Determines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.",
						"methods": [
							"getIsChildPage",
							"setIsChildPage"
						]
					},
					{
						"name": "alwaysShowContentHeader",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Determines whether Header Content will always be expanded on desktop.",
						"methods": [
							"getAlwaysShowContentHeader",
							"setAlwaysShowContentHeader"
						]
					},
					{
						"name": "showEditHeaderButton",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Determines whether an Edit button will be shown in Header Content.",
						"methods": [
							"getShowEditHeaderButton",
							"setShowEditHeaderButton"
						]
					},
					{
						"name": "flexEnabled",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.34.0",
						"description": "Specifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.",
						"methods": [
							"getFlexEnabled",
							"setFlexEnabled"
						]
					}
				],
				"aggregations": [
					{
						"name": "sections",
						"singularName": "section",
						"type": "sap.uxap.ObjectPageSection",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The sections that make up the Object page content area.",
						"methods": [
							"getSections",
							"destroySections",
							"insertSection",
							"addSection",
							"removeSection",
							"indexOfSection",
							"removeAllSections"
						]
					},
					{
						"name": "headerTitle",
						"singularName": "headerTitle",
						"type": "sap.uxap.ObjectPageHeader",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Object page header title - the upper, always static, part of the Object page header.",
						"methods": [
							"getHeaderTitle",
							"destroyHeaderTitle",
							"setHeaderTitle"
						]
					},
					{
						"name": "headerContent",
						"singularName": "headerContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Object page header content - the dynamic part of the Object page header.",
						"methods": [
							"getHeaderContent",
							"destroyHeaderContent",
							"insertHeaderContent",
							"addHeaderContent",
							"removeHeaderContent",
							"indexOfHeaderContent",
							"removeAllHeaderContent"
						]
					},
					{
						"name": "_anchorBar",
						"singularName": "_anchorBar",
						"type": "sap.uxap.AnchorBar",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal aggregation to hold the reference to the AnchorBar.",
						"methods": [
							"get_anchorBar",
							"destroy_anchorBar",
							"set_anchorBar"
						]
					},
					{
						"name": "_iconTabBar",
						"singularName": "_iconTabBar",
						"type": "sap.m.IconTabBar",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal aggregation to hold the reference to the IconTabBar.",
						"methods": [
							"get_iconTabBar",
							"destroy_iconTabBar",
							"set_iconTabBar"
						]
					},
					{
						"name": "_headerContent",
						"singularName": "_headerContent",
						"type": "sap.uxap.ObjectPageHeaderContent",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal aggregation to hold the reference to the ObjectPageHeaderContent.",
						"methods": [
							"get_headerContent",
							"destroy_headerContent",
							"set_headerContent"
						]
					}
				],
				"defaultAggregation": "sections",
				"events": [
					{
						"name": "toggleAnchorBar",
						"visibility": "public",
						"description": "The event is fired when the Anchor bar is switched from moving to fixed or the other way round.",
						"parameters": {
							"fixed": {
								"name": "fixed",
								"type": "boolean",
								"description": "False indicates that the Anchor bar has just detached from the Header and became part of the scrolling area. True means that the Anchor bar has just snapped to the Header."
							}
						},
						"methods": [
							"attachToggleAnchorBar",
							"detachToggleAnchorBar",
							"fireToggleAnchorBar"
						]
					},
					{
						"name": "editHeaderButtonPress",
						"visibility": "public",
						"description": "The event is fired when the Edit Header button is pressed",
						"methods": [
							"attachEditHeaderButtonPress",
							"detachEditHeaderButtonPress",
							"fireEditHeaderButtonPress"
						]
					},
					{
						"name": "tabSelect",
						"visibility": "public",
						"description": "The event is fired when the selected tab changes.\n<b>Note:</b> Event is fired only when IconTabBar is used for navigation.",
						"parameters": {
							"section": {
								"name": "section",
								"type": "sap.uxap.ObjectPageSection",
								"description": "The selected section object."
							}
						},
						"methods": [
							"attachTabSelect",
							"detachTabSelect",
							"fireTabSelect"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageLayout.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "editHeaderButtonPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the Edit Header button is pressed"
				},
				{
					"name": "tabSelect",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"section": {
											"name": "section",
											"type": "sap.uxap.ObjectPageSection",
											"optional": false,
											"description": "The selected section object."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the selected tab changes.\n<b>Note:</b> Event is fired only when IconTabBar is used for navigation."
				},
				{
					"name": "toggleAnchorBar",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fixed": {
											"name": "fixed",
											"type": "boolean",
											"optional": false,
											"description": "False indicates that the Anchor bar has just detached from the Header and became part of the scrolling area. True means that the Anchor bar has just snapped to the Header."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the Anchor bar is switched from moving to fixed or the other way round."
				}
			],
			"methods": [
				{
					"name": "addHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeaderContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the headerContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some headerContent to the aggregation <code>headerContent</code>."
				},
				{
					"name": "addSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSection",
							"type": "sap.uxap.ObjectPageSection",
							"optional": false,
							"description": "the section to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some section to the aggregation <code>sections</code>."
				},
				{
					"name": "attachEditHeaderButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>editHeaderButtonPress</code> event of this <code>sap.uxap.ObjectPageLayout</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout</code> itself.\n\nThe event is fired when the Edit Header button is pressed"
				},
				{
					"name": "attachTabSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>tabSelect</code> event of this <code>sap.uxap.ObjectPageLayout</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout</code> itself.\n\nThe event is fired when the selected tab changes.\n<b>Note:</b> Event is fired only when IconTabBar is used for navigation."
				},
				{
					"name": "attachToggleAnchorBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>toggleAnchorBar</code> event of this <code>sap.uxap.ObjectPageLayout</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout</code> itself.\n\nThe event is fired when the Anchor bar is switched from moving to fixed or the other way round."
				},
				{
					"name": "destroyHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the headerContent in the aggregation <code>headerContent</code>."
				},
				{
					"name": "destroyHeaderTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the headerTitle in the aggregation <code>headerTitle</code>."
				},
				{
					"name": "destroySections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the sections in the aggregation <code>sections</code>."
				},
				{
					"name": "detachEditHeaderButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>editHeaderButtonPress</code> event of this <code>sap.uxap.ObjectPageLayout</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachTabSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>tabSelect</code> event of this <code>sap.uxap.ObjectPageLayout</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachToggleAnchorBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>toggleAnchorBar</code> event of this <code>sap.uxap.ObjectPageLayout</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageLayout with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireEditHeaderButtonPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>editHeaderButtonPress</code> to attached listeners."
				},
				{
					"name": "fireTabSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>tabSelect</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>section</code> of type <code>sap.uxap.ObjectPageSection</code>The selected section object.</li>\n</ul>"
				},
				{
					"name": "fireToggleAnchorBar",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>toggleAnchorBar</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fixed</code> of type <code>boolean</code>False indicates that the Anchor bar has just detached from the Header and became part of the scrolling area. True means that the Anchor bar has just snapped to the Header.</li>\n</ul>"
				},
				{
					"name": "getAlwaysShowContentHeader",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>alwaysShowContentHeader</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>alwaysShowContentHeader</code>.\n\nDetermines whether Header Content will always be expanded on desktop.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getEnableLazyLoading",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enableLazyLoading</code>"
					},
					"description": "Gets current value of property <code>enableLazyLoading</code>.\n\nEnable lazy loading for the Object page Subsections.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getFlexEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>flexEnabled</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>flexEnabled</code>.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getHeaderTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageHeader"
					},
					"description": "Gets content of aggregation <code>headerTitle</code>.\n\nObject page header title - the upper, always static, part of the Object page header."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nDetermines the height of the ObjectPage.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "getIsChildPage",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isChildPage</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>isChildPage</code>.\n\nDetermines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageLayout."
				},
				{
					"name": "getScrollDelegate",
					"visibility": "public",
					"returnValue": {
						"type": "object"
					},
					"description": "Returns a sap.ui.core.delegate.ScrollEnablement object used to handle scrolling"
				},
				{
					"name": "getScrollingSectionId",
					"visibility": "public",
					"returnValue": {
						"type": "string"
					},
					"description": "Returns the UI5 ID of the Section that is currently being scrolled."
				},
				{
					"name": "getSections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection[]"
					},
					"description": "Gets content of aggregation <code>sections</code>.\n\nThe sections that make up the Object page content area."
				},
				{
					"name": "getShowAnchorBar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showAnchorBar</code>"
					},
					"description": "Gets current value of property <code>showAnchorBar</code>.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowAnchorBarPopover",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showAnchorBarPopover</code>"
					},
					"description": "Gets current value of property <code>showAnchorBarPopover</code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowEditHeaderButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showEditHeaderButton</code>"
					},
					"since": "1.34.0",
					"description": "Gets current value of property <code>showEditHeaderButton</code>.\n\nDetermines whether an Edit button will be shown in Header Content.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showHeaderContent</code>"
					},
					"description": "Gets current value of property <code>showHeaderContent</code>.\n\nDetermines the visibility of the Header content (headerContent aggregation).\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowOnlyHighImportance",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showOnlyHighImportance</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>showOnlyHighImportance</code>.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getShowTitleInHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showTitleInHeaderContent</code>"
					},
					"description": "Gets current value of property <code>showTitleInHeaderContent</code>.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSubSectionLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSectionLayout",
						"description": "Value of property <code>subSectionLayout</code>"
					},
					"description": "Gets current value of property <code>subSectionLayout</code>.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nDefault value is <code>TitleOnTop</code>."
				},
				{
					"name": "getUpperCaseAnchorBar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>upperCaseAnchorBar</code>"
					},
					"description": "Gets current value of property <code>upperCaseAnchorBar</code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getUseIconTabBar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useIconTabBar</code>"
					},
					"description": "Gets current value of property <code>useIconTabBar</code>.\n\nUse sap.m.IconTabBar instead of the default Anchor bar\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getUseTwoColumnsForLargeScreen",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useTwoColumnsForLargeScreen</code>"
					},
					"description": "Gets current value of property <code>useTwoColumnsForLargeScreen</code>.\n\nDetermines whether the to use two column layout for the L screen size.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "indexOfHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oHeaderContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The headerContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>headerContent</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSection",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSection",
							"type": "sap.uxap.ObjectPageSection",
							"optional": false,
							"description": "The section whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.uxap.ObjectPageSection</code> in the aggregation <code>sections</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeaderContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the headerContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the headerContent should be inserted at; for\n             a negative value of <code>iIndex</code>, the headerContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headerContent is inserted at\n             the last position"
						}
					],
					"description": "Inserts a headerContent into the aggregation <code>headerContent</code>."
				},
				{
					"name": "insertSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSection",
							"type": "sap.uxap.ObjectPageSection",
							"optional": false,
							"description": "the section to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the section should be inserted at; for\n             a negative value of <code>iIndex</code>, the section is inserted at position 0; for a value\n             greater than the current size of the aggregation, the section is inserted at\n             the last position"
						}
					],
					"description": "Inserts a section into the aggregation <code>sections</code>."
				},
				{
					"name": "removeAllHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>headerContent</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>sections</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed headerContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vHeaderContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The headerContentto remove or its index or id"
						}
					],
					"description": "Removes a headerContent from the aggregation <code>headerContent</code>."
				},
				{
					"name": "removeSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection",
						"description": "The removed section or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSection",
							"type": "int|string|sap.uxap.ObjectPageSection",
							"optional": false,
							"description": "The sectionto remove or its index or id"
						}
					],
					"description": "Removes a section from the aggregation <code>sections</code>."
				},
				{
					"name": "scrollToSection",
					"visibility": "public",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "The Section ID to scroll to"
						},
						{
							"name": "iDuration",
							"type": "int",
							"optional": false,
							"description": "Scroll duration (in ms). Default value is 0"
						},
						{
							"name": "iOffset",
							"type": "int",
							"optional": false,
							"description": "Additional pixels to scroll"
						}
					],
					"description": "Scrolls the Object page to the given Section."
				},
				{
					"name": "setAlwaysShowContentHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bAlwaysShowContentHeader",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>alwaysShowContentHeader</code>"
						}
					],
					"description": "Sets a new value for property <code>alwaysShowContentHeader</code>.\n\nDetermines whether Header Content will always be expanded on desktop.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setBusy",
					"visibility": "public",
					"parameters": [
						{
							"name": "bBusy",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Overwrite setBusy, because the busyIndicator does not cover the header title,\nbecause the header title has z-index: 2 in order to appear on top of the content"
				},
				{
					"name": "setEnableLazyLoading",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableLazyLoading",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enableLazyLoading</code>"
						}
					],
					"description": "Sets a new value for property <code>enableLazyLoading</code>.\n\nEnable lazy loading for the Object page Subsections.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setFlexEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bFlexEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>flexEnabled</code>"
						}
					],
					"description": "Sets a new value for property <code>flexEnabled</code>.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setHeaderTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeaderTitle",
							"type": "sap.uxap.ObjectPageHeader",
							"optional": false,
							"description": "The headerTitle to set"
						}
					],
					"description": "Sets the aggregated <code>headerTitle</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nDetermines the height of the ObjectPage.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>100%</code>."
				},
				{
					"name": "setIsChildPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bIsChildPage",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isChildPage</code>"
						}
					],
					"description": "Sets a new value for property <code>isChildPage</code>.\n\nDetermines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowAnchorBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowAnchorBar",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showAnchorBar</code>"
						}
					],
					"description": "Sets a new value for property <code>showAnchorBar</code>.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowAnchorBarPopover",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowAnchorBarPopover",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showAnchorBarPopover</code>"
						}
					],
					"description": "Sets a new value for property <code>showAnchorBarPopover</code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowEditHeaderButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bShowEditHeaderButton",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showEditHeaderButton</code>"
						}
					],
					"description": "Sets a new value for property <code>showEditHeaderButton</code>.\n\nDetermines whether an Edit button will be shown in Header Content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowOnlyHighImportance",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "bShowOnlyHighImportance",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showOnlyHighImportance</code>"
						}
					],
					"description": "Sets a new value for property <code>showOnlyHighImportance</code>.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowTitleInHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowTitleInHeaderContent",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showTitleInHeaderContent</code>"
						}
					],
					"description": "Sets a new value for property <code>showTitleInHeaderContent</code>.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSubSectionLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSubSectionLayout",
							"type": "sap.uxap.ObjectPageSubSectionLayout",
							"optional": false,
							"description": "New value for property <code>subSectionLayout</code>"
						}
					],
					"description": "Sets a new value for property <code>subSectionLayout</code>.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>TitleOnTop</code>."
				},
				{
					"name": "setUpperCaseAnchorBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUpperCaseAnchorBar",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>upperCaseAnchorBar</code>"
						}
					],
					"description": "Sets a new value for property <code>upperCaseAnchorBar</code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setUseTwoColumnsForLargeScreen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUseTwoColumnsForLargeScreen",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useTwoColumnsForLargeScreen</code>"
						}
					],
					"description": "Sets a new value for property <code>useTwoColumnsForLargeScreen</code>.\n\nDetermines whether the to use two column layout for the L screen size.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageLazyLoader",
			"basename": "ObjectPageLazyLoader",
			"resource": "sap/uxap/ObjectPageLazyLoader.js",
			"module": "sap/uxap/ObjectPageLazyLoader",
			"static": true,
			"visibility": "public",
			"since": "1.38",
			"extends": "sap.ui.core.Control",
			"description": "ObjectPageLazyLoader is a helper element that enables a \"stashed\"-based lazy loading approach for the content of\nthe sap.uxap.ObjectPageSubSection control. ObjectPageLazyLoader is intended to be used in a declarative way only\n(e.g. in a view) with the \"stashed\" property set to \"true\", and is recommended to be used only once per\nsubsection as its sole content.\n\nObjectPageLazyLoader utilizes UI5's stashing mechanism and is a lightweight alternative to the native block-based\nLazy Loading of the Object Page. Wrapping the content of a subsection in an ObjectPageLazyLoader with \"stashed=true\"\nwill make the said content unstash automatically as the user scrolls.\n\nNote: Subsections are required to have an ID when used with ObjectPageLazyLoader.",
			"ui5-metadata": {
				"stereotype": "control",
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Controls to be displayed after this element is unstashed",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageLazyLoader.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLazyLoader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLazyLoader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageLazyLoader with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\n\nControls to be displayed after this element is unstashed"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageLazyLoader."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageLazyLoader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The contentto remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageSection",
			"basename": "ObjectPageSection",
			"resource": "sap/uxap/ObjectPageSection.js",
			"module": "sap/uxap/ObjectPageSection",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.uxap.ObjectPageSectionBase",
			"description": "\nAn ObjectPageSection is the top-level information container of an Object page. Its purpose is to aggregate Subsections.\nDisclaimer: This control is intended to be used only as part of the Object page layout",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "showTitle",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether to display the Section title or not.",
						"methods": [
							"getShowTitle",
							"setShowTitle"
						]
					},
					{
						"name": "titleUppercase",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the Section title is displayed in upper case.",
						"methods": [
							"getTitleUppercase",
							"setTitleUppercase"
						]
					}
				],
				"aggregations": [
					{
						"name": "subSections",
						"singularName": "subSection",
						"type": "sap.uxap.ObjectPageSubSection",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The list of Subsections.",
						"methods": [
							"getSubSections",
							"destroySubSections",
							"insertSubSection",
							"addSubSection",
							"removeSubSection",
							"indexOfSubSection",
							"removeAllSubSections"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.InvisibleText",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Screen Reader ariaLabelledBy",
						"methods": [
							"getAriaLabelledBy",
							"destroyAriaLabelledBy",
							"setAriaLabelledBy"
						]
					},
					{
						"name": "_showHideAllButton",
						"singularName": "_showHideAllButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_showHideAllButton",
							"destroy_showHideAllButton",
							"set_showHideAllButton"
						]
					},
					{
						"name": "_showHideButton",
						"singularName": "_showHideButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_showHideButton",
							"destroy_showHideButton",
							"set_showHideButton"
						]
					}
				],
				"defaultAggregation": "subSections",
				"associations": [
					{
						"name": "selectedSubSection",
						"singularName": "selectedSubSection",
						"type": "sap.uxap.ObjectPageSubSection",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The most recently selected Subsection by the user.",
						"methods": [
							"getSelectedSubSection",
							"setSelectedSubSection"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageSection.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addSubSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSubSection",
							"type": "sap.uxap.ObjectPageSubSection",
							"optional": false,
							"description": "the subSection to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some subSection to the aggregation <code>subSections</code>."
				},
				{
					"name": "destroySubSections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the subSections in the aggregation <code>subSections</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageSection with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageSection."
				},
				{
					"name": "getSelectedSubSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection"
					},
					"description": "ID of the element which is the current target of the association <code>selectedSubSection</code>, or <code>null</code>."
				},
				{
					"name": "getShowTitle",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showTitle</code>"
					},
					"description": "Gets current value of property <code>showTitle</code>.\n\nDetermines whether to display the Section title or not.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSubSections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection[]"
					},
					"description": "Gets content of aggregation <code>subSections</code>.\n\nThe list of Subsections."
				},
				{
					"name": "getTitleUppercase",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>titleUppercase</code>"
					},
					"description": "Gets current value of property <code>titleUppercase</code>.\n\nDetermines whether the Section title is displayed in upper case.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "indexOfSubSection",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSubSection",
							"type": "sap.uxap.ObjectPageSubSection",
							"optional": false,
							"description": "The subSection whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.uxap.ObjectPageSubSection</code> in the aggregation <code>subSections</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertSubSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSubSection",
							"type": "sap.uxap.ObjectPageSubSection",
							"optional": false,
							"description": "the subSection to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the subSection should be inserted at; for\n             a negative value of <code>iIndex</code>, the subSection is inserted at position 0; for a value\n             greater than the current size of the aggregation, the subSection is inserted at\n             the last position"
						}
					],
					"description": "Inserts a subSection into the aggregation <code>subSections</code>."
				},
				{
					"name": "removeAllSubSections",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>subSections</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeSubSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "The removed subSection or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSubSection",
							"type": "int|string|sap.uxap.ObjectPageSubSection",
							"optional": false,
							"description": "The subSectionto remove or its index or id"
						}
					],
					"description": "Removes a subSection from the aggregation <code>subSections</code>."
				},
				{
					"name": "setSelectedSubSection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSelectedSubSection",
							"type": "sap.uxap.ObjectPageSubSection",
							"optional": false,
							"description": "Id of an element which becomes the new target of this selectedSubSection association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>selectedSubSection</code>."
				},
				{
					"name": "setShowTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowTitle",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showTitle</code>"
						}
					],
					"description": "Sets a new value for property <code>showTitle</code>.\n\nDetermines whether to display the Section title or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setTitleUppercase",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bTitleUppercase",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>titleUppercase</code>"
						}
					],
					"description": "Sets a new value for property <code>titleUppercase</code>.\n\nDetermines whether the Section title is displayed in upper case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageSectionBase",
			"basename": "ObjectPageSectionBase",
			"resource": "sap/uxap/ObjectPageSectionBase.js",
			"module": "sap/uxap/ObjectPageSectionBase",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.ui.core.Control",
			"description": "An abstract container for object page sections and subSections",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Section Title",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Invisible ObjectPageSectionBase are not rendered",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "importance",
						"type": "sap.uxap.Importance",
						"defaultValue": "library.Importance.High",
						"group": "Behavior",
						"visibility": "public",
						"since": "1.32.0",
						"description": "Determines whether the section will be hidden on low resolutions.",
						"methods": [
							"getImportance",
							"setImportance"
						]
					}
				],
				"aggregations": [
					{
						"name": "customAnchorBarButton",
						"singularName": "customAnchorBarButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The custom button that will provide a link to the section in the ObjectPageLayout anchor bar.\nThis button will be used as a custom template to be into the ObjectPageLayout anchorBar area, therefore property changes happening on this button template after the first rendering won't affect the actual button copy used in the anchorBar.\n\nIf you want to change some of the button properties, you would need to bind them to a model.",
						"methods": [
							"getCustomAnchorBarButton",
							"destroyCustomAnchorBarButton",
							"setCustomAnchorBarButton"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageSectionBase.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "connectToModels",
					"visibility": "public",
					"description": "Explicitly ask to connect to the UI5 model tree"
				},
				{
					"name": "destroyCustomAnchorBarButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSectionBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the customAnchorBarButton in the aggregation <code>customAnchorBarButton</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageSectionBase with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getCustomAnchorBarButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button"
					},
					"description": "Gets content of aggregation <code>customAnchorBarButton</code>.\n\nThe custom button that will provide a link to the section in the ObjectPageLayout anchor bar.\nThis button will be used as a custom template to be into the ObjectPageLayout anchorBar area, therefore property changes happening on this button template after the first rendering won't affect the actual button copy used in the anchorBar.\n\nIf you want to change some of the button properties, you would need to bind them to a model."
				},
				{
					"name": "getImportance",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.Importance",
						"description": "Value of property <code>importance</code>"
					},
					"since": "1.32.0",
					"description": "Gets current value of property <code>importance</code>.\n\nDetermines whether the section will be hidden on low resolutions.\n\nDefault value is <code>library.Importance.High</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageSectionBase."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nSection Title"
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\n\nInvisible ObjectPageSectionBase are not rendered\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setCustomAnchorBarButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSectionBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomAnchorBarButton",
							"type": "sap.m.Button",
							"optional": false,
							"description": "The customAnchorBarButton to set"
						}
					],
					"description": "Sets the aggregated <code>customAnchorBarButton</code>."
				},
				{
					"name": "setImportance",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSectionBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sImportance",
							"type": "sap.uxap.Importance",
							"optional": false,
							"description": "New value for property <code>importance</code>"
						}
					],
					"description": "Sets a new value for property <code>importance</code>.\n\nDetermines whether the section will be hidden on low resolutions.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>library.Importance.High</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSectionBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nSection Title\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSectionBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\n\nInvisible ObjectPageSectionBase are not rendered\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.uxap.ObjectPageSubSection",
			"basename": "ObjectPageSubSection",
			"resource": "sap/uxap/ObjectPageSubSection.js",
			"module": "sap/uxap/ObjectPageSubSection",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"extends": "sap.uxap.ObjectPageSectionBase",
			"description": "\nAn ObjectPageSubSection is the second-level information container of an Object page and may only be used within an Object page section.\nSubsections may display primary information in the so called blocks aggregation (always visible)\nand not-so-important information in the moreBlocks aggregation, whose content is initially hidden, but may be accessed via a See more (...) button.\nDisclaimer: This control is intended to be used only as part of the Object page layout",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "mode",
						"type": "sap.uxap.ObjectPageSubSectionMode",
						"defaultValue": "Collapsed",
						"group": "Appearance",
						"visibility": "public",
						"description": "A mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.",
						"methods": [
							"getMode",
							"setMode"
						]
					},
					{
						"name": "titleUppercase",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the Subsection title is displayed in upper case.",
						"methods": [
							"getTitleUppercase",
							"setTitleUppercase"
						]
					}
				],
				"aggregations": [
					{
						"name": "_grid",
						"singularName": "_grid",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal grid aggregation",
						"methods": [
							"get_grid",
							"destroy_grid",
							"set_grid"
						]
					},
					{
						"name": "blocks",
						"singularName": "block",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Controls to be displayed in the subsection",
						"methods": [
							"getBlocks",
							"destroyBlocks",
							"insertBlock",
							"addBlock",
							"removeBlock",
							"indexOfBlock",
							"removeAllBlocks"
						]
					},
					{
						"name": "moreBlocks",
						"singularName": "moreBlock",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Additional controls to display when the Show more / See all / (...) button is pressed",
						"methods": [
							"getMoreBlocks",
							"destroyMoreBlocks",
							"insertMoreBlock",
							"addMoreBlock",
							"removeMoreBlock",
							"indexOfMoreBlock",
							"removeAllMoreBlocks"
						]
					},
					{
						"name": "actions",
						"singularName": "action",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Actions available for this Subsection",
						"methods": [
							"getActions",
							"destroyActions",
							"insertAction",
							"addAction",
							"removeAction",
							"indexOfAction",
							"removeAllActions"
						]
					}
				],
				"defaultAggregation": "blocks"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ObjectPageSubSection.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the action to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some action to the aggregation <code>actions</code>."
				},
				{
					"name": "addBlock",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBlock",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the block to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some block to the aggregation <code>blocks</code>."
				},
				{
					"name": "addMoreBlock",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMoreBlock",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the moreBlock to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some moreBlock to the aggregation <code>moreBlocks</code>."
				},
				{
					"name": "destroyActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the actions in the aggregation <code>actions</code>."
				},
				{
					"name": "destroyBlocks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the blocks in the aggregation <code>blocks</code>."
				},
				{
					"name": "destroyMoreBlocks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the moreBlocks in the aggregation <code>moreBlocks</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.uxap.ObjectPageSubSection with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}."
				},
				{
					"name": "getActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>actions</code>.\n\nActions available for this Subsection"
				},
				{
					"name": "getBlocks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>blocks</code>.\n\nControls to be displayed in the subsection"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.uxap.ObjectPageSubSection."
				},
				{
					"name": "getMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSectionMode",
						"description": "Value of property <code>mode</code>"
					},
					"description": "Gets current value of property <code>mode</code>.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nDefault value is <code>Collapsed</code>."
				},
				{
					"name": "getMoreBlocks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>moreBlocks</code>.\n\nAdditional controls to display when the Show more / See all / (...) button is pressed"
				},
				{
					"name": "getTitleUppercase",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>titleUppercase</code>"
					},
					"description": "Gets current value of property <code>titleUppercase</code>.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "indexOfAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The action whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>actions</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfBlock",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oBlock",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The block whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>blocks</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfMoreBlock",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oMoreBlock",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The moreBlock whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>moreBlocks</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the action to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the action should be inserted at; for\n             a negative value of <code>iIndex</code>, the action is inserted at position 0; for a value\n             greater than the current size of the aggregation, the action is inserted at\n             the last position"
						}
					],
					"description": "Inserts a action into the aggregation <code>actions</code>."
				},
				{
					"name": "insertBlock",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBlock",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the block to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the block should be inserted at; for\n             a negative value of <code>iIndex</code>, the block is inserted at position 0; for a value\n             greater than the current size of the aggregation, the block is inserted at\n             the last position"
						}
					],
					"description": "Inserts a block into the aggregation <code>blocks</code>."
				},
				{
					"name": "insertMoreBlock",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMoreBlock",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the moreBlock to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the moreBlock should be inserted at; for\n             a negative value of <code>iIndex</code>, the moreBlock is inserted at position 0; for a value\n             greater than the current size of the aggregation, the moreBlock is inserted at\n             the last position"
						}
					],
					"description": "Inserts a moreBlock into the aggregation <code>moreBlocks</code>."
				},
				{
					"name": "removeAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed action or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAction",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The actionto remove or its index or id"
						}
					],
					"description": "Removes a action from the aggregation <code>actions</code>."
				},
				{
					"name": "removeAllActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>actions</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllBlocks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>blocks</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllMoreBlocks",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>moreBlocks</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeBlock",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed block or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vBlock",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The blockto remove or its index or id"
						}
					],
					"description": "Removes a block from the aggregation <code>blocks</code>."
				},
				{
					"name": "removeMoreBlock",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed moreBlock or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vMoreBlock",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The moreBlockto remove or its index or id"
						}
					],
					"description": "Removes a moreBlock from the aggregation <code>moreBlocks</code>."
				},
				{
					"name": "setMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMode",
							"type": "sap.uxap.ObjectPageSubSectionMode",
							"optional": false,
							"description": "New value for property <code>mode</code>"
						}
					],
					"description": "Sets a new value for property <code>mode</code>.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Collapsed</code>."
				},
				{
					"name": "setTitleUppercase",
					"visibility": "public",
					"returnValue": {
						"type": "sap.uxap.ObjectPageSubSection",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bTitleUppercase",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>titleUppercase</code>"
						}
					],
					"description": "Sets a new value for property <code>titleUppercase</code>.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.uxap.ObjectPageSubSectionLayout",
			"basename": "ObjectPageSubSectionLayout",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "Used by the ObjectPagSubSection control to define which layout to apply.",
			"properties": [
				{
					"name": "TitleOnLeft",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "TitleOnLeft: title and actions on the left, inside the block area."
				},
				{
					"name": "TitleOnTop",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "TitleOnTop: title and actions on top of the block area."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.uxap.ObjectPageSubSectionMode",
			"basename": "ObjectPageSubSectionMode",
			"resource": "sap/uxap/library.js",
			"module": "sap/uxap/library",
			"static": true,
			"visibility": "public",
			"description": "Used by the ObjectPageLayout control to define which layout to use (either Collapsed or Expanded).",
			"properties": [
				{
					"name": "Collapsed",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Collapsed mode of display of the ObjectPageLayout."
				},
				{
					"name": "Expanded",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Expanded mode of displaying the ObjectPageLayout."
				}
			]
		}
	]
}