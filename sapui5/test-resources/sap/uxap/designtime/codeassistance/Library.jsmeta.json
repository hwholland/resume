{"!name":"sap.uxap","!version":"1.17.0","!define":{"sap.uxap.AnchorBar":{"!description":"Anchor bar is the navigation bar of an Object page. Its purpose is to provide links to all Sections and Subsections. Takes the form of a Select on phone.","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.AnchorBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setShowPopover":{"!description":"Sets a new value for property <code>showPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPopover: Boolean) -> sap.uxap.AnchorBar","parameters":{"bShowPopover":"type: boolean, description: New value for property <code>showPopover<\/code>"}},"!proto":"sap.m.Toolbar","getShowPopover":{"!description":"Gets current value of property <code>showPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setSelectedButton":{"!description":"Sets the associated <code>selectedButton<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedButton: sap.m.Button) -> sap.uxap.AnchorBar","parameters":{"oSelectedButton":"type: sap.m.Button, description: Id of an element which becomes the new target of this selectedButton association; alternatively, an element instance may be given"}},"getUpperCase":{"!description":"Gets current value of property <code>upperCase<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSelectedButton":{"!description":"ID of the element which is the current target of the association <code>selectedButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"extend":{"!description":"Creates a new subclass of class sap.uxap.AnchorBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Toolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new AnchorBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPopover showPopover} : boolean (default: true)<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Toolbar#constructor sap.m.Toolbar}\ncan be used as well.","!module":"sap/uxap/AnchorBar","!helpDescription":"Anchor bar is the navigation bar of an Object page. Its purpose is to provide links to all Sections and Subsections. Takes the form of a Select on phone.","setUpperCase":{"!description":"Sets a new value for property <code>upperCase<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUpperCase: Boolean) -> sap.uxap.AnchorBar","parameters":{"bUpperCase":"type: boolean, description: New value for property <code>upperCase<\/code>"}},"scrollToSection":{"!description":"Scroll to a specific Section.","!static":false,"!category":"function","!type":"fn(sId: String, duration: Number)","parameters":{"duration":"type: int, description: Scroll duration (in ms). Default value is 0","sId":"type: string, description: The Section ID to scroll to"}},"getScrollDelegate":{"!description":"Returns a sap.ui.core.delegate.ScrollEnablement object used to handle scrolling.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.uxap.BlockBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.BlockBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.BlockBase"},"sap.uxap.ObjectPageHeaderLayoutData":{"!description":"This is a LayoutData Element that can be added to a control if this control is used within an ObjectPage headerContent aggregation","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderLayoutData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setVisibleL":{"!description":"Sets a new value for property <code>visibleL<\/code>.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleL: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","parameters":{"bVisibleL":"type: boolean, description: New value for property <code>visibleL<\/code>"}},"getShowSeparatorAfter":{"!description":"Gets current value of property <code>showSeparatorAfter<\/code>.\n\nIf this property is set the control will display a separator after it.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowSeparatorAfter":{"!description":"Sets a new value for property <code>showSeparatorAfter<\/code>.\n\nIf this property is set the control will display a separator after it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSeparatorAfter: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","parameters":{"bShowSeparatorAfter":"type: boolean, description: New value for property <code>showSeparatorAfter<\/code>"}},"setVisibleM":{"!description":"Sets a new value for property <code>visibleM<\/code>.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleM: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","parameters":{"bVisibleM":"type: boolean, description: New value for property <code>visibleM<\/code>"}},"!proto":"sap.ui.core.LayoutData","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nIf this property is set the control will take the provided size.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nIf this property is set the control will take the provided size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.uxap.ObjectPageHeaderLayoutData","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getVisibleS":{"!description":"Gets current value of property <code>visibleS<\/code>.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowSeparatorBefore":{"!description":"Sets a new value for property <code>showSeparatorBefore<\/code>.\n\nIf this property is set the control will display a separator before it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSeparatorBefore: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","parameters":{"bShowSeparatorBefore":"type: boolean, description: New value for property <code>showSeparatorBefore<\/code>"}},"!constructorDescription":"Constructor for a new ObjectPageHeaderLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleS visibleS} : boolean (default: true)<\/li>\n<li>{@link #getVisibleM visibleM} : boolean (default: true)<\/li>\n<li>{@link #getVisibleL visibleL} : boolean (default: true)<\/li>\n<li>{@link #getShowSeparatorBefore showSeparatorBefore} : boolean (default: false)<\/li>\n<li>{@link #getShowSeparatorAfter showSeparatorAfter} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderLayoutData","!helpDescription":"This is a LayoutData Element that can be added to a control if this control is used within an ObjectPage headerContent aggregation","getVisibleL":{"!description":"Gets current value of property <code>visibleL<\/code>.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVisibleM":{"!description":"Gets current value of property <code>visibleM<\/code>.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisibleS":{"!description":"Sets a new value for property <code>visibleS<\/code>.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleS: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","parameters":{"bVisibleS":"type: boolean, description: New value for property <code>visibleS<\/code>"}},"getShowSeparatorBefore":{"!description":"Gets current value of property <code>showSeparatorBefore<\/code>.\n\nIf this property is set the control will display a separator before it.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uxap.ModelMapping_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ModelMapping with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ModelMapping"},"sap.uxap.ObjectPageSectionBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSectionBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSectionBase"},"sap.uxap.ObjectPageSubSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSubSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSubSection"},"sap.uxap.BreadCrumbs_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.BreadCrumbs with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.BreadCrumbs"},"sap.uxap.ObjectPageSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSection"},"sap.uxap.ObjectPageConfigurationMode":{"!description":"Used by the sap.uxap.component.Component how to initialize the ObjectPageLayout sections and subsections.","!module":"sap/uxap/library","JsonModel":{"!description":"Determines the JSON model","!category":"enum","!type":"String"},"!category":"static class","JsonURL":{"!description":"Determines the JSON url","!category":"enum","!type":"String"}},"sap.uxap.ObjectPageSubSectionLayout":{"!description":"Used by the ObjectPagSubSection control to define which layout to apply.","!module":"sap/uxap/library","TitleOnTop":{"!description":"TitleOnTop: title and actions on top of the block area.","!category":"enum","!type":"String"},"!category":"static class","TitleOnLeft":{"!description":"TitleOnLeft: title and actions on the left, inside the block area.","!category":"enum","!type":"String"}},"sap.uxap.ObjectPageLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageLayout"},"sap.uxap.HierarchicalSelect":{"!description":"A select that display items on 2 level of hierarchy.\nIf a provided item has a custom data named \"secondLevel\", then it will be displayed as a second level, otherwise it would be displayed as a first level.","extend":{"!description":"Creates a new subclass of class sap.uxap.HierarchicalSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.HierarchicalSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new HierarchicalSelect.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Select#constructor sap.m.Select}\ncan be used as well.","!module":"sap/uxap/HierarchicalSelect","!helpDescription":"A select that display items on 2 level of hierarchy.\nIf a provided item has a custom data named \"secondLevel\", then it will be displayed as a second level, otherwise it would be displayed as a first level.","setUpperCase":{"!description":"Sets a new value for property <code>upperCase<\/code>.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUpperCase: Boolean) -> sap.uxap.HierarchicalSelect","parameters":{"bUpperCase":"type: boolean, description: New value for property <code>upperCase<\/code>"}},"!proto":"sap.m.Select","!category":"class","getUpperCase":{"!description":"Gets current value of property <code>upperCase<\/code>.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uxap":{"formAdjustment":{"!description":"Determines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.","!category":"enum","!type":"sap.uxap.BlockBaseFormAdjustment"},"autoAdjustWidth":{"!description":"Indicates whether the width of the input field is determined by the selected item's content.","!category":"enum","!type":"Boolean"},"columnLayout":{"!description":"Determines on how columns the layout will be rendered.\nAllowed values are integers from 1 to 4 and \"auto\".","!category":"enum","!type":"sap.uxap.BlockBaseColumnLayout"},"type":{"!description":"Type of a button (e.g. Default, Accept, Reject, Back, etc.)","!category":"enum","!type":"sap.m.ButtonType"},"AnchorBar":"sap.uxap.AnchorBar_obj","iconFirst":{"!description":"If set to true (default), the display sequence is 1. icon 2. control text","!category":"enum","!type":"Boolean"},"Importance":"sap.uxap.Importance","isActionAreaAlwaysVisible":{"!description":"Determines whether the action buttons should always be visible or visible only when the header is snapped.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"showPlaceholder":{"!description":"Enables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.","!category":"enum","!type":"Boolean"},"BlockBaseColumnLayout":"sap.uxap.BlockBaseColumnLayout","text":{"!description":"Button text","!category":"enum","!type":"String"},"height":{"!description":"Determines the height of the ObjectPage.","!category":"enum","!type":"sap.ui.core.CSSSize"},"maxWidth":{"!description":"Sets the maximum width of the control.\n\n<b>Note:<\/b> This property is ignored if the <code>autoAdjustWidth<\/code> property is set to <code>true<\/code>.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"SAP UxAP","active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!category":"enum","!type":"Boolean"},"upperCaseAnchorBar":{"!description":"Determines whether the Anchor bar items are displayed in upper case.","!category":"enum","!type":"Boolean"},"BlockBaseFormAdjustment":"sap.uxap.BlockBaseFormAdjustment","ObjectPageLayout":"sap.uxap.ObjectPageLayout_obj","!module":"sap/uxap/library","internalModelName":{"!description":"Determines the the internal model name.","!category":"enum","!type":"String"},"markChanges":{"!description":"Marks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.","!category":"enum","!type":"Boolean"},"ObjectPageHeaderActionButton":"sap.uxap.ObjectPageHeaderActionButton_obj","isObjectIconAlwaysVisible":{"!description":"Determines whether the icon should always be visible or visible only when the header is snapped.","!category":"enum","!type":"Boolean"},"ObjectPageLazyLoader":"sap.uxap.ObjectPageLazyLoader_obj","forceSelection":{"!description":"Indicates whether the selection is restricted to one of the items in the list.\n<b>Note:<\/b> We strongly recommend that you always set this property to <code>false<\/code> and bind\nthe <code>selectedKey<\/code> property to the desired value for better interoperability with data binding.","!category":"enum","!type":"Boolean"},"isObjectSubtitleAlwaysVisible":{"!description":"Determines whether the subtitle should always be visible or visible only when the header is snapped.","!category":"enum","!type":"Boolean"},"useIconTabBar":{"!description":"Use sap.m.IconTabBar instead of the default Anchor bar","!category":"enum","!type":"Boolean"},"icon":{"!description":"Icon to be displayed as graphical element within the button. This can be an image or an icon from the icon font.","!category":"enum","!type":"sap.ui.core.URI"},"showPopover":{"!description":"Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.","!category":"enum","!type":"Boolean"},"visibleS":{"!description":"If this property is set the control will be visible (or not) in a small sized layout.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings","!category":"enum","!type":"Boolean"},"isChildPage":{"!description":"Determines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.","!category":"enum","!type":"Boolean"},"activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!category":"enum","!type":"sap.ui.core.URI"},"ObjectPageSubSectionMode":"sap.uxap.ObjectPageSubSectionMode","objectImageURI":{"!description":"The URL of the image, representing the business object","!category":"enum","!type":"String"},"ObjectPageHeaderDesign":"sap.uxap.ObjectPageHeaderDesign","markFlagged":{"!description":"Set the flagged state to true or false. The showMarkers property must be true for this property to take effect.","!category":"enum","!type":"Boolean"},"HierarchicalSelect":"sap.uxap.HierarchicalSelect_obj","showHeaderContent":{"!description":"Determines the visibility of the Header content (headerContent aggregation).","!category":"enum","!type":"Boolean"},"objectTitle":{"!description":"The title of the object","!category":"enum","!type":"String"},"ObjectPageConfigurationMode":"sap.uxap.ObjectPageConfigurationMode","BreadCrumbs":"sap.uxap.BreadCrumbs_obj","ObjectPageSection":"sap.uxap.ObjectPageSection_obj","ObjectPageHeaderContent":"sap.uxap.ObjectPageHeaderContent_obj","visibleL":{"!description":"If this property is set the control will be visible (or not) in a large sized layout.","!category":"enum","!type":"Boolean"},"visibleM":{"!description":"If this property is set the control will be visible (or not) in a medium sized layout.","!category":"enum","!type":"Boolean"},"width":{"!description":"If this property is set the control will take the provided size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"ObjectPageHeader":"sap.uxap.ObjectPageHeader_obj","ObjectPageHeaderPictureShape":"sap.uxap.ObjectPageHeaderPictureShape","showTitleSelector":{"!description":"When set to true, the selector arrow icon/image is shown and can be pressed.","!category":"enum","!type":"Boolean"},"enableLazyLoading":{"!description":"Enable lazy loading for the Object page Subsections.","!category":"enum","!type":"Boolean"},"showOnlyHighImportance":{"!description":"Determines whether sections and subsections with importance Low and Medium are hidden even on large screens.","!category":"enum","!type":"Boolean"},"showEditHeaderButton":{"!description":"Determines whether an Edit button will be shown in Header Content.","!category":"enum","!type":"Boolean"},"ObjectPageHeaderLayoutData":"sap.uxap.ObjectPageHeaderLayoutData_obj","headerDesign":{"!description":"Determines the design of the header - Light or Dark","!category":"enum","!type":"sap.uxap.ObjectPageHeaderDesign"},"objectImageAlt":{"!description":"The text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property","!category":"enum","!type":"String"},"mode":{"!description":"A mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.","!category":"enum","!type":"sap.uxap.ObjectPageSubSectionMode"},"showMarkers":{"!description":"Indicates if object page header title supports showing markers such as flagged and favorite.","!category":"enum","!type":"Boolean"},"objectImageShape":{"!description":"Determines whether the picture should be displayed in a square or with a circle-shaped mask.","!category":"enum","!type":"sap.uxap.ObjectPageHeaderPictureShape"},"markLocked":{"!description":"Set the locked state of the objectPageHeader.","!category":"enum","!type":"Boolean"},"markFavorite":{"!description":"Set the favorite state to true or false. The showMarkers property must be true for this property to take effect.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Invisible ObjectPageSectionBase are not rendered","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Sets the horizontal alignment of the text within the input field.","!category":"enum","!type":"sap.ui.core.TextAlign"},"titleUppercase":{"!description":"Determines whether the Subsection title is displayed in upper case.","!category":"enum","!type":"Boolean"},"isObjectTitleAlwaysVisible":{"!description":"Determines whether the title should always be visible or visible only when the header is snapped.","!category":"enum","!type":"Boolean"},"BlockBase":"sap.uxap.BlockBase_obj","showTitleInHeaderContent":{"!description":"Determines whether the title, image, markers and selectTitleArrow are shown in the Header content area.","!category":"enum","!type":"Boolean"},"!helpDescription":"SAP UxAP","ObjectPageSubSection":"sap.uxap.ObjectPageSubSection_obj","upperCase":{"!description":"Determines whether the HierarchicalSelect items are displayed in upper case.","!category":"enum","!type":"Boolean"},"showTitle":{"!description":"Determines whether to display the Section title or not.","!category":"enum","!type":"Boolean"},"contentDesign":{"!description":"Determines the design of the header - Light or Dark","!category":"enum","!type":"sap.uxap.ObjectPageHeaderDesign"},"name":{"!description":"The name to be used in the HTML code (for example, for HTML forms that send data to the server via submit).","!category":"enum","!type":"String"},"showSeparatorBefore":{"!description":"If this property is set the control will display a separator before it.","!category":"enum","!type":"Boolean"},"iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!category":"enum","!type":"Boolean"},"importance":{"!description":"Determines whether the section will be hidden on low resolutions.","!category":"enum","!type":"sap.uxap.Importance"},"!category":"namespace","hideText":{"!description":"Hide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.","!category":"enum","!type":"Boolean"},"title":{"!description":"Section Title","!category":"enum","!type":"String"},"textDirection":{"!description":"This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"alwaysShowContentHeader":{"!description":"Determines whether Header Content will always be expanded on desktop.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"design":{"!description":"Defines the toolbar design.\nNote: Design settings are theme-dependent. They also determine the default height of the toolbar.","!category":"enum","!type":"sap.m.ToolbarDesign"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"showSeparatorAfter":{"!description":"If this property is set the control will display a separator after it.","!category":"enum","!type":"Boolean"},"selectedItemId":{"!description":"ID of the selected item.","!category":"enum","!type":"String"},"selectedKey":{"!description":"Key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!category":"enum","!type":"String"},"useTwoColumnsForLargeScreen":{"!description":"Determines whether the to use two column layout for the L screen size.","!category":"enum","!type":"Boolean"},"hideIcon":{"!description":"Hide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.","!category":"enum","!type":"Boolean"},"showCurrentLocation":{"!description":"Sets the visibility of the current/last element in the BreadCrumbs path.","!category":"enum","!type":"Boolean"},"showAnchorBar":{"!description":"Determines whether the Navigation bar (Anchor bar) is displayed.","!category":"enum","!type":"Boolean"},"flexEnabled":{"!description":"Specifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.","!category":"enum","!type":"Boolean"},"showSubSectionMore":{"!description":"Determines whether the show more button should be shown.","!category":"enum","!type":"Boolean"},"showAnchorBarPopover":{"!description":"Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.","!category":"enum","!type":"Boolean"},"ModelMapping":"sap.uxap.ModelMapping_obj","subSectionLayout":{"!description":"Determines whether Subsection titles are displayed on top or to the left of the Subsection content.","!category":"enum","!type":"sap.uxap.ObjectPageSubSectionLayout"},"externalModelName":{"!description":"Determines the the external model name.","!category":"enum","!type":"String"},"ObjectPageSectionBase":"sap.uxap.ObjectPageSectionBase_obj","externalPath":{"!description":"Determines the the external path.","!category":"enum","!type":"String"},"ObjectPageSubSectionLayout":"sap.uxap.ObjectPageSubSectionLayout","objectSubtitle":{"!description":"The description of the object","!category":"enum","!type":"String"},"objectImageDensityAware":{"!description":"The value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.","!category":"enum","!type":"Boolean"}},"sap.uxap.ObjectPageLazyLoader_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLazyLoader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageLazyLoader"},"sap.uxap.AnchorBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.AnchorBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Toolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.AnchorBar"},"sap.uxap.ObjectPageSection":{"!description":"\nAn ObjectPageSection is the top-level information container of an Object page. Its purpose is to aggregate Subsections.\nDisclaimer: This control is intended to be used only as part of the Object page layout","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSection.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertSubSection":{"!description":"Inserts a subSection into the aggregation <code>subSections<\/code>.","!static":false,"!category":"function","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection, iIndex: Number) -> sap.uxap.ObjectPageSection","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the subSection should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the subSection is inserted at position 0; for a value\n             greater than the current size of the aggregation, the subSection is inserted at\n             the last position","oSubSection":"type: sap.uxap.ObjectPageSubSection, description: the subSection to insert; if empty, nothing is inserted"}},"!proto":"sap.uxap.ObjectPageSectionBase","getSubSections":{"!description":"Gets content of aggregation <code>subSections<\/code>.\n\nThe list of Subsections.","!static":false,"!category":"function","!type":"fn() -> [sap.uxap.ObjectPageSubSection]"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ObjectPageSection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowTitle showTitle} : boolean (default: true)<\/li>\n<li>{@link #getTitleUppercase titleUppercase} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubSections subSections} : sap.uxap.ObjectPageSubSection[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.uxap.ObjectPageSectionBase#constructor sap.uxap.ObjectPageSectionBase}\ncan be used as well.","getSelectedSubSection":{"!description":"ID of the element which is the current target of the association <code>selectedSubSection<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSubSection"},"indexOfSubSection":{"!description":"Checks for the provided <code>sap.uxap.ObjectPageSubSection<\/code> in the aggregation <code>subSections<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection) -> Number","parameters":{"oSubSection":"type: sap.uxap.ObjectPageSubSection, description: The subSection whose index is looked for"}},"setSelectedSubSection":{"!description":"Sets the associated <code>selectedSubSection<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedSubSection: sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSection","parameters":{"oSelectedSubSection":"type: sap.uxap.ObjectPageSubSection, description: Id of an element which becomes the new target of this selectedSubSection association; alternatively, an element instance may be given"}},"!module":"sap/uxap/ObjectPageSection","!helpDescription":"\nAn ObjectPageSection is the top-level information container of an Object page. Its purpose is to aggregate Subsections.\nDisclaimer: This control is intended to be used only as part of the Object page layout","destroySubSections":{"!description":"Destroys all the subSections in the aggregation <code>subSections<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSection"},"addSubSection":{"!description":"Adds some subSection to the aggregation <code>subSections<\/code>.","!static":false,"!category":"function","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSection","parameters":{"oSubSection":"type: sap.uxap.ObjectPageSubSection, description: the subSection to add; if empty, nothing is inserted"}},"setShowTitle":{"!description":"Sets a new value for property <code>showTitle<\/code>.\n\nDetermines whether to display the Section title or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTitle: Boolean) -> sap.uxap.ObjectPageSection","parameters":{"bShowTitle":"type: boolean, description: New value for property <code>showTitle<\/code>"}},"setTitleUppercase":{"!description":"Sets a new value for property <code>titleUppercase<\/code>.\n\nDetermines whether the Section title is displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bTitleUppercase: Boolean) -> sap.uxap.ObjectPageSection","parameters":{"bTitleUppercase":"type: boolean, description: New value for property <code>titleUppercase<\/code>"}},"removeAllSubSections":{"!description":"Removes all the controls from the aggregation <code>subSections<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.uxap.ObjectPageSubSection]"},"removeSubSection":{"!description":"Removes a subSection from the aggregation <code>subSections<\/code>.","!static":false,"!category":"function","!type":"fn(vSubSection: Number | String | sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSubSection","parameters":{"vSubSection":"type: int|string|sap.uxap.ObjectPageSubSection, description: The subSectionto remove or its index or id"}},"getTitleUppercase":{"!description":"Gets current value of property <code>titleUppercase<\/code>.\n\nDetermines whether the Section title is displayed in upper case.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowTitle":{"!description":"Gets current value of property <code>showTitle<\/code>.\n\nDetermines whether to display the Section title or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uxap.BlockBaseColumnLayout":{"!description":"Used by the BlockBase control to define how many columns should it be assigned by the objectPageSubSection.\n    The allowed values can be auto (subsection assigned a number of columns based on the parent objectPageLayout subsectionLayout property), 1, 2 or 3\n    (This may not be a valid value for some subSectionLayout, for example asking for 3 columns in a 2 column layout would raise warnings).","!module":"sap/uxap/library","!helpDescription":"Used by the BlockBase control to define how many columns should it be assigned by the objectPageSubSection.\n    The allowed values can be auto (subsection assigned a number of columns based on the parent objectPageLayout subsectionLayout property), 1, 2 or 3\n    (This may not be a valid value for some subSectionLayout, for example asking for 3 columns in a 2 column layout would raise warnings).","!category":"namespace"},"sap.uxap.HierarchicalSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.HierarchicalSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.HierarchicalSelect"},"sap":{"sap":"sap","uxap":"sap.uxap","!category":"namespace"},"sap.uxap.BreadCrumbs":{"!description":"\nThe BreadCrumbs control represents the navigation steps up to the current location in the application and allows\nthe user to quickly navigate to a previous location on the path that got him to the current location.\nIt has two main modes of operation. One is a trail of links followed by separators (when there's enough space\nfor the control to fit on one line), and the other is a dropdown list with the links (when the trail of links\nwouldn't fit on one line).","insertLink":{"!description":"Inserts a link into the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn(oLink: sap.m.Link, iIndex: Number) -> sap.uxap.BreadCrumbs","parameters":{"oLink":"type: sap.m.Link, description: the link to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the link should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the link is inserted at position 0; for a value\n             greater than the current size of the aggregation, the link is inserted at\n             the last position"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.BreadCrumbs.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLinks":{"!description":"Gets content of aggregation <code>links<\/code>.\n\nA list of all the active link elements in the BreadCrumbs control.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Link]"},"setShowCurrentLocation":{"!description":"Sets a new value for property <code>showCurrentLocation<\/code>.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCurrentLocation: Boolean) -> sap.uxap.BreadCrumbs","parameters":{"bShowCurrentLocation":"type: boolean, description: New value for property <code>showCurrentLocation<\/code>"}},"!proto":"sap.ui.core.Control","indexOfLink":{"!description":"Checks for the provided <code>sap.m.Link<\/code> in the aggregation <code>links<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oLink: sap.m.Link) -> Number","parameters":{"oLink":"type: sap.m.Link, description: The link whose index is looked for"}},"removeAllLinks":{"!description":"Removes all the controls from the aggregation <code>links<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Link]"},"removeLink":{"!description":"Removes a link from the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn(vLink: Number | String | sap.m.Link) -> sap.m.Link","parameters":{"vLink":"type: int|string|sap.m.Link, description: The linkto remove or its index or id"}},"!category":"class","destroyLinks":{"!description":"Destroys all the links in the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.BreadCrumbs"},"extend":{"!description":"Creates a new subclass of class sap.uxap.BreadCrumbs with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new BreadCrumbs.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowCurrentLocation showCurrentLocation} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLinks links} : sap.m.Link[] (default)<\/li>\n<li>{@link #getCurrentLocation currentLocation} : sap.m.Text<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/BreadCrumbs","!helpDescription":"\nThe BreadCrumbs control represents the navigation steps up to the current location in the application and allows\nthe user to quickly navigate to a previous location on the path that got him to the current location.\nIt has two main modes of operation. One is a trail of links followed by separators (when there's enough space\nfor the control to fit on one line), and the other is a dropdown list with the links (when the trail of links\nwouldn't fit on one line).","destroyCurrentLocation":{"!description":"Destroys the currentLocation in the aggregation <code>currentLocation<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.BreadCrumbs"},"setCurrentLocation":{"!description":"Sets the aggregated <code>currentLocation<\/code>.","!static":false,"!category":"function","!type":"fn(oCurrentLocation: sap.m.Text) -> sap.uxap.BreadCrumbs","parameters":{"oCurrentLocation":"type: sap.m.Text, description: The currentLocation to set"}},"getCurrentLocation":{"!description":"Gets content of aggregation <code>currentLocation<\/code>.\n\nThe current/last element in the BreadCrumbs path.","!static":false,"!category":"function","!type":"fn() -> sap.m.Text"},"addLink":{"!description":"Adds some link to the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn(oLink: sap.m.Link) -> sap.uxap.BreadCrumbs","parameters":{"oLink":"type: sap.m.Link, description: the link to add; if empty, nothing is inserted"}},"getShowCurrentLocation":{"!description":"Gets current value of property <code>showCurrentLocation<\/code>.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uxap.ObjectPageSectionBase":{"!description":"An abstract container for object page sections and subSections","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible ObjectPageSectionBase are not rendered\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.uxap.ObjectPageSectionBase","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"setImportance":{"!description":"Sets a new value for property <code>importance<\/code>.\n\nDetermines whether the section will be hidden on low resolutions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>library.Importance.High<\/code>.","!static":false,"!category":"function","!type":"fn(sImportance: sap.uxap.Importance) -> sap.uxap.ObjectPageSectionBase","parameters":{"sImportance":"type: sap.uxap.Importance, description: New value for property <code>importance<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSectionBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible ObjectPageSectionBase are not rendered\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCustomAnchorBarButton":{"!description":"Sets the aggregated <code>customAnchorBarButton<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomAnchorBarButton: sap.m.Button) -> sap.uxap.ObjectPageSectionBase","parameters":{"oCustomAnchorBarButton":"type: sap.m.Button, description: The customAnchorBarButton to set"}},"getCustomAnchorBarButton":{"!description":"Gets content of aggregation <code>customAnchorBarButton<\/code>.\n\nThe custom button that will provide a link to the section in the ObjectPageLayout anchor bar.\nThis button will be used as a custom template to be into the ObjectPageLayout anchorBar area, therefore property changes happening on this button template after the first rendering won't affect the actual button copy used in the anchorBar.\n\nIf you want to change some of the button properties, you would need to bind them to a model.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"!proto":"sap.ui.core.Control","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nSection Title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.uxap.ObjectPageSectionBase","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","destroyCustomAnchorBarButton":{"!description":"Destroys the customAnchorBarButton in the aggregation <code>customAnchorBarButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSectionBase"},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSectionBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ObjectPageSectionBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getImportance importance} : sap.uxap.Importance (default: library.Importance.High)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomAnchorBarButton customAnchorBarButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nSection Title","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/uxap/ObjectPageSectionBase","!helpDescription":"An abstract container for object page sections and subSections","getImportance":{"!description":"Gets current value of property <code>importance<\/code>.\n\nDetermines whether the section will be hidden on low resolutions.\n\nDefault value is <code>library.Importance.High<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.Importance"},"connectToModels":{"!description":"Explicitly ask to connect to the UI5 model tree","!static":false,"!category":"function","!type":"fn()"}},"sap.uxap.ObjectPageHeaderContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderContent"},"sap.uxap.BlockBase":{"addMapping":{"!description":"Adds some mapping to the aggregation <code>mappings<\/code>.","!static":false,"!category":"function","!type":"fn(oMapping: sap.uxap.ModelMapping) -> sap.uxap.BlockBase","parameters":{"oMapping":"type: sap.uxap.ModelMapping, description: the mapping to add; if empty, nothing is inserted"}},"setColumnLayout":{"!description":"Set the column layout for this particular block.","!static":false,"!category":"function","!type":"fn(sLayout: String)","parameters":{"sLayout":"type: string, description: The column layout to apply to the control"}},"removeMapping":{"!description":"Removes a mapping from the aggregation <code>mappings<\/code>.","!static":false,"!category":"function","!type":"fn(vMapping: Number | String | sap.uxap.ModelMapping) -> sap.uxap.ModelMapping","parameters":{"vMapping":"type: int|string|sap.uxap.ModelMapping, description: The mappingto remove or its index or id"}},"!proto":"sap.ui.core.Control","getColumnLayout":{"!description":"Gets current value of property <code>columnLayout<\/code>.\n\nDetermines on how columns the layout will be rendered.\nAllowed values are integers from 1 to 4 and \"auto\".\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.BlockBaseColumnLayout"},"!category":"class","setSelectedView":{"!description":"Sets the associated <code>selectedView<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedView: sap.ui.core.Control) -> sap.uxap.BlockBase","parameters":{"oSelectedView":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this selectedView association; alternatively, an element instance may be given"}},"indexOfMapping":{"!description":"Checks for the provided <code>sap.uxap.ModelMapping<\/code> in the aggregation <code>mappings<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMapping: sap.uxap.ModelMapping) -> Number","parameters":{"oMapping":"type: sap.uxap.ModelMapping, description: The mapping whose index is looked for"}},"!constructorDescription":"Constructor for a new BlockBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getColumnLayout columnLayout} : sap.uxap.BlockBaseColumnLayout (default: auto)<\/li>\n<li>{@link #getFormAdjustment formAdjustment} : sap.uxap.BlockBaseFormAdjustment (default: BlockColumns)<\/li>\n<li>{@link #getShowSubSectionMore showSubSectionMore} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMappings mappings} : sap.uxap.ModelMapping[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getShowSubSectionMore":{"!description":"Gets current value of property <code>showSubSectionMore<\/code>.\n\nDetermines whether the show more button should be shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDetermines the mode of the block.\nWhen block is used inside ObjectPage this mode is inherited my the SubSection.\nThe mode of the block is changed when SubSection mode changes.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"\nA block is the main element that will be displayed, mainly in an object page, but not necessarily\nonly there.\n\nA block is a control that use a XML view for storing its internal control tree.\nA block is a control that has modes and a view associated to each modes.\nAt rendering time, the view associated to the mode is rendered.\n\n<b>Note:<\/b> The control supports only XML views.\n\nAs any UI5 views, the XML view can have a controller which automatically comes a this.oParentBlock attribute (so that the controller can interacts with the block).\nIf the controller implements the onParentBlockModeChange method, this method will get called with the sMode parameter when the view is used or re-used by the block.","setVisible":{"!description":"Setter for the visibility of the block.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.BlockBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllMappings":{"!description":"Removes all the controls from the aggregation <code>mappings<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.uxap.ModelMapping]"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nDetermines the visibility of the block.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMode":{"!description":"Set the view mode for this particular block.","!static":false,"!category":"function","!type":"fn(sMode: String) -> *","parameters":{"sMode":"type: string, description: the mode to apply to the control (that should be synchronized with view declared)"}},"getMappings":{"!description":"Gets content of aggregation <code>mappings<\/code>.\n\nMap external UI5 model and internal Block model","!static":false,"!category":"function","!type":"fn() -> [sap.uxap.ModelMapping]"},"getFormAdjustment":{"!description":"Gets current value of property <code>formAdjustment<\/code>.\n\nDetermines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nDefault value is <code>BlockColumns<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.BlockBaseFormAdjustment"},"extend":{"!description":"Creates a new subclass of class sap.uxap.BlockBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setFormAdjustment":{"!description":"Sets a new value for property <code>formAdjustment<\/code>.\n\nDetermines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>BlockColumns<\/code>.","!static":false,"!category":"function","!type":"fn(sFormAdjustment: sap.uxap.BlockBaseFormAdjustment) -> sap.uxap.BlockBase","parameters":{"sFormAdjustment":"type: sap.uxap.BlockBaseFormAdjustment, description: New value for property <code>formAdjustment<\/code>"}},"!module":"sap/uxap/BlockBase","!helpDescription":"\nA block is the main element that will be displayed, mainly in an object page, but not necessarily\nonly there.\n\nA block is a control that use a XML view for storing its internal control tree.\nA block is a control that has modes and a view associated to each modes.\nAt rendering time, the view associated to the mode is rendered.\n\n<b>Note:<\/b> The control supports only XML views.\n\nAs any UI5 views, the XML view can have a controller which automatically comes a this.oParentBlock attribute (so that the controller can interacts with the block).\nIf the controller implements the onParentBlockModeChange method, this method will get called with the sMode parameter when the view is used or re-used by the block.","destroyMappings":{"!description":"Destroys all the mappings in the aggregation <code>mappings<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.BlockBase"},"getSelectedView":{"!description":"ID of the element which is the current target of the association <code>selectedView<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"insertMapping":{"!description":"Inserts a mapping into the aggregation <code>mappings<\/code>.","!static":false,"!category":"function","!type":"fn(oMapping: sap.uxap.ModelMapping, iIndex: Number) -> sap.uxap.BlockBase","parameters":{"oMapping":"type: sap.uxap.ModelMapping, description: the mapping to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the mapping should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the mapping is inserted at position 0; for a value\n             greater than the current size of the aggregation, the mapping is inserted at\n             the last position"}}},"sap.uxap.ObjectPageHeaderLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderLayoutData"},"sap.uxap.ObjectPageSubSectionMode":{"!description":"Used by the ObjectPageLayout control to define which layout to use (either Collapsed or Expanded).","!module":"sap/uxap/library","Collapsed":{"!description":"Collapsed mode of display of the ObjectPageLayout.","!category":"enum","!type":"String"},"!category":"static class","Expanded":{"!description":"Expanded mode of displaying the ObjectPageLayout.","!category":"enum","!type":"String"}},"sap.uxap.ObjectPageHeaderContent":{"!description":"ObjectPageHeaderContent represents the dynamic part of an Object page header. May contain any control.\nUnlike the Object page header title, the Object page header content is part of the scrolling area of the Object page.\nThis enables it to hold any amount of information and still be usable on a mobile device.","getContentDesign":{"!description":"Gets current value of property <code>contentDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nDefault value is <code>Light<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeaderDesign"},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContentDesign":{"!description":"Sets a new value for property <code>contentDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Light<\/code>.","!static":false,"!category":"function","!type":"fn(sContentDesign: sap.uxap.ObjectPageHeaderDesign) -> sap.uxap.ObjectPageHeaderContent","parameters":{"sContentDesign":"type: sap.uxap.ObjectPageHeaderDesign, description: New value for property <code>contentDesign<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe list of Objects of type sap.ui.core.Control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.uxap.ObjectPageHeaderContent","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ObjectPageHeaderContent.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentDesign contentDesign} : sap.uxap.ObjectPageHeaderDesign (default: Light)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderContent","!helpDescription":"ObjectPageHeaderContent represents the dynamic part of an Object page header. May contain any control.\nUnlike the Object page header title, the Object page header content is part of the scrolling area of the Object page.\nThis enables it to hold any amount of information and still be usable on a mobile device.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageHeaderContent","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeaderContent"}},"sap.uxap.BlockBaseFormAdjustment":{"!description":"Used by the BlockBase control to define if it should do automatic adjustment of its nested forms.","!module":"sap/uxap/library","OneColumn":{"!description":"Any form within the block will be automatically adjusted to have only one column.","!category":"enum","!type":"String"},"BlockColumns":{"!description":"Any form within the block will be automatically adjusted to have as many columns as the colspan of its parent block.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"No automatic adjustment of forms.","!category":"enum","!type":"String"}},"sap.uxap.ObjectPageHeaderActionButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderActionButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderActionButton"},"sap.uxap.Importance":{"!description":"Used by the ObjectSectionBase control to define the importance of the content contained in it.","High":{"!description":"High importance of the content","!category":"enum","!type":"String"},"!module":"sap/uxap/library","Low":{"!description":"Low importance of the content","!category":"enum","!type":"String"},"Medium":{"!description":"Medium importance of the content","!category":"enum","!type":"String"},"!category":"static class"},"sap.uxap.ObjectPageLayout":{"getUpperCaseAnchorBar":{"!description":"Gets current value of property <code>upperCaseAnchorBar<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowTitleInHeaderContent":{"!description":"Gets current value of property <code>showTitleInHeaderContent<\/code>.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowHeaderContent":{"!description":"Gets current value of property <code>showHeaderContent<\/code>.\n\nDetermines the visibility of the Header content (headerContent aggregation).\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowAnchorBarPopover":{"!description":"Sets a new value for property <code>showAnchorBarPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAnchorBarPopover: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bShowAnchorBarPopover":"type: boolean, description: New value for property <code>showAnchorBarPopover<\/code>"}},"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageLayout"},"attachEditHeaderButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>editHeaderButtonPress<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the Edit Header button is pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowOnlyHighImportance":{"!description":"Sets a new value for property <code>showOnlyHighImportance<\/code>.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowOnlyHighImportance: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bShowOnlyHighImportance":"type: boolean, description: New value for property <code>showOnlyHighImportance<\/code>"}},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> sap.uxap.ObjectPageLayout","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: the headerContent to add; if empty, nothing is inserted"}},"indexOfSection":{"!description":"Checks for the provided <code>sap.uxap.ObjectPageSection<\/code> in the aggregation <code>sections<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSection: sap.uxap.ObjectPageSection) -> Number","parameters":{"oSection":"type: sap.uxap.ObjectPageSection, description: The section whose index is looked for"}},"setEnableLazyLoading":{"!description":"Sets a new value for property <code>enableLazyLoading<\/code>.\n\nEnable lazy loading for the Object page Subsections.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableLazyLoading: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bEnableLazyLoading":"type: boolean, description: New value for property <code>enableLazyLoading<\/code>"}},"getFlexEnabled":{"!description":"Gets current value of property <code>flexEnabled<\/code>.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertSection":{"!description":"Inserts a section into the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn(oSection: sap.uxap.ObjectPageSection, iIndex: Number) -> sap.uxap.ObjectPageLayout","parameters":{"oSection":"type: sap.uxap.ObjectPageSection, description: the section to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the section should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the section is inserted at position 0; for a value\n             greater than the current size of the aggregation, the section is inserted at\n             the last position"}},"!description":"An ObjectPageLayout is the layout control, used to put together all parts of an Object page - Header, Navigation bar and Sections/Subsections.","setUpperCaseAnchorBar":{"!description":"Sets a new value for property <code>upperCaseAnchorBar<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUpperCaseAnchorBar: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bUpperCaseAnchorBar":"type: boolean, description: New value for property <code>upperCaseAnchorBar<\/code>"}},"fireEditHeaderButtonPress":{"!description":"Fires event <code>editHeaderButtonPress<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageLayout","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setShowAnchorBar":{"!description":"Sets a new value for property <code>showAnchorBar<\/code>.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAnchorBar: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bShowAnchorBar":"type: boolean, description: New value for property <code>showAnchorBar<\/code>"}},"setSubSectionLayout":{"!description":"Sets a new value for property <code>subSectionLayout<\/code>.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>TitleOnTop<\/code>.","!static":false,"!category":"function","!type":"fn(sSubSectionLayout: sap.uxap.ObjectPageSubSectionLayout) -> sap.uxap.ObjectPageLayout","parameters":{"sSubSectionLayout":"type: sap.uxap.ObjectPageSubSectionLayout, description: New value for property <code>subSectionLayout<\/code>"}},"setAlwaysShowContentHeader":{"!description":"Sets a new value for property <code>alwaysShowContentHeader<\/code>.\n\nDetermines whether Header Content will always be expanded on desktop.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAlwaysShowContentHeader: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bAlwaysShowContentHeader":"type: boolean, description: New value for property <code>alwaysShowContentHeader<\/code>"}},"addSection":{"!description":"Adds some section to the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn(oSection: sap.uxap.ObjectPageSection) -> sap.uxap.ObjectPageLayout","parameters":{"oSection":"type: sap.uxap.ObjectPageSection, description: the section to add; if empty, nothing is inserted"}},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(vHeaderContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vHeaderContent":"type: int|string|sap.ui.core.Control, description: The headerContentto remove or its index or id"}},"getAlwaysShowContentHeader":{"!description":"Gets current value of property <code>alwaysShowContentHeader<\/code>.\n\nDetermines whether Header Content will always be expanded on desktop.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyHeaderTitle":{"!description":"Destroys the headerTitle in the aggregation <code>headerTitle<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageLayout"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDetermines the height of the ObjectPage.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.uxap.ObjectPageLayout","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setBusy":{"!description":"Overwrite setBusy, because the busyIndicator does not cover the header title,\nbecause the header title has z-index: 2 in order to appear on top of the content","!static":false,"!category":"function","!type":"fn(bBusy: Boolean)","parameters":{"bBusy":"type: boolean, description: undefined"}},"!module":"sap/uxap/ObjectPageLayout","getEnableLazyLoading":{"!description":"Gets current value of property <code>enableLazyLoading<\/code>.\n\nEnable lazy loading for the Object page Subsections.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"An ObjectPageLayout is the layout control, used to put together all parts of an Object page - Header, Navigation bar and Sections/Subsections.","removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation <code>headerContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setIsChildPage":{"!description":"Sets a new value for property <code>isChildPage<\/code>.\n\nDetermines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsChildPage: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bIsChildPage":"type: boolean, description: New value for property <code>isChildPage<\/code>"}},"fireToggleAnchorBar":{"!description":"Fires event <code>toggleAnchorBar<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fixed<\/code> of type <code>boolean<\/code>False indicates that the Anchor bar has just detached from the Header and became part of the scrolling area. True means that the Anchor bar has just snapped to the Header.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageLayout","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setHeaderTitle":{"!description":"Sets the aggregated <code>headerTitle<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderTitle: sap.uxap.ObjectPageHeader) -> sap.uxap.ObjectPageLayout","parameters":{"oHeaderTitle":"type: sap.uxap.ObjectPageHeader, description: The headerTitle to set"}},"destroySections":{"!description":"Destroys all the sections in the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageLayout"},"getSubSectionLayout":{"!description":"Gets current value of property <code>subSectionLayout<\/code>.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nDefault value is <code>TitleOnTop<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSubSectionLayout"},"getShowAnchorBarPopover":{"!description":"Gets current value of property <code>showAnchorBarPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllSections":{"!description":"Removes all the controls from the aggregation <code>sections<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.uxap.ObjectPageSection]"},"!proto":"sap.ui.core.Control","attachTabSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tabSelect<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the selected tab changes.\n<b>Note:<\/b> Event is fired only when IconTabBar is used for navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getShowAnchorBar":{"!description":"Gets current value of property <code>showAnchorBar<\/code>.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getScrollingSectionId":{"!description":"Returns the UI5 ID of the Section that is currently being scrolled.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the ObjectPage.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ObjectPageLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAnchorBar showAnchorBar} : boolean (default: true)<\/li>\n<li>{@link #getShowAnchorBarPopover showAnchorBarPopover} : boolean (default: true)<\/li>\n<li>{@link #getUpperCaseAnchorBar upperCaseAnchorBar} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnableLazyLoading enableLazyLoading} : boolean (default: false)<\/li>\n<li>{@link #getSubSectionLayout subSectionLayout} : sap.uxap.ObjectPageSubSectionLayout (default: TitleOnTop)<\/li>\n<li>{@link #getUseIconTabBar useIconTabBar} : boolean (default: false)<\/li>\n<li>{@link #getShowHeaderContent showHeaderContent} : boolean (default: true)<\/li>\n<li>{@link #getUseTwoColumnsForLargeScreen useTwoColumnsForLargeScreen} : boolean (default: false)<\/li>\n<li>{@link #getShowTitleInHeaderContent showTitleInHeaderContent} : boolean (default: false)<\/li>\n<li>{@link #getShowOnlyHighImportance showOnlyHighImportance} : boolean (default: false)<\/li>\n<li>{@link #getIsChildPage isChildPage} : boolean (default: false)<\/li>\n<li>{@link #getAlwaysShowContentHeader alwaysShowContentHeader} : boolean (default: false)<\/li>\n<li>{@link #getShowEditHeaderButton showEditHeaderButton} : boolean (default: false)<\/li>\n<li>{@link #getFlexEnabled flexEnabled} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSections sections} : sap.uxap.ObjectPageSection[] (default)<\/li>\n<li>{@link #getHeaderTitle headerTitle} : sap.uxap.ObjectPageHeader<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:toggleAnchorBar toggleAnchorBar} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editHeaderButtonPress editHeaderButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tabSelect tabSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getUseIconTabBar":{"!description":"Gets current value of property <code>useIconTabBar<\/code>.\n\nUse sap.m.IconTabBar instead of the default Anchor bar\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachEditHeaderButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>editHeaderButtonPress<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getScrollDelegate":{"!description":"Returns a sap.ui.core.delegate.ScrollEnablement object used to handle scrolling","!static":false,"!category":"function","!type":"fn() -> Object"},"detachToggleAnchorBar":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>toggleAnchorBar<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachToggleAnchorBar":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>toggleAnchorBar<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the Anchor bar is switched from moving to fixed or the other way round.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHeaderTitle":{"!description":"Gets content of aggregation <code>headerTitle<\/code>.\n\nObject page header title - the upper, always static, part of the Object page header.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeader"},"setShowTitleInHeaderContent":{"!description":"Sets a new value for property <code>showTitleInHeaderContent<\/code>.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTitleInHeaderContent: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bShowTitleInHeaderContent":"type: boolean, description: New value for property <code>showTitleInHeaderContent<\/code>"}},"detachTabSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tabSelect<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>headerContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> Number","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent whose index is looked for"}},"setShowEditHeaderButton":{"!description":"Sets a new value for property <code>showEditHeaderButton<\/code>.\n\nDetermines whether an Edit button will be shown in Header Content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEditHeaderButton: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bShowEditHeaderButton":"type: boolean, description: New value for property <code>showEditHeaderButton<\/code>"}},"getUseTwoColumnsForLargeScreen":{"!description":"Gets current value of property <code>useTwoColumnsForLargeScreen<\/code>.\n\nDetermines whether the to use two column layout for the L screen size.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageLayout","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: the headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the headerContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headerContent is inserted at\n             the last position"}},"setFlexEnabled":{"!description":"Sets a new value for property <code>flexEnabled<\/code>.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFlexEnabled: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bFlexEnabled":"type: boolean, description: New value for property <code>flexEnabled<\/code>"}},"getIsChildPage":{"!description":"Gets current value of property <code>isChildPage<\/code>.\n\nDetermines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeSection":{"!description":"Removes a section from the aggregation <code>sections<\/code>.","!static":false,"!category":"function","!type":"fn(vSection: Number | String | sap.uxap.ObjectPageSection) -> sap.uxap.ObjectPageSection","parameters":{"vSection":"type: int|string|sap.uxap.ObjectPageSection, description: The sectionto remove or its index or id"}},"getShowEditHeaderButton":{"!description":"Gets current value of property <code>showEditHeaderButton<\/code>.\n\nDetermines whether an Edit button will be shown in Header Content.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireTabSelect":{"!description":"Fires event <code>tabSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>section<\/code> of type <code>sap.uxap.ObjectPageSection<\/code>The selected section object.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageLayout","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"scrollToSection":{"!description":"Scrolls the Object page to the given Section.","!static":false,"!category":"function","!type":"fn(sId: String, iDuration: Number, iOffset: Number)","parameters":{"iOffset":"type: int, description: Additional pixels to scroll","iDuration":"type: int, description: Scroll duration (in ms). Default value is 0","sId":"type: string, description: The Section ID to scroll to"}},"setUseTwoColumnsForLargeScreen":{"!description":"Sets a new value for property <code>useTwoColumnsForLargeScreen<\/code>.\n\nDetermines whether the to use two column layout for the L screen size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseTwoColumnsForLargeScreen: Boolean) -> sap.uxap.ObjectPageLayout","parameters":{"bUseTwoColumnsForLargeScreen":"type: boolean, description: New value for property <code>useTwoColumnsForLargeScreen<\/code>"}},"getSections":{"!description":"Gets content of aggregation <code>sections<\/code>.\n\nThe sections that make up the Object page content area.","!static":false,"!category":"function","!type":"fn() -> [sap.uxap.ObjectPageSection]"},"getShowOnlyHighImportance":{"!description":"Gets current value of property <code>showOnlyHighImportance<\/code>.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uxap.ObjectPageHeaderActionButton":{"!description":"\nButton that can be used in the ObjectPageHeader action aggregation.","setImportance":{"!description":"Sets a new value for property <code>importance<\/code>.\n\nDetermines the order in which the button overflows.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>library.Importance.High<\/code>.","!static":false,"!category":"function","!type":"fn(sImportance: sap.uxap.Importance) -> sap.uxap.ObjectPageHeaderActionButton","parameters":{"sImportance":"type: sap.uxap.Importance, description: New value for property <code>importance<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderActionButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setHideText":{"!description":"Sets a new value for property <code>hideText<\/code>.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHideText: Boolean) -> sap.uxap.ObjectPageHeaderActionButton","parameters":{"bHideText":"type: boolean, description: New value for property <code>hideText<\/code>"}},"!proto":"sap.m.Button","getHideIcon":{"!description":"Gets current value of property <code>hideIcon<\/code>.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setHideIcon":{"!description":"Sets a new value for property <code>hideIcon<\/code>.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideIcon: Boolean) -> sap.uxap.ObjectPageHeaderActionButton","parameters":{"bHideIcon":"type: boolean, description: New value for property <code>hideIcon<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderActionButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ObjectPageHeaderActionButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHideText hideText} : boolean (default: true)<\/li>\n<li>{@link #getHideIcon hideIcon} : boolean (default: false)<\/li>\n<li>{@link #getImportance importance} : sap.uxap.Importance (default: library.Importance.High)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderActionButton","!helpDescription":"\nButton that can be used in the ObjectPageHeader action aggregation.","getImportance":{"!description":"Gets current value of property <code>importance<\/code>.\n\nDetermines the order in which the button overflows.\n\nDefault value is <code>library.Importance.High<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.Importance"},"getHideText":{"!description":"Gets current value of property <code>hideText<\/code>.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uxap.ModelMapping":{"!description":"\nDefine the entity that will be passed to the ObjectPageLayout.","getInternalModelName":{"!description":"Gets current value of property <code>internalModelName<\/code>.\n\nDetermines the the internal model name.\n\nDefault value is <code>Model<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ModelMapping.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setExternalModelName":{"!description":"Sets a new value for property <code>externalModelName<\/code>.\n\nDetermines the the external model name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sExternalModelName: String) -> sap.uxap.ModelMapping","parameters":{"sExternalModelName":"type: string, description: New value for property <code>externalModelName<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","setInternalModelName":{"!description":"Sets a new value for property <code>internalModelName<\/code>.\n\nDetermines the the internal model name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Model<\/code>.","!static":false,"!category":"function","!type":"fn(sInternalModelName: String) -> sap.uxap.ModelMapping","parameters":{"sInternalModelName":"type: string, description: New value for property <code>internalModelName<\/code>"}},"setExternalPath":{"!description":"Sets a new value for property <code>externalPath<\/code>.\n\nDetermines the the external path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sExternalPath: String) -> sap.uxap.ModelMapping","parameters":{"sExternalPath":"type: string, description: New value for property <code>externalPath<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ModelMapping with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getExternalPath":{"!description":"Gets current value of property <code>externalPath<\/code>.\n\nDetermines the the external path.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new ModelMapping.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExternalModelName externalModelName} : string<\/li>\n<li>{@link #getInternalModelName internalModelName} : string (default: Model)<\/li>\n<li>{@link #getExternalPath externalPath} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/uxap/ModelMapping","!helpDescription":"\nDefine the entity that will be passed to the ObjectPageLayout.","getExternalModelName":{"!description":"Gets current value of property <code>externalModelName<\/code>.\n\nDetermines the the external model name.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.uxap.ObjectPageLazyLoader":{"!description":"ObjectPageLazyLoader is a helper element that enables a \"stashed\"-based lazy loading approach for the content of\nthe sap.uxap.ObjectPageSubSection control. ObjectPageLazyLoader is intended to be used in a declarative way only\n(e.g. in a view) with the \"stashed\" property set to \"true\", and is recommended to be used only once per\nsubsection as its sole content.\n\nObjectPageLazyLoader utilizes UI5's stashing mechanism and is a lightweight alternative to the native block-based\nLazy Loading of the Object Page. Wrapping the content of a subsection in an ObjectPageLazyLoader with \"stashed=true\"\nwill make the said content unstash automatically as the user scrolls.\n\nNote: Subsections are required to have an ID when used with ObjectPageLazyLoader.","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageLazyLoader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nControls to be displayed after this element is unstashed","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.uxap.ObjectPageLazyLoader","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLazyLoader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ObjectPageLazyLoader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/ObjectPageLazyLoader","!helpDescription":"ObjectPageLazyLoader is a helper element that enables a \"stashed\"-based lazy loading approach for the content of\nthe sap.uxap.ObjectPageSubSection control. ObjectPageLazyLoader is intended to be used in a declarative way only\n(e.g. in a view) with the \"stashed\" property set to \"true\", and is recommended to be used only once per\nsubsection as its sole content.\n\nObjectPageLazyLoader utilizes UI5's stashing mechanism and is a lightweight alternative to the native block-based\nLazy Loading of the Object Page. Wrapping the content of a subsection in an ObjectPageLazyLoader with \"stashed=true\"\nwill make the said content unstash automatically as the user scrolls.\n\nNote: Subsections are required to have an ID when used with ObjectPageLazyLoader.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageLazyLoader","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageLazyLoader"}},"sap.uxap.ObjectPageSubSection":{"removeMoreBlock":{"!description":"Removes a moreBlock from the aggregation <code>moreBlocks<\/code>.","!static":false,"!category":"function","!type":"fn(vMoreBlock: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vMoreBlock":"type: int|string|sap.ui.core.Control, description: The moreBlockto remove or its index or id"}},"insertAction":{"!description":"Inserts a action into the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageSubSection","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the action should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value\n             greater than the current size of the aggregation, the action is inserted at\n             the last position","oAction":"type: sap.ui.core.Control, description: the action to insert; if empty, nothing is inserted"}},"destroyMoreBlocks":{"!description":"Destroys all the moreBlocks in the aggregation <code>moreBlocks<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSubSection"},"!proto":"sap.uxap.ObjectPageSectionBase","!category":"class","getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\n\nActions available for this Subsection","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfBlock":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>blocks<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBlock: sap.ui.core.Control) -> Number","parameters":{"oBlock":"type: sap.ui.core.Control, description: The block whose index is looked for"}},"getBlocks":{"!description":"Gets content of aggregation <code>blocks<\/code>.\n\nControls to be displayed in the subsection","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeBlock":{"!description":"Removes a block from the aggregation <code>blocks<\/code>.","!static":false,"!category":"function","!type":"fn(vBlock: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vBlock":"type: int|string|sap.ui.core.Control, description: The blockto remove or its index or id"}},"addAction":{"!description":"Adds some action to the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","parameters":{"oAction":"type: sap.ui.core.Control, description: the action to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new ObjectPageSubSection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : sap.uxap.ObjectPageSubSectionMode (default: Collapsed)<\/li>\n<li>{@link #getTitleUppercase titleUppercase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBlocks blocks} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getMoreBlocks moreBlocks} : sap.ui.core.Control[]<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.uxap.ObjectPageSectionBase#constructor sap.uxap.ObjectPageSectionBase}\ncan be used as well.","removeAllBlocks":{"!description":"Removes all the controls from the aggregation <code>blocks<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addMoreBlock":{"!description":"Adds some moreBlock to the aggregation <code>moreBlocks<\/code>.","!static":false,"!category":"function","!type":"fn(oMoreBlock: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","parameters":{"oMoreBlock":"type: sap.ui.core.Control, description: the moreBlock to add; if empty, nothing is inserted"}},"addBlock":{"!description":"Adds some block to the aggregation <code>blocks<\/code>.","!static":false,"!category":"function","!type":"fn(oBlock: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","parameters":{"oBlock":"type: sap.ui.core.Control, description: the block to add; if empty, nothing is inserted"}},"indexOfMoreBlock":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>moreBlocks<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMoreBlock: sap.ui.core.Control) -> Number","parameters":{"oMoreBlock":"type: sap.ui.core.Control, description: The moreBlock whose index is looked for"}},"setTitleUppercase":{"!description":"Sets a new value for property <code>titleUppercase<\/code>.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bTitleUppercase: Boolean) -> sap.uxap.ObjectPageSubSection","parameters":{"bTitleUppercase":"type: boolean, description: New value for property <code>titleUppercase<\/code>"}},"destroyBlocks":{"!description":"Destroys all the blocks in the aggregation <code>blocks<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSubSection"},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nDefault value is <code>Collapsed<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSubSectionMode"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>actions<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"getTitleUppercase":{"!description":"Gets current value of property <code>titleUppercase<\/code>.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllActions":{"!description":"Removes all the controls from the aggregation <code>actions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"\nAn ObjectPageSubSection is the second-level information container of an Object page and may only be used within an Object page section.\nSubsections may display primary information in the so called blocks aggregation (always visible)\nand not-so-important information in the moreBlocks aggregation, whose content is initially hidden, but may be accessed via a See more (...) button.\nDisclaimer: This control is intended to be used only as part of the Object page layout","removeAction":{"!description":"Removes a action from the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The actionto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSubSection.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMoreBlocks":{"!description":"Gets content of aggregation <code>moreBlocks<\/code>.\n\nAdditional controls to display when the Show more / See all / (...) button is pressed","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllMoreBlocks":{"!description":"Removes all the controls from the aggregation <code>moreBlocks<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Collapsed<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.uxap.ObjectPageSubSectionMode) -> sap.uxap.ObjectPageSubSection","parameters":{"sMode":"type: sap.uxap.ObjectPageSubSectionMode, description: New value for property <code>mode<\/code>"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageSubSection"},"insertBlock":{"!description":"Inserts a block into the aggregation <code>blocks<\/code>.","!static":false,"!category":"function","!type":"fn(oBlock: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageSubSection","parameters":{"oBlock":"type: sap.ui.core.Control, description: the block to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the block should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the block is inserted at position 0; for a value\n             greater than the current size of the aggregation, the block is inserted at\n             the last position"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSubSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/uxap/ObjectPageSubSection","!helpDescription":"\nAn ObjectPageSubSection is the second-level information container of an Object page and may only be used within an Object page section.\nSubsections may display primary information in the so called blocks aggregation (always visible)\nand not-so-important information in the moreBlocks aggregation, whose content is initially hidden, but may be accessed via a See more (...) button.\nDisclaimer: This control is intended to be used only as part of the Object page layout","insertMoreBlock":{"!description":"Inserts a moreBlock into the aggregation <code>moreBlocks<\/code>.","!static":false,"!category":"function","!type":"fn(oMoreBlock: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageSubSection","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the moreBlock should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the moreBlock is inserted at position 0; for a value\n             greater than the current size of the aggregation, the moreBlock is inserted at\n             the last position","oMoreBlock":"type: sap.ui.core.Control, description: the moreBlock to insert; if empty, nothing is inserted"}}},"sap.uxap.ObjectPageHeaderPictureShape":{"!description":"Used by the ObjectPageHeader control to define which shape to use for the image.","Circle":{"!description":"Circle shape for the images in the ObjectPageHeader.","!category":"enum","!type":"String"},"!module":"sap/uxap/library","!category":"static class","Square":{"!description":"Square shape for the images in the ObjectPageHeader.","!category":"enum","!type":"String"}},"sap.uxap.ObjectPageHeader":{"getShowPlaceholder":{"!description":"Gets current value of property <code>showPlaceholder<\/code>.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIsObjectTitleAlwaysVisible":{"!description":"Sets a new value for property <code>isObjectTitleAlwaysVisible<\/code>.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIsObjectTitleAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bIsObjectTitleAlwaysVisible":"type: boolean, description: New value for property <code>isObjectTitleAlwaysVisible<\/code>"}},"fireTitleSelectorPress":{"!description":"Fires event <code>titleSelectorPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>DOM reference of the title item's icon to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"insertAction":{"!description":"Inserts a action into the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageHeader","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the action should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value\n             greater than the current size of the aggregation, the action is inserted at\n             the last position","oAction":"type: sap.ui.core.Control, description: the action to insert; if empty, nothing is inserted"}},"setIsActionAreaAlwaysVisible":{"!description":"Sets a new value for property <code>isActionAreaAlwaysVisible<\/code>.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIsActionAreaAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bIsActionAreaAlwaysVisible":"type: boolean, description: New value for property <code>isActionAreaAlwaysVisible<\/code>"}},"attachMarkLockedPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>markLockedPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the Locked button is pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getNavigationBar":{"!description":"Gets content of aggregation <code>navigationBar<\/code>.\n\nAn instance of sap.m.Bar to be embedded in the header","!static":false,"!category":"function","!type":"fn() -> sap.m.Bar"},"addBreadCrumbLink":{"!description":"Adds some breadCrumbLink to the aggregation <code>breadCrumbsLinks<\/code>.","!static":false,"!category":"function","!type":"fn(oBreadCrumbLink: sap.m.Link) -> sap.uxap.ObjectPageHeader","parameters":{"oBreadCrumbLink":"type: sap.m.Link, description: the breadCrumbLink to add; if empty, nothing is inserted"}},"getIsObjectSubtitleAlwaysVisible":{"!description":"Gets current value of property <code>isObjectSubtitleAlwaysVisible<\/code>.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getObjectImageShape":{"!description":"Gets current value of property <code>objectImageShape<\/code>.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nDefault value is <code>Square<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeaderPictureShape"},"getObjectImageAlt":{"!description":"Gets current value of property <code>objectImageAlt<\/code>.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllBreadCrumbsLinks":{"!description":"Removes all the controls from the aggregation <code>breadCrumbsLinks<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Link]"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>actions<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation <code>actions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowMarkers":{"!description":"Sets a new value for property <code>showMarkers<\/code>.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMarkers: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bShowMarkers":"type: boolean, description: New value for property <code>showMarkers<\/code>"}},"setObjectImageAlt":{"!description":"Sets a new value for property <code>objectImageAlt<\/code>.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sObjectImageAlt: String) -> sap.uxap.ObjectPageHeader","parameters":{"sObjectImageAlt":"type: string, description: New value for property <code>objectImageAlt<\/code>"}},"!description":"ObjectPageHeader represents the static part of an Object page header.\nTypically used to display the basic information about a business object, such as title/description/picture, as well as a list of common actions.","removeAction":{"!description":"Removes a action from the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The actionto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachTitleSelectorPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>titleSelectorPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachMarkLockedPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>markLockedPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeader"},"destroyBreadCrumbsLinks":{"!description":"Destroys all the breadCrumbsLinks in the aggregation <code>breadCrumbsLinks<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeader"},"getIsActionAreaAlwaysVisible":{"!description":"Gets current value of property <code>isActionAreaAlwaysVisible<\/code>.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowPlaceholder":{"!description":"Sets a new value for property <code>showPlaceholder<\/code>.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPlaceholder: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bShowPlaceholder":"type: boolean, description: New value for property <code>showPlaceholder<\/code>"}},"setMarkLocked":{"!description":"Sets a new value for property <code>markLocked<\/code>.\n\nSet the locked state of the objectPageHeader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkLocked: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bMarkLocked":"type: boolean, description: New value for property <code>markLocked<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIsObjectIconAlwaysVisible":{"!description":"Sets a new value for property <code>isObjectIconAlwaysVisible<\/code>.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsObjectIconAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bIsObjectIconAlwaysVisible":"type: boolean, description: New value for property <code>isObjectIconAlwaysVisible<\/code>"}},"getHeaderDesign":{"!description":"Gets current value of property <code>headerDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nDefault value is <code>Light<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeaderDesign"},"!module":"sap/uxap/ObjectPageHeader","getObjectImageDensityAware":{"!description":"Gets current value of property <code>objectImageDensityAware<\/code>.\n\nThe value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"ObjectPageHeader represents the static part of an Object page header.\nTypically used to display the basic information about a business object, such as title/description/picture, as well as a list of common actions.","getObjectTitle":{"!description":"Gets current value of property <code>objectTitle<\/code>.\n\nThe title of the object","!static":false,"!category":"function","!type":"fn() -> String"},"setObjectImageShape":{"!description":"Sets a new value for property <code>objectImageShape<\/code>.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Square<\/code>.","!static":false,"!category":"function","!type":"fn(sObjectImageShape: sap.uxap.ObjectPageHeaderPictureShape) -> sap.uxap.ObjectPageHeader","parameters":{"sObjectImageShape":"type: sap.uxap.ObjectPageHeaderPictureShape, description: New value for property <code>objectImageShape<\/code>"}},"detachMarkChangesPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>markChangesPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMarkChanges":{"!description":"Sets a new value for property <code>markChanges<\/code>.\n\nMarks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkChanges: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bMarkChanges":"type: boolean, description: New value for property <code>markChanges<\/code>"}},"getMarkLocked":{"!description":"Gets current value of property <code>markLocked<\/code>.\n\nSet the locked state of the objectPageHeader.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setObjectImageURI":{"!description":"Sets a new value for property <code>objectImageURI<\/code>.\n\nThe URL of the image, representing the business object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sObjectImageURI: String) -> sap.uxap.ObjectPageHeader","parameters":{"sObjectImageURI":"type: string, description: New value for property <code>objectImageURI<\/code>"}},"fireMarkLockedPress":{"!description":"Fires event <code>markLockedPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>DOM reference of the lock item's icon to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setIsObjectSubtitleAlwaysVisible":{"!description":"Sets a new value for property <code>isObjectSubtitleAlwaysVisible<\/code>.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIsObjectSubtitleAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bIsObjectSubtitleAlwaysVisible":"type: boolean, description: New value for property <code>isObjectSubtitleAlwaysVisible<\/code>"}},"setMarkFlagged":{"!description":"Sets a new value for property <code>markFlagged<\/code>.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkFlagged: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bMarkFlagged":"type: boolean, description: New value for property <code>markFlagged<\/code>"}},"!proto":"sap.ui.core.Control","setObjectImageDensityAware":{"!description":"Sets a new value for property <code>objectImageDensityAware<\/code>.\n\nThe value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bObjectImageDensityAware: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bObjectImageDensityAware":"type: boolean, description: New value for property <code>objectImageDensityAware<\/code>"}},"destroyNavigationBar":{"!description":"Destroys the navigationBar in the aggregation <code>navigationBar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeader"},"!category":"class","getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\n\nList of actions that will be displayed in the header.\nYou can use ObjectPageHeaderActionButton controls to achieve a different visual representation of the action buttons in the action bar and the action sheet (overflow menu).\nYou can use ObjectPageHeaderLayoutData to display a visual separator.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getIsObjectIconAlwaysVisible":{"!description":"Gets current value of property <code>isObjectIconAlwaysVisible<\/code>.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getObjectSubtitle":{"!description":"Gets current value of property <code>objectSubtitle<\/code>.\n\nThe description of the object","!static":false,"!category":"function","!type":"fn() -> String"},"fireMarkChangesPress":{"!description":"Fires event <code>markChangesPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>DOM reference of the changed item's icon to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachTitleSelectorPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>titleSelectorPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the objectPage header title selector (down-arrow) is pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addAction":{"!description":"Adds some action to the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.uxap.ObjectPageHeader","parameters":{"oAction":"type: sap.ui.core.Control, description: the action to add; if empty, nothing is inserted"}},"destroySideContentButton":{"!description":"Destroys the sideContentButton in the aggregation <code>sideContentButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.uxap.ObjectPageHeader"},"!constructorDescription":"Constructor for a new ObjectPageHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getObjectImageURI objectImageURI} : string<\/li>\n<li>{@link #getObjectImageAlt objectImageAlt} : string (default: )<\/li>\n<li>{@link #getObjectImageDensityAware objectImageDensityAware} : boolean (default: false)<\/li>\n<li>{@link #getObjectTitle objectTitle} : string<\/li>\n<li>{@link #getObjectSubtitle objectSubtitle} : string<\/li>\n<li>{@link #getObjectImageShape objectImageShape} : sap.uxap.ObjectPageHeaderPictureShape (default: Square)<\/li>\n<li>{@link #getIsObjectIconAlwaysVisible isObjectIconAlwaysVisible} : boolean (default: false)<\/li>\n<li>{@link #getIsObjectTitleAlwaysVisible isObjectTitleAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getIsObjectSubtitleAlwaysVisible isObjectSubtitleAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getIsActionAreaAlwaysVisible isActionAreaAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getHeaderDesign headerDesign} : sap.uxap.ObjectPageHeaderDesign (default: Light)<\/li>\n<li>{@link #getShowTitleSelector showTitleSelector} : boolean (default: false)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean (default: false)<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean (default: false)<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean (default: false)<\/li>\n<li>{@link #getMarkLocked markLocked} : boolean (default: false)<\/li>\n<li>{@link #getShowPlaceholder showPlaceholder} : boolean (default: false)<\/li>\n<li>{@link #getMarkChanges markChanges} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBreadCrumbsLinks breadCrumbsLinks} : sap.m.Link[]<\/li>\n<li>{@link #getNavigationBar navigationBar} : sap.m.Bar<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSideContentButton sideContentButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titleSelectorPress titleSelectorPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:markLockedPress markLockedPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:markChangesPress markChangesPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachMarkChangesPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>markChangesPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the unsaved changes button is pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setMarkFavorite":{"!description":"Sets a new value for property <code>markFavorite<\/code>.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkFavorite: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bMarkFavorite":"type: boolean, description: New value for property <code>markFavorite<\/code>"}},"getObjectImageURI":{"!description":"Gets current value of property <code>objectImageURI<\/code>.\n\nThe URL of the image, representing the business object","!static":false,"!category":"function","!type":"fn() -> String"},"getIsObjectTitleAlwaysVisible":{"!description":"Gets current value of property <code>isObjectTitleAlwaysVisible<\/code>.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeBreadCrumbLink":{"!description":"Removes a breadCrumbLink from the aggregation <code>breadCrumbsLinks<\/code>.","!static":false,"!category":"function","!type":"fn(vBreadCrumbLink: Number | String | sap.m.Link) -> sap.m.Link","parameters":{"vBreadCrumbLink":"type: int|string|sap.m.Link, description: The breadCrumbLinkto remove or its index or id"}},"getMarkChanges":{"!description":"Gets current value of property <code>markChanges<\/code>.\n\nMarks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setObjectSubtitle":{"!description":"Sets a new value for property <code>objectSubtitle<\/code>.\n\nThe description of the object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sObjectSubtitle: String) -> sap.uxap.ObjectPageHeader","parameters":{"sObjectSubtitle":"type: string, description: New value for property <code>objectSubtitle<\/code>"}},"setSideContentButton":{"!description":"Sets the aggregated <code>sideContentButton<\/code>.","!static":false,"!category":"function","!type":"fn(oSideContentButton: sap.m.Button) -> sap.uxap.ObjectPageHeader","parameters":{"oSideContentButton":"type: sap.m.Button, description: The sideContentButton to set"}},"setHeaderDesign":{"!description":"Sets a new value for property <code>headerDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Light<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderDesign: sap.uxap.ObjectPageHeaderDesign) -> sap.uxap.ObjectPageHeader","parameters":{"sHeaderDesign":"type: sap.uxap.ObjectPageHeaderDesign, description: New value for property <code>headerDesign<\/code>"}},"getMarkFavorite":{"!description":"Gets current value of property <code>markFavorite<\/code>.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowTitleSelector":{"!description":"Sets a new value for property <code>showTitleSelector<\/code>.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTitleSelector: Boolean) -> sap.uxap.ObjectPageHeader","parameters":{"bShowTitleSelector":"type: boolean, description: New value for property <code>showTitleSelector<\/code>"}},"getShowMarkers":{"!description":"Gets current value of property <code>showMarkers<\/code>.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getBreadCrumbsLinks":{"!description":"Gets content of aggregation <code>breadCrumbsLinks<\/code>.\n\nA list of all the active link elements in the BreadCrumbs control.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Link]"},"getSideContentButton":{"!description":"Gets content of aggregation <code>sideContentButton<\/code>.\n\nA button that is used for opening the side content of the page or some additional content.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"getShowTitleSelector":{"!description":"Gets current value of property <code>showTitleSelector<\/code>.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertBreadCrumbLink":{"!description":"Inserts a breadCrumbLink into the aggregation <code>breadCrumbsLinks<\/code>.","!static":false,"!category":"function","!type":"fn(oBreadCrumbLink: sap.m.Link, iIndex: Number) -> sap.uxap.ObjectPageHeader","parameters":{"oBreadCrumbLink":"type: sap.m.Link, description: the breadCrumbLink to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the breadCrumbLink should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the breadCrumbLink is inserted at position 0; for a value\n             greater than the current size of the aggregation, the breadCrumbLink is inserted at\n             the last position"}},"getMarkFlagged":{"!description":"Gets current value of property <code>markFlagged<\/code>.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfBreadCrumbLink":{"!description":"Checks for the provided <code>sap.m.Link<\/code> in the aggregation <code>breadCrumbsLinks<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBreadCrumbLink: sap.m.Link) -> Number","parameters":{"oBreadCrumbLink":"type: sap.m.Link, description: The breadCrumbLink whose index is looked for"}}},"sap.uxap.ObjectPageHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeader"},"sap.uxap.ObjectPageHeaderDesign":{"!description":"Used by the ObjectPageHeader control to define which design to use.","!module":"sap/uxap/library","Dark":{"!description":"Dark theme for the ObjectPageHeader.","!category":"enum","!type":"String"},"Light":{"!description":"Light theme for the ObjectPageHeader.","!category":"enum","!type":"String"},"!category":"static class"}}}