{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.suite.ui.microchart",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.suite.ui.microchart",
			"basename": "microchart",
			"resource": "sap/suite/ui/microchart/library.js",
			"module": "sap/suite/ui/microchart/library",
			"static": true,
			"visibility": "public",
			"description": "UI5 library: sap.suite.ui.microchart."
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.AreaMicroChart",
			"basename": "AreaMicroChart",
			"resource": "sap/suite/ui/microchart/AreaMicroChart.js",
			"module": "sap/suite/ui/microchart/AreaMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Chart that displays the history of values and target values as segmented lines and shows thresholds as colored background. This control replaces the deprecated sap.suite.ui.commons.MicroAreaChart.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the chart.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The height of the chart.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "maxXValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set it indicates the value X axis ends with.",
						"methods": [
							"getMaxXValue",
							"setMaxXValue"
						]
					},
					{
						"name": "minXValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set it indicates the value X axis ends with.",
						"methods": [
							"getMinXValue",
							"setMinXValue"
						]
					},
					{
						"name": "maxYValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set it indicates the value X axis ends with.",
						"methods": [
							"getMaxYValue",
							"setMaxYValue"
						]
					},
					{
						"name": "minYValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set it indicates the value X axis ends with.",
						"methods": [
							"getMinYValue",
							"setMinYValue"
						]
					},
					{
						"name": "view",
						"type": "sap.suite.ui.microchart.AreaMicroChartViewType",
						"defaultValue": "Normal",
						"group": "Appearance",
						"visibility": "public",
						"description": "The view of the chart.",
						"methods": [
							"getView",
							"setView"
						]
					},
					{
						"name": "colorPalette",
						"type": "string[]",
						"defaultValue": "[]",
						"group": "Appearance",
						"visibility": "public",
						"description": "The color palette for the chart. If this property is set,\nsemantic colors defined in AreaMicroChartItem are ignored.\nColors from the palette are assigned to each line consequentially.\nWhen all the palette colors are used, assignment of the colors begins\nfrom the first palette color.",
						"methods": [
							"getColorPalette",
							"setColorPalette"
						]
					},
					{
						"name": "showLabel",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Determines if the labels are displayed or not.",
						"methods": [
							"getShowLabel",
							"setShowLabel"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Width and height properties are ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "chart",
						"singularName": "chart",
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"cardinality": "0..1",
						"visibility": "public",
						"bindable": true,
						"description": "The configuration of the actual values line.\nThe color property defines the color of the line.\nPoints are rendered in the same sequence as in this aggregation.",
						"methods": [
							"getChart",
							"destroyChart",
							"setChart",
							"bindChart",
							"unbindChart"
						]
					},
					{
						"name": "maxThreshold",
						"singularName": "maxThreshold",
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation.",
						"methods": [
							"getMaxThreshold",
							"destroyMaxThreshold",
							"setMaxThreshold"
						]
					},
					{
						"name": "innerMaxThreshold",
						"singularName": "innerMaxThreshold",
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.",
						"methods": [
							"getInnerMaxThreshold",
							"destroyInnerMaxThreshold",
							"setInnerMaxThreshold"
						]
					},
					{
						"name": "innerMinThreshold",
						"singularName": "innerMinThreshold",
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.",
						"methods": [
							"getInnerMinThreshold",
							"destroyInnerMinThreshold",
							"setInnerMinThreshold"
						]
					},
					{
						"name": "minThreshold",
						"singularName": "minThreshold",
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation.",
						"methods": [
							"getMinThreshold",
							"destroyMinThreshold",
							"setMinThreshold"
						]
					},
					{
						"name": "target",
						"singularName": "target",
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"cardinality": "0..1",
						"visibility": "public",
						"bindable": true,
						"description": "The configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.",
						"methods": [
							"getTarget",
							"destroyTarget",
							"setTarget",
							"bindTarget",
							"unbindTarget"
						]
					},
					{
						"name": "firstXLabel",
						"singularName": "firstXLabel",
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on X axis for the first point of the chart.",
						"methods": [
							"getFirstXLabel",
							"destroyFirstXLabel",
							"setFirstXLabel"
						]
					},
					{
						"name": "firstYLabel",
						"singularName": "firstYLabel",
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on Y axis for the first point of the chart.",
						"methods": [
							"getFirstYLabel",
							"destroyFirstYLabel",
							"setFirstYLabel"
						]
					},
					{
						"name": "lastXLabel",
						"singularName": "lastXLabel",
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on X axis for the last point of the chart.",
						"methods": [
							"getLastXLabel",
							"destroyLastXLabel",
							"setLastXLabel"
						]
					},
					{
						"name": "lastYLabel",
						"singularName": "lastYLabel",
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on Y axis for the last point of the chart.",
						"methods": [
							"getLastYLabel",
							"destroyLastYLabel",
							"setLastYLabel"
						]
					},
					{
						"name": "maxLabel",
						"singularName": "maxLabel",
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label for the maximum point of the chart.",
						"methods": [
							"getMaxLabel",
							"destroyMaxLabel",
							"setMaxLabel"
						]
					},
					{
						"name": "minLabel",
						"singularName": "minLabel",
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label for the minimum point of the chart.",
						"methods": [
							"getMinLabel",
							"destroyMinLabel",
							"setMinLabel"
						]
					},
					{
						"name": "lines",
						"singularName": "line",
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "The set of lines.",
						"methods": [
							"getLines",
							"destroyLines",
							"insertLine",
							"addLine",
							"removeLine",
							"indexOfLine",
							"removeAllLines",
							"bindLines",
							"unbindLines"
						]
					}
				],
				"defaultAggregation": "lines",
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is triggered when the chart is pressed.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is triggered when the chart is pressed."
				}
			],
			"methods": [
				{
					"name": "addLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLine",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "the line to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some line to the aggregation <code>lines</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.AreaMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.AreaMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.AreaMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
				},
				{
					"name": "bindChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>chart</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "bindLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>lines</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "bindTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>target</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the chart in the aggregation <code>chart</code>."
				},
				{
					"name": "destroyFirstXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the firstXLabel in the aggregation <code>firstXLabel</code>."
				},
				{
					"name": "destroyFirstYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the firstYLabel in the aggregation <code>firstYLabel</code>."
				},
				{
					"name": "destroyInnerMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the innerMaxThreshold in the aggregation <code>innerMaxThreshold</code>."
				},
				{
					"name": "destroyInnerMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the innerMinThreshold in the aggregation <code>innerMinThreshold</code>."
				},
				{
					"name": "destroyLastXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the lastXLabel in the aggregation <code>lastXLabel</code>."
				},
				{
					"name": "destroyLastYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the lastYLabel in the aggregation <code>lastYLabel</code>."
				},
				{
					"name": "destroyLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the lines in the aggregation <code>lines</code>."
				},
				{
					"name": "destroyMaxLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the maxLabel in the aggregation <code>maxLabel</code>."
				},
				{
					"name": "destroyMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the maxThreshold in the aggregation <code>maxThreshold</code>."
				},
				{
					"name": "destroyMinLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the minLabel in the aggregation <code>minLabel</code>."
				},
				{
					"name": "destroyMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the minThreshold in the aggregation <code>minThreshold</code>."
				},
				{
					"name": "destroyTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the target in the aggregation <code>target</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.AreaMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem"
					},
					"description": "Gets content of aggregation <code>chart</code>.\n\nThe configuration of the actual values line.\nThe color property defines the color of the line.\nPoints are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>colorPalette</code>"
					},
					"description": "Gets current value of property <code>colorPalette</code>.\n\nThe color palette for the chart. If this property is set,\nsemantic colors defined in AreaMicroChartItem are ignored.\nColors from the palette are assigned to each line consequentially.\nWhen all the palette colors are used, assignment of the colors begins\nfrom the first palette color.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "getFirstXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>firstXLabel</code>.\n\nThe label on X axis for the first point of the chart."
				},
				{
					"name": "getFirstYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>firstYLabel</code>.\n\nThe label on Y axis for the first point of the chart."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nThe height of the chart."
				},
				{
					"name": "getInnerMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem"
					},
					"description": "Gets content of aggregation <code>innerMaxThreshold</code>.\n\nThe configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getInnerMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem"
					},
					"description": "Gets content of aggregation <code>innerMinThreshold</code>.\n\nThe configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Width and height properties are ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLastXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>lastXLabel</code>.\n\nThe label on X axis for the last point of the chart."
				},
				{
					"name": "getLastYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>lastYLabel</code>.\n\nThe label on Y axis for the last point of the chart."
				},
				{
					"name": "getLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem[]"
					},
					"description": "Gets content of aggregation <code>lines</code>.\n\nThe set of lines."
				},
				{
					"name": "getMaxLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>maxLabel</code>.\n\nThe label for the maximum point of the chart."
				},
				{
					"name": "getMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem"
					},
					"description": "Gets content of aggregation <code>maxThreshold</code>.\n\nThe configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getMaxXValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>maxXValue</code>"
					},
					"description": "Gets current value of property <code>maxXValue</code>.\n\nIf this property is set it indicates the value X axis ends with."
				},
				{
					"name": "getMaxYValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>maxYValue</code>"
					},
					"description": "Gets current value of property <code>maxYValue</code>.\n\nIf this property is set it indicates the value X axis ends with."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChart."
				},
				{
					"name": "getMinLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>minLabel</code>.\n\nThe label for the minimum point of the chart."
				},
				{
					"name": "getMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem"
					},
					"description": "Gets content of aggregation <code>minThreshold</code>.\n\nThe configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getMinXValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>minXValue</code>"
					},
					"description": "Gets current value of property <code>minXValue</code>.\n\nIf this property is set it indicates the value X axis ends with."
				},
				{
					"name": "getMinYValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>minYValue</code>"
					},
					"description": "Gets current value of property <code>minYValue</code>.\n\nIf this property is set it indicates the value X axis ends with."
				},
				{
					"name": "getShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showLabel</code>"
					},
					"description": "Gets current value of property <code>showLabel</code>.\n\nDetermines if the labels are displayed or not.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem"
					},
					"description": "Gets content of aggregation <code>target</code>.\n\nThe configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartViewType",
						"description": "Value of property <code>view</code>"
					},
					"description": "Gets current value of property <code>view</code>.\n\nThe view of the chart.\n\nDefault value is <code>Normal</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the chart."
				},
				{
					"name": "indexOfLine",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oLine",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The line whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartItem</code> in the aggregation <code>lines</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLine",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "the line to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the line should be inserted at; for\n             a negative value of <code>iIndex</code>, the line is inserted at position 0; for a value\n             greater than the current size of the aggregation, the line is inserted at\n             the last position"
						}
					],
					"description": "Inserts a line into the aggregation <code>lines</code>."
				},
				{
					"name": "removeAllLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>lines</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "The removed line or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vLine",
							"type": "int|string|sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The lineto remove or its index or id"
						}
					],
					"description": "Removes a line from the aggregation <code>lines</code>."
				},
				{
					"name": "setChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oChart",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The chart to set"
						}
					],
					"description": "Sets the aggregated <code>chart</code>."
				},
				{
					"name": "setColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColorPalette",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>colorPalette</code>"
						}
					],
					"description": "Sets a new value for property <code>colorPalette</code>.\n\nThe color palette for the chart. If this property is set,\nsemantic colors defined in AreaMicroChartItem are ignored.\nColors from the palette are assigned to each line consequentially.\nWhen all the palette colors are used, assignment of the colors begins\nfrom the first palette color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "setFirstXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFirstXLabel",
							"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
							"optional": false,
							"description": "The firstXLabel to set"
						}
					],
					"description": "Sets the aggregated <code>firstXLabel</code>."
				},
				{
					"name": "setFirstYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFirstYLabel",
							"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
							"optional": false,
							"description": "The firstYLabel to set"
						}
					],
					"description": "Sets the aggregated <code>firstYLabel</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nThe height of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setInnerMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInnerMaxThreshold",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The innerMaxThreshold to set"
						}
					],
					"description": "Sets the aggregated <code>innerMaxThreshold</code>."
				},
				{
					"name": "setInnerMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInnerMinThreshold",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The innerMinThreshold to set"
						}
					],
					"description": "Sets the aggregated <code>innerMinThreshold</code>."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Width and height properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLastXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLastXLabel",
							"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
							"optional": false,
							"description": "The lastXLabel to set"
						}
					],
					"description": "Sets the aggregated <code>lastXLabel</code>."
				},
				{
					"name": "setLastYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLastYLabel",
							"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
							"optional": false,
							"description": "The lastYLabel to set"
						}
					],
					"description": "Sets the aggregated <code>lastYLabel</code>."
				},
				{
					"name": "setMaxLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMaxLabel",
							"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
							"optional": false,
							"description": "The maxLabel to set"
						}
					],
					"description": "Sets the aggregated <code>maxLabel</code>."
				},
				{
					"name": "setMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMaxThreshold",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The maxThreshold to set"
						}
					],
					"description": "Sets the aggregated <code>maxThreshold</code>."
				},
				{
					"name": "setMaxXValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "value",
							"type": "int",
							"optional": false,
							"description": "new value Max X"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": false,
							"description": "Suppress in validate"
						}
					],
					"description": "Property setter for the Max X value"
				},
				{
					"name": "setMaxYValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "value",
							"type": "string",
							"optional": false,
							"description": "new value Max Y"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": false,
							"description": "Suppress in validate"
						}
					],
					"description": "Property setter for the Max Y value"
				},
				{
					"name": "setMinLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMinLabel",
							"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
							"optional": false,
							"description": "The minLabel to set"
						}
					],
					"description": "Sets the aggregated <code>minLabel</code>."
				},
				{
					"name": "setMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMinThreshold",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The minThreshold to set"
						}
					],
					"description": "Sets the aggregated <code>minThreshold</code>."
				},
				{
					"name": "setMinXValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "value",
							"type": "int",
							"optional": false,
							"description": "new value Min X"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": false,
							"description": "Suppress in validate"
						}
					],
					"description": "Property setter for the Min X value"
				},
				{
					"name": "setMinYValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "value",
							"type": "value",
							"optional": false,
							"description": "new value Min Y"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": false,
							"description": "Suppress in validate"
						}
					],
					"description": "Property setter for the Min Y value"
				},
				{
					"name": "setShowLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowLabel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>showLabel</code>.\n\nDetermines if the labels are displayed or not.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTarget",
							"type": "sap.suite.ui.microchart.AreaMicroChartItem",
							"optional": false,
							"description": "The target to set"
						}
					],
					"description": "Sets the aggregated <code>target</code>."
				},
				{
					"name": "setView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sView",
							"type": "sap.suite.ui.microchart.AreaMicroChartViewType",
							"optional": false,
							"description": "New value for property <code>view</code>"
						}
					],
					"description": "Sets a new value for property <code>view</code>.\n\nThe view of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Normal</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>chart</code> from model data."
				},
				{
					"name": "unbindLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>lines</code> from model data."
				},
				{
					"name": "unbindTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>target</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.AreaMicroChartItem",
			"basename": "AreaMicroChartItem",
			"resource": "sap/suite/ui/microchart/AreaMicroChartItem.js",
			"module": "sap/suite/ui/microchart/AreaMicroChartItem",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The graphic element color.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The line title.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					}
				],
				"aggregations": [
					{
						"name": "points",
						"singularName": "point",
						"type": "sap.suite.ui.microchart.AreaMicroChartPoint",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "The set of points for this graphic element.",
						"methods": [
							"getPoints",
							"destroyPoints",
							"insertPoint",
							"addPoint",
							"removePoint",
							"indexOfPoint",
							"removeAllPoints",
							"bindPoints",
							"unbindPoints"
						]
					}
				],
				"defaultAggregation": "points"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addPoint",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPoint",
							"type": "sap.suite.ui.microchart.AreaMicroChartPoint",
							"optional": false,
							"description": "the point to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some point to the aggregation <code>points</code>."
				},
				{
					"name": "bindPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>points</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the points in the aggregation <code>points</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartItem."
				},
				{
					"name": "getPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartPoint[]"
					},
					"description": "Gets content of aggregation <code>points</code>.\n\nThe set of points for this graphic element."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nThe line title."
				},
				{
					"name": "indexOfPoint",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oPoint",
							"type": "sap.suite.ui.microchart.AreaMicroChartPoint",
							"optional": false,
							"description": "The point whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartPoint</code> in the aggregation <code>points</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertPoint",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPoint",
							"type": "sap.suite.ui.microchart.AreaMicroChartPoint",
							"optional": false,
							"description": "the point to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the point should be inserted at; for\n             a negative value of <code>iIndex</code>, the point is inserted at position 0; for a value\n             greater than the current size of the aggregation, the point is inserted at\n             the last position"
						}
					],
					"description": "Inserts a point into the aggregation <code>points</code>."
				},
				{
					"name": "removeAllPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartPoint[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>points</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removePoint",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartPoint",
						"description": "The removed point or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vPoint",
							"type": "int|string|sap.suite.ui.microchart.AreaMicroChartPoint",
							"optional": false,
							"description": "The pointto remove or its index or id"
						}
					],
					"description": "Removes a point from the aggregation <code>points</code>."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>points</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.AreaMicroChartLabel",
			"basename": "AreaMicroChartLabel",
			"resource": "sap/suite/ui/microchart/AreaMicroChartLabel.js",
			"module": "sap/suite/ui/microchart/AreaMicroChartLabel",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The graphic element color.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "label",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The line title.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartLabel with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nThe line title.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartLabel."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartLabel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.AreaMicroChartPoint",
			"basename": "AreaMicroChartPoint",
			"resource": "sap/suite/ui/microchart/AreaMicroChartPoint.js",
			"module": "sap/suite/ui/microchart/AreaMicroChartPoint",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Contains the data for the point.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "x",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "X value for the given point.",
						"methods": [
							"getX",
							"setX"
						]
					},
					{
						"name": "y",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Y value for the given point.",
						"methods": [
							"getY",
							"setY"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "This control contains data for the point.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartPoint with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartPoint."
				},
				{
					"name": "getX",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>x</code>"
					},
					"description": "Gets current value of property <code>x</code>.\n\nX value for the given point."
				},
				{
					"name": "getXValue",
					"visibility": "public",
					"returnValue": {
						"type": "string"
					},
					"description": "Returns the x value. It returns 'undefined', if the x property was not set or an invalid number was set."
				},
				{
					"name": "getY",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>y</code>"
					},
					"description": "Gets current value of property <code>y</code>.\n\nY value for the given point."
				},
				{
					"name": "getYValue",
					"visibility": "public",
					"returnValue": {
						"type": "float"
					},
					"description": "Returns the y value. It returns 'undefined', if the y property was not set or an invalid number was set."
				},
				{
					"name": "setX",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartPoint",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fX",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>x</code>"
						}
					],
					"description": "Sets a new value for property <code>x</code>.\n\nX value for the given point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setY",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.AreaMicroChartPoint",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fY",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>y</code>"
						}
					],
					"description": "Sets a new value for property <code>y</code>.\n\nY value for the given point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.suite.ui.microchart.AreaMicroChartViewType",
			"basename": "AreaMicroChartViewType",
			"resource": "sap/suite/ui/microchart/library.js",
			"module": "sap/suite/ui/microchart/library",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"description": "Enum of available views for the area micro chart concerning the position of the labels.",
			"properties": [
				{
					"name": "Normal",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The view with labels on the top and bottom."
				},
				{
					"name": "Wide",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The view with labels on the left and right."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.BulletMicroChart",
			"basename": "BulletMicroChart",
			"resource": "sap/suite/ui/microchart/BulletMicroChart.js",
			"module": "sap/suite/ui/microchart/BulletMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values.  This control replaces the deprecated sap.suite.ui.commons.BulletChart.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "size",
						"type": "sap.m.Size",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "mode",
						"type": "sap.suite.ui.microchart.BulletMicroChartModeType",
						"defaultValue": "Actual",
						"group": "Misc",
						"visibility": "public",
						"description": "The mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.",
						"methods": [
							"getMode",
							"setMode"
						]
					},
					{
						"name": "scale",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The scaling suffix that is added to the actual and target values.",
						"methods": [
							"getScale",
							"setScale"
						]
					},
					{
						"name": "forecastValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar.",
						"methods": [
							"getForecastValue",
							"setForecastValue"
						]
					},
					{
						"name": "targetValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The target value that is displayed as a black vertical bar.",
						"methods": [
							"getTargetValue",
							"setTargetValue"
						]
					},
					{
						"name": "minValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.",
						"methods": [
							"getMinValue",
							"setMinValue"
						]
					},
					{
						"name": "maxValue",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.",
						"methods": [
							"getMaxValue",
							"setMaxValue"
						]
					},
					{
						"name": "showActualValue",
						"type": "boolean",
						"defaultValue": "true",
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, shows the numeric actual value. This property works in Actual mode only.",
						"methods": [
							"getShowActualValue",
							"setShowActualValue"
						]
					},
					{
						"name": "showDeltaValue",
						"type": "boolean",
						"defaultValue": "true",
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.",
						"methods": [
							"getShowDeltaValue",
							"setShowDeltaValue"
						]
					},
					{
						"name": "showTargetValue",
						"type": "boolean",
						"defaultValue": "true",
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, shows the numeric target value.",
						"methods": [
							"getShowTargetValue",
							"setShowTargetValue"
						]
					},
					{
						"name": "showValueMarker",
						"type": "boolean",
						"defaultValue": "false",
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, shows the value marker.",
						"methods": [
							"getShowValueMarker",
							"setShowValueMarker"
						]
					},
					{
						"name": "actualValueLabel",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "If set, displays a specified label instead of the numeric actual value.",
						"methods": [
							"getActualValueLabel",
							"setActualValueLabel"
						]
					},
					{
						"name": "deltaValueLabel",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "If set, displays a specified label instead of the calculated numeric delta value.",
						"methods": [
							"getDeltaValueLabel",
							"setDeltaValueLabel"
						]
					},
					{
						"name": "targetValueLabel",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "If set, displays a specified label instead of the numeric target value.",
						"methods": [
							"getTargetValueLabel",
							"setTargetValueLabel"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the chart. If it is not set, the size of the control is defined by the size property.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "scaleColor",
						"type": "sap.suite.ui.microchart.CommonBackgroundType",
						"defaultValue": "MediumLight",
						"group": "Misc",
						"visibility": "public",
						"description": "The background color of the scale.",
						"methods": [
							"getScaleColor",
							"setScaleColor"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "actual",
						"singularName": "actual",
						"type": "sap.suite.ui.microchart.BulletMicroChartData",
						"cardinality": "0..1",
						"visibility": "public",
						"bindable": true,
						"description": "Actual data of the BulletMicroChart.",
						"methods": [
							"getActual",
							"destroyActual",
							"setActual",
							"bindActual",
							"unbindActual"
						]
					},
					{
						"name": "thresholds",
						"singularName": "threshold",
						"type": "sap.suite.ui.microchart.BulletMicroChartData",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "Threshold data of the BulletMicroChart.",
						"methods": [
							"getThresholds",
							"destroyThresholds",
							"insertThreshold",
							"addThreshold",
							"removeThreshold",
							"indexOfThreshold",
							"removeAllThresholds",
							"bindThresholds",
							"unbindThresholds"
						]
					}
				],
				"defaultAggregation": "actual",
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is triggered when the chart is pressed.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new BulletMicroChart control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is triggered when the chart is pressed."
				}
			],
			"methods": [
				{
					"name": "addThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oThreshold",
							"type": "sap.suite.ui.microchart.BulletMicroChartData",
							"optional": false,
							"description": "the threshold to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some threshold to the aggregation <code>thresholds</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.BulletMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.BulletMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.BulletMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
				},
				{
					"name": "bindActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>actual</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "bindThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>thresholds</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the actual in the aggregation <code>actual</code>."
				},
				{
					"name": "destroyThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the thresholds in the aggregation <code>thresholds</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.BulletMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChartData"
					},
					"description": "Gets content of aggregation <code>actual</code>.\n\nActual data of the BulletMicroChart."
				},
				{
					"name": "getActualValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>actualValueLabel</code>"
					},
					"description": "Gets current value of property <code>actualValueLabel</code>.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nDefault value is <code></code>."
				},
				{
					"name": "getDeltaValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>deltaValueLabel</code>"
					},
					"description": "Gets current value of property <code>deltaValueLabel</code>.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nDefault value is <code></code>."
				},
				{
					"name": "getForecastValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>forecastValue</code>"
					},
					"description": "Gets current value of property <code>forecastValue</code>.\n\nThe forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMaxValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>maxValue</code>"
					},
					"description": "Gets current value of property <code>maxValue</code>.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChart."
				},
				{
					"name": "getMinValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>minValue</code>"
					},
					"description": "Gets current value of property <code>minValue</code>.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control."
				},
				{
					"name": "getMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChartModeType",
						"description": "Value of property <code>mode</code>"
					},
					"description": "Gets current value of property <code>mode</code>.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nDefault value is <code>Actual</code>."
				},
				{
					"name": "getScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>scale</code>"
					},
					"description": "Gets current value of property <code>scale</code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nDefault value is <code></code>."
				},
				{
					"name": "getScaleColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.CommonBackgroundType",
						"description": "Value of property <code>scaleColor</code>"
					},
					"description": "Gets current value of property <code>scaleColor</code>.\n\nThe background color of the scale.\n\nDefault value is <code>MediumLight</code>."
				},
				{
					"name": "getShowActualValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showActualValue</code>"
					},
					"description": "Gets current value of property <code>showActualValue</code>.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowDeltaValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showDeltaValue</code>"
					},
					"description": "Gets current value of property <code>showDeltaValue</code>.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showTargetValue</code>"
					},
					"description": "Gets current value of property <code>showTargetValue</code>.\n\nIf set to true, shows the numeric target value.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowValueMarker",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showValueMarker</code>"
					},
					"description": "Gets current value of property <code>showValueMarker</code>.\n\nIf set to true, shows the value marker.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Size",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "getTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>targetValue</code>"
					},
					"description": "Gets current value of property <code>targetValue</code>.\n\nThe target value that is displayed as a black vertical bar."
				},
				{
					"name": "getTargetValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>targetValueLabel</code>"
					},
					"description": "Gets current value of property <code>targetValueLabel</code>.\n\nIf set, displays a specified label instead of the numeric target value.\n\nDefault value is <code></code>."
				},
				{
					"name": "getThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChartData[]"
					},
					"description": "Gets content of aggregation <code>thresholds</code>.\n\nThreshold data of the BulletMicroChart."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property."
				},
				{
					"name": "indexOfThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oThreshold",
							"type": "sap.suite.ui.microchart.BulletMicroChartData",
							"optional": false,
							"description": "The threshold whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.microchart.BulletMicroChartData</code> in the aggregation <code>thresholds</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oThreshold",
							"type": "sap.suite.ui.microchart.BulletMicroChartData",
							"optional": false,
							"description": "the threshold to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the threshold should be inserted at; for\n             a negative value of <code>iIndex</code>, the threshold is inserted at position 0; for a value\n             greater than the current size of the aggregation, the threshold is inserted at\n             the last position"
						}
					],
					"description": "Inserts a threshold into the aggregation <code>thresholds</code>."
				},
				{
					"name": "removeAllThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChartData[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>thresholds</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChartData",
						"description": "The removed threshold or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vThreshold",
							"type": "int|string|sap.suite.ui.microchart.BulletMicroChartData",
							"optional": false,
							"description": "The thresholdto remove or its index or id"
						}
					],
					"description": "Removes a threshold from the aggregation <code>thresholds</code>."
				},
				{
					"name": "setActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oActual",
							"type": "sap.suite.ui.microchart.BulletMicroChartData",
							"optional": false,
							"description": "The actual to set"
						}
					],
					"description": "Sets the aggregated <code>actual</code>."
				},
				{
					"name": "setActualValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sActualValueLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>actualValueLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>actualValueLabel</code>.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setDeltaValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDeltaValueLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>deltaValueLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>deltaValueLabel</code>.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setForecastValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fForecastValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>forecastValue</code>"
						}
					],
					"description": "Sets a new value for property <code>forecastValue</code>.\n\nThe forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setMaxValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMaxValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>maxValue</code>"
						}
					],
					"description": "Sets a new value for property <code>maxValue</code>.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMinValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMinValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>minValue</code>"
						}
					],
					"description": "Sets a new value for property <code>minValue</code>.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMode",
							"type": "sap.suite.ui.microchart.BulletMicroChartModeType",
							"optional": false,
							"description": "New value for property <code>mode</code>"
						}
					],
					"description": "Sets a new value for property <code>mode</code>.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Actual</code>."
				},
				{
					"name": "setScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sScale",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>scale</code>"
						}
					],
					"description": "Sets a new value for property <code>scale</code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setScaleColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sScaleColor",
							"type": "sap.suite.ui.microchart.CommonBackgroundType",
							"optional": false,
							"description": "New value for property <code>scaleColor</code>"
						}
					],
					"description": "Sets a new value for property <code>scaleColor</code>.\n\nThe background color of the scale.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>MediumLight</code>."
				},
				{
					"name": "setShowActualValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowActualValue",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showActualValue</code>"
						}
					],
					"description": "Sets a new value for property <code>showActualValue</code>.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowDeltaValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowDeltaValue",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showDeltaValue</code>"
						}
					],
					"description": "Sets a new value for property <code>showDeltaValue</code>.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowTargetValue",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showTargetValue</code>"
						}
					],
					"description": "Sets a new value for property <code>showTargetValue</code>.\n\nIf set to true, shows the numeric target value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowValueMarker",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowValueMarker",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showValueMarker</code>"
						}
					],
					"description": "Sets a new value for property <code>showValueMarker</code>.\n\nIf set to true, shows the value marker.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.m.Size",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "setTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fTargetValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>targetValue</code>"
						}
					],
					"description": "Sets a new value for property <code>targetValue</code>.\n\nThe target value that is displayed as a black vertical bar.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTargetValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTargetValueLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>targetValueLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>targetValueLabel</code>.\n\nIf set, displays a specified label instead of the numeric target value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>actual</code> from model data."
				},
				{
					"name": "unbindThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>thresholds</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.BulletMicroChartData",
			"basename": "BulletMicroChartData",
			"resource": "sap/suite/ui/microchart/BulletMicroChartData.js",
			"module": "sap/suite/ui/microchart/BulletMicroChartData",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Element",
			"description": "Contains the thresholds data.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "value",
						"type": "float",
						"defaultValue": "0",
						"group": "Misc",
						"visibility": "public",
						"description": "The actual value.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The semantic color of the actual value.",
						"methods": [
							"getColor",
							"setColor"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new BulletMicroChartData.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChartData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe semantic color of the actual value.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChartData."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nThe actual value.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe semantic color of the actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.BulletMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nThe actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.suite.ui.microchart.BulletMicroChartModeType",
			"basename": "BulletMicroChartModeType",
			"resource": "sap/suite/ui/microchart/library.js",
			"module": "sap/suite/ui/microchart/library",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"description": "Defines if the horizontal bar represents a current value only or if it represents the delta between a current value and a threshold value.",
			"properties": [
				{
					"name": "Actual",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays the Actual value."
				},
				{
					"name": "Delta",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Displays delta between the Actual and Threshold values."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.ColumnMicroChart",
			"basename": "ColumnMicroChart",
			"resource": "sap/suite/ui/microchart/ColumnMicroChart.js",
			"module": "sap/suite/ui/microchart/ColumnMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "size",
						"type": "sap.m.Size",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Updates the size of the chart. If not set then the default size is applied based on the device tile.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the chart. If it is not set, the width of the control is defined by the size property.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The height of the chart. If it is not set, the height of the control is defined by the size property.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "columns",
						"singularName": "column",
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "The column chart data.",
						"methods": [
							"getColumns",
							"destroyColumns",
							"insertColumn",
							"addColumn",
							"removeColumn",
							"indexOfColumn",
							"removeAllColumns",
							"bindColumns",
							"unbindColumns"
						]
					},
					{
						"name": "leftTopLabel",
						"singularName": "leftTopLabel",
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on the left top corner of the chart.",
						"methods": [
							"getLeftTopLabel",
							"destroyLeftTopLabel",
							"setLeftTopLabel"
						]
					},
					{
						"name": "rightTopLabel",
						"singularName": "rightTopLabel",
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on the right top corner of the chart.",
						"methods": [
							"getRightTopLabel",
							"destroyRightTopLabel",
							"setRightTopLabel"
						]
					},
					{
						"name": "leftBottomLabel",
						"singularName": "leftBottomLabel",
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on the left bottom corner of the chart.",
						"methods": [
							"getLeftBottomLabel",
							"destroyLeftBottomLabel",
							"setLeftBottomLabel"
						]
					},
					{
						"name": "rightBottomLabel",
						"singularName": "rightBottomLabel",
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The label on the right bottom corner of the chart.",
						"methods": [
							"getRightBottomLabel",
							"destroyRightBottomLabel",
							"setRightBottomLabel"
						]
					}
				],
				"defaultAggregation": "columns",
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the column chart.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ColumnMicroChart control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the column chart."
				}
			],
			"methods": [
				{
					"name": "addColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.microchart.ColumnMicroChartData",
							"optional": false,
							"description": "the column to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some column to the aggregation <code>columns</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.ColumnMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChart</code> itself.\n\nThe event is fired when the user chooses the column chart."
				},
				{
					"name": "bindColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>columns</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the columns in the aggregation <code>columns</code>."
				},
				{
					"name": "destroyLeftBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the leftBottomLabel in the aggregation <code>leftBottomLabel</code>."
				},
				{
					"name": "destroyLeftTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the leftTopLabel in the aggregation <code>leftTopLabel</code>."
				},
				{
					"name": "destroyRightBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the rightBottomLabel in the aggregation <code>rightBottomLabel</code>."
				},
				{
					"name": "destroyRightTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the rightTopLabel in the aggregation <code>rightTopLabel</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.ColumnMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData[]"
					},
					"description": "Gets content of aggregation <code>columns</code>.\n\nThe column chart data."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nThe height of the chart. If it is not set, the height of the control is defined by the size property."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getLeftBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>leftBottomLabel</code>.\n\nThe label on the left bottom corner of the chart."
				},
				{
					"name": "getLeftTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>leftTopLabel</code>.\n\nThe label on the left top corner of the chart."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChart."
				},
				{
					"name": "getRightBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>rightBottomLabel</code>.\n\nThe label on the right bottom corner of the chart."
				},
				{
					"name": "getRightTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel"
					},
					"description": "Gets content of aggregation <code>rightTopLabel</code>.\n\nThe label on the right top corner of the chart."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Size",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the chart. If it is not set, the width of the control is defined by the size property."
				},
				{
					"name": "indexOfColumn",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.microchart.ColumnMicroChartData",
							"optional": false,
							"description": "The column whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.microchart.ColumnMicroChartData</code> in the aggregation <code>columns</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.microchart.ColumnMicroChartData",
							"optional": false,
							"description": "the column to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the column should be inserted at; for\n             a negative value of <code>iIndex</code>, the column is inserted at position 0; for a value\n             greater than the current size of the aggregation, the column is inserted at\n             the last position"
						}
					],
					"description": "Inserts a column into the aggregation <code>columns</code>."
				},
				{
					"name": "removeAllColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>columns</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"description": "The removed column or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vColumn",
							"type": "int|string|sap.suite.ui.microchart.ColumnMicroChartData",
							"optional": false,
							"description": "The columnto remove or its index or id"
						}
					],
					"description": "Removes a column from the aggregation <code>columns</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nThe height of the chart. If it is not set, the height of the control is defined by the size property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setLeftBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLeftBottomLabel",
							"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
							"optional": false,
							"description": "The leftBottomLabel to set"
						}
					],
					"description": "Sets the aggregated <code>leftBottomLabel</code>."
				},
				{
					"name": "setLeftTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLeftTopLabel",
							"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
							"optional": false,
							"description": "The leftTopLabel to set"
						}
					],
					"description": "Sets the aggregated <code>leftTopLabel</code>."
				},
				{
					"name": "setRightBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRightBottomLabel",
							"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
							"optional": false,
							"description": "The rightBottomLabel to set"
						}
					],
					"description": "Sets the aggregated <code>rightBottomLabel</code>."
				},
				{
					"name": "setRightTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRightTopLabel",
							"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
							"optional": false,
							"description": "The rightTopLabel to set"
						}
					],
					"description": "Sets the aggregated <code>rightTopLabel</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.m.Size",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the chart. If it is not set, the width of the control is defined by the size property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>columns</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.ColumnMicroChartData",
			"basename": "ColumnMicroChartData",
			"resource": "sap/suite/ui/microchart/ColumnMicroChartData.js",
			"module": "sap/suite/ui/microchart/ColumnMicroChartData",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Defines the column chart data.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The graphic element color.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "label",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The line title.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "value",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The actual value.",
						"methods": [
							"getValue",
							"setValue"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the column data.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ColumnMicroChartData control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the column data."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChartData</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.ColumnMicroChartData</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChartData</code> itself.\n\nThe event is fired when the user chooses the column data."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.ColumnMicroChartData</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nThe line title.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartData."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nThe actual value."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nThe actual value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.ColumnMicroChartLabel",
			"basename": "ColumnMicroChartLabel",
			"resource": "sap/suite/ui/microchart/ColumnMicroChartLabel.js",
			"module": "sap/suite/ui/microchart/ColumnMicroChartLabel",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Displays or hides the labels of a column micro chart.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The graphic element color.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "label",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The line title.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ColumnMicroChartLabel control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartLabel with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nThe line title.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartLabel."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ColumnMicroChartLabel",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nThe line title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.suite.ui.microchart.CommonBackgroundType",
			"basename": "CommonBackgroundType",
			"resource": "sap/suite/ui/microchart/library.js",
			"module": "sap/suite/ui/microchart/library",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"description": "Lists the available theme-specific background colors.",
			"properties": [
				{
					"name": "Dark",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Dark background color."
				},
				{
					"name": "Darkest",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The darkest background color."
				},
				{
					"name": "ExtraDark",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Extra dark background color."
				},
				{
					"name": "ExtraLight",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Extra light background color."
				},
				{
					"name": "Light",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Light background color."
				},
				{
					"name": "Lightest",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The lightest background color."
				},
				{
					"name": "Medium",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Medium background color."
				},
				{
					"name": "MediumLight",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Medium light background color."
				},
				{
					"name": "Transparent",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The transparent background color."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.ComparisonMicroChart",
			"basename": "ComparisonMicroChart",
			"resource": "sap/suite/ui/microchart/ComparisonMicroChart.js",
			"module": "sap/suite/ui/microchart/ComparisonMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "size",
						"type": "sap.m.Size",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The size of the microchart. If not set, the default size is applied based on the size of the device tile.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "scale",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The scaling suffix that is added to the actual and target values.",
						"methods": [
							"getScale",
							"setScale"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the chart. If it is not set, the size of the control is defined by the size property.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "view",
						"type": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
						"defaultValue": "Normal",
						"group": "Appearance",
						"visibility": "public",
						"description": "The view of the chart. If not set, the Normal view is used by default.",
						"methods": [
							"getView",
							"setView"
						]
					},
					{
						"name": "colorPalette",
						"type": "string[]",
						"defaultValue": "[]",
						"group": "Appearance",
						"visibility": "public",
						"description": "The color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.",
						"methods": [
							"getColorPalette",
							"setColorPalette"
						]
					},
					{
						"name": "shrinkable",
						"type": "boolean",
						"defaultValue": "false",
						"group": "Misc",
						"visibility": "public",
						"description": "If it is set to true, the height of the control is defined by its content.",
						"methods": [
							"getShrinkable",
							"setShrinkable"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Height of the chart.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "data",
						"singularName": "data",
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "The comparison chart bar data.",
						"methods": [
							"getData",
							"destroyData",
							"insertData",
							"addData",
							"removeData",
							"indexOfData",
							"removeAllData",
							"bindData",
							"unbindData"
						]
					}
				],
				"defaultAggregation": "data",
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is triggered when the chart is pressed.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new ComparisonMicroChart control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is triggered when the chart is pressed."
				}
			],
			"methods": [
				{
					"name": "addData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
							"optional": false,
							"description": "the data to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some data to the aggregation <code>data</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
				},
				{
					"name": "bindData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>data</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the data in the aggregation <code>data</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>colorPalette</code>"
					},
					"description": "Gets current value of property <code>colorPalette</code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "getData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData[]"
					},
					"description": "Gets content of aggregation <code>data</code>.\n\nThe comparison chart bar data."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\n\nHeight of the chart."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChart."
				},
				{
					"name": "getScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>scale</code>"
					},
					"description": "Gets current value of property <code>scale</code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nDefault value is <code></code>."
				},
				{
					"name": "getShrinkable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>shrinkable</code>"
					},
					"description": "Gets current value of property <code>shrinkable</code>.\n\nIf it is set to true, the height of the control is defined by its content.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Size",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
						"description": "Value of property <code>view</code>"
					},
					"description": "Gets current value of property <code>view</code>.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nDefault value is <code>Normal</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property."
				},
				{
					"name": "indexOfData",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
							"optional": false,
							"description": "The data whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.microchart.ComparisonMicroChartData</code> in the aggregation <code>data</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
							"optional": false,
							"description": "the data to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the data should be inserted at; for\n             a negative value of <code>iIndex</code>, the data is inserted at position 0; for a value\n             greater than the current size of the aggregation, the data is inserted at\n             the last position"
						}
					],
					"description": "Inserts a data into the aggregation <code>data</code>."
				},
				{
					"name": "removeAllData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>data</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "The removed data or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vData",
							"type": "int|string|sap.suite.ui.microchart.ComparisonMicroChartData",
							"optional": false,
							"description": "The datato remove or its index or id"
						}
					],
					"description": "Removes a data from the aggregation <code>data</code>."
				},
				{
					"name": "setColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColorPalette",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>colorPalette</code>"
						}
					],
					"description": "Sets a new value for property <code>colorPalette</code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\n\nHeight of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sScale",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>scale</code>"
						}
					],
					"description": "Sets a new value for property <code>scale</code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setShrinkable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShrinkable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>shrinkable</code>"
						}
					],
					"description": "Sets a new value for property <code>shrinkable</code>.\n\nIf it is set to true, the height of the control is defined by its content.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.m.Size",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "setView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sView",
							"type": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
							"optional": false,
							"description": "New value for property <code>view</code>"
						}
					],
					"description": "Sets a new value for property <code>view</code>.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Normal</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>data</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.ComparisonMicroChartData",
			"basename": "ComparisonMicroChartData",
			"resource": "sap/suite/ui/microchart/ComparisonMicroChartData.js",
			"module": "sap/suite/ui/microchart/ComparisonMicroChartData",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Element",
			"description": "Contains the values of the comparison chart.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "value",
						"type": "float",
						"defaultValue": "0",
						"group": "Misc",
						"visibility": "public",
						"description": "The value for comparison.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The semantic color of the value.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The comparison bar title.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "displayValue",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set then it will be displayed instead of value.",
						"methods": [
							"getDisplayValue",
							"setDisplayValue"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the comparison chart bar.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ComparisonMicroChartData.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the comparison chart bar."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code> itself.\n\nThe event is fired when the user chooses the comparison chart bar."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChartData with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe semantic color of the value.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>displayValue</code>"
					},
					"description": "Gets current value of property <code>displayValue</code>.\n\nIf this property is set then it will be displayed instead of value.\n\nDefault value is <code></code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChartData."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title</code>"
					},
					"description": "Gets current value of property <code>title</code>.\n\nThe comparison bar title.\n\nDefault value is <code></code>."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\n\nThe value for comparison.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>displayValue</code>"
						}
					],
					"description": "Sets a new value for property <code>displayValue</code>.\n\nIf this property is set then it will be displayed instead of value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title</code>"
						}
					],
					"description": "Sets a new value for property <code>title</code>.\n\nThe comparison bar title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code></code>."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.ComparisonMicroChartData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\n\nThe value for comparison.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.suite.ui.microchart.ComparisonMicroChartViewType",
			"basename": "ComparisonMicroChartViewType",
			"resource": "sap/suite/ui/microchart/library.js",
			"module": "sap/suite/ui/microchart/library",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"description": "Lists the views of the comparison micro chart concerning the position of titles and labels.",
			"properties": [
				{
					"name": "Normal",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Titles and values are displayed above the bars."
				},
				{
					"name": "Wide",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Titles and values are displayed in the same line with the bars."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.DeltaMicroChart",
			"basename": "DeltaMicroChart",
			"resource": "sap/suite/ui/microchart/DeltaMicroChart.js",
			"module": "sap/suite/ui/microchart/DeltaMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value1",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The first value for delta calculation.",
						"methods": [
							"getValue1",
							"setValue1"
						]
					},
					{
						"name": "value2",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The second value for delta calculation.",
						"methods": [
							"getValue2",
							"setValue2"
						]
					},
					{
						"name": "title1",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The first value title.",
						"methods": [
							"getTitle1",
							"setTitle1"
						]
					},
					{
						"name": "title2",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The second value title.",
						"methods": [
							"getTitle2",
							"setTitle2"
						]
					},
					{
						"name": "displayValue1",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set, it is rendered instead of value1.",
						"methods": [
							"getDisplayValue1",
							"setDisplayValue1"
						]
					},
					{
						"name": "displayValue2",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set, it is rendered instead of value2.",
						"methods": [
							"getDisplayValue2",
							"setDisplayValue2"
						]
					},
					{
						"name": "deltaDisplayValue",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "If this property is set, it is rendered instead of a calculated delta.",
						"methods": [
							"getDeltaDisplayValue",
							"setDeltaDisplayValue"
						]
					},
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The semantic color of the delta value.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the chart.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "size",
						"type": "sap.m.Size",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The size of the chart. If is not set, the default size is applied based on the device type.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the delta micro chart.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DeltaMicroChart control.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the delta micro chart."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.DeltaMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.DeltaMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.DeltaMicroChart</code> itself.\n\nThe event is fired when the user chooses the delta micro chart."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.DeltaMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.DeltaMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe semantic color of the delta value.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getDeltaDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>deltaDisplayValue</code>"
					},
					"description": "Gets current value of property <code>deltaDisplayValue</code>.\n\nIf this property is set, it is rendered instead of a calculated delta."
				},
				{
					"name": "getDisplayValue1",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>displayValue1</code>"
					},
					"description": "Gets current value of property <code>displayValue1</code>.\n\nIf this property is set, it is rendered instead of value1."
				},
				{
					"name": "getDisplayValue2",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>displayValue2</code>"
					},
					"description": "Gets current value of property <code>displayValue2</code>.\n\nIf this property is set, it is rendered instead of value2."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.DeltaMicroChart."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Size",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\n\nThe size of the chart. If is not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "getTitle1",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title1</code>"
					},
					"description": "Gets current value of property <code>title1</code>.\n\nThe first value title."
				},
				{
					"name": "getTitle2",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>title2</code>"
					},
					"description": "Gets current value of property <code>title2</code>.\n\nThe second value title."
				},
				{
					"name": "getValue1",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value1</code>"
					},
					"description": "Gets current value of property <code>value1</code>.\n\nThe first value for delta calculation."
				},
				{
					"name": "getValue2",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>value2</code>"
					},
					"description": "Gets current value of property <code>value2</code>.\n\nThe second value for delta calculation."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the chart."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe semantic color of the delta value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setDeltaDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDeltaDisplayValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>deltaDisplayValue</code>"
						}
					],
					"description": "Sets a new value for property <code>deltaDisplayValue</code>.\n\nIf this property is set, it is rendered instead of a calculated delta.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDisplayValue1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayValue1",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>displayValue1</code>"
						}
					],
					"description": "Sets a new value for property <code>displayValue1</code>.\n\nIf this property is set, it is rendered instead of value1.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDisplayValue2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayValue2",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>displayValue2</code>"
						}
					],
					"description": "Sets a new value for property <code>displayValue2</code>.\n\nIf this property is set, it is rendered instead of value2.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.m.Size",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\n\nThe size of the chart. If is not set, the default size is applied based on the device type.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "setTitle1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle1",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title1</code>"
						}
					],
					"description": "Sets a new value for property <code>title1</code>.\n\nThe first value title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTitle2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle2",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>title2</code>"
						}
					],
					"description": "Sets a new value for property <code>title2</code>.\n\nThe second value title.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValue1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue1",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value1</code>"
						}
					],
					"description": "Sets a new value for property <code>value1</code>.\n\nThe first value for delta calculation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValue2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue2",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>value2</code>"
						}
					],
					"description": "Sets a new value for property <code>value2</code>.\n\nThe second value for delta calculation.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.DeltaMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.HarveyBallMicroChart",
			"basename": "HarveyBallMicroChart",
			"resource": "sap/suite/ui/microchart/HarveyBallMicroChart.js",
			"module": "sap/suite/ui/microchart/HarveyBallMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Displays a pie chart with highlighted sectors.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "total",
						"type": "float",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The total value. This is taken as 360 degrees value on the chart.",
						"methods": [
							"getTotal",
							"setTotal"
						]
					},
					{
						"name": "totalLabel",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The total label. If specified, it is displayed instead of the total value.",
						"methods": [
							"getTotalLabel",
							"setTotalLabel"
						]
					},
					{
						"name": "totalScale",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The scaling factor that is displayed next to the total value.",
						"methods": [
							"getTotalScale",
							"setTotalScale"
						]
					},
					{
						"name": "formattedLabel",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, the totalLabel parameter is considered as the combination of the total value and its scaling factor. The default value is false. It means that the total value and the scaling factor are defined separately by the total and the totalScale properties accordingly.",
						"methods": [
							"getFormattedLabel",
							"setFormattedLabel"
						]
					},
					{
						"name": "showTotal",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If it is set to true, the total value is displayed next to the chart. The default setting is true.",
						"methods": [
							"getShowTotal",
							"setShowTotal"
						]
					},
					{
						"name": "showFractions",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If it is set to true, the fraction values are displayed next to the chart. The default setting is true.",
						"methods": [
							"getShowFractions",
							"setShowFractions"
						]
					},
					{
						"name": "size",
						"type": "sap.m.Size",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The size of the chart. If it is not set, the default size is applied based on the device type.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "colorPalette",
						"type": "string[]",
						"defaultValue": "[]",
						"group": "Appearance",
						"visibility": "public",
						"description": "The color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.",
						"methods": [
							"getColorPalette",
							"setColorPalette"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the chart. If it is not set, the size of the control is defined by the size property.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "isResponsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"since": "1.38.0",
						"description": "If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.",
						"methods": [
							"getIsResponsive",
							"setIsResponsive"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "The set of points for this graphic element.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems",
							"bindItems",
							"unbindItems"
						]
					}
				],
				"defaultAggregation": "items",
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is triggered when the chart is pressed.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is triggered when the chart is pressed."
				}
			],
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item to the aggregation <code>items</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
				},
				{
					"name": "bindItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>items</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation <code>items</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>colorPalette</code>"
					},
					"description": "Gets current value of property <code>colorPalette</code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "getFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>formattedLabel</code>"
					},
					"description": "Gets current value of property <code>formattedLabel</code>.\n\nIf set to true, the totalLabel parameter is considered as the combination of the total value and its scaling factor. The default value is false. It means that the total value and the scaling factor are defined separately by the total and the totalScale properties accordingly.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isResponsive</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem[]"
					},
					"description": "Gets content of aggregation <code>items</code>.\n\nThe set of points for this graphic element."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChart."
				},
				{
					"name": "getShowFractions",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showFractions</code>"
					},
					"description": "Gets current value of property <code>showFractions</code>.\n\nIf it is set to true, the fraction values are displayed next to the chart. The default setting is true.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowTotal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showTotal</code>"
					},
					"description": "Gets current value of property <code>showTotal</code>.\n\nIf it is set to true, the total value is displayed next to the chart. The default setting is true.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Size",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\n\nThe size of the chart. If it is not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "getTotal",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>total</code>"
					},
					"description": "Gets current value of property <code>total</code>.\n\nThe total value. This is taken as 360 degrees value on the chart."
				},
				{
					"name": "getTotalLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>totalLabel</code>"
					},
					"description": "Gets current value of property <code>totalLabel</code>.\n\nThe total label. If specified, it is displayed instead of the total value."
				},
				{
					"name": "getTotalScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>totalScale</code>"
					},
					"description": "Gets current value of property <code>totalScale</code>.\n\nThe scaling factor that is displayed next to the total value."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
							"optional": false,
							"description": "The item whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.microchart.HarveyBallMicroChartItem</code> in the aggregation <code>items</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position"
						}
					],
					"description": "Inserts a item into the aggregation <code>items</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>items</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
						"description": "The removed item or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.suite.ui.microchart.HarveyBallMicroChartItem",
							"optional": false,
							"description": "The itemto remove or its index or id"
						}
					],
					"description": "Removes a item from the aggregation <code>items</code>."
				},
				{
					"name": "setColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColorPalette",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>colorPalette</code>"
						}
					],
					"description": "Sets a new value for property <code>colorPalette</code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "setFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFormattedLabel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>formattedLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>formattedLabel</code>.\n\nIf set to true, the totalLabel parameter is considered as the combination of the total value and its scaling factor. The default value is false. It means that the total value and the scaling factor are defined separately by the total and the totalScale properties accordingly.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setIsResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bIsResponsive",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isResponsive</code>"
						}
					],
					"description": "Sets a new value for property <code>isResponsive</code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setShowFractions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowFractions",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showFractions</code>"
						}
					],
					"description": "Sets a new value for property <code>showFractions</code>.\n\nIf it is set to true, the fraction values are displayed next to the chart. The default setting is true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowTotal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowTotal",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showTotal</code>"
						}
					],
					"description": "Sets a new value for property <code>showTotal</code>.\n\nIf it is set to true, the total value is displayed next to the chart. The default setting is true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.m.Size",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\n\nThe size of the chart. If it is not set, the default size is applied based on the device type.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Auto</code>."
				},
				{
					"name": "setTotal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fTotal",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>total</code>"
						}
					],
					"description": "Sets a new value for property <code>total</code>.\n\nThe total value. This is taken as 360 degrees value on the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTotalLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTotalLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>totalLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>totalLabel</code>.\n\nThe total label. If specified, it is displayed instead of the total value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTotalScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTotalScale",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>totalScale</code>"
						}
					],
					"description": "Sets a new value for property <code>totalScale</code>.\n\nThe scaling factor that is displayed next to the total value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "unbindItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>items</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
			"basename": "HarveyBallMicroChartItem",
			"resource": "sap/suite/ui/microchart/HarveyBallMicroChartItem.js",
			"module": "sap/suite/ui/microchart/HarveyBallMicroChartItem",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.core.Control",
			"description": "Configures the slices of the pie chart.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "color",
						"type": "sap.m.ValueColor",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The slice color.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "fraction",
						"type": "float",
						"defaultValue": "0",
						"group": "Misc",
						"visibility": "public",
						"description": "The fraction value.",
						"methods": [
							"getFraction",
							"setFraction"
						]
					},
					{
						"name": "fractionLabel",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The fraction label. If specified, it is displayed instead of the fraction value.",
						"methods": [
							"getFractionLabel",
							"setFractionLabel"
						]
					},
					{
						"name": "fractionScale",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The scaling factor that is displayed after the fraction value.",
						"methods": [
							"getFractionScale",
							"setFractionScale"
						]
					},
					{
						"name": "formattedLabel",
						"type": "boolean",
						"defaultValue": "false",
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.",
						"methods": [
							"getFormattedLabel",
							"setFormattedLabel"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChartItem with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueColor",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\n\nThe slice color.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "getFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>formattedLabel</code>"
					},
					"description": "Gets current value of property <code>formattedLabel</code>.\n\nIf set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "getFraction",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>fraction</code>"
					},
					"description": "Gets current value of property <code>fraction</code>.\n\nThe fraction value.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "getFractionLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>fractionLabel</code>"
					},
					"description": "Gets current value of property <code>fractionLabel</code>.\n\nThe fraction label. If specified, it is displayed instead of the fraction value."
				},
				{
					"name": "getFractionScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>fractionScale</code>"
					},
					"description": "Gets current value of property <code>fractionScale</code>.\n\nThe scaling factor that is displayed after the fraction value."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChartItem."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "sap.m.ValueColor",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\n\nThe slice color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFormattedLabel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>formattedLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>formattedLabel</code>.\n\nIf set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
				},
				{
					"name": "setFraction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fFraction",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>fraction</code>"
						}
					],
					"description": "Sets a new value for property <code>fraction</code>.\n\nThe fraction value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
				},
				{
					"name": "setFractionLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFractionLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>fractionLabel</code>"
						}
					],
					"description": "Sets a new value for property <code>fractionLabel</code>.\n\nThe fraction label. If specified, it is displayed instead of the fraction value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setFractionScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.HarveyBallMicroChartItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFractionScale",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>fractionScale</code>"
						}
					],
					"description": "Sets a new value for property <code>fractionScale</code>.\n\nThe scaling factor that is displayed after the fraction value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.microchart.RadialMicroChart",
			"basename": "RadialMicroChart",
			"resource": "sap/suite/ui/microchart/RadialMicroChart.js",
			"module": "sap/suite/ui/microchart/RadialMicroChart",
			"static": true,
			"visibility": "public",
			"since": "1.36.0",
			"extends": "sap.ui.core.Control",
			"description": "Displays a ring chart highlighting a current status. The status is displayed with a semantically colored radial bar and a percentage value.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "total",
						"type": "float",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The total value. This is taken as 360 degrees value on the chart.",
						"methods": [
							"getTotal",
							"setTotal"
						]
					},
					{
						"name": "fraction",
						"type": "float",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The fraction of the total value that is displayed.",
						"methods": [
							"getFraction",
							"setFraction"
						]
					},
					{
						"name": "percentage",
						"type": "float",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The percentage that is displayed.\nWhen a percentage is set, properties total and fraction are not considered.",
						"methods": [
							"getPercentage",
							"setPercentage"
						]
					},
					{
						"name": "valueColor",
						"type": "sap.m.ValueCSSColor",
						"defaultValue": "Neutral",
						"group": "Appearance",
						"visibility": "public",
						"description": "The color shown in the completed path.",
						"methods": [
							"getValueColor",
							"setValueColor"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is triggered when the chart is pressed.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Describes the configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is triggered when the chart is pressed."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.RadialMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.RadialMicroChart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.suite.ui.microchart.RadialMicroChart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.RadialMicroChart</code> itself.\n\nThe event is triggered when the chart is pressed."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.RadialMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.suite.ui.microchart.RadialMicroChart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.microchart.RadialMicroChart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.microchart.RadialMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getFraction",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>fraction</code>"
					},
					"description": "Gets current value of property <code>fraction</code>.\n\nThe fraction of the total value that is displayed."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.microchart.RadialMicroChart."
				},
				{
					"name": "getPercentage",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>percentage</code>"
					},
					"description": "Gets current value of property <code>percentage</code>.\n\nThe percentage that is displayed.\nWhen a percentage is set, properties total and fraction are not considered."
				},
				{
					"name": "getTotal",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "Value of property <code>total</code>"
					},
					"description": "Gets current value of property <code>total</code>.\n\nThe total value. This is taken as 360 degrees value on the chart."
				},
				{
					"name": "getValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.ValueCSSColor",
						"description": "Value of property <code>valueColor</code>"
					},
					"description": "Gets current value of property <code>valueColor</code>.\n\nThe color shown in the completed path.\n\nDefault value is <code>Neutral</code>."
				},
				{
					"name": "setFraction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.RadialMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fFraction",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>fraction</code>"
						}
					],
					"description": "Sets a new value for property <code>fraction</code>.\n\nThe fraction of the total value that is displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPercentage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.RadialMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fPercentage",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>percentage</code>"
						}
					],
					"description": "Sets a new value for property <code>percentage</code>.\n\nThe percentage that is displayed.\nWhen a percentage is set, properties total and fraction are not considered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTotal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.RadialMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fTotal",
							"type": "float",
							"optional": false,
							"description": "New value for property <code>total</code>"
						}
					],
					"description": "Sets a new value for property <code>total</code>.\n\nThe total value. This is taken as 360 degrees value on the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.microchart.RadialMicroChart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueColor",
							"type": "sap.m.ValueCSSColor",
							"optional": false,
							"description": "New value for property <code>valueColor</code>"
						}
					],
					"description": "Sets a new value for property <code>valueColor</code>.\n\nThe color shown in the completed path.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral</code>."
				}
			]
		}
	]
}