{"!define":{"sap.ushell.services.Container_obj":{"!type":"fn()","prototype":"sap.ushell.services.Container"},"sap.ushell.services.PersonalizationContainer_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationContainer"},"sap.ushell.components.factsheet.controls.PictureViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewer with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureViewer"},"sap.ushell.services.Personalization.Variant_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.Variant"},"sap.ushell.services.SupportTicket":{"!description":"The Unified Shell's Support Ticket service","createTicket":{"!description":"Creates a Support Ticket. Forwards the given data (JSON object) to the associated adapter.","!type":"fn(oSupportTicketData: JSON) -> Object","!category":"function","parameters":{"oSupportTicketData":"type: JSON, description: JSON object containing the input fields required for the support ticket."},"!static":false},"!category":"class","!constructorDescription":"This method MUST be called by the Unified Shell's container only, others\nMUST call <code>sap.ushell.Container.getService(\"SupportTicket\")<\/code>.\nConstructs a new instance of the support ticket service.","!module":"sap/ushell/services/SupportTicket","isEnabled":{"!description":"Checks if the service is enabled.\n<p>\nThe service enablement depends on the configuration in the back-end system and the bootstrap configuration.","!type":"fn() -> Boolean","!category":"function","!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's Support Ticket service"},"sap.ushell.services.EndUserFeedback":{"!description":"The Unified Shell's end user feedback service","!category":"class","getLegalText":{"!description":"Receives the legal text for the feedback dialog box","!type":"fn(undefined: undefined)","!category":"function","parameters":{"undefined":"type: undefined, description: undefined"},"!static":false},"sendFeedback":{"!description":"Sends a feedback. Forwards the given data (JSON object) to the associated adapter.","!type":"fn(JSON: JSON)","!category":"function","parameters":{"JSON":"type: JSON, description: object containing the input fields required for the end user feedback."},"!static":false},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others\nMUST call <code>sap.ushell.Container.getService(\"EndUserFeedback\")<\/code>.\nConstructs a new instance of the end user feedback service.","!module":"sap/ushell/services/EndUserFeedback","isEnabled":{"!description":"Checks if the service is enabled.\n<p>\nThe service enablement depends on the configuration in the back-end system and the bootstrap configuration.","!type":"fn() -> Object","!category":"function","!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's end user feedback service"},"sap.ushell.ui.launchpad.LoadingDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.LoadingDialog with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.launchpad.LoadingDialog"},"sap.ushell.components.factsheet.controls.PictureViewerItem":{"setImage":{"!description":"Setter for the aggregated <code>image<\/code>.","!type":"fn(oImage: sap.m.Image) -> sap.ushell.components.factsheet.controls.PictureViewerItem","!category":"function","parameters":{"oImage":"type: sap.m.Image, description: undefined"},"!static":false},"destroyImage":{"!description":"Destroys the image in the aggregation \nnamed <code>image<\/code>.","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewerItem","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewerItem with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureViewerItem.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : string<\/li><\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getImage image} : sap.m.Image<\/li><\/ul>\n<\/li>\n<li>Associations\n<ul><\/ul>\n<\/li>\n<li>Events\n<ul><\/ul>\n<\/li>\n<\/ul>","!module":"sap/ushell/components/factsheet/controls/PictureViewerItem","!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 \nPictureViewerItem is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage.\nPictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the\nsap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","setSrc":{"!description":"Setter for property <code>src<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSrc: String) -> sap.ushell.components.factsheet.controls.PictureViewerItem","!category":"function","parameters":{"sSrc":"type: string, description: new value for property <code>src<\/code>"},"!static":false},"!category":"class","getImage":{"!description":"Getter for aggregation <code>image<\/code>.<br/>\nPass in an existing Image control to be used inside the PictureViewer","!type":"fn() -> sap.m.Image","!category":"function","!static":false},"getSrc":{"!description":"Getter for property <code>src<\/code>.\nImage source url.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 \nPictureViewerItem is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage.\nPictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the\nsap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureViewerItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ushell.services.Container":{"!description":"The Unified Shell's container which manages renderers, services, and adapters.","!category":"class","!module":"sap/ushell/services/Container","!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's container which manages renderers, services, and adapters."},"sap.ushell.components.tiles.indicatorTileUtils.odata4analytics.SortOrder":{"!description":"Sort order of a property","Descending":{"!description":"Sort Order: descending.","!type":"String","!category":"enum"},"!category":"namespace","Ascending":{"!description":"Sort Order: ascending.","!type":"String","!category":"enum"},"!module":"sap/ushell/components/tiles/indicatorTileUtils/oData4Analytics","!helpDescription":"Sort order of a property"},"sap.ushell.components.factsheet.controls.PictureTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureTile with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureTile"},"sap.ushell.components.factsheet.controls.PictureTile":{"firePictureDelete":{"!description":"Fire event pictureDelete to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ushell.components.factsheet.controls.PictureTile","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureTile with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureTile.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '32px')<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: '32px')<\/li><\/ul>\n<\/li>\n<li>Aggregations\n<ul><\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTileContent tileContent} : string | sap.ushell.components.factsheet.controls.PictureViewerItem<\/li><\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link sap.ushell.components.factsheet.controls.PictureTile#event:pictureDelete pictureDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li><\/ul>\n<\/li>\n<\/ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.m.CustomTile#constructor sap.m.CustomTile}\ncan be used as well.","!module":"sap/ushell/components/factsheet/controls/PictureTile","setTileContent":{"!description":"Reference to one PictureViewerItem coming from the PictureViewer.","!type":"fn(vTileContent: String | sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureTile","!category":"function","parameters":{"vTileContent":"type: string|sap.ushell.components.factsheet.controls.PictureViewerItem, description: Id of an element which becomes the new target of this <code>tileContent<\/code> association.\n   Alternatively, an element instance may be given."},"!static":false},"getHeight":{"!description":"Getter for property <code>height<\/code>.\nheight (in pixels) of the picture viewer control.\n\nDefault value is <code>32px<\/code>","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 \nPictureTile is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage.\nPictureViewer was replacing the sap.m.Carousel as it wasn't supporting some versions of MS Internet Explorer.\nNow, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Tile control embedding an image and allowing custom sizing","setHeight":{"!description":"Setter for property <code>height<\/code>.\n\nDefault value is <code>32px<\/code>","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ushell.components.factsheet.controls.PictureTile","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: new value for property <code>height<\/code>"},"!static":false},"!category":"class","detachPictureDelete":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'pictureDelete' event of this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ushell.components.factsheet.controls.PictureTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Context object on which the given function had to be called."},"!static":false},"attachPictureDelete":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'pictureDelete' event of this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.<br/>.\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.<br/> itself. \n\nFired when the user deletes a picture","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oData":"type: object, description: An application specific payload object, that will be passed to the event handler along with the event object when firing the event.","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.<br/> itself."},"!static":false},"getWidth":{"!description":"Getter for property <code>width<\/code>.\nwidth (in pixels) of the picture viewer control.\n\nDefault value is <code>32px<\/code>","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getTileContent":{"!description":"Reference to one PictureViewerItem coming from the PictureViewer.","!type":"fn() -> String","!category":"function","!static":false},"setWidth":{"!description":"Setter for property <code>width<\/code>.\n\nDefault value is <code>32px<\/code>","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ushell.components.factsheet.controls.PictureTile","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: new value for property <code>width<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 \nPictureTile is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage.\nPictureViewer was replacing the sap.m.Carousel as it wasn't supporting some versions of MS Internet Explorer.\nNow, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Tile control embedding an image and allowing custom sizing","!proto":"sap.m.CustomTile","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ushell.ui.launchpad":{"text":{"!description":"the text to be displayed","!type":"sap.ui.core.URI","!category":"enum"},"iconUri":{"!description":"the sap-icon://-style URI of an icon","!type":"sap.ui.core.URI","!category":"enum"},"LoadingDialog":"sap.ushell.ui.launchpad.LoadingDialog_obj","!category":"namespace","loadAnimationWithInterval":{"!description":"defines whether the presentation of the Fiori flower animation should be displayed with an interval","!type":"Boolean","!category":"enum"}},"sap.ushell.System_obj":{"!type":"fn(oData: Object)","prototype":"sap.ushell.System"},"sap.ushell.components.factsheet.controls.PictureViewerItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewerItem with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureViewerItem"},"sap.ushell.services.CrossApplicationNavigation":{"isNavigationSupported":{"!description":"Tells whether the given navigation intent(s) are supported for the given\nparameters, form factor etc\n\"Supported\" means that a valid navigation target is configured for the\nuser for the given device.\n\nThis is effectively a test function for {@link toExternal}/ {@link hrefForExternal}.\nIt is functionally equivalent to {@link isIntentSupported} but accepts the same interface\nas {@link toExternal}/ {@link hrefForExternal}.","!type":"fn(aIntents: [Object], oComponent?: Object) -> Object","!category":"function","parameters":{"aIntents":"type: object[], description: the intents (such as <code>[\"#AnObject-action?A=B&c=e\"]<\/code>) to be checked\nwith object being instances the oArgs object of toExternal, hrefForExternal etc.\n\n e.g. <code>\n {\n     target: {\n         semanticObject: \"AnObject\",\n         action: \"action\"\n     },\n     params: {\n         A: \"B\"\n     }\n }\n <\/code>\n or\n e.g. <code>\n {\n     target: {\n         semanticObject: \"AnObject\",\n         action: \"action\"\n     },\n     params: {\n         A: \"B\",\n         c: \"e\"\n     }\n }\n <\/code>\n or\n <code>\n {\n     target: {\n         shellHash: \"SO-36&jumper=postman\"\n     },\n }\n <\/code>","oComponent":"type: object, description: the root component of the application"},"!static":false},"backToPreviousApp":{"!description":"using the browser history, this invocation attempts to navigate back to the previous application\nThis functionality simply performs a browser back today.\nIts behaviour is subject to change.\nIt may not yield the expected result esp. on mobile devices where \"back\" is the previous\ninner app state iff these are put into the history!","!type":"fn()","!category":"function","!static":false},"isInitialNavigation":{"!description":"Checks whether the FLP has performed the first navigation. This method can\nbe used to detect whether the current app was started directly, that is,\nwithout a previous navigation to another app, to the FLP home, or another\ntarget that adds an entry in the browser history.","!type":"fn() -> Boolean","!category":"function","!static":false},"hrefForExternal":{"!description":"Returns a string which can be put into the DOM (e.g. in a link tag)","!type":"fn(oArgs: Object, oComponent?: Object, bAsync: bool) -> String","!category":"function","parameters":{"bAsync":"type: bool, description: if set to <code>true<\/code>, a promise will be returned instead of\n  the direct argument. The promise will only succeed after all\n  compaction requests have been sent","oArgs":"type: object, description: object encoding a semantic object and action\n e.g.\n <pre>\n {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { A : \"B\" }\n }\n <\/pre>\n or\n e.g.\n <pre>\n {\n    target : {\n       semanticObject : \"AnObject\",\n       action: \"action\", context  : \"AB7F3C\"\n    },\n    params : {\n       A : \"B\",\n       c : \"e\"\n    }\n }\n <\/pre>\n or\n <pre>\n {\n    target : { shellHash : \"SO-36&jumper=postman\" }\n }\n <\/pre>","oComponent":"type: object, description: the root component of the application"},"!static":false},"!constructorDescription":"The Unified Shell's CrossApplicationNavigation service, which allows to\n       navigate to external targets or create links to external targets\n\nThis method MUST be called by the Unified Shell's container only, others MUST call\n<code>sap.ushell.Container.getService(\"CrossApplicationNavigation\")<\/code>.\nConstructs a new instance of the CrossApplicationNavigation service.\n\n\nCrossApplicationNavigation currently provides platform independent functionality.\n\nThis interface is for usage by applications or shell renderers/containers.\n\nUsage:\n\nexample: see demoapps/AppNavSample/MainXML.controller.js\n\n<code>\n  var xnavservice =  sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;<br/>\n     && sap.ushell.Container.getService(\"CrossApplicationNavigation\");<br/>\n  var href = ( xnavservice && xnavservice.hrefForExternal({<br/>\n         target : { semanticObject : \"Product\", action : \"display\" },<br/>\n         params : { \"ProductID\" : \"102343333\" }<br/>\n         })) || \"\";<br/>\n<\/code>\n\n\nParameter names and values are case sensitive.\n\nNote that the usage of multi-valued parameters (specifying an array with more than one member as parameter value, e.g.\n<code>  params : { A : [\"a1\", \"a2\"] } <\/code> )\nis possible with this API but <b>strongly discouraged<\/b>. Especially the navigation target matching performed at the back-end\nis not supported for multi-value parameters. Furthermore, it is not guaranteed that additional parameter values specified in the\nback-end configuration are merged with parameter values passed in this method.\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as UTF-8\n\nNote that when receiving the values as startup parameters (as part of the component data object) single values\nare represented as an array of size 1. Above example is returned as\n<code> deepEqual(getComponentData().startupParameters ,  { \"ProductID\" : [ \"102343333\" ] } ) <\/code>\n\nMake sure not to store security critical data within an URL\nURLs may appear in a server log, be persisted inside and outside the system.\n\nNote: When constructing large URLs, the URLs may be shortened and persisted on a database server\nfor prolonged time, the actual data is persisted under a key accessible to any User (guessing the key).\n\nThe same restrictions apply for the Application state","!module":"sap/ushell/services/CrossApplicationNavigation","getLinks":{"!description":"Resolves the given semantic object (or action) and business\nparameters to a list of links available to the user","!type":"fn(vArgs?: [Object | Object]) -> jQuery.Deferred.promise","!category":"function","parameters":{"vArgs":"type: object|object[], description: An object containing nominal arguments for the method, having the\n  following structure:\n  <pre>\n  {\n     semanticObject: \"Object\", // optional, matches any semantic\n                               // objects if undefined\n\n     action: \"action\",         // optional, matches any actions if\n                               // undefined\n\n     params: {                 // optional business parameters\n        A: \"B\",\n        C: [\"e\", \"j\"]\n     },\n     withAtLeastOneUsedParam: true, // optional, defaults to false. If\n                                    // true, only the links that use\n                                    // at least one (non sap-) parameter\n                                    // from 'params' will be returned.\n     treatTechHintAsFilter : true, // optional, defaults to false\n                                   // if true, only apps that match\n                                   // exactly the supplied technology\n                                   // (e.g. sap-ui-tech-hint=WDA) will be considered\n\n     ui5Component: UI5Component, // mandatory, the UI5 component\n                                 // invoking the service, shall be a root component!\n\n     appStateKey: \"abc123...\",   // optional, application state key\n                                 // to add to the generated links,\n                                 // SAP internal usage only\n\n     compactIntents: true        // optional, whether intents\n                                 // should be returned in compact\n                                 // format. Defaults to false.\n     ignoreFormFactor: true,   // optional, defaults to false, deprecated, do not use, may have no effect in the future\n  }\n  <\/pre>\n\n  This method supports a mass invocation interface to obtain\n  multiple results with a single call, as shown in the following example:\n  <pre>\n     oCrossApplicationService.getLinks([ // array, because multiple invocations are to be made\n        [                           // arguments for the first invocation\n          { semanticObject: \"SO\" }  // this method supports one parameter only in each call\n        ],\n        [                           // arguments for the second invocation\n          { action: \"someAction\" }\n        ]\n        // ... and so on\n    ]);\n  <\/pre>\n\n  <p>Calling this method with no arguments will produce the same result\n  as if the method was called with an empty object.<\/p>"},"!static":false},"isIntentSupported":{"!description":"Tells whether the given intent(s) are supported, taking into account the form factor of\nthe current device. \"Supported\" means that navigation to the intent is possible.\nNote that the intents are assumed to be in internal format  and expanded.","!type":"fn(aIntents: [String], oComponent?: Object) -> Object","!category":"function","parameters":{"aIntents":"type: string[], description: the intents (such as <code>[\"#AnObject-action?A=B&c=e\"]<\/code>) to be checked","oComponent":"type: object, description: the root component of the application"},"!static":false},"!category":"class","expandCompactHash":{"!description":"if sHashFragment is a compacted hash (sap-intent-param is present),\nin a hash, this function replaces it into a long url with all parameters\nexpanded","!type":"fn(sHashFragment: String) -> Object","!category":"function","parameters":{"sHashFragment":"type: string, description: an (internal format) shell hash"},"!static":false},"getDistinctSemanticObjects":{"!description":"Returns a list of semantic objects of the intents the current user\ncan navigate to.","!type":"fn() -> jQuery.Deferred.promise","!category":"function","!static":false},"getSemanticObjectLinks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 use getLinks<br>Resolves a given semantic object and business parameters to a list of links,\ntaking into account the form factor of the current device.","!type":"fn(sSemanticObject: String, mParameters?: Object, bIgnoreFormFactor?: Boolean, oComponent?: Object, sAppStateKey?: String, bCompactIntents?: Boolean) -> Object","!category":"function","parameters":{"bCompactIntents":"type: boolean, description: whether the returned intents should be returned in compact format. Defaults to false.","sAppStateKey":"type: string, description: application state key to add to the generated links, SAP internal usage only","mParameters":"type: object, description: the map of business parameters with values, for instance\n  <pre>\n  {\n    A: \"B\",\n    c: \"e\"\n  }\n  <\/pre>","sSemanticObject":"type: string, description: the semantic object such as <code>\"AnObject\"<\/code>","bIgnoreFormFactor":"type: boolean, description: when set to <code>true<\/code> the form factor of the current device is ignored","oComponent":"type: Object, description: SAP UI5 Component invoking the service"},"!static":false},"hrefForAppSpecificHash":{"!description":"Returns a string which can be put into the DOM (e.g. in a link tag)\ngiven an application specific hash suffix\n\nExample: <code>hrefForAppSpecificHash(\"View1/details/0/\")<\/code> returns\n<code>#SemanticObject-action&/View1/details/0/<\/code> if the current application\nruns in the shell and was started using \"SemanticObject-action\" as\nshell navigation hash","!type":"fn(sAppHash: String) -> String","!category":"function","parameters":{"sAppHash":"type: string, description: the app specific router, obtained e.g. via router.getURL(...)"},"!static":false},"toExternal":{"!description":"Navigate to an specified external target (e.g. different launchpad application)\nInvocation will trigger an hash change and subsequent invocation of the application.\n\nIf the navigation target opens in a new window the running application may be retained.","!type":"fn(oArgs: Object, oComponent?: Object)","!category":"function","parameters":{"oArgs":"type: Object, description: configuration object describing the target\n\n e.g. <code>{ target : { semanticObject : \"AnObject\", action: \"action\" },<br/>\n        params : { A : \"B\" } }<\/code>\n   constructs sth. like   <code>#AnObject-action?A=B&C=e&C=j<\/code>;\n or\n e.g. <code>{ target : { semanticObject : \"AnObject\", action: \"action\", context  : \"AB7F3C\" },<br/>\n        params : { A : \"B\", c : \"e\" } }<\/code>\n or\n     <code>{ target : { shellHash : \"SO-36&jumper=postman\" },\n     }<\/code>\n\nand navigate to it via changing the hash\n\nA proper way for an application to generate a link to return to the home page of the\nFiori launchpad is:\n<code>\nhrefForExternal( { target : { shellHash : \"#\" }})\n<\/code>\n\nDo *not* use \"#Shell-home\" or \"Shell-home\" to navigate to a specific homepage!\n\nThe actual navigation may occur deferred!\n\n\n\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as utf-8","oComponent":"type: object, description: an optional SAP UI5 Component,"},"!static":false},"!proto":"sap.ui.base.Object","historyBack":{"!description":"performs window.history.back() if supported by the underlying\nplatform.\nMay be a noop if the url is the first url in the browser.","!type":"fn()","!category":"function","!static":false}},"sap.ushell.services.Personalization.VariantSetAdapter_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.VariantSetAdapter"},"sap.ushell.services.PersonalizationContainerVariant_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationContainerVariant"},"sap.ushell.ui.appfinder":{"title":{"!description":"title : String","!type":"String","!category":"enum"},"AppBox":"sap.ushell.ui.appfinder.AppBox_obj","!category":"namespace","url":{"!description":"url : String","!type":"String","!category":"enum"}},"sap.ushell.services.UsageAnalytics_obj":{"!type":"fn(oContainerInterface: Object, sParameter: Object, oServiceProperties: Object)","prototype":"sap.ushell.services.UsageAnalytics"},"sap.ushell.services":{"AppLifeCycle":"sap.ushell.services.AppLifeCycle_obj","Notifications":"sap.ushell.services.Notifications_obj","SupportTicket":"sap.ushell.services.SupportTicket_obj","createAdapter":{"!description":"For the given remote system, creates a new adapter that corresponds to the service\nto which this container interface was passed at construction time.","!type":"String","!category":"enum"},"!module":"sap/ushell/services/Container","ContextContainer":"sap.ushell.services.Personalization.ContextContainer_obj","registerDirtyStateProvider":{"!description":"Register the work protection dirty callback function.\nIn the work protect mechanism, each platform can register their own method in order to check if data\nwas changed during the session, and notify the container about the change\n\nUse <code>Function.prototype.bind()<\/code> to determine the callback's <code>this<\/code> or\nsome of its arguments.","!type":"String","!category":"enum"},"getGlobalDirty":{"!description":"Returns the global dirty state.\n\nAll open UShell browser windows for the same origin are asked about their global dirty\nstate.","!type":"String","!category":"enum"},"info":{"!description":"Shows an info message on the screen.","!type":"String","!category":"enum"},"cancelLogon":{"!description":"Cancels the logon procedure in the current frame, if any. This MUST be used by the\nlogon frame provider in case the user wants to close the logon frame for good.\nIt will report \"Authentication cancelled\" and let all pending requests for the current\nrealm fail. As a side-effect, it also calls <code>destroy<\/code> on the logon frame\nprovider.","!type":"String","!category":"enum"},"PersonalizationContainerVariant":"sap.ushell.services.PersonalizationContainerVariant_obj","attachLogoutEvent":{"!description":"Attaches a listener to the logout event.","!type":"String","!category":"enum"},"VariantSetAdapter":"sap.ushell.services.Personalization.VariantSetAdapter_obj","TransientPersonalizer":"sap.ushell.services.TransientPersonalizer_obj","setLogonFrameProvider":{"!description":"Determines the current logon frame provider for the entire Unified Shell. Initially,\na rudimentary default provider is active and should be replaced as soon as possible\nby the current renderer.\n<p>\nA logon frame provider is used to facilitate user authentication even for requests sent\nvia <code>XMLHttpRequest<\/code>. It is called back in order to create a hidden\n<code>IFRAME<\/code>, to show it to the user, then to hide and destroy it. The frame\nmust be treated as a black box by the provider; especially with respect to the source of\nthe frame which is managed by the Unified Shell framework. Showing the frame might\nrequire user interaction and some decoration around the frame. The frame should be\ndestroyed, not reused, to be on the safe side. Note that in typical cases with SAML2,\nauthentication happens automatically and the frame can stay hidden.\n<p>\nThe following order of method calls is guaranteed:\n<ol>\n  <li> The <code>create<\/code> method is called first.\n  <li> The <code>show<\/code> method may be called next (if there is HTML code to\n  display).\n  <li> The <code>destroy<\/code> method is called last.\n  <li> A new cycle may start for a new logon process.\n<\/ol>","!type":"String","!category":"enum"},"addRemoteSystem":{"!description":"Adds a system to the list of remote systems currently in use. On logout\nthis list is processed and performs a logout for each system via the ContainerAdapter\nspecific for its platform.","!type":"String","!category":"enum"},"getDirtyFlag":{"!description":"Returns the isDirty flag value.","!type":"String","!category":"enum"},"!category":"namespace","Container":"sap.ushell.services.Container_obj","setDirtyFlag":{"!description":"Setter for the isDirty flag value.\n\nDefault value is false","!type":"String","!category":"enum"},"URLParsing":"sap.ushell.services.URLParsing_obj","NavTargetResolution":"sap.ushell.services.NavTargetResolution_obj","attachRendererCreatedEvent":{"!description":"Attaches a listener to the rendererCreated event.","!type":"String","!category":"enum"},"error":{"!description":"Shows an error message on the screen.","!type":"String","!category":"enum"},"PersonalizationContainer":"sap.ushell.services.PersonalizationContainer_obj","createRenderer":{"!description":"Creates a new renderer instance for the given renderer name.\n<p>\nNames without a dot are interpreted as package names within the default naming convention\nand will be expanded to\n<code>\"sap.ushell.renderers.\" + sRendererName + \".Renderer\"<\/code>.\nNames containing a dot are used \"as is\".\n<p>\nThe resulting name must point to a SAPUI5 object which is first required and then\ncreated (constructor call without arguments).\nThe object must be either a control (i.e. extend <code>sap.ui.core.Control<\/code>) or a\nUI component (i.e. extend <code>sap.ui.core.UIComponent<\/code>), which is then\nautomatically wrapped into a <code>sap.ui.core.ComponentContainer<\/code> control by this\nmethod. This <code>sap.ui.core.ComponentContainer<\/code> is created with\n<code>height<\/code> and <code>width<\/code> set to \"100%\" to accommodate the complete\navailable space.\n<p>\nThe returned renderer is supposed to be added to a direct child (for example\n<code>DIV<\/code>) of the <code>BODY<\/code> of the page and there should be no other\nparts of the page consuming space outside the renderer.\nUse CSS class <code>sapUShellFullHeight<\/code> at <code>HTML<\/code>, <code>BODY<\/code>\nand at the element to which the renderer is added to allow the renderer to use 100%\nheight.","!type":"String","!category":"enum"},"Message":"sap.ushell.services.Message_obj","detachLogoutEvent":{"!description":"Detaches a listener from the rendererCreated event.","!type":"String","!category":"enum"},"VariantSet":"sap.ushell.services.Personalization.VariantSet_obj","ContainerInterface":"sap.ushell.services.ContainerInterface_obj","EndUserFeedback":"sap.ushell.services.EndUserFeedback_obj","PersonalizationContainerVariantSet":"sap.ushell.services.PersonalizationContainerVariantSet_obj","Personalizer":"sap.ushell.services.Personalizer_obj","Personalization":"sap.ushell.services.Personalization_obj","logout":{"!description":"Logs out the current user from all relevant back-end systems, including the logon system\nitself.","!type":"String","!category":"enum"},"UserInfo":"sap.ushell.services.UserInfo_obj","UsageAnalytics":"sap.ushell.services.UsageAnalytics_obj","LaunchPage":"sap.ushell.services.LaunchPage_obj","getService":{"!description":"Returns a service with the given name, creating it if necessary.\nServices are singleton objects identified by their (resulting) name.\n<p>\nNames without a dot are interpreted as service names within the default naming convention\nand will be expanded to <code>\"sap.ushell.services.\" + sServiceName<\/code>.\nNames containing a dot are not yet supported. This name may be overridden via\nconfiguration. See example 2 below.\n<p>\nThe resulting name must point to a constructor function which is first required as a\nSAPUI5 module and then called to create a service instance.\nThe service will be passed to a corresponding service adapter for the current logon system, as well as a callback\ninterface (of virtual type <code>sap.ushell.services.ContainerInterface<\/code>) to the\ncontainer providing a method <code>createAdapter(oSystem)<\/code> to create further\nadapters for the same service but connected to remote systems.\nThe third parameter will be <code>sParameter<\/code> as passed to this function.\nThe fourth parameter will be an\nobject with the property <code>config<\/code> supplied by the configuration. See\nexample 2 below.\n<p>\nThe adapter for the logon system will be created before the service. Its constructor\ngets three parameters. The first parameter is the logon system, the second parameter is\n<code>sParameter<\/code> and the third parameter is an object with the property\n<code>config<\/code> supplied by the configuration.\n<p>\nThe service may declare itself adapterless by setting the property\n<code>hasNoAdapter = true<\/code> at the constructor function. In this case no adapter\nwill be created and passed to the constructor and all other parameters will be shifted.\n<p>\n<b>Example 1:<\/b> The service <code>sap.ushell.services.UserInfo<\/code> is\nparameterless. It indicates this by setting\n<code>sap.ushell.services.UserInfo.hasNoAdapter = true;<\/code>.\n<p>\n<b>Example 2:<\/b> (Configuration)\n<pre>\nwindow[\"sap-ushell-config\"] = {\n    services: {\n        Foo: {\n            module: \"my.own.Foo\"\n            config: {header: \"hidden\"},\n            adapter: {\n                module: \"my.own.FooAdapter\",\n                config: {foo: \"bar\"}\n            }\n        }\n    }\n}\noService = sap.ushell.Container.getService(\"Foo\", \"runtimeConfig\");\n<\/pre>\nNow <code>oService<\/code> is an instance of <code>my.own.Foo<\/code>. The third parameter\nof the constructor will be \"runtimeConfig\", the fourth parameter\n<code>{config: {header: \"hidden\"}}<\/code>. Its adapter is an instance of\n<code>my.own.FooAdapter<\/code> constructed with the parameters logon system,\n\"runtimeConfig\" and <code>{config: {foo: \"bar\"}}<\/code>.","!type":"String","!category":"enum"},"Variant":"sap.ushell.services.Personalization.Variant_obj","CrossApplicationNavigation":"sap.ushell.services.CrossApplicationNavigation_obj","confirm":{"!description":"Shows an confirmation dialog on the screen.\n\nThe callback is called with the following signature: <code>function(oAction)<\/code>\nwhere oAction is the button that the user has tapped. For example, when the user has pressed the close button, a sap.m.MessageBox.Action.Close is returned.\n\nIf no actions are provided, OK and Cancel will be shown. In this case oAction is set by one of the following three values:\n1. sap.m.MessageBox.Action.OK: OK (confirmed) button is tapped.\n2. sap.m.MessageBox.Action.Cancel: Cancel (unconfirmed) button is tapped.\n3. null: Confirm dialog is closed by Calling sap.m.InstanceManager.closeAllDialogs()","!type":"String","!category":"enum"},"Bookmark":"sap.ushell.services.Bookmark_obj"},"sap.ushell.renderers.fiori2":{"Renderer":"sap.ushell.renderers.fiori2.Renderer_obj","LaunchpadState":{"!description":"The launchpad states that can be passed as a parameter.<\/br>\n<b>Values:<b>\nApp - launchpad state when running a Fiori app<\/br>\nHome - launchpad state when the home page is open<\/br>","!type":"String","!category":"enum"},"!category":"namespace","Shell":{"!description":"Shell : String","!type":"String","!category":"enum","!module":"sap/ushell/renderers/fiori2/Shell.controller"}},"sap.ushell.services.Notifications":{"getNotificationsByTypeWithGroupHeaders":{"!description":"Returns the notifications of the user sorted by type include the group headers and the notifications","!type":"fn() -> promise","!category":"function","!static":false},"init":{"!description":"Initializes the notification service\n\nInitialization is performed only if the following two conditions are fulfilled:<br>\n 1. Notification service is enabled<br>\n 2. Notification service hasn't been initialized yet<br>\n\nThe main initialization functionality is determining and setting the mode in which notifications are consumed.<br>\nThe possible modes are:<br>\n PACKAGED_APP - Notifications are fetched when a callback is called by PackagedApp environment<br>\n FIORI_CLIENT - Notifications are fetched when a callback is called by FioriClient environment<br>\n WEB_SOCKET - Notifications are fetched on WebSocket \"ping\"<br>\n POLLING - Notifications are fetched using periodic polling mechanism<br>","!type":"fn()","!category":"function","!static":false},"markRead":{"!description":"Launches mark as read notification call.<br>\n\nAfter launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!type":"fn(sNotificationId: Object)","!category":"function","parameters":{"sNotificationId":"type: object, description: The ID of the notification whose action is being executed"},"!static":false},"!module":"sap/ushell/services/Notifications","getNotifications":{"!description":"Returns the notifications of the user","!type":"fn() -> promise","!category":"function","!static":false},"isEnabled":{"!description":"Indicates whether notification service is enabled.<br>\nEnabling is based on the <code>enable<\/code> service configuration flag.<br>\nThe service configuration must also include serviceUrl attribute.<br>","!type":"fn() -> Boolean","!category":"function","!static":false},"getUnseenNotificationsCount":{"!description":"Returns the number of unseen notifications<br>\ne.g. Notifications that the user hasn't seen yet.","!type":"fn() -> promise","!category":"function","!static":false},"registerNotificationsUpdateCallback":{"!description":"Gets a callback function that will be called when updated notifications data is available.","!type":"fn(The: Object)","!category":"function","parameters":{"The":"type: object, description: callback function that is registered and called on data update."},"!static":false},"!description":"A UShell service for fetching user notification data from the Notification center/service<br>\nand exposing them to the Unified Shell and Fiori applications UI controls.\n\nIn order to get user notifications, Unified Shell notification service issues OData requests<br>\nto the service defined by the configuration property <code>serviceUrl<\/code>,<br>\nfor example: \"/sap/opu/odata4/iwngw/notification/default/iwngw/notification_srv/0001\"<br>.\n\nUnified Shell Notification service has several working modes, depending on the environment and the available resources:<br>\n PackagedApp mode: Fiori launchpad runs in the context of PackagedApp<br>\n FioriClient mode: Fiori launchpad runs in the context of FioriLaunchpad<br>\n WebSocket mode: Fiori launchpad runs in a browser, and WebSocket connection to the notifications provider is available<br>\n Polling mode: Fiori launchpad in runs in a browser, and WebSocket connection to the notifications provider is not available<br>\n\nThe notification service exposes an API that includes:\n- Service enabling and initialization<br>\n- Registration of callback functions (by Shell/FLP controls) that will be called for every data update<br>.\n- Retrieval of notification data (e.g. notifications, number of unseen notifications)\n- Execution of a notification actions\n- Marking user notifications as seen","isFirstDataLoaded":{"!description":"Return whether first request was already performed and data was returned.<br>","!type":"fn()","!category":"function","!static":false},"!category":"class","dismissNotification":{"!description":"Launches dismiss notification call.<br>","!type":"fn(sNotificationId: Object)","!category":"function","parameters":{"sNotificationId":"type: object, description: The ID of the notification whose action is being executed"},"!static":false},"executeBulkAction":{"!description":"Launches a notification action oData call.<br>\n\nAfter launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!type":"fn(sNotificationId: Object, sActionId: Object)","!category":"function","parameters":{"sNotificationId":"type: object, description: The ID of the notification whose action is being executed","sActionId":"type: object, description: The ID of the action that is being executed"},"!static":false},"registerNotificationCountUpdateCallback":{"!description":"Gets a callback function that will be called when updated unseen notifications count is available.","!type":"fn(The: Object)","!category":"function","parameters":{"The":"type: object, description: callback function that is registered and called on data update."},"!static":false},"notificationsSeen":{"!description":"Mark all notifications as seen.<br>\nthe main use-case is when the user navigated to the notification center and sees all the pending notifications.<br>","!type":"fn()","!category":"function","!static":false},"!helpDescription":"A UShell service for fetching user notification data from the Notification center/service<br>\nand exposing them to the Unified Shell and Fiori applications UI controls.\n\nIn order to get user notifications, Unified Shell notification service issues OData requests<br>\nto the service defined by the configuration property <code>serviceUrl<\/code>,<br>\nfor example: \"/sap/opu/odata4/iwngw/notification/default/iwngw/notification_srv/0001\"<br>.\n\nUnified Shell Notification service has several working modes, depending on the environment and the available resources:<br>\n PackagedApp mode: Fiori launchpad runs in the context of PackagedApp<br>\n FioriClient mode: Fiori launchpad runs in the context of FioriLaunchpad<br>\n WebSocket mode: Fiori launchpad runs in a browser, and WebSocket connection to the notifications provider is available<br>\n Polling mode: Fiori launchpad in runs in a browser, and WebSocket connection to the notifications provider is not available<br>\n\nThe notification service exposes an API that includes:\n- Service enabling and initialization<br>\n- Registration of callback functions (by Shell/FLP controls) that will be called for every data update<br>.\n- Retrieval of notification data (e.g. notifications, number of unseen notifications)\n- Execution of a notification actions\n- Marking user notifications as seen","!proto":"sap.ui.base.Object"},"sap.ushell.services.UserInfo":{"!description":"The Unified Shell's user information service, which allows you to retrieve\n    information about the logged-in user.","!category":"class","!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\n<code>sap.ushell.Container.getService(\"UserInfo\")<\/code>.\nConstructs a new instance of the user information service.","!module":"sap/ushell/services/UserInfo","getId":{"!description":"Returns the id of the user.","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's user information service, which allows you to retrieve\n    information about the logged-in user."},"sap.ushell.ui5service.ShellUIService_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.ShellUIService with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oCallerContext: Object)","prototype":"sap.ushell.ui5service.ShellUIService"},"sap.ushell.components.factsheet":{"controls":"sap.ushell.components.factsheet.controls","!category":"namespace"},"sap.ushell.ui.footerbar.AddBookmarkButton":{"setKeywords":{"!description":"Setter for property <code>keywords<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sKeywords: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"sKeywords":"type: string, description: new value for property <code>keywords<\/code>"},"!static":false},"getAppData":{"!description":"Getter for property <code>appData<\/code>.\nDeprecated \u2013 an object containing application information properties.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> Object","!category":"function","!static":false},"getNumberUnit":{"!description":"Getter for property <code>numberUnit<\/code>.\nFor dynamic tile, the unit to be displayed below the number, for example, USD.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"getAfterPressHandler":{"!description":"Getter for property <code>afterPressHandler<\/code>.\nA callback function to be called after the press handler called upon clicking the button.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> Object","!category":"function","!static":false},"getServiceUrl":{"!description":"Getter for property <code>serviceUrl<\/code>.\nURL of an OData service from which data should be read.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> Object","!category":"function","!static":false},"getInfo":{"!description":"Getter for property <code>info<\/code>.\nText to be displayed at the bottom of the tile.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/ushell/ui/footerbar/AddBookmarkButton","setAppData":{"!description":"Setter for property <code>appData<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(oAppData: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"oAppData":"type: object, description: new value for property <code>appData<\/code>"},"!static":false},"setCustomUrl":{"!description":"Setter for property <code>customUrl<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(oCustomUrl: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"oCustomUrl":"type: any, description: new value for property <code>customUrl<\/code>"},"!static":false},"getKeywords":{"!description":"Getter for property <code>keywords<\/code>.\nThe keywords based on which the future tile should be indexed and filtered.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"getBeforePressHandler":{"!description":"Getter for property <code>beforePressHandler<\/code>.\nA callback function to be called prior to the press handler upon clicking the button.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> Object","!category":"function","!static":false},"setServiceRefreshInterval":{"!description":"Setter for property <code>serviceRefreshInterval<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sServiceRefreshInterval: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"sServiceRefreshInterval":"type: string, description: new value for property <code>serviceRefreshInterval<\/code>"},"!static":false},"!category":"class","setSubtitle":{"!description":"Setter for property <code>subtitle<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSubtitle: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"sSubtitle":"type: string, description: new value for property <code>subtitle<\/code>"},"!static":false},"getTitle":{"!description":"Getter for property <code>title<\/code>.\nTitle to be displayed on the tile.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"getShowGroupSelection":{"!description":"Getter for property <code>showGroupSelection<\/code>.\nDefines whether to display the group selection control within the Save as Tile dialog box.\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"setAfterPressHandler":{"!description":"Setter for property <code>afterPressHandler<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(oAfterPressHandler: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"oAfterPressHandler":"type: any, description: new value for property <code>afterPressHandler<\/code>"},"!static":false},"getServiceRefreshInterval":{"!description":"Getter for property <code>serviceRefreshInterval<\/code>.\nNumber of seconds after which dynamic content is read from the data source and the display is refreshed.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"getSubtitle":{"!description":"Getter for property <code>subtitle<\/code>.\nSubtitle to be displayed below the tile title.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.footerbar.AddBookmarkButton with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"setTileIcon":{"!description":"Setter for property <code>tileIcon<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sTileIcon: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"sTileIcon":"type: string, description: new value for property <code>tileIcon<\/code>"},"!static":false},"setNumberUnit":{"!description":"Setter for property <code>numberUnit<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sNumberUnit: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"sNumberUnit":"type: string, description: new value for property <code>numberUnit<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ui/footerbar/AddBookmarkButton.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBeforePressHandler beforePressHandler} : any<\/li>\n<li>{@link #getAfterPressHandler afterPressHandler} : any<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getTileIcon tileIcon} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getKeywords keywords} : string<\/li>\n<li>{@link #getCustomUrl customUrl} : any<\/li>\n<li>{@link #getServiceUrl serviceUrl} : any<\/li>\n<li>{@link #getServiceRefreshInterval serviceRefreshInterval} : string<\/li>\n<li>{@link #getShowGroupSelection showGroupSelection} : boolean (default: true)<\/li>\n<li>{@link #getAppData appData} : object<\/li><\/ul>\n<\/li>\n<li>Aggregations\n<ul><\/ul>\n<\/li>\n<li>Associations\n<ul><\/ul>\n<\/li>\n<li>Events\n<ul><\/ul>\n<\/li>\n<\/ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","setShowGroupSelection":{"!description":"Setter for property <code>showGroupSelection<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bShowGroupSelection: Boolean) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"bShowGroupSelection":"type: boolean, description: new value for property <code>showGroupSelection<\/code>"},"!static":false},"!description":"A button to be displayed in the application footer. Clicking the button opens a dialog box allowing the user to save the app state, so that the app can be launched in this state directly from the launchpad.","getTileIcon":{"!description":"Getter for property <code>tileIcon<\/code>.\nIcon to be desplied in the Tile.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"setTitle":{"!description":"Setter for property <code>title<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sTitle: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"sTitle":"type: string, description: new value for property <code>title<\/code>"},"!static":false},"setInfo":{"!description":"Setter for property <code>info<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sInfo: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"sInfo":"type: string, description: new value for property <code>info<\/code>"},"!static":false},"setServiceUrl":{"!description":"Setter for property <code>serviceUrl<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(oServiceUrl: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"oServiceUrl":"type: any, description: new value for property <code>serviceUrl<\/code>"},"!static":false},"getCustomUrl":{"!description":"Getter for property <code>customUrl<\/code>.\nA customized target URL for the tile.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> Object","!category":"function","!static":false},"!proto":"sap.m.Button","!helpDescription":"A button to be displayed in the application footer. Clicking the button opens a dialog box allowing the user to save the app state, so that the app can be launched in this state directly from the launchpad.","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.footerbar.AddBookmarkButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"setBeforePressHandler":{"!description":"Setter for property <code>beforePressHandler<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(oBeforePressHandler: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","!category":"function","parameters":{"oBeforePressHandler":"type: any, description: new value for property <code>beforePressHandler<\/code>"},"!static":false}},"sap.ushell.components.factsheet.controls":{"PictureViewerItem":"sap.ushell.components.factsheet.controls.PictureViewerItem_obj","height":{"!description":"height (in pixels) of the picture viewer control.","!type":"sap.ui.core.CSSSize","!category":"enum"},"PictureViewer":"sap.ushell.components.factsheet.controls.PictureViewer_obj","removable":{"!description":"Defines whether or not you can remove a picture","!type":"Boolean","!category":"enum"},"tileScaling":{"!description":"Percentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available","!type":"Number","!category":"enum"},"width":{"!description":"width (in pixels) of the picture viewer control.","!type":"sap.ui.core.CSSSize","!category":"enum"},"!category":"namespace","src":{"!description":"Image source url.","!type":"String","!category":"enum"},"PictureTile":"sap.ushell.components.factsheet.controls.PictureTile_obj"},"sap.ushell.services.TransientPersonalizer":{"getValue":{"!description":"Synchronously gets a personalization data value.","!type":"fn() -> Object","!category":"function","!static":false},"!description":"The transient personalizer shall be used\n       in container mode for table personalization.","delPersData":{"!description":"Deletes a personalization data value.","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","setPersData":{"!description":"Sets a personalization data value.","!type":"fn(oValue: Object) -> Object","!category":"function","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."},"!static":false},"setValue":{"!description":"Synchronously sets a personalization data value.","!type":"fn(oValue: Object)","!category":"function","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."},"!static":false},"!constructorDescription":"To be called by the personalization service getTransientPersonalizer method.","getPersData":{"!description":"Gets a personalization data value.","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/ushell/services/Personalization","!proto":"sap.ui.base.Object","!helpDescription":"The transient personalizer shall be used\n       in container mode for table personalization."},"sap.ushell.services.Personalizer":{"!description":"The Unified Shell personalizer providing set get delete\n       methods to access the persisted personalization data in direct mode.","delPersData":{"!description":"Deletes a personalization data value.","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","setPersData":{"!description":"Sets a personalization data value.","!type":"fn(oValue: Object) -> Object","!category":"function","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."},"!static":false},"!constructorDescription":"To be called by the personalization service getPersonalizer method.","getPersData":{"!description":"Gets a personalization data value.","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/ushell/services/Personalization","!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell personalizer providing set get delete\n       methods to access the persisted personalization data in direct mode."},"sap.ushell.ui.shell.ToolAreaItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.shell.ToolAreaItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.shell.ToolAreaItem"},"sap.ushell.System":{"!description":"A representation of a system","!category":"class","!constructorDescription":"Constructs a new system object representing a system used in the Unified Shell.","!module":"sap/ushell/System","!proto":"sap.ui.base.Object","!helpDescription":"A representation of a system"},"sap.ushell.ui5service":{"ShellUIService":"sap.ushell.ui5service.ShellUIService_obj","!category":"namespace"},"sap.ushell.services.NavTargetResolution_obj":{"!type":"fn(a: oServiceConfiguration)","prototype":"sap.ushell.services.NavTargetResolution"},"sap.ushell.services.Personalization.ContextContainer_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.ContextContainer"},"sap.ushell.ui5service.ShellUIService":{"setHierarchy":{"!description":"Displays the given hierarchy in the shell header.","!type":"fn(aHierarchyLevels?: [Object])","!category":"function","parameters":{"aHierarchyLevels":"type: object[], description: An array representing hierarchies of the currently displayed\n   app.  The array should specify title, icon, and\n   navigation intent as shown in the following example:\n<pre>\n[\n      {\n          title: \"App 1\",\n          icon: \"sap-icon://folder\",\n          subtitle: \"go to app 1\",\n          intent: \"#Action-toapp1\"\n      },\n      {\n          title: \"App 2\",\n          icon: \"sap-icon://folder\",\n          subtitle: \"go to app 2\",\n          intent: \"#Action-toapp2\"\n      },\n      {\n          title: \"App 3\",\n          icon: \"sap-icon://folder\",\n          subtitle: \"go to app 3\",\n          intent: \"#Action-toapp3\"\n      }\n]\n<\/pre>\n\nThe default app hierarchy is applied if no parameter is given."},"!static":false},"!description":"The Unified Shell's ShellUIService service.\n\nThis service allows apps to interact with the Fiori Launchpad UI.\nThe service is injected in the app components by the FLP renderer\nbefore the corresponding apps start. To consume the service,\napp components should declare it in their manifest.json as follows:\n\n<pre>\n{\n   ...\n   \"sap.ui5\": {\n      \"services\" : {\n         \"ShellUIService\": {\n             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\"\n         }\n      }\n   }\n   ...\n}\n<\/pre>\n\nThe service can be then consumed within the component as shown in the\nfollowing example:\n<pre>\n// Component.js\n...\nthis.getService(\"ShellUIService\").then( // promise is returned\n   function (oService) {\n      oService.setTitle(\"Application Title\");\n   },\n   function (oError) {\n      jQuery.sap.log.error(\"Cannot get ShellUIService\", oError, \"my.app.Component\");\n   }\n);\n...\n<\/pre>","setTitle":{"!description":"Displays the given title in the shell header. This method should not\nbe called if the app calling the method is not currently displayed\nin the Fiori Launchpad.","!type":"fn(sTitle?: String)","!category":"function","parameters":{"sTitle":"type: string, description: The new title. The default title is set if this argument is not given."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.ShellUIService with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","getTitle":{"!description":"Returns the title that was last set via {@link setTitle}.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Returns an instance of the ShellUIService. This constructor must only be\ncalled internally by the Fiori Launchpad renderer and never by\napplications.\n\nInstead, this service should be consumed by app components as described\nin the overview section of this class.","!module":"sap/ushell/ui5service/ShellUIService","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui5service.ShellUIService.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's ShellUIService service.\n\nThis service allows apps to interact with the Fiori Launchpad UI.\nThe service is injected in the app components by the FLP renderer\nbefore the corresponding apps start. To consume the service,\napp components should declare it in their manifest.json as follows:\n\n<pre>\n{\n   ...\n   \"sap.ui5\": {\n      \"services\" : {\n         \"ShellUIService\": {\n             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\"\n         }\n      }\n   }\n   ...\n}\n<\/pre>\n\nThe service can be then consumed within the component as shown in the\nfollowing example:\n<pre>\n// Component.js\n...\nthis.getService(\"ShellUIService\").then( // promise is returned\n   function (oService) {\n      oService.setTitle(\"Application Title\");\n   },\n   function (oError) {\n      jQuery.sap.log.error(\"Cannot get ShellUIService\", oError, \"my.app.Component\");\n   }\n);\n...\n<\/pre>"},"sap":{"sap":"sap","ushell":"sap.ushell","!category":"namespace"},"sap.ushell.services.AppLifeCycle_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object, sParameter: String, oConfig: Object)","prototype":"sap.ushell.services.AppLifeCycle"},"sap.ushell.renderers":{"fiori2":"sap.ushell.renderers.fiori2","!category":"namespace","!module":"sap/ushell/services/Container"},"sap.ushell":{"ui":"sap.ushell.ui","services":"sap.ushell.services","bootstrap":{"!description":"Initializes the Unified Shell container for the given platform. This method must be called\nexactly once in the very beginning by platform-specific code in order to bootstrap the\ncontainer. As soon as the returned promise has been resolved, the container will be available\nas a singleton object <code>sap.ushell.Container<\/code>.\n<p>\nFor convenience, platform-specific bootstrap code is available and can be easily included\n(<b>before<\/b> the SAPUI5 bootstrap) by a corporate shell as follows:\n<pre>\n&lt;script src=\"/sap/public/bc/ui5_ui5/resources/sap/ushell_abap/bootstrap/abap.js\"&gt;&lt;/script&gt;\n&lt;script id=\"sap-ui-bootstrap\" src=\".../sap-ui-core.js\"&gt;&lt;/script&gt;\n<\/pre>\nThis bootstrap code will automatically defer the initialization of SAPUI5 until the\ncontainer is available. This is the preferred way of bootstrapping the Unified Shell.\n<p>\nNote: For SAPUI5 application projects the recommended way is to add a dependency to the\n\"sap.ushell_abap\" library (<code>&lt;groupId&gt;com.sap.ushell&lt;/groupId&gt;\n&lt;artifactId&gt;ushell_abap&lt;/artifactId&gt;<\/code>) and load the bootstrap code via the\napplication's resources folder:\n<pre>\n&lt;script src=\".../resources/sap/ushell_abap/bootstrap/abap.js\"&gt;&lt;/script&gt;\n&lt;script id=\"sap-ui-bootstrap\" src=\".../sap-ui-core.js\"&gt;&lt;/script&gt;\n<\/pre>\n<p>\nSince 1.15.0 you can provide the function\n<code>window['sap.ushell.bootstrap.callback']<\/code> for calling back from this method\nasynchronously. SAPUI5's bootstrap is ongoing then. The same restrictions apply\nas for the function <code>window['sap-ui-config']['xx-bootTask']<\/code>) when the Unified\nShell container has not yet finished its bootstrap. You cannot delay the bootstrap of SAPUI5\nor the Unified Shell container; any errors are ignored. This callback is useful for\nsending asynchronous back-end requests at the earliest opportunity without delaying\nthe core bootstrap of SAPUI5 and the Unified Shell container.","!type":"fn(sPlatform: String, mAdapterPackagesByPlatform?: map.<string, string>) -> jQuery.Promise","!category":"function","!static":"true"},"adapters":"sap.ushell.adapters","renderers":"sap.ushell.renderers","!category":"namespace","components":"sap.ushell.components","!module":"sap/ushell/services/Container","ui5service":"sap.ushell.ui5service","System":"sap.ushell.System_obj","Container":{"!description":"The Unified Shell container as a singleton object. This object will only be\navailable after <code>sap.ushell.bootstrap()<\/code> has finished.","!type":"sap.ushell.services.Container","!category":"enum"}},"sap.ushell.ui.shell":{"icon":{"!description":"Icon that is displayed in the item.","!type":"sap.ui.core.URI","!category":"enum"},"text":{"!description":"text : String","!type":"String","!category":"enum"},"selected":{"!description":"Defines whether to mark the control as selected","!type":"Boolean","!category":"enum"},"ToolAreaItem":"sap.ushell.ui.shell.ToolAreaItem_obj","visible":{"!description":"Defines whether to display the control","!type":"Boolean","!category":"enum"},"!category":"namespace","ariaLabel":{"!description":"Text  which will be read by screenreader.","!type":"String","!category":"enum"},"expandable":{"!description":"Defines whether the control will have an expand functionality containing sub-items or actions.\rIf the property is set to true, a small \"expand\" icon appears in the lower corner of the control.\rThe \"expand\" event is fired when the \"expand\" icon is pressed.","!type":"Boolean","!category":"enum"}},"sap.ushell.services.URLParsing":{"getHash":{"!description":"Extract a hash part from an URL, including an app-specific part","!type":"fn(sURL: String) -> String","!category":"function","parameters":{"sURL":"type: String, description: any value"},"!static":false},"constructShellHash":{"!description":"compose a shell Hash from it's respective parts\nNote that it also may append an app specific route !","!type":"fn(oShellHash: Object) -> String","!category":"function","parameters":{"oShellHash":"type: object, description: <code>undefined <\/code> if not a parseable hash\n  <code> { target : { semanticObject : string,<br/>\n                      action : string,<br/>\n                      contextRaw : string<br/>\n                    },<br/>\n           params :  MapObject<String,Array[String]>,<br/>\n           appStateKey : string <br/>\n           appSpecificRoute : string<br/>\n         }<br/>\n   <\/code>\n   xor\n  <code> { target : { shellHash }<br/>\n         }\n   <\/code>\n\nNote: in general it is preferred to add an appStateKey directly to the params object"},"!static":false},"splitHash":{"!description":"split a Unified Shell compliant hash into an Object containing a shell specific part and an app specific parts<\/br>\nfor non compliant hash strings, the empty object {} is returned.\nan optional leading # is stripped","!type":"fn(sHash: String) -> Object","!category":"function","parameters":{"sHash":"type: String, description: Hash part of a shell conformant URL\n {code}#SO-Action~Context?P1=a&P2=x&/route?RPV=1{code}\n the hash part of an URL, e.g. {code}\"#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH{code}\n\n Note that params always has an Array for each parameter value!"},"!static":false},"!category":"class","!constructorDescription":"The Unified Shell's internal URL parsing service (platform independent)\nThis method MUST be called by the Unified Shell's container only, others MUST call\n<code>sap.ushell.Container.getService(\"URLParsing\")<\/code>.\nConstructs a new instance of the URL parsing service.\n\n\nMethods in this class allow to break down a shell compliant hash into it's respective parts\n(SemanticObject,Action,Context, Parameters, appSpecificHash) or (ShellPart,appSpecificHash) respectively\nor construct a hash from its constituents.\n\nAll methods deal with the *internal* shellHash format.\n\nMost of the parse methods are robust w.r.t. a leading \"#\".\n\nNote: The functions were designed with a \"truthy\" behaviour for not present values,\nThus a client should not rely on the difference between null, \"undefined\", \"\" when testing for the\nresult of a parse action.\n\nThe parsing functions are deliberately restrictive and fragile,\nonly shell compliant hashes are parsed correctly,\nbehaviour for non-compliant hashes is undefined and subject to change,\nnotably we do not aim do \"degrade\" nicefully or support partial parsing of corrupted urls.","addSystemToServiceUrl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined please use <code>sap.ui.model.odata.ODataUtils.setOrigin(sServiceUrl, { alias : sSystem });<\/code>\nThe system alias can be extracted from the Component via <code>getComponentData().startupParameters[\"sap-system\"][0]<\/code><br>Note: deprecated, please use <code>sap.ui.model.odata.ODataUtils.setOrigin(sServiceUrl, { alias : sSystem });<\/code>\nMakes the given server-relative SAP OData service URL point to the system given\nexplicitly as parameter <code>vComponentOrSystem<\/code>. If this parameter is not provided,\nit makes the server-relative URL point to the system of the current application.\n<em>Server-relative URL<\/em> means a URL starting with exactly one &quot;/&quot; (also known as\nabsolute-path URL). The <em>system of the current application<\/em> is taken from\nthe parameter &quot;sap-system&quot; of the last navigation target resolution result.\n<p>\nIf either a multiple-origin parameter <code>;mo/<\/code> or an origin parameter with qualified system\n(<code>;o=sid(SYS.123)<\/code> or <code>o=SYSALIAS<\/code>) is already present,\nthe <code>sServiceUrl<\/code> is returned unchanged.\n<p>\nThe framework invokes this function for SAPUI5 applications that have been built using declarative model\ninstantiation with the application descriptor (data source) mechanism or using an sap.ca framework. For\nthese applications, you do not need to invoke this function explicitly in the application code.\nIf the application does not use any of these mechanisms, but explicitly constructs additional OData models or\nperforms OData requests, the application code shall invoke this function. It shall\npass its root component instance as <code>vComponentOrSystem<\/code> - the function will then determine the system\nfrom the navigation start-up parameter &quot;sap-system&quot;\n(<code>getComponentData().startupParameters[&quot;sap-system&quot;][0]).\nApplications may call this API with parameter <code>vComponentOrSystem<\/code> and a non-empty string value\nif application-specific logic is used to determine the target system for service calls.\n<p>\nWith service URLs converted using this API, administrators can redirect service\ncalls to servers other than the default SAP Gateway and back-end server\neither via reverse proxy (e.g. SAP Web Dispatcher) configuration or using the system\nalias functionality of the SAP Gateway server.\n<p>\nThe system is added to the last URL segment of the service URL with the segment parameter\n<code>;o=<\/code>. You can also make this function put the system to a different\nURL path segment of the service URL by specifying the empty segment parameter\n<code>;o=<\/code>, e.g. <code>/sap/opu/odata/MyService;o=/MyEntities/$count?p1=v1<\/code>.\nIf both <code>vComponentOrSystem<\/code> is empty and the current application has\nno system, no system is added and the empty segment parameter <code>;o<\/code> is removed.\n<br/>\n<b>Example 1:<\/b> <code>/sap/opu/odata/MyService/?p1=v1<\/code> is converted to\n<code>/sap/opu/odata/MyService;o=SYS/?p1=v1<\/code> if the target system\nis &quot;SYS&quot;.\nHowever it remains unchanged if both the current application's system <em>and<\/em>\nthe parameter <code>vComponentOrSystem<\/code> are empty.<br/>\n<b>Example 2:<\/b> <code>/sap/opu/odata/MyService;o=/MyEntities/$count?p1=v1<\/code> is\nconverted to\n<code>/sap/opu/odata/MyService;o=sid(SYS.123)/MyEntities/$count?p1=v1<\/code> if\nparameter <code>vComponentOrSystem<\/code> is set to &quot;sid(SYS.123)&quot;<\/code>.\n<p>\nThe URL is in no way normalized.","!type":"fn(sServiceUrl: String, vComponentOrSystem?: String | sap.ui.core.Component) -> String","!category":"function","parameters":{"vComponentOrSystem":"type: string|sap.ui.core.Component, description: the root component of the FLP application (\n  <code>getComponentData().startupParameters[&quot;sap-system&quot;][0]<\/code> is used as system alias if present)\n  or a string valued system specification like &quot;SYS&quot; or &quot;sid(SYS.123)&quot;\n  if undefined or falsy the system of the current application is used","sServiceUrl":"type: string, description: a server-relative URL without system alias information"},"!static":false},"!module":"sap/ushell/services/URLParsing","parseParameters":{"!description":"parse parameters from a URI query string (starting with ?)\rinto a parameter object","!type":"fn(sParams: String) -> Object","!category":"function","parameters":{"sParams":"type: String, description: Parameter string, e.g. <code>?ABC=1&ABC=1%202DEF=4<\/code>"},"!static":false},"paramsToString":{"!description":"combine members of a javascript object into a\rparameter string,\rnote that parameters are ordered in an arbitrary manner\rwhich is subject to change","!type":"fn(oParams: Object) -> String","!category":"function","parameters":{"oParams":"type: Object, description: any value { ABC : [1,\"1 2\"], DEF : [\"4\"]}"},"!static":false},"isIntentUrl":{"!description":"Check if a URL has an intent based navigation part which can be parsed into\na semantic object and action part.\nAccepts only a relative URL (must contain #) or\nfully qualified Urls for which\norigin and filename must correspond to the running launchpad.\nGiven actual url\n<code>\nhttp://www.mycorp.com/sap/fiori/FioriLaunchpad.html?sap-language=DE#SO-action?P1=value1\n<\/code>, the following parts\n<code>http://www.mycorp.com/sap/fiori/FioriLaunchpad.html<code> must match.\n\nThe actual test is synchronous and *only* tests whether the hash part can be parsed\nand contains a semantic object and action.\nIt does not test whether the intent or it's parameters is valid for a given user","!type":"fn(sUrl: String) -> Boolean","!category":"function","parameters":{"sUrl":"type: String, description: the URL to test"},"!static":false},"parseShellHash":{"!description":"Decompose a shell hash into the respective parts","!type":"fn(sHash: String) -> Object","!category":"function","parameters":{"sHash":"type: String, description: Hash part of a shell compliant URL\n <code>#SO-Action~Context?P1=a&P2=x&/route?RPV=1<\/code>\n the hash part of an URL, <br/> e.g. <code>\"#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH<\/code>\n\n Note that params always has an Array for each parameter value!"},"!static":false},"!proto":"sap.ui.base.Object"},"sap.ushell.adapters":{"!category":"namespace","!module":"sap/ushell/services/Container"},"sap.ushell.renderers.fiori2.Renderer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.renderers.fiori2.Renderer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ushell.renderers.fiori2.Renderer"},"sap.ushell.ui.shell.ToolAreaItem":{"detachExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>expand<\/code> event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"},"!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ushell/ui/shell/ToolAreaItem","getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon that is displayed in the item.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setExpandable":{"!description":"Sets a new value for property <code>expandable<\/code>.\n\nDefines whether the control will have an expand functionality containing sub-items or actions.\nIf the property is set to true, a small \"expand\" icon appears in the lower corner of the control.\nThe \"expand\" event is fired when the \"expand\" icon is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExpandable: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"bExpandable":"type: boolean, description: New value for property <code>expandable<\/code>"},"!static":false},"getAriaLabel":{"!description":"Gets current value of property <code>ariaLabel<\/code>.\n\nText  which will be read by screenreader.","!type":"fn() -> String","!category":"function","!static":false},"setAriaLabel":{"!description":"Sets a new value for property <code>ariaLabel<\/code>.\n\nText  which will be read by screenreader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAriaLabel: String) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.shell.ToolAreaItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nDefines whether to display the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"attachExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>expand<\/code> event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself.\n\nEvent is fired when the user presses the Expand icon.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself"},"!static":false},"getExpandable":{"!description":"Gets current value of property <code>expandable<\/code>.\n\nDefines whether the control will have an expand functionality containing sub-items or actions.\nIf the property is set to true, a small \"expand\" icon appears in the lower corner of the control.\nThe \"expand\" event is fired when the \"expand\" icon is pressed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ToolAreaItem.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself.\n\nEvent is fired when the user presses the item.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself"},"!static":false},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nDefines whether to display the control\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"A control to be placed in the tool area","getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nDefines whether to mark the control as selected\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon that is displayed in the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"fireExpand":{"!description":"Fires event <code>expand<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"A control to be placed in the tool area","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.shell.ToolAreaItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nDefines whether to mark the control as selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","!category":"function","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"},"!static":false}},"sap.ushell.services.Personalization.ContextContainer":{"setItemValue":{"!description":"Sets the value of a direct item in the container.\nIn case the item is already existing its value is overwritten. In case it is not\nexisting a new item with this key and value is created.\nThe value is serialized during set","!type":"fn(sItemKey: String, sItemValue: Object)","!category":"function","parameters":{"sItemKey":"type: string, description: item key\n           The string length is restricted to 40 characters","sItemValue":"type: object, description: item value (JSON object)"},"!static":false},"getKey":{"!description":"return the container key as a string variable","!type":"fn() -> String","!category":"function","!static":false},"save":{"!description":"Attempts to save the current container data at the underlying storage asynchronously.\nThe current state is serialized.","!type":"fn() -> Object","!category":"function","!static":false},"getValidity":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined only for testing!<br>return the validity of this container","!type":"fn()","!category":"function","!static":false},"getItemValue":{"!description":"Returns the value for a direct item from the container.\n(Value semantics, new copy is returned)","!type":"fn(sItemKey: String) -> Object","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"_getInternalKeys":{"!description":"Returns an array with all internal  keys of direct items in the container.","!type":"fn() -> Array","!category":"function","!static":false},"!constructorDescription":"To be called by the personalization service getContainer method.","!module":"sap/ushell/services/Personalization","clear":{"!description":"clears the local copy data of this container","!type":"fn()","!category":"function","!static":false},"!description":"The container is the anchor object of the unified shell\n       personalization in container mode.","containsItem":{"!description":"Checks if a specific direct item is contained in the container.","!type":"fn(sItemKey: String) -> Boolean","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"flush":{"!description":"flush all pending request;\nThe result of the promise may reflect the last pending operation in the queue","!type":"fn() -> Object","!category":"function","!static":false},"saveDeferred":{"!description":"Save the current container data at the underlying storage asynchronously at the earlies\nnDelayInMilliseconds seconds before.\nThe current state is serialized.","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","getItemKeys":{"!description":"Returns an array with the keys of direct items in the container.","!type":"fn() -> Array","!category":"function","!static":false},"load":{"!description":"(Re)loads the current container data from the underlying storage asynchronously.\nThe current local data is discarded.\n\nReturns a promise for the load operation.\nIf another save/load/delete operation is not completed, the  operation may fail!\n(wait for the other promise).\n\nSynchronous read and write operations before the load is done have undefined\neffects.","!type":"fn() -> Object","!category":"function","!static":false},"delItem":{"!description":"Deletes a direct item from the container.\nIn case the item does not exist, nothing happens.","!type":"fn(sItemKey: String)","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"getUnmodifiableContainer":{"!description":"Return an instance unmodifiable container instance. There is one instance of this wrapper\nper container. It will permit all read accesses to the container, but block all\nmodifying accesses.","!type":"fn() -> Object","!category":"function","!static":false},"!helpDescription":"The container is the anchor object of the unified shell\n       personalization in container mode.","!proto":"sap.ui.base.Object"},"sap.ushell.services.Message_obj":{"!type":"fn()","prototype":"sap.ushell.services.Message"},"sap.ushell.services.Personalization.VariantSetAdapter":{"delVariantSet":{"!description":"Deletes a variant set from the container.\nIn case the variant set does not exist nothing happens.","!type":"fn(sVariantSetKey: String)","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"!description":"The Unified Shell's personalization service, which provides a\n       personalizer object that handles all personalization operations.","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!type":"fn() -> Array","!category":"function","!static":false},"!category":"class","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!type":"fn(sVariantSetKey: String) -> Boolean","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others\nMUST call <code>sap.ushell.Container.getService(\"Personalization\")<\/code>.\nConstructs a new instance of the personalization service.","getVariantSet":{"!description":"Returns the variant set object from the container.","!type":"fn(sVariantSetKey: String) -> Object","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key\n           The string length is restricted to 40 characters"},"!static":false},"!module":"sap/ushell/services/Personalization","addVariantSet":{"!description":"Creates a new variant set in the container.\nIn case a variant set with this key is already existing an exception is thrown.","!type":"fn(sVariantSetKey: String) -> Object","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's personalization service, which provides a\n       personalizer object that handles all personalization operations."},"sap.ushell.services.Bookmark_obj":{"!type":"fn()","prototype":"sap.ushell.services.Bookmark"},"sap.ushell.services.Personalization":{"delVariantSet":{"!description":"Deletes a variant set from the container.\nIn case the variant set does not exist nothing happens.","!type":"fn(sVariantSetKey: String)","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"!description":"The Unified Shell's personalization service, which provides a\n       personalizer object that handles all personalization operations.","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!type":"fn() -> Array","!category":"function","!static":false},"!category":"class","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!type":"fn(sVariantSetKey: String) -> Boolean","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others\nMUST call <code>sap.ushell.Container.getService(\"Personalization\")<\/code>.\nConstructs a new instance of the personalization service.","getVariantSet":{"!description":"Returns the variant set object from the container.","!type":"fn(sVariantSetKey: String) -> Object","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key\n           The string length is restricted to 40 characters"},"!static":false},"!module":"sap/ushell/services/Personalization","addVariantSet":{"!description":"Creates a new variant set in the container.\nIn case a variant set with this key is already existing an exception is thrown.","!type":"fn(sVariantSetKey: String) -> Object","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's personalization service, which provides a\n       personalizer object that handles all personalization operations."},"sap.ushell.ui.launchpad.LoadingDialog":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.LoadingDialog with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!constructorDescription":"Constructor for a new ui/launchpad/LoadingDialog.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIconUri iconUri} : sap.ui.core.URI<\/li>\n<li>{@link #getText text} : sap.ui.core.URI<\/li>\n<li>{@link #getLoadAnimationWithInterval loadAnimationWithInterval} : boolean (default: true)<\/li><\/ul>\n<\/li>\n<li>Aggregations\n<ul><\/ul>\n<\/li>\n<li>Associations\n<ul><\/ul>\n<\/li>\n<li>Events\n<ul><\/ul>\n<\/li>\n<\/ul>","getLoadAnimationWithInterval":{"!description":"Getter for property <code>loadAnimationWithInterval<\/code>.\ndefines whether the presentation of the Fiori flower animation should be displayed with an interval\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"setText":{"!description":"Setter for property <code>text<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sText: sap.ui.core.URI) -> sap.ushell.ui.launchpad.LoadingDialog","!category":"function","parameters":{"sText":"type: sap.ui.core.URI, description: new value for property <code>text<\/code>"},"!static":false},"!module":"sap/ushell/ui/launchpad/LoadingDialog","getText":{"!description":"Getter for property <code>text<\/code>.\nthe text to be displayed\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"setLoadAnimationWithInterval":{"!description":"Setter for property <code>loadAnimationWithInterval<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bLoadAnimationWithInterval: Boolean) -> sap.ushell.ui.launchpad.LoadingDialog","!category":"function","parameters":{"bLoadAnimationWithInterval":"type: boolean, description: new value for property <code>loadAnimationWithInterval<\/code>"},"!static":false},"!description":"Displays a loading dialog with an indicator that an app is loading","!category":"class","getIconUri":{"!description":"Getter for property <code>iconUri<\/code>.\nthe sap-icon://-style URI of an icon\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"setIconUri":{"!description":"Setter for property <code>iconUri<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sIconUri: sap.ui.core.URI) -> sap.ushell.ui.launchpad.LoadingDialog","!category":"function","parameters":{"sIconUri":"type: sap.ui.core.URI, description: new value for property <code>iconUri<\/code>"},"!static":false},"!helpDescription":"Displays a loading dialog with an indicator that an app is loading","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.LoadingDialog.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ushell.services.TransientPersonalizer_obj":{"!type":"fn()","prototype":"sap.ushell.services.TransientPersonalizer"},"sap.ushell.ui.footerbar.AddBookmarkButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.footerbar.AddBookmarkButton with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.footerbar.AddBookmarkButton"},"sap.ushell.ui.footerbar":{"beforePressHandler":{"!description":"A callback function to be called prior to the press handler upon clicking the button.","!type":"Object","!category":"enum"},"keywords":{"!description":"The keywords based on which the future tile should be indexed and filtered.","!type":"String","!category":"enum"},"AddBookmarkButton":"sap.ushell.ui.footerbar.AddBookmarkButton_obj","tileIcon":{"!description":"Icon to be desplied in the Tile.","!type":"String","!category":"enum"},"serviceUrl":{"!description":"URL of an OData service from which data should be read.","!type":"Object","!category":"enum"},"info":{"!description":"Text to be displayed at the bottom of the tile.","!type":"String","!category":"enum"},"title":{"!description":"Title to be displayed on the tile.","!type":"String","!category":"enum"},"appData":{"!description":"Deprecated \u2013 an object containing application information properties.","!type":"Object","!category":"enum"},"!category":"namespace","subtitle":{"!description":"Subtitle to be displayed below the tile title.","!type":"String","!category":"enum"},"customUrl":{"!description":"A customized target URL for the tile.","!type":"Object","!category":"enum"},"showGroupSelection":{"!description":"Defines whether to display the group selection control within the Save as Tile dialog box.","!type":"Boolean","!category":"enum"},"serviceRefreshInterval":{"!description":"Number of seconds after which dynamic content is read from the data source and the display is refreshed.","!type":"String","!category":"enum"},"numberUnit":{"!description":"For dynamic tile, the unit to be displayed below the number, for example, USD.","!type":"String","!category":"enum"},"afterPressHandler":{"!description":"A callback function to be called after the press handler called upon clicking the button.","!type":"Object","!category":"enum"}},"sap.ushell.services.Personalization_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.VariantSetAdapter"},"sap.ushell.ui.appfinder.AppBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.appfinder.AppBox with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.appfinder.AppBox"},"sap.ushell.services.Bookmark":{"countBookmarks":{"!description":"Counts <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages. You\ncan use this method to check if a bookmark already exists.\n<p>\nThis is a potentially asynchronous operation in case the user's pages have not yet been\nloaded completely!","!type":"fn(sUrl: String) -> Object","!category":"function","parameters":{"sUrl":"type: string, description: The URL of the bookmarks to be counted, exactly as specified to {@link #addBookmark}."},"!static":false},"!description":"The unified shell's bookmark service, which allows you to create shortcuts on the\nuser's home page.","updateBookmarks":{"!description":"Updates <b>all<\/b> bookmarks pointing to the given URL on all of the user's pages\nwith the given new parameters. Parameters which are omitted are not changed in the\nexisting bookmarks.","!type":"fn(sUrl: String, oParameters: Object) -> Object","!category":"function","parameters":{"oParameters":"type: object, description: The bookmark parameters as documented in {@link #addBookmark}.","sUrl":"type: string, description: The URL of the bookmarks to be updated, exactly as specified to {@link #addBookmark}.\n  In case you need to update the URL itself, pass the old one here and the new one as\n  <code>oParameters.url<\/code>!"},"!static":false},"!category":"class","addBookmark":{"!description":"Adds a bookmark to the user's home page.","!type":"fn(oParameters: Object) -> Object","!category":"function","parameters":{"oParameters":"type: object, description: Bookmark parameters. In addition to title and URL, a bookmark might allow additional\n  settings, such as an icon or a subtitle. Which settings are supported depends\n  on the environment in which the application is running. Unsupported parameters will be\n  ignored."},"!static":false},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\n<code>sap.ushell.Container.getService(\"Bookmark\")<\/code>.\nConstructs a new instance of the bookmark service.","!module":"sap/ushell/services/Bookmark","addCatalogTileToGroup":{"!description":"Adds the catalog tile with the given ID to given group. The catalog tile is looked up in\nthe legacy SAP HANA catalog unless data to look up a remote catalog is provided.","!type":"fn(sCatalogTileId: String, sGroupId?: String, oCatalogData?: Object) -> Object","!category":"function","parameters":{"sGroupId":"type: string, description: The id of the group. If not given, the tile is added to the default group","sCatalogTileId":"type: string, description: The ID of the tile within the catalog","oCatalogData":"type: object, description: The data to identify the catalog containing the tile with the given ID"},"!static":false},"deleteBookmarks":{"!description":"Deletes <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages.","!type":"fn(sUrl: String) -> Object","!category":"function","parameters":{"sUrl":"type: string, description: The URL of the bookmarks to be deleted, exactly as specified to {@link #addBookmark}."},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The unified shell's bookmark service, which allows you to create shortcuts on the\nuser's home page."},"sap.ushell.services.PersonalizationContainerVariantSet":{"!constructorDescription":"To be called by the personalization container.","!module":"sap/ushell/services/Personalization","getCurrentVariantKey":{"!description":"Returns the current variant key.","!type":"fn() -> String","!category":"function","!static":false},"!description":"The personalization variant set contains variants of personalization data.\n       It is used in the personalization container mode.","addVariant":{"!description":"Creates a new variant in the variant set.\nIn case a variant with this name is already existing an exception is thrown.","!type":"fn(sVariantSetName: String) -> Object","!category":"function","parameters":{"sVariantSetName":"type: string, description: variant set name"},"!static":false},"setCurrentVariantKey":{"!description":"Sets the current variant key.","!type":"fn(sVariantKey: String)","!category":"function","parameters":{"sVariantKey":"type: string, description: There is no validity check for the variant key."},"!static":false},"!category":"class","containsVariant":{"!description":"Checks if a specific variant is contained in the variant set.","!type":"fn(sVariantKey: String) -> Boolean","!category":"function","parameters":{"sVariantKey":"type: string, description: variant key"},"!static":false},"getVariantKeys":{"!description":"Returns an array with the keys of the variants in the variant set.","!type":"fn() -> Array","!category":"function","!static":false},"getVariant":{"!description":"Returns a variant object.","!type":"fn(sVariantKey: String) -> Object","!category":"function","parameters":{"sVariantKey":"type: string, description: variant key"},"!static":false},"delVariant":{"!description":"Deletes a variant from the variant set.\nIn case the variant does not exist nothing happens.","!type":"fn(sVariantKey: String)","!category":"function","parameters":{"sVariantKey":"type: string, description: variant key"},"!static":false},"getVariantKeyByName":{"!description":"Returns the variant key corresponding to a variant name.","!type":"fn(sVariantName: String) -> Object","!category":"function","parameters":{"sVariantName":"type: string, description: variant name"},"!static":false},"!helpDescription":"The personalization variant set contains variants of personalization data.\n       It is used in the personalization container mode.","!proto":"sap.ui.base.Object"},"sap.ushell.components":{"tiles":"sap.ushell.components.tiles","!category":"namespace","factsheet":"sap.ushell.components.factsheet"},"sap.ushell.services.CrossApplicationNavigation_obj":{"!type":"fn()","prototype":"sap.ushell.services.CrossApplicationNavigation"},"sap.ushell.components.tiles.indicatorTileUtils":{"!category":"namespace","odata4analytics":"sap.ushell.components.tiles.indicatorTileUtils.odata4analytics"},"sap.ushell.services.Personalizer_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalizer"},"sap.ushell.services.Personalization.Variant":{"getVariantName":{"!description":"Returns the name of this variant.","!type":"fn() -> String","!category":"function","!static":false},"setVariantName":{"!description":"Sets the name of the variant.\n\nIn case a variant with <code>sVariantName<\/code> is already existing in the corresponding variant set an exception is thrown.","!type":"fn(sVariantName: String)","!category":"function","parameters":{"sVariantName":"type: string, description: variant name"},"!static":false},"setItemValue":{"!description":"Sets the value for an item in this variant.","!type":"fn(sItemKey: String, item: Object)","!category":"function","parameters":{"sItemKey":"type: string, description: item key","item":"type: object, description: value (JSON object)"},"!static":false},"getItemValue":{"!description":"Returns the value for an item in this variant.","!type":"fn(sItemKey: String) -> Object","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!constructorDescription":"To be instantiated via Personalization.VariantSet  add / get Variant only","!module":"sap/ushell/services/Personalization","!description":"The personalization variant contains personalization data.\n       It is used in the personalization container mode.","containsItem":{"!description":"Checks if a specific item is contained in this variant.","!type":"fn(sItemKey: String) -> Boolean","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!category":"class","getItemKeys":{"!description":"Returns an array with the keys of all items in this variant.","!type":"fn() -> Array","!category":"function","!static":false},"getVariantKey":{"!description":"Returns the key of this variant.","!type":"fn() -> String","!category":"function","!static":false},"delItem":{"!description":"Deletes an item from this variant.\nIn case the item does not exist, nothing happens.","!type":"fn(sItemKey: String)","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!helpDescription":"The personalization variant contains personalization data.\n       It is used in the personalization container mode.","!proto":"sap.ui.base.Object"},"sap.ushell.ui.appfinder.AppBox":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.appfinder.AppBox with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"firePress":{"!description":"Fire event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"!constructorDescription":"Constructor for a new ui/appfinder/AppBox.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getUrl url} : string<\/li><\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPinButton pinButton} : sap.m.Button<\/li><\/ul>\n<\/li>\n<li>Associations\n<ul><\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link sap.ushell.ui.appfinder.AppBox#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link sap.ushell.ui.appfinder.AppBox#event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li><\/ul>\n<\/li>\n<\/ul>","getPinButton":{"!description":"Getter for aggregation <code>pinButton<\/code>.<br/>","!type":"fn() -> sap.m.Button","!category":"function","!static":false},"!module":"sap/ushell/ui/appfinder/AppBox","attachPress":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/>.\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oData":"type: object, description: An application specific payload object, that will be passed to the event handler along with the event object when firing the event.","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/> itself."},"!static":false},"destroyPinButton":{"!description":"Destroys the pinButton in the aggregation \nnamed <code>pinButton<\/code>.","!type":"fn() -> sap.ushell.ui.appfinder.AppBox","!category":"function","!static":false},"setPinButton":{"!description":"Setter for the aggregated <code>pinButton<\/code>.","!type":"fn(oPinButton: sap.m.Button) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"oPinButton":"type: sap.m.Button, description: undefined"},"!static":false},"getUrl":{"!description":"Getter for property <code>url<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"!description":"Add your documentation for the newui/appfinder/AppBox","setUrl":{"!description":"Setter for property <code>url<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sUrl: String) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"sUrl":"type: string, description: new value for property <code>url<\/code>"},"!static":false},"setTitle":{"!description":"Setter for property <code>title<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sTitle: String) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"sTitle":"type: string, description: new value for property <code>title<\/code>"},"!static":false},"detachAfterRendering":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'afterRendering' event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Context object on which the given function had to be called."},"!static":false},"!category":"class","getTitle":{"!description":"Getter for property <code>title<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn() -> String","!category":"function","!static":false},"detachPress":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Context object on which the given function had to be called."},"!static":false},"attachAfterRendering":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'afterRendering' event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/>.\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oData":"type: object, description: An application specific payload object, that will be passed to the event handler along with the event object when firing the event.","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.appfinder.AppBox<\/code>.<br/> itself."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.appfinder.AppBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"fireAfterRendering":{"!description":"Fire event afterRendering to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ushell.ui.appfinder.AppBox","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"!helpDescription":"Add your documentation for the newui/appfinder/AppBox","!proto":"sap.ui.core.Control"},"sap.ushell.services.PersonalizationContainerVariantSet_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationContainerVariantSet"},"sap.ushell.services.Personalization.VariantSet":{"!constructorDescription":"A VariantSet is a class representing a collection of\nVariants (identified by a key and name)\nand a member variable indicating the\n\"current variable\"\n\nWhen manipulating the underlying data, additional constraints are enforced.\n\nTo be called by the personalization container.","!module":"sap/ushell/services/Personalization","getCurrentVariantKey":{"!description":"Returns the current variant key.","!type":"fn() -> String","!category":"function","!static":false},"!description":"The personalization variant set contains variants of personalization data.\n       It is used in the personalization container mode.","addVariant":{"!description":"Creates a new variant in the variant set.\nIn case a variant with this name is already existing an exception is thrown.","!type":"fn(sVariantSetName: String) -> Object","!category":"function","parameters":{"sVariantSetName":"type: string, description: variant set name"},"!static":false},"setCurrentVariantKey":{"!description":"Sets the current variant key.","!type":"fn(sVariantKey: String)","!category":"function","parameters":{"sVariantKey":"type: string, description: There is no validity check for the variant key."},"!static":false},"!category":"class","containsVariant":{"!description":"Checks if a specific variant is contained in the variant set.","!type":"fn(sVariantKey: String) -> Boolean","!category":"function","parameters":{"sVariantKey":"type: string, description: variant key"},"!static":false},"getVariantKeys":{"!description":"Returns an array with the keys of the variants in the variant set.","!type":"fn() -> Array","!category":"function","!static":false},"getVariant":{"!description":"Returns a variant object.","!type":"fn(sVariantKey: String) -> Object","!category":"function","parameters":{"sVariantKey":"type: string, description: variant key"},"!static":false},"delVariant":{"!description":"Deletes a variant from the variant set.\nIn case the variant does not exist nothing happens.","!type":"fn(sVariantKey: String)","!category":"function","parameters":{"sVariantKey":"type: string, description: variant key"},"!static":false},"getVariantKeyByName":{"!description":"Returns the variant key corresponding to a variant name.","!type":"fn(sVariantName: String) -> String","!category":"function","parameters":{"sVariantName":"type: string, description: variant name"},"!static":false},"!helpDescription":"The personalization variant set contains variants of personalization data.\n       It is used in the personalization container mode.","!proto":"sap.ui.base.Object"},"sap.ushell.services.PersonalizationContainerVariant":{"getVariantName":{"!description":"Returns the name of this variant.","!type":"fn() -> String","!category":"function","!static":false},"setItemValue":{"!description":"Sets the value for an item in this variant.","!type":"fn(sItemKey: String, item: Object)","!category":"function","parameters":{"sItemKey":"type: string, description: item key","item":"type: object, description: value (JSON object)"},"!static":false},"containsItem":{"!description":"Checks if a specific item is contained in this variant.","!type":"fn(sItemKey: String) -> Boolean","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!description":"The personalization variant contains personalization data.\n       It is used in the personalization container mode.","getItemKeys":{"!description":"Returns an array with the keys of all items in this variant.","!type":"fn() -> Array","!category":"function","!static":false},"!category":"class","getVariantKey":{"!description":"Returns the key of this variant.","!type":"fn() -> String","!category":"function","!static":false},"getItemValue":{"!description":"Returns the value for an item in this variant.","!type":"fn(sItemKey: String) -> Object","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!constructorDescription":"To be called by the personalization variant set.","!module":"sap/ushell/services/Personalization","delItem":{"!description":"Deletes an item from this variant.\nIn case the item does not exist, nothing happens.","!type":"fn(sItemKey: String)","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The personalization variant contains personalization data.\n       It is used in the personalization container mode."},"sap.ushell.components.tiles":{"!category":"namespace","indicatorTileUtils":"sap.ushell.components.tiles.indicatorTileUtils"},"sap.ushell.components.tiles.indicatorTileUtils.odata4analytics":{"SortOrder":"sap.ushell.components.tiles.indicatorTileUtils.odata4analytics.SortOrder","!category":"namespace"},"sap.ushell.services.Message":{"!category":"class","!constructorDescription":"Message service.","!module":"sap/ushell/services/Message","!proto":"sap.ui.base.Object"},"sap.ushell.services.Personalization.VariantSet_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.VariantSet"},"sap.ushell.ui":{"shell":"sap.ushell.ui.shell","launchpad":"sap.ushell.ui.launchpad","footerbar":"sap.ushell.ui.footerbar","appfinder":"sap.ushell.ui.appfinder","!category":"namespace"},"sap.ushell.services.AppLifeCycle":{"detachAppLoaded":{"!description":"Detaches an event handler from the EventProvider.","!type":"fn(fnFunction: fn(), oListener: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The handler function that has to be detached from the EventProvider.","oListener":"type: object, description: The object that wanted to be notified when the event occurred"},"!static":false},"!category":"class","!constructorDescription":"The Unified Shell's AppLifeCycle service\nThis method MUST be called by the Unified Shell's container only, others\nMUST call <code>sap.ushell.Container.getService(\"AppLifeCycle\")<\/code>.\nConstructs a new instance of the AppLifeCycle service.","!module":"sap/ushell/services/AppLifeCycle","attachAppLoaded":{"!description":"Attaches an event handler for the appLoaded event. This event handler will be triggered\neach time an application has been loaded.","!type":"fn(oData: Object, fnFunction: fn(), oListener: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The handler function to call when the event occurs.","oData":"type: object, description: An object that will be passed to the handler along with the event object when the\n    event is fired.","oListener":"type: object, description: The object that wants to be notified when the event occurs (this context within the\n    handler function)."},"!static":false},"getCurrentApplication":{"!description":"Get information about the currently running application. The function returns an\nobject with following parameters:\n  - applicationType: \u201cUI5|WDA|NWBC|URL|GUI\u201d\n  - componentInstance: reference to component (only for type SAPUI5)\n  - homePage: true is Shell-home is currently displayed","!type":"fn() -> Object","!category":"function","!static":false},"!proto":"sap.ui.base.Object"},"sap.ushell.components.factsheet.controls.PictureViewer":{"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureViewerItem","!category":"function","parameters":{"vItem":"type: int|string|sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item to remove or its index or id"},"!static":false},"setRemovable":{"!description":"Specify whether or not you can delete a picture.\rIf FALSE the delete button will never be visible. Default value is TRUE","!type":"fn()","!category":"function","!static":false},"addItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use aggregation \"tiles\"<br>Adds some item <code>oItem<\/code>\nto the aggregation named <code>items<\/code>.","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","parameters":{"oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item to add; if empty, nothing is inserted"},"!static":false},"!module":"sap/ushell/components/factsheet/controls/PictureViewer","indexOfItem":{"!description":"Checks for the provided <code>sap.ushell.components.factsheet.controls.PictureViewerItem<\/code> in the aggregation named <code>items<\/code> \nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem) -> Number","!category":"function","parameters":{"oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item whose index is looked for."},"!static":false},"!category":"class","deletePicture":{"!description":"Removes the picture at index <code>iIndex<\/code> from the <code>items<\/code> aggregation.","!type":"fn(iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index of the picture collection to delete;\n            if <code>iIndex<\/code> is out of range or empty, the current image will be deleted."},"!static":false},"setTileScaling":{"!description":"Set the percentage of the space occupied by the image in the picture viewer control.\rPlease note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available","!type":"fn(fTileScale: undefined)","!category":"function","parameters":{"fTileScale":"type: undefined, description: undefined"},"!static":false},"getCurrentPictureIndex":{"!description":"Gets the current picture index.","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","!static":false},"detachPictureDeleted":{"!description":"Detach event handler <code>fnFunction<\/code> from the 'pictureDeleted' event of this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Context object on which the given function had to be called."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewer with name <code>sClassName<\/code> \nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"getRemovable":{"!description":"Getter for property <code>removable<\/code>.\nDefines whether or not you can remove a picture\n\nDefault value is <code>false<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"firePictureDeleted":{"!description":"Fire event pictureDeleted to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureViewer.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTileScaling tileScaling} : float (default: 0.95)<\/li>\n<li>{@link #getRemovable removable} : boolean (default: false)<\/li><\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} <strong>(default aggregation)<\/strong> : sap.ushell.components.factsheet.controls.PictureViewerItem[]<\/li><\/ul>\n<\/li>\n<li>Associations\n<ul><\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link sap.ushell.components.factsheet.controls.PictureViewer#event:pictureDeleted pictureDeleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li><\/ul>\n<\/li>\n<\/ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.m.TileContainer#constructor sap.m.TileContainer}\ncan be used as well.","getTileScaling":{"!description":"Getter for property <code>tileScaling<\/code>.\nPercentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available\n\nDefault value is <code>0.95<\/code>","!type":"fn() -> Number","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer.\nNow, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead.\nThis control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","selectPicture":{"!description":"Select the picture at index <code>iIndex<\/code> from the <code>items<\/code> aggregation.","!type":"fn(iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index of the aggregation to select; for\n            a negative value of <code>iIndex<\/code>, the picture at position 0 is selected; for a value\n            greater than the current size of the aggregation, the selected picture at the last position is selected"},"!static":false},"getItems":{"!description":"Getter for aggregation <code>items<\/code>.<br/>\nAggregation of PictureViewerItem that contains either a picture URI or the actual Image control.\n\n<strong>Note<\/strong>: this is the default aggregation for components/factsheet/controls/PictureViewer.","!type":"fn() -> [sap.ushell.components.factsheet.controls.PictureViewerItem]","!category":"function","!static":false},"attachPictureDeleted":{"!description":"Attach event handler <code>fnFunction<\/code> to the 'pictureDeleted' event of this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.<br/>.\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.<br/> itself. \n\nThrown when user delete an image","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oData":"type: object, description: An application specific payload object, that will be passed to the event handler along with the event object when firing the event.","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.<br/> itself."},"!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation \nnamed <code>items<\/code>.","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.<br/>\nAdditionally unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ushell.components.factsheet.controls.PictureViewerItem]","!category":"function","!static":false},"insertItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use aggregation \"tiles\"<br>Inserts a item into the aggregation named <code>items<\/code>.\nWhen adding a new item to the aggregation, a sap.ca.ui.PictureTile is actually created\nwith its own ID and added to the internal TileContainer.","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem, iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","!category":"function","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n            a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n            greater than the current size of the aggregation, the item is inserted at\n            the last position","oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item to insert; if empty, nothing is inserted"},"!static":false},"!proto":"sap.m.TileContainer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer.\nNow, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead.\nThis control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureViewer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ushell.services.UserInfo_obj":{"!type":"fn()","prototype":"sap.ushell.services.UserInfo"},"sap.ushell.services.Notifications_obj":{"!type":"fn(oContainerInterface: Object, sParameter: Object, oServiceProperties: Object)","prototype":"sap.ushell.services.Notifications"},"sap.ushell.services.LaunchPage":{"getTileId":{"!description":"Returns the tile's unique identifier","!type":"fn(oTile: Object) -> String","!category":"function","parameters":{"oTile":"type: object, description: The tile"},"!static":false},"addTile":{"!description":"Adds a tile to a group.\n\nIf no group is provided then the tile is added to the default group.\n\nIn case of success, the <code>done<\/code> function returns the new tile.\nIntention: the page builder by default puts this tile at the end of the default group.\nIn case of failure, the <code>fail<\/code> function should return the consistent (i.e. persisted) backend state of the default group.","!type":"fn(oCatalogTile: Object, oGroup?: Object) -> Object","!category":"function","parameters":{"oCatalogTile":"type: object, description: An 'anonymous' tile from the tile catalog","oGroup":"type: object, description: The target group"},"!static":false},"addGroup":{"!description":"Adds a new group.\n\nIn case of success, the <code>done<\/code> function gets the new added group object.\nIntention: the page builder adds this group to the end of the home screen.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!type":"fn(sTitle: String) -> Object","!category":"function","parameters":{"sTitle":"type: string, description: The title of the new group"},"!static":false},"getTileType":{"!description":"Returns the tile's type.","!type":"fn(oTile: Object) -> String","!category":"function","parameters":{"oTile":"type: object, description: The tile"},"!static":false},"getCatalogTitle":{"!description":"Returns the catalog's title","!type":"fn(oCatalog: Object) -> String","!category":"function","parameters":{"oCatalog":"type: object, description: The catalog"},"!static":false},"registerTileActionsProvider":{"!description":"Register an external tile actions provider callback function.\n\nThe callback has to return an array of actions of the given tile. The callback is triggered when","!type":"fn(fnProvider: Object)","!category":"function","parameters":{"fnProvider":"type: Object, description: A callback which returns an array of action objects."},"!static":false},"getCatalogTileSize":{"!description":"Returns the size of a catalog tile as a string. For example: \"1x1\", \"1x2\"","!type":"fn(oCatalogTile: Object) -> String","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"getGroupTitle":{"!description":"Returns the title of the given group.","!type":"fn(oGroup: Object) -> String","!category":"function","parameters":{"oGroup":"type: object, description: The group whose title is returned"},"!static":false},"setGroupTitle":{"!description":"Sets the title of an existing group.\n\nIn case of success, the <code>done<\/code> function returns nothing.\nIntention: the page builder knows the new title, and if successful nothing needs to be done,\n as the title is already visible to the user.\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state\n of the group title, in most cases the old title.","!type":"fn(sTitle: String, oGroup: Object) -> Object","!category":"function","parameters":{"oGroup":"type: object, description: The group whose title is set","sTitle":"type: string, description: The new title of the group"},"!static":false},"getCatalogTiles":{"!description":"Returns the tiles of a catalog.\nIn case of success, the <code>done<\/code> function of the returned promise object gets an array of 'anonymous' tiles of the catalog.","!type":"fn(oCatalog: Object) -> Object","!category":"function","parameters":{"oCatalog":"type: object, description: The catalog"},"!static":false},"getGroupTiles":{"!description":"Returns an array of 'anonymous' tiles of a group.\nThe order of the array is the order of tiles that will be displayed to the user.","!type":"fn(oGroup: Object) -> Array","!category":"function","parameters":{"oGroup":"type: object, description: The group whose tiles are returned"},"!static":false},"!module":"sap/ushell/services/LaunchPage","isCatalogsValid":{"!description":"Returns whether the catalogs collection previously returned by <code>getCatalogs()<\/code> is still valid.\n\nInitially the result is <code>false<\/code> until <code>getCatalogs()<\/code> has been called.\nLater, the result might be <code>false<\/code> again in case one of the catalogs has been invalidated,\ne.g. due to adding a tile to a catalog (\"Add to catalog\" scenario).","!type":"fn() -> Boolean","!category":"function","!static":false},"isGroupRemovable":{"!description":"Checks if a group can be removed.\n\nReturns <code>true<\/code> if the group can be removed (i.e. if the given group was created by the user)\nand <code>false<\/code> if the group can only be reset.","!type":"fn(oGroup: Object) -> Boolean","!category":"function","parameters":{"oGroup":"type: object, description: The group to be checked"},"!static":false},"isGroupLocked":{"!description":"Checks if a group was marked as locked (meaning the group and its tiles will lack several capabilities such as Rename, Drag&Drop...).\n\nReturns <code>true<\/code> if the group is locked\nand <code>false<\/code> if not.","!type":"fn(oGroup: Object) -> Boolean","!category":"function","parameters":{"oGroup":"type: object, description: The group to be checked"},"!static":false},"!category":"class","getCatalogTileTitle":{"!description":"Returns the catalog tile's title","!type":"fn(oCatalogTile: Object) -> String","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"getTileSize":{"!description":"Returns the tile size in the format of 1x1 or 1x2 string","!type":"fn(oTile: Object) -> String","!category":"function","parameters":{"oTile":"type: object, description: The tile"},"!static":false},"getCatalogTilePreviewIcon":{"!description":"Returns preview icon for a catalog tile.","!type":"fn(oCatalogTile: Object) -> String","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"removeTile":{"!description":"Removes a tile from a group.\n\nIn case of success, the <code>done<\/code> function returns the new tile.\nIntention: the page builder has already 'hidden' (or removed) the tile.\n\nIn case of failure, the <code>fail<\/code> function should return the consistent (i.e. persisted) backend state of the group.","!type":"fn(oTile: Object, oGroup: Object, iIndex: integer) -> Object","!category":"function","parameters":{"oGroup":"type: object, description: The group from which to remove the tile instance","iIndex":"type: integer, description: The tile index","oTile":"type: object, description: The tile instance to remove"},"!static":false},"getTileTarget":{"!description":"Returns the tile's navigation target.\n\nThe navigation target string is used (when assigned to <code>location.hash<\/code>) for performing a navigation action\n that eventually opens the application represented by the tile.","!type":"fn(oTile: Object) -> String","!category":"function","parameters":{"oTile":"type: object, description: the tile"},"!static":false},"getCatalogError":{"!description":"Returns the catalog's technical error message in case it could not be loaded from the\nbackend.\n<p>\n<b>Beware:<\/b> The technical error message is not translated!","!type":"fn(oCatalog: Object) -> String","!category":"function","parameters":{"oCatalog":"type: object, description: the catalog"},"!static":false},"resetGroup":{"!description":"Resets a group.\n\nThe reset action is relevant for a group that was assigned to the user by an administrator.\nThe reset action means that the group is set back to the state defined by the administrator,\nand changes made by the end user (e.g. adding tiles) are removed.\nA group can be reset multiple times.\n\nIn case of success, the <code>done<\/code> function gets the reset group object.\n\nIn case of failure, or when the given group was created by the user (i.e. can't be reset)- <code>fail<\/code> handler is called,\nreturning the consistent (i.e. persisted) backend state of all groups.\nThe returned group object is the same as the one returned by @see sap.ushell.services.LaunchPage.getGroups","!type":"fn(oGroup: Object, iIndex: integer) -> Object","!category":"function","parameters":{"oGroup":"type: object, description: The group to be reset","iIndex":"type: integer, description: The index of the group to be reset"},"!static":false},"getTileView":{"!description":"Returns UI5 view or control of the tile.\nIn case of success the <code>done<\/code> function should return UI5 view or control of the tile.\nIn case of failure the <code>fail<\/code> function should return nothing.","!type":"fn(oTile: Object) -> Object","!category":"function","parameters":{"oTile":"type: object, description: The tile"},"!static":false},"getGroups":{"!description":"Returns the groups of the user.\nIn case of success, the <code>done<\/code> function gets an array of 'anonymous' groups.\nThe order of the array is the order in which the groups will be displayed to the user.","!type":"fn() -> Object","!category":"function","!static":false},"getCatalogTileTags":{"!description":"Returns the tags associated with a catalog tile which can be used to find the\ncatalog tile in a tag filter.","!type":"fn(oCatalogTile: Object)","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"getLinkTiles":{"!description":"Returns an array of link tiles for a group.\nThe order of the array is the order in which the links will be displayed to the user.","!type":"fn(oGroup: Object) -> Array","!category":"function","parameters":{"oGroup":"type: object, description: The group whose link tiles are returned"},"!static":false},"removeGroup":{"!description":"Removes a group.\n\nIn case of success, the <code>done<\/code> function is called without any value (i.e. input data).\nIntention: the page builder already removed the page (or hid it from the user) and if successful - nothing needs to be done.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!type":"fn(oGroup: Object, iIndex: integer) -> Object","!category":"function","parameters":{"oGroup":"type: object, description: The group to be removed","iIndex":"type: integer, description: The index of the group to be removed"},"!static":false},"getCatalogData":{"!description":"Returns catalog's technical data.","!type":"fn(oCatalog: Object) -> Object","!category":"function","parameters":{"oCatalog":"type: object, description: the catalog"},"!static":false},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\n<code>sap.ushell.Container.getService(\"LaunchPage\")<\/code>.\nConstructs a new instance of the page builder service.","getCatalogTileId":{"!description":"Returns catalog tile's unique identifier.\nThis function may be called for a catalog tile or (since 1.21.0) for a group tile.\nIn the latter case, the function returns the unique identifier of the catalog tile on which the group tile is based.","!type":"fn(oTile: Object) -> String","!category":"function","parameters":{"oTile":"type: object, description: The tile or the catalog tile"},"!static":false},"getDefaultGroup":{"!description":"Returns the default group of the user.\nIn case of success, the <code>done<\/code> function gets an 'anonymous' object representing the default group.","!type":"fn() -> Object","!category":"function","!static":false},"getGroupId":{"!description":"Returns the unique identifier of the given group","!type":"fn(oGroup: Object) -> String","!category":"function","parameters":{"oGroup":"type: object, description: The group whose id is returned"},"!static":false},"addGroupAt":{"!description":"Adds a new group at a specific location.\n\nIn case of success, the <code>done<\/code> function gets the new added group object.\nIntention: the page builder adds this group to the specific location on the home screen.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!type":"fn(sTitle: String, iIndex: integer) -> Object","!category":"function","parameters":{"iIndex":"type: integer, description: the location of the new group","sTitle":"type: string, description: The title of the new group"},"!static":false},"getCatalogTilePreviewTitle":{"!description":"Returns preview title for a catalog tile.","!type":"fn(oCatalogTile: Object) -> String","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"!description":"The Unified Shell's page builder service.","getCatalogId":{"!description":"Returns the catalog's unique identifier","!type":"fn(oCatalog: Object) -> String","!category":"function","parameters":{"oCatalog":"type: object, description: The catalog"},"!static":false},"moveTile":{"!description":"Moves a tile within a group or between different groups.\n\nIn case of success, the <code>done<\/code> function returns nothing.\nIntention: the page builder already moved the tile.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of the source group and the target group.\nThe result is in the following format {source:[{},{}], target:[{},{}]}.\n\nThe source and the target groups tiles are in the form of the @see sap.ushell.services.LaunchPage.getGroupTiles","!type":"fn(oTile: Object, iSourceIndex: integer, iTargetIndex: integer, oSourceGroup: Object, oTargetGroup?: Object) -> Object","!category":"function","parameters":{"iSourceIndex":"type: integer, description: the index in the source group","iTargetIndex":"type: integer, description: the target group index, in case this parameter is not supplied we assume the move tile is within the source group using iSourceIndex","oSourceGroup":"type: object, description: the source group the tile came from","oTargetGroup":"type: object, description: The same object type as the one returned by <code>sap.ushell.services.LaunchPage.getGroups<\/code>\n   the target group the tile will be placed in, in case this\n    parameter is not supplied we assume the move tile is within the source group","oTile":"type: object, description: a tile instance to be moved\n    The same object type as the one returned by <code>sap.ushell.services.LaunchPage.getGroupTiles<\/code>"},"!static":false},"moveGroup":{"!description":"Moves a group to a new index (i.e. location).\n\nIn case of success, the <code>done<\/code> function is called without any value.\nIntention: the page builder already moved the page (visible to the user) and if successful - nothing needs to be done.\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!type":"fn(oGroup: Object, iNewIndex: integer) -> Object","!category":"function","parameters":{"iNewIndex":"type: integer, description: The new index for the group","oGroup":"type: object, description: The group to be moved"},"!static":false},"getCatalogTileTargetURL":{"!description":"Returns the navigation target URL of a catalog tile.\nIf the catalog tile does not exist, this function implicitly instantiates it using {@link #getCatalogTileView(oCatalogTile)}.","!type":"fn(oCatalogTile: Object) -> String","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"setTileVisible":{"!description":"Sets the tile's visibility state and notifies the tile about the change.","!type":"fn(oTile: Object, bNewVisible: Boolean)","!category":"function","parameters":{"bNewVisible":"type: boolean, description: The tile's required visibility state.","oTile":"type: object, description: The tile"},"!static":false},"getCatalogs":{"!description":"Returns the catalogs of the user.\n\n<p>\nOnly severe failures make the overall operation fail. If loading of a remote catalog fails,\nthis is handled gracefully by providing a \"dummy\" empty catalog (with ID instead of title).\nUse {@link getCatalogError} to check if a (remote) catalog could not be loaded from the backend.\n<p>\nProgress notifications are sent for each single catalog, i.e. attaching a <code>progress<\/code> handler gives you the same\npossibilities as attaching a <code>done<\/code> handler, but with the advantage of\nimproved responsiveness.","!type":"fn() -> Object","!category":"function","!static":false},"getTileTitle":{"!description":"Returns the tile's title.","!type":"fn(oTile: Object) -> String","!category":"function","parameters":{"oTile":"type: object, description: The tile"},"!static":false},"getCatalogTileKeywords":{"!description":"Returns the keywords associated with a catalog tile which can be used to find the\ncatalog tile in a search.\nNote: getCatalogTileView <b>must<\/b> be called <b>before<\/b> this method. Otherwise the\nkeywords may be incomplete.","!type":"fn(oCatalogTile: Object)","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"refreshTile":{"!description":"Triggers a refresh action of a tile.\nTypically this action is related to the value presented in dynamic tiles","!type":"fn(oTile: Object)","!category":"function","parameters":{"oTile":"type: object, description: The tile"},"!static":false},"getCatalogTileView":{"!description":"Returns the UI5 view or control  of a catalog tile","!type":"fn(oCatalogTile: Object) -> Object","!category":"function","parameters":{"oCatalogTile":"type: object, description: The catalog tile"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's page builder service."},"sap.ushell.services.PersonalizationContainer":{"setItemValue":{"!description":"Sets the value of a direct item in the container.\nIn case the item is already existing its value is overwritten. In case it is not\nexisting a new item with this key and value is created.","!type":"fn(sItemKey: String, sItemValue: Object)","!category":"function","parameters":{"sItemKey":"type: string, description: item key","sItemValue":"type: object, description: item value (JSON object)"},"!static":false},"save":{"!description":"Attempts to save the current container data at the underlying storage asynchronously.\nThe current state is serialized.","!type":"fn() -> Object","!category":"function","!static":false},"getItemValue":{"!description":"Returns the value for a direct item from the container.","!type":"fn(sItemKey: String) -> Object","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!constructorDescription":"To be called by the personalization service getPersonalizationContainer method.","!module":"sap/ushell/services/Personalization","delVariantSet":{"!description":"Deletes a variant set from the container.\nIn case the variant set does not exist nothing happens.","!type":"fn(sVariantSetKey: String)","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"!description":"The personalization container is the anchor object of the unified shell\n       personalization in container mode.","containsItem":{"!description":"Checks if a specific direct item is contained in the container.","!type":"fn(sItemKey: String) -> Boolean","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!type":"fn() -> Array","!category":"function","!static":false},"!category":"class","getItemKeys":{"!description":"Returns an array with the keys of direct items in the container.","!type":"fn() -> Array","!category":"function","!static":false},"load":{"!description":"(Re)loads the current container data from the underlying storage asynchronously.\nThe current local data is discarded.\n\nReturns a promise for the load operation.\nIf another save/load/delete operation is not completed, the  operation may fail!\n(wait for the other promise).\n\nSynchronous read and write operations before the load is done have undefined\neffects.","!type":"fn() -> Object","!category":"function","!static":false},"containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!type":"fn(sVariantSetKey: String) -> Boolean","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"getVariantSet":{"!description":"Returns the variant set object from the container.","!type":"fn(sVariantSetKey: String) -> Object","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false},"delItem":{"!description":"Deletes a direct item from the container.\nIn case the item does not exist, nothing happens.","!type":"fn(sItemKey: String)","!category":"function","parameters":{"sItemKey":"type: string, description: item key"},"!static":false},"!helpDescription":"The personalization container is the anchor object of the unified shell\n       personalization in container mode.","!proto":"sap.ui.base.Object","addVariantSet":{"!description":"Creates a new variant set in the container.\nIn case a variant set with this key is already existing an exception is thrown.","!type":"fn(sVariantSetKey: String) -> Object","!category":"function","parameters":{"sVariantSetKey":"type: string, description: variant set key"},"!static":false}},"sap.ushell.services.UsageAnalytics":{"systemEnabled":{"!description":"Indicates whether the service is available.<br><br>\nReturns <code>true<\/code> if the following conditions exist, and <code>false<\/code> otherwise:<br>\na) Service configuration property <code>enable<\/code> is set to <code>true<\/code><br>\nb) Service configuration property <code>pubToken<\/code> is not empty<br>\nc) Agreement text exists or <code>setUsageAnalyticsPermitted<\/code> is set to <code>false<\/code><br>","!type":"fn() -> Boolean","!category":"function","!static":false},"setLegalText":{"!description":"Enables the renderer to set the content of the legal message..","!type":"fn()","!category":"function","!static":false},"!description":"A UShell service for tracking business flows and user actions.\n\nThe UsageAnalytics service exposes API for logging custom events and setting custom field values in the logged events.<br>\nThe data is sent via http and recorded on a server, whose URL is defined by the <code>baseUrl<\/code> service configuration property.<br>\nThe service configuration must also include the site ID from the <code>pubToken<\/code> attribute.<br>\nYou can find the pubToken in the code snippet provided in the WARP when creating a new site.\n\nEach tracked event is represented by a table entry on the server database.<br>\nThe administrator can produce reports based on the the recorded data.\n\nTwo types of events can be logged:<br>\n- Automatic events: Click or pageLoad are predefined events, logged by the base tracking library.<br>\n You can disable these events in the service configuration.<br>\n- Custom events: You can use the service API to log an event with custom data using the function logCustomEvent<br>\n\nEach tracked event (either automatic or custom) is represented by a database row, that includes 10 custom attributes named custom1...custom10.<br>\n Some of these values can be set using UsageAnalytics service API.<br>","!category":"class","userEnabled":{"!description":"Indicates whether the user has specified to track activities.<br><br>\nReturns <code>true<\/code> if the following conditions exist, and <code>false<\/code> otherwise:<br>\na) The function <code>system enabled<\/code> returns <code>true<\/code><br>\nb) The user property <code>trackUsageAnalytics<\/code> is set to <code>true<\/code><br>","!type":"fn() -> Boolean","!category":"function","!static":false},"!module":"sap/ushell/services/UsageAnalytics","setCustomAttributes":{"!description":"Sets up to 6 customer attributes of logged events according to the given object attributes.<br>\nA customer attribute can be set only once during a session.<br>\nCurrently these attributes correspond to database columns custom5...custom10.","!type":"fn(oCustomFieldValues: Object)","!category":"function","parameters":{"oCustomFieldValues":"type: object, description: An json object that includes attribute1...attribute6 (or subset)<br>\n with values of type string/number/boolean or a function that returns any of these types.<br>\n For example:<br>\n {<br>\n  attribute1: \"value3\",<br>\n  attribute2: function () {return \"value4\"},<br>\n  attribute3: 55<br>\n }<br>\n in this example the custom field \"custom5\" gets the string \"value3\"<br>\n the custom field custom6 gets the function that returns the string \"value4\",<br>\n the custom field custom7 gets a string \"55\".<br>\n Any property of oCustomFieldValues which is not in the range of attribute1...attribute6 is ignored."},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"A UShell service for tracking business flows and user actions.\n\nThe UsageAnalytics service exposes API for logging custom events and setting custom field values in the logged events.<br>\nThe data is sent via http and recorded on a server, whose URL is defined by the <code>baseUrl<\/code> service configuration property.<br>\nThe service configuration must also include the site ID from the <code>pubToken<\/code> attribute.<br>\nYou can find the pubToken in the code snippet provided in the WARP when creating a new site.\n\nEach tracked event is represented by a table entry on the server database.<br>\nThe administrator can produce reports based on the the recorded data.\n\nTwo types of events can be logged:<br>\n- Automatic events: Click or pageLoad are predefined events, logged by the base tracking library.<br>\n You can disable these events in the service configuration.<br>\n- Custom events: You can use the service API to log an event with custom data using the function logCustomEvent<br>\n\nEach tracked event (either automatic or custom) is represented by a database row, that includes 10 custom attributes named custom1...custom10.<br>\n Some of these values can be set using UsageAnalytics service API.<br>"},"sap.ushell.services.ContainerInterface_obj":{"!type":"fn()","prototype":"sap.ushell.services.ContainerInterface"},"sap.ushell.services.EndUserFeedback_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object, sParameters: String, oServiceConfiguration: Object)","prototype":"sap.ushell.services.EndUserFeedback"},"sap.ushell.services.URLParsing_obj":{"!type":"fn()","prototype":"sap.ushell.services.URLParsing"},"sap.ushell.services.LaunchPage_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object)","prototype":"sap.ushell.services.LaunchPage"},"sap.ushell.services.NavTargetResolution":{"!description":"The Unified Shell's internal navigation target resolution service\n\nMethods in this class deal with *internal* representations of the shell hash.\n\nconfigurations:\n<code>config : { allowTestUrlComponentConfig  : true }<\/code>\nallow to redefine the Test-url, Test-local1, Test-local2 applications via url parameters\n(sap-ushell-test-local1-url=  / sap-ushell-test-local1-additionalInformation=  ... )","isNavigationSupported":{"!description":"Tells whether the given navigation intent(s) are supported for the given\nparameters\nSupported\" means that a valid navigation target is configured for the\nuser for the given device form factor.\n\nThis is effectively a test function for {@link toExternal}/ {@link hrefForExternal}.\nIt is functionally equivalent to {@link isIntentSupported} but accepts the same input\nas {@link toExternal}/ {@link hrefForExternal}.","!type":"fn(aIntents: [Object]) -> Object","!category":"function","parameters":{"aIntents":"type: object[], description: the intents (such as <code>[\"#AnObject-action?A=B&c=e\"]<\/code>) to be checked\nwith object beeing instances the oArgs object of toExternal, hrefForExternal etc.\n\n e.g. <code>{ target : { semanticObject : \"AnObject\", action: \"action\" },<br/>\n        params : { A : \"B\" } }<\/code>\n or\n e.g. <code>{ target : { semanticObject : \"AnObject\", action: \"action\" },<br/>\n        params : { A : \"B\", c : \"e\" } }<\/code>\n or\n     <code>{ target : { shellHash : \"AnObject-action?A=B&c=e\" },\n     }<\/code>"},"!static":false},"expandCompactHash":{"!description":"expands a URL hash fragment\n\nThis function gets the hash part of the URL and expands a sap-intent-param if present\nand retrievable\n\nThis is an asynchronous operation.","!type":"fn(sHashFragment: String) -> String","!category":"function","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format(as obtained by the SAPUI5 hasher service,\n    not as given in <code>location.hash<\/code>)"},"!static":false},"!category":"class","resolveHashFragment":{"!description":"Resolves the URL hash fragment.\n\nThis function should be used by a custom renderer in order to\nimplement custom navigation.  Do not use this function for developing\nFiori applications.\n\nThis function gets the hash part of the URL and returns data of the\ntarget application.\n\nExample of the returned data:\n<pre>\n{\n   \"additionalInformation\": \"SAPUI5.Component=sap.ushell.renderers.fiori2.search.container\",\n   \"applicationType\": \"URL\",\n   \"url\": \"/sap/bc/ui5_ui5/ui2/ushell/resources/sap/ushell/renderers/fiori2/search/container\",\n   \"navigationMode\": \"embedded\"\n}\n<\/pre>\n\nThis is an asynchronous operation.","!type":"fn(sHashFragment: String) -> Object","!category":"function","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format (as obtained by the SAPUI5 hasher service)\n    not as given in <code>location.hash<\/code>)!\n    example <code>#SemanticObject-action?P1=V1&P2=A%20B%20C<\/code>"},"!static":false},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\n<code>sap.ushell.Container.getService(\"NavTargetResolution\")<\/code>.\nConstructs a new instance of the navigation target resolution service.","!module":"sap/ushell/services/NavTargetResolution","!proto":"sap.ui.base.Object","!helpDescription":"The Unified Shell's internal navigation target resolution service\n\nMethods in this class deal with *internal* representations of the shell hash.\n\nconfigurations:\n<code>config : { allowTestUrlComponentConfig  : true }<\/code>\nallow to redefine the Test-url, Test-local1, Test-local2 applications via url parameters\n(sap-ushell-test-local1-url=  / sap-ushell-test-local1-additionalInformation=  ... )"},"sap.ushell.renderers.fiori2.Renderer":{"hideFloatingActionButton":{"!description":"Hide the given sap.ushell.ui.shell.ShellFloatingAction from Fiori Launchpad, in the given launchpad states.\nThe removed control will not be destroyed.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the sap.ushell.ui.shell.ShellFloatingAction to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control.(Only valid if bCurrentState is set to false)"},"!static":false},"setFooter":{"!description":"Displays the given sap.m.Bar as the footer of the Fiori launchpad shell.<\/br>\nThe footer will be displayed in all states. <\/br>\n\n<b>Example:<\/b>\n<pre>\n var bar = new sap.m.Bar({contentLeft: [new sap.m.Button({text: \"Test Footer Button\",\npress: function () {\nsap.m.MessageToast.show(\"Pressed\");\n}})\n]});\n var renderer = sap.ushell.Container.getRenderer(\"fiori2\");\n renderer.setFooter(bar);\n<\/pre>","!type":"fn(oFooter: Object)","!category":"function","parameters":{"oFooter":"type: Object, description: sap.m.Bar\n  the control to be added as the footer of the Fiori Launchpad"},"!static":false},"removeFooter":{"!description":"If exists, this method will remove the footer from the Fiori Launchpad.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn()","!category":"function","!static":false},"removeToolAreaItem":{"!description":"Remove the given Tool Area Item from Fiori Launchpad, in the given launchpad states.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the sap.ushell.ui.shell.ToolAreaItem control to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control.(Only valid if bCurrentState is set to false)"},"!static":false},"addFloatingActionButton":{"!description":"Creates a FloatingActionButton in Fiori launchpad, in the given launchpad states.<\/br>\nThe FloatingActionButton is rendered in the bottom right corner of the shell.<\/br>\n  <b>Example:<\/b>\n  <pre> sap.ushell.Container.getRenderer(\"fiori2\").addFloatingActionButton(\"sap.ushell.ui.shell.ShellFloatingAction\", {id: \"testBtn\"}, true, true);<\/pre>","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state.\n  Once the user navigates to another app or back to the Home page, this control will be removed.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","bIsVisible":"type: boolean, description: Specify whether to display the control.","controlType":"type: string, description: The (class) name of the control type to create.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."},"!static":false},"hideSubHeader":{"!description":"Hide the given control from the Fiori Launchpad sub header, in the given launchpad states.\nThe removed control will not be destroyed.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the controls to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control.(Only valid if bCurrentState is set to false)"},"!static":false},"showToolArea":{"!description":"Sets the ToolArea visibility","!type":"fn(sLaunchpadState?: String, bVisible?: Boolean)","!category":"function","parameters":{"sLaunchpadState":"type: String, description: LaunchpadState in which to show/hide the ToolArea","bVisible":"type: boolean, description: specifies whether to display the ToolArea or not"},"!static":false},"!module":"sap/ushell/renderers/fiori2/Renderer","addLeftPaneContent":{"!description":"Creates the Left Pane content in Fiori launchpad, in the given launchpad states.<\/br>\n  <b>Example:<\/b>\n  <pre> sap.ushell.Container.getRenderer(\"fiori2\").addLeftPaneContent(\"sap.m.Button\", {id: \"testBtn\", text: \"Test Button\"}, true, true);<\/pre>","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state.\n  Once the user navigates to another app or back to the Home page, this control will be removed.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","bIsVisible":"type: boolean, description: Specify whether to display the control.","controlType":"type: string, description: The (class) name of the control type to create.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."},"!static":false},"hideHeaderItem":{"!description":"Hide the given sap.ushell.ui.shell.ShellHeadItem from Fiori Launchpad, in the given launchpad states.\nThe removed control will not be destroyed.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the sap.ushell.ui.shell.ShellHeadItem to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control.(Only valid if bCurrentState is set to false)"},"!static":false},"showActionButton":{"!description":"Displays Buttons on the user actions menu in the Fiori launchpad shell, in the given launchpad states\n(see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<\/br>\nIf no launchpad state is provided the content is displayed in all states.<\/br>\nThe user actions menu is opened via the button on the right hand side of the shell header.<\/br>\n\n<b>Example:<\/b>\n  <pre>\n  var button1 = new sap.m.Button();\n  var renderer = sap.ushell.Container.getRenderer(\"fiori2\");\n  renderer.showActionButton([button1.getId()], false, [\"home\", \"app\"]);\n  <\/pre>","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String], bIsFirst: Boolean)","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, add the current Buttons only to the current instance of the rendering of the shell.\n  if false, add the Buttons to the LaunchPadState itself.","bIsFirst":"type: boolean, description: if true, the Button will be added to the top of the ActionItems list.","aIds":"type: String[], description: List of ID elements to add to the user actions menu.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.renderer.LaunchpadState in which to add the aIds."},"!static":false},"setHeaderVisibility":{"!description":"Sets the header visibility accrding to the given value and shell states.<br>\n(see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<br><br>\n\n<b>Example:<\/b>\n<pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.setHeaderVisibility(false, false, [\"home\", \"app\"]);\n<\/pre>","!type":"fn(bVisible: Boolean, bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the visibility is set only to the current rendered shell state.<br>\n  When the user navigates to another application (including the Home page) then the visibility flag is reset.<br>\n  If <code>false<\/code> then set the visibility according to the states provided in the aState parameter.<br>","bVisible":"type: boolean, description: The visibility of the header<br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br>\n A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the header visibility flag should be set.<br>\n If no launchpad state is provided the visibility flag is set for all states."},"!static":false},"addToolAreaItem":{"!description":"Creates a ToolAreaItem  in Fiori Launchpad and adds it to the Tool Area, in the given launchpad states.<\/br>\nIf no items are added to the Tool Area, it will not be displayed.<\/br>\nOnce an item is added, the Tool Area is rendered on the left side on the Fiori Launchpad shell.<\/br>\n\n  <b>Example:<\/b>\n  <pre>sap.ushell.Container.getRenderer(\"fiori2\").addToolAreaItem({\n             id: \"testButton\",\n             icon: \"sap-icon://documents\",\n             expandable: true,\n             press: function (evt) {\n                window.alert(\"Press\" );\n               },\n            expand: function (evt) {\n                // This function will be called on the press event of the \"expand\" button. The result of \"expand\" event in the UI must be determined by the developer\n                window.alert(\"Expand\" );\n               }\n          }, true, false, [\"home\"]);\n<\/pre>","!type":"fn(oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state.","oControlProperties":"type: object, description: The properties object that will be passed to the constructor of sap.ushell.ui.shell.ToolAreaItem control.","bIsVisible":"type: boolean, description: Specify whether to display the control.","aStates":"type: String[], description: List of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control.Only valid if bCurrentState is set to false."},"!static":false},"hideLeftPaneContent":{"!description":"Hide the given control from Fiori Launchpad, in the given launchpad states.\nThe removed control will not be destroyed.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the controls to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control.(Only valid if bCurrentState is set to false)"},"!static":false},"!category":"class","hideHeaderEndItem":{"!description":"Hide the given sap.ushell.ui.shell.ShellHeadItem from Fiori Launchpad, in the given launchpad states.\nThe removed control will not be destroyed.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the sap.ushell.ui.shell.ShellHeadItem to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control.(Only valid if bCurrentState is set to false)"},"!static":false},"addUserPreferencesEntry":{"!description":"Adds an entry to the User Preferences dialog box including the UI control that appears when the user clicks the new entry,<br>\n and handling of User Preferences actions such as SAVE and CANCEL.<br><br>\n\n<b>Example:<\/b>\n<pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\nvar oEntry = {\n  title: \"title\",\n  value: function() {\n      return jQuery.Deferred().resolve(\"entryTitleToBeDisplayed\");\n  },\n  content: function() {\n      return jQuery.Deferred().resolve(new sap.m.Button(\"userPrefEntryButton\", {text: \"Button\"}));\n  },\n  onSave: function() {\n      return jQuery.Deferred().resolve();\n  }\n  };\noRenderer.addUserPreferencesEntry(oEntry);   \n<\/pre>","!type":"fn(entryObject: Object)","!category":"function","parameters":{"entryObject":"type: object, description: The data of the new added User Preference entry<br>\n Including:<br>\n <ul>\n <li>{String} entryHelpID (Optional) - The ID of the object.<br>\n <li>{String} title - The title of the entry to be presented in the list in the User Preferences dialog box.<br>\n We recommend using a string from the translation bundle.<br>\n <li>{String}/{Function} value - A string to be presented as the value of the entry<br>\n  OR a function to be called which returns a {jQuery.Deferred.promise} object.<br>\n <li>{Function} content - A function to be called that returns a {jQuery.Deferred.promise} object<br>\n which consists of a {sap.ui.core.Control} to be displayed in a follow-on dialog box. A SAPUI5 view instance can also be returned.\n The functions is called on each time the user opens the User Preferences dialog box.\n <li>{Function} onSave - A function to be called which returns a {jQuery.Deferred.promise} object when the user clicks Save in the User Preferences dialog box.<br>\n  If an error occurs, pass the error message via the {jQuery.Deferred.promise} object. Errors are displayed in the log.<br>\n <li>{Function} onCancel - A function to be called that closes the User Preferences dialog box without saving any changes. <br>\n <\/ul>"},"!static":false},"addActionButton":{"!description":"Creates an Action Button in Fiori launchpad, in the given launchpad states. <\/br>\nThe button will be displayed in the user actions menu, that is opened from the user button in the shell header.<\/br>\n <b>Example:<\/b>\n  <pre> sap.ushell.Container.getRenderer(\"fiori2\").addActionButton(\"sap.m.Button\", {id: \"testBtn2\", text: \"test button\"}, true, true);<\/pre>","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state.\n  Once the user navigates to another app or back to the Home page, this control will be removed.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","bIsVisible":"type: boolean, description: Specify whether to display the control","controlType":"type: string, description: The (class) name of the control type to create.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."},"!static":false},"setHeaderTitle":{"!description":"Sets the title in the Fiori Launchpad shell header.","!type":"fn(sTitle: String)","!category":"function","parameters":{"sTitle":"type: string, description: The title to be displayed in the Fiori Launchpad shell header"},"!static":false},"getCurrentViewportState":{"!description":"This method returns the current state of the Viewport Container control.","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ushell.renderers.fiori2.Renderer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"showToolAreaItem":{"!description":"Displays ToolAreaItem on the left side of the Fiori launchpad shell, in the given launchpad states\n(see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<\/br>\nIf no launchpad state is provided the content is displayed in all states.<\/br>\n\n<b>Example:<\/b>\n  <pre>\n  var button1 = new sap.ushell.ui.shell.ToolAreaItem();\n  var renderer = sap.ushell.Container.getRenderer(\"fiori2\");\n  renderer.showToolAreaItem(button1.getId(), false, [\"home\", \"app\"]);\n  <\/pre>","!type":"fn(sId: String, bCurrentState: Boolean, aStates+: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, add the current ToolAreaItems only to the current instance of the rendering of the shell.\n  if false, add the ToolAreaItems to the LaunchPadState itself.","aStates+":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.renderer.LaunchpadState in which to add the aIds.","sId":"type: string, description: ID of the element to add to the Tool Area."},"!static":false},"showHeaderItem":{"!description":"Creates and displays one or more HeaderItem controls according to the given control IDs and Shell states<br>\n(see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<br><br>\nThe HeaderItem controls will be displayed on the left side of the Fiori Launchpad shell header according to the given display parameters.<br>\nThere can be up to three header items. If the number of existing header items plus the given ones exceeds 3, then the operation fails and no new header items are created.<br>\n\n<b>Example:<\/b>\n<pre>\nvar button1 = new sap.ushell.ui.shell.ShellHeadItem();\nvar button2 = new sap.ushell.ui.shell.ShellHeadItem();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showHeaderItem ([button1.getId(), button2.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created controls are added to the current rendered shell state.<br>\n  When the user navigates to another application (including the Home page) then the controls will be removed.<br>\n  If <code>false<\/code> then the controls are added to the LaunchPadState itself.<br>","aIds":"type: String[], description: IDs Array of headerItem controls that should be added to the shell header<br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br>\n A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added.<br>\n If no launchpad state is provided the controls are added in all states."},"!static":false},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\n<code>sap.ushell.Container.createRenderer(\"fiori2\")<\/code>.","showSubHeader":{"!description":"Displays one or more sub header controls according to the given control IDs and shell states.<br>\n(see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<br><br>\nA sub header is placed in a container, located directly below the main Fiori launchpad shell header.<br>\n\n<b>Example:<\/b>\n<pre>\nvar bar = new sap.m.Bar({id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test SubHeader Button\",\npress: function () {\nsap.m.MessageToast.show(\"Pressed\");\n}})\n]});\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.showSubHeader([bar.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created controls are added only to the current rendered shell state.<br>\n  When the user navigates to another application (including the Home page) then the controls will be removed.<br>\n  If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","aIds":"type: String[], description: Array of sub header control IDs to be added<br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br>\n A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added.<br>\n If no launchpad state is provided the controls are added in all states."},"!static":false},"showFloatingActionButton":{"!description":"Displays FloatingActionButton on the bottom right corner of the Fiori launchpad, in the given launchpad states.\nThe FloatingActionButton is rendered in the bottom right corner of the shell.<\/br>\n(see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<\/br>\nIf no launchpad state is provided the content is displayed in all states.<\/br>\n\n<b>Example:<\/b>\n  <pre>\n  var button1 = new sap.ushell.ui.shell.ShellFloatingAction();\n  var renderer = sap.ushell.Container.getRenderer(\"fiori2\");\n  renderer.showFloatingActionButton([button1.getId()], true);\n  <\/pre>","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, add the current Buttons only to the current instance of the rendering of the shell.\n  if false, add the Buttons to the LaunchPadState itself.","aIds":"type: String[], description: List of ID elements to add to the user actions menu.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.renderer.LaunchpadState in which to add the aIds."},"!static":false},"addEndUserFeedbackCustomUI":{"!description":"Adds the given sap.ui.core.Control to the EndUserFeedback dialog.<\/br>\nThe EndUserFeedback dialog is opened via the user actions menu in the Fiori Launchpad shell header.","!type":"fn(oCustomUIContent: Object, bShowCustomUIContent: Boolean)","!category":"function","parameters":{"oCustomUIContent":"type: object, description: The control to be added to the EndUserFeedback dialog.","bShowCustomUIContent":"type: boolean, description: Specify whether to display the control."},"!static":false},"addHeaderEndItem":{"!description":"Creates and displays one or more HeaderItem controls in Fiori launchpad, in the given launchpad states.<\/br>\nThe HeaderItem will be displayed in the right side of the Fiori Launchpad shell header.<\/br>\n  <b>Example:<\/b>\n  <pre> sap.ushell.Container.getRenderer(\"fiori2\").addHeaderEndItem(\"sap.ushell.ui.shell.ShellHeadItem\", {id: \"testBtn\"}, true, true);<\/pre>","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state.\n  Once the user navigates to another app or back to the Home page, this control will be removed.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","bIsVisible":"type: boolean, description: Specify whether to display the control.","controlType":"type: string, description: The (class) name of the control type to create. Currently only \"sap.ushell.ui.shell.ShellHeadItem\" control type is supported.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."},"!static":false},"setLeftPaneVisibility":{"!description":"Sets the visibility of the left pane in the Fiori Launchpad shell, in the given launchpad state","!type":"fn(sLaunchpadState: String, bVisible: Boolean)","!category":"function","parameters":{"sLaunchpadState":"type: string, description: LaunchpadState in which to show/hide the left pane","bVisible":"type: boolean, description: specif whether to display the left pane or not"},"!static":false},"addHeaderItem":{"!description":"Creates and displays an item in the header of Fiori launchpad, in the given launchpad states.<br>\nThe new header item will be displayed on the left-hand side of the Fiori Launchpad shell header, according to the given display parameters.<br>\nThe new header item will be added to the right of any existing header items. The header can contain a maximum of three header items.<br><br>\n<b>Example:<\/b>\n<pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.addHeaderItem(\"sap.ushell.ui.shell.ShellHeadItem\", {id: \"testBtn\"}, true, true);\n<\/pre>","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created control is added to the current rendered shell state.<br>\n  When the user navigates to a different state including a different application then the control will be removed.<br>\n  If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","oControlProperties":"type: object, description: The properties that will be passed to the created control.\n  For example: <code>{id: \"testButton\"}<\/code><br>","bIsVisible":"type: boolean, description: Specifies whether the header item control is displayed after being created.<br>\n  If <code>true<\/code> then the control is displayed according to parameters bCurrentState and aStates.<br>\n  If <code>false<\/code> then the control is created but not displayed.<br>","controlType":"type: string, description: The (class) name of the control type to create.\n  For example: <code>\"sap.m.Button\"<\/code><br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br>\n A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the control is added.<br>\n If no launchpad state is provided the control is added in all states."},"!static":false},"!description":"The SAPUI5 component of SAP Fiori Launchpad renderer for the Unified Shell.","addSubHeader":{"!description":"Creates and displays a sub header control in Fiori launchpad, in the given launchpad states.<br>\nThe new control is displayed in FLP UI according to the given display parameters.<br>\nIf a sub header already exists, the new created one will replace the existing one.<br><br>\n<b>Example:<\/b>\n<pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.addSubHeader(\"sap.m.Bar\", {id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test SubHeader Button\",\n     press: function () {\n     sap.m.MessageToast.show(\"Pressed\");\n     }\n })\n]}, true, true);\n<\/pre>","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","!category":"function","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created control is added to the current rendered shell state.<br>\n  When the user navigates to another application (including the Home page) then the control will be removed.<br>\n  If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","oControlProperties":"type: object, description: The properties that will be passed to the created control.<br>\n  For example: <code>{id: \"testBar\"}<\/code><br>","bIsVisible":"type: boolean, description: Specifies whether the sub header control is displayed after being created.<br>\n  If <code>true<\/code> then the control is displayed according to parameters bCurrentState and aStates,<br>\n  if <code>false<\/code> then the control is created but not displayed.<br>","controlType":"type: string, description: The (class) name of the control type to create.<br>\n  For example: <code>\"sap.m.Bar\"<\/code><br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br>\n A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the control is added.<br>\n If no launchpad state is provided the control is added in all states."},"!static":false},"hideActionButton":{"!description":"Hide the given Action Button from Fiori Launchpad, in the given launchpad states.\nThe removed button will not be destroyed.<br><br>\nThis API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the Action Button to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control.(Only valid if bCurrentState is set to false)"},"!static":false},"showHeaderEndItem":{"!description":"Displays HeaderItems on the right side of the Fiori launchpad shell header, in the given launchpad states\n(see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<\/br>\nIf no launchpad state is provided the content is displayed in all states.<\/br>\nThe shell header can display the user HeaderItem, and just one more HeaderItem.<\/br>\nIf this method is called when the right side of the header is full, this method will not do anything.<\/br>\n\n<b>Example:<\/b>\n  <pre>\n  var button1 = new sap.ushell.ui.shell.ShellHeadItem();\n  var renderer = sap.ushell.Container.getRenderer(\"fiori2\");\n  renderer.showHeaderEndItem ([button1.getId()], false, [\"home\", \"app\"]);\n  <\/pre>","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","!category":"function","parameters":{"bCurrentState":"type: boolean, description: if true, add the current HeaderItems only to the current instance of the rendering of the shell.\n  if false, add the HeaderItems to the LaunchPadState itself.","aIds":"type: String[], description: List of ID elements to add to the shell header.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.renderer.LaunchpadState in which to add the aIds."},"!static":false},"!proto":"sap.ui.core.UIComponent","!helpDescription":"The SAPUI5 component of SAP Fiori Launchpad renderer for the Unified Shell.","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.renderers.fiori2.Renderer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ushell.services.SupportTicket_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object, sParameters: String, oServiceConfiguration: Object)","prototype":"sap.ushell.services.SupportTicket"},"sap.ushell.services.ContainerInterface":{"!description":"This is a virtual type for the callback interface passed by\r{@link sap.ui.Container.getService()} to any newly created service.","!category":"class","!module":"sap/ushell/services/Container","!proto":"sap.ui.base.Object","!helpDescription":"This is a virtual type for the callback interface passed by\r{@link sap.ui.Container.getService()} to any newly created service."}},"!name":"sap.ushell","!version":"1.17.0"}