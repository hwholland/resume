{"!define":{"sap":{"ui":"sap.ui","sap":"sap","!category":"namespace"},"sap.ui":{"!category":"namespace","codeeditor":"sap.ui.codeeditor"},"sap.ui.codeeditor":{"lineNumbers":{"!description":"Sets whether line numbers should be shown","!type":"Boolean","!category":"enum"},"colorTheme":{"!description":"Sets the editors color theme Possible values are: default, hcb, hcb_bright, hcb_blue, theme-ambiance, chaos, chrome, clouds, clouds_midnight, cobalt, crimson_editor, dawn, dreamweaver, eclipse, github, gob, gruvbox, idle_fingers, iplastic, katzenmilch, kr_theme, kuroir, merbivore, merbivore_soft, mono_industrial, monokai, pastel_on_dark, solarized_dark, solarized_light, sqlserver, terminal, textmate, tomorrow, tomorrow_night, tomorrow_night_blue, tomorrow_night_bright, tomorrow_night_eighties, twilight, vibrant_ink, xcode","!type":"String","!category":"enum"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"maxLines":{"!description":"Sets whether the editor height should auto expand to a maximum number of lines. After reaching the maximum number of lines specified, the content of the <code>CodeEditor<\/code> will become scrollable.\n\n<b>Note:<\/b> Keep in mind that the auto expand <code>CodeEditor<\/code> behavior requires the <code>height<\/code> property to be set to <code>auto<\/code>.","!type":"Number","!category":"enum"},"width":{"!description":"The width of the code editor","!type":"sap.ui.core.CSSSize","!category":"enum"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"syntaxHints":{"!description":"Sets whether to show syntax hints the editor. This flag is only available if line numbers are shown.","!type":"Boolean","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"!module":"sap/ui/codeeditor/library","type":{"!description":"The type of the code in the editor used for syntax highlighting Possible types are: abap, abc, actionscript, ada, apache_conf, applescript, asciidoc, assembly_x86, autohotkey, batchfile, bro, c9search, c_cpp, cirru, clojure, cobol, coffee, coldfusion, csharp, css, curly, d, dart, diff, django, dockerfile, dot, drools, eiffel, ejs, elixir, elm, erlang, forth, fortran, ftl, gcode, gherkin, gitignore, glsl, gobstones, golang, groovy, haml, handlebars, haskell, haskell_cabal, haxe, hjson, html, html_elixir, html_ruby, ini, io, jack, jade, java, javascript, json, jsoniq, jsp, jsx, julia, kotlin, latex, lean, less, liquid, lisp, live_script, livescript, logiql, lsl, lua, luapage, lucene, makefile, markdown, mask, matlab, mavens_mate_log, maze, mel, mips_assembler, mipsassembler, mushcode, mysql, nix, nsis, objectivec, ocaml, pascal, perl, pgsql, php, plain_text, powershell, praat, prolog, properties, protobuf, python, r, razor, rdoc, rhtml, rst, ruby, rust, sass, scad, scala, scheme, scss, sh, sjs, smarty, snippets, soy_template, space, sql, sqlserver, stylus, svg, swift, swig, tcl, tex, text, textile, toml, tsx, twig, typescript, vala, vbscript, velocity, verilog, vhdl, wollok, xml, xquery, yaml","!type":"String","!category":"enum"},"valueSelection":{"!description":"Sets whether the code is automatically selected if a value is set","!type":"Boolean","!category":"enum"},"editable":{"!description":"Sets whether the code in the editor can be changed by the user","!type":"Boolean","!category":"enum"},"height":{"!description":"The height of the code editor. A minimal height of 3rem will be applied in case the height is less than 20px.","!type":"sap.ui.core.CSSSize","!category":"enum"},"!description":"UI5 library: sap.ui.codeeditor.","!category":"namespace","value":{"!description":"The value displayed in the code editor","!type":"String","!category":"enum"},"CodeEditor":"sap.ui.codeeditor.CodeEditor_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"},"!helpDescription":"UI5 library: sap.ui.codeeditor."},"sap.ui.codeeditor.CodeEditor_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.codeeditor.CodeEditor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.codeeditor.CodeEditor"},"sap.ui.codeeditor.CodeEditor":{"setLineNumbers":{"!description":"Sets whether line numbers should be shown or not","!type":"fn(bValue: Boolean) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"bValue":"type: boolean, description: true to show line numbers"},"!static":false},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value displayed in the code editor\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"prettyPrint":{"!description":"Pretty-prints the content of the editor","!type":"fn()","!category":"function","!static":false},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:liveChange liveChange} event of this <code>sap.ui.codeeditor.CodeEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getMaxLines":{"!description":"Gets current value of property {@link #getMaxLines maxLines}.\n\nSets whether the editor height should auto expand to a maximum number of lines. After reaching the maximum number of lines specified, the content of the <code>CodeEditor<\/code> will become scrollable.\n\n<b>Note:<\/b> Keep in mind that the auto expand <code>CodeEditor<\/code> behavior requires the <code>height<\/code> property to be set to <code>auto<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setMaxLines":{"!description":"Sets <code>maxLines<\/code> property.","!type":"fn(iMaxLines: Number)","!category":"function","parameters":{"iMaxLines":"type: int, description: Maximum number of lines the editor should display"},"!static":false},"!module":"sap/ui/codeeditor/CodeEditor","getSyntaxHints":{"!description":"Gets current value of property {@link #getSyntaxHints syntaxHints}.\n\nSets whether to show syntax hints the editor. This flag is only available if line numbers are shown.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the code editor. A minimal height of 3rem will be applied in case the height is less than 20px.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getType":{"!description":"Gets current value of property {@link #getType type}.\n\nThe type of the code in the editor used for syntax highlighting Possible types are: abap, abc, actionscript, ada, apache_conf, applescript, asciidoc, assembly_x86, autohotkey, batchfile, bro, c9search, c_cpp, cirru, clojure, cobol, coffee, coldfusion, csharp, css, curly, d, dart, diff, django, dockerfile, dot, drools, eiffel, ejs, elixir, elm, erlang, forth, fortran, ftl, gcode, gherkin, gitignore, glsl, gobstones, golang, groovy, haml, handlebars, haskell, haskell_cabal, haxe, hjson, html, html_elixir, html_ruby, ini, io, jack, jade, java, javascript, json, jsoniq, jsp, jsx, julia, kotlin, latex, lean, less, liquid, lisp, live_script, livescript, logiql, lsl, lua, luapage, lucene, makefile, markdown, mask, matlab, mavens_mate_log, maze, mel, mips_assembler, mipsassembler, mushcode, mysql, nix, nsis, objectivec, ocaml, pascal, perl, pgsql, php, plain_text, powershell, praat, prolog, properties, protobuf, python, r, razor, rdoc, rhtml, rst, ruby, rust, sass, scad, scala, scheme, scss, sh, sjs, smarty, snippets, soy_template, space, sql, sqlserver, stylus, svg, swift, swig, tcl, tex, text, textile, toml, tsx, twig, typescript, vala, vbscript, velocity, verilog, vhdl, wollok, xml, xquery, yaml\n\nDefault value is <code>javascript<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setEditable":{"!description":"Sets whether the code editor is editable or not","!type":"fn(bValue: Boolean) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"bValue":"type: boolean, description: true to allow editing, otherwise false"},"!static":false},"setValueSelection":{"!description":"Sets a new value for property {@link #getValueSelection valueSelection}.\n\nSets whether the code is automatically selected if a value is set\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bValueSelection: Boolean) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"bValueSelection":"type: boolean, description: New value for property <code>valueSelection<\/code>"},"!static":false},"getCurrentValue":{"!description":"Returns the current value of the code editor","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setSyntaxHints":{"!description":"Sets whether syntax hints should be shown or not Hints are only visible if <code>lineNumbers<\/code> is set to true.","!type":"fn(bShow: Boolean) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"bShow":"type: boolean, description: true(default) to show the syntax hints"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the code editor\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"focus":{"!description":"Sets the focus to the code editor","!type":"fn() -> sap.ui.codeeditor.CodeEditor","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the code editor\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"addCustomCompleter":{"!description":"Defines custom completer - object implementing a getCompletions method. The method has two parameters - fnCallback method and context object. Context object provides details about oPos and sPrefix as provided by ACE.","!type":"fn(oCustomCompleter: Object)","!category":"function","parameters":{"oCustomCompleter":"type: object, description: Object with getCompletions method"},"!static":false},"_getEditorInstance":{"!description":"Returns the internal ace editor instance","!type":"fn() -> Object","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nSets whether the code in the editor can be changed by the user\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setType":{"!description":"Sets the type of the code editors value used for syntax highlighting","!type":"fn(sType: String) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"sType":"type: string, description: javascript (default), html, xml, css"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.codeeditor.CodeEditor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets <code>visible<\/code> property.","!type":"fn(bVisible: Boolean)","!category":"function","parameters":{"bVisible":"type: boolean, description: Whether the code editor is visible."},"!static":false},"getValueSelection":{"!description":"Gets current value of property {@link #getValueSelection valueSelection}.\n\nSets whether the code is automatically selected if a value is set\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setValue":{"!description":"Sets the value of the code editor","!type":"fn(sValue: String) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"sValue":"type: string, description: the value of the code editor"},"!static":false},"!constructorDescription":"Constructor for a new CodeEditor.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getType type} : string (default: javascript)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getLineNumbers lineNumbers} : boolean (default: true)<\/li>\n<li>{@link #getValueSelection valueSelection} : boolean (default: false)<\/li>\n<li>{@link #getMaxLines maxLines} : int (default: 0)<\/li>\n<li>{@link #getColorTheme colorTheme} : string (default: default)<\/li>\n<li>{@link #getSyntaxHints syntaxHints} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getColorTheme":{"!description":"Gets current value of property {@link #getColorTheme colorTheme}.\n\nSets the editors color theme Possible values are: default, hcb, hcb_bright, hcb_blue, theme-ambiance, chaos, chrome, clouds, clouds_midnight, cobalt, crimson_editor, dawn, dreamweaver, eclipse, github, gob, gruvbox, idle_fingers, iplastic, katzenmilch, kr_theme, kuroir, merbivore, merbivore_soft, mono_industrial, monokai, pastel_on_dark, solarized_dark, solarized_light, sqlserver, terminal, textmate, tomorrow, tomorrow_night, tomorrow_night_blue, tomorrow_night_bright, tomorrow_night_eighties, twilight, vibrant_ink, xcode\n\nDefault value is <code>default<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.codeeditor.CodeEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setColorTheme":{"!description":"Sets the color theme of the code editor","!type":"fn(sTheme: String) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"sTheme":"type: string, description: See property documentation for accepted values"},"!static":false},"!description":"Allows to visualize source code of various types with syntax highlighting, line numbers in editable and read only mode. Use this controls in scenarios where the user should be able to inspect and edit source code. NOTE: There is a known limitation where CodeEditor won't work within IconTabBar on Internet Explorer. There is a way to achieve the same functionality - an example of IconTabHeader and a CodeEditor can be found in the CodeEditor's samples.","fireLiveChange":{"!description":"Fires event {@link #event:liveChange liveChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getLineNumbers":{"!description":"Gets current value of property {@link #getLineNumbers lineNumbers}.\n\nSets whether line numbers should be shown\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the code editor. A minimal height of 3rem will be applied in case the height is less than 20px.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:liveChange liveChange} event of this <code>sap.ui.codeeditor.CodeEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.codeeditor.CodeEditor<\/code> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.codeeditor.CodeEditor<\/code> itself"},"!static":false},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.codeeditor.CodeEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.codeeditor.CodeEditor<\/code> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.codeeditor.CodeEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.codeeditor.CodeEditor<\/code> itself"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Allows to visualize source code of various types with syntax highlighting, line numbers in editable and read only mode. Use this controls in scenarios where the user should be able to inspect and edit source code. NOTE: There is a known limitation where CodeEditor won't work within IconTabBar on Internet Explorer. There is a way to achieve the same functionality - an example of IconTabHeader and a CodeEditor can be found in the CodeEditor's samples.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.codeeditor.CodeEditor.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}}},"!name":"sap.ui.codeeditor","!version":"1.18.0"}