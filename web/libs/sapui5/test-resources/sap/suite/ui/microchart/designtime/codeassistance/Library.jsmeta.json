{"!name":"sap.suite.ui.microchart","!version":"1.17.0","!define":{"sap.suite.ui.microchart.ComparisonMicroChart":{"!proto":"sap.ui.core.Control","!category":"class","destroyData":{"!description":"Destroys all the data in the aggregation <code>data<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ComparisonMicroChart"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"insertData":{"!description":"Inserts a data into the aggregation <code>data<\/code>.","!static":false,"!category":"function","!type":"fn(oData: sap.suite.ui.microchart.ComparisonMicroChartData, iIndex: Number) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oData":"type: sap.suite.ui.microchart.ComparisonMicroChartData, description: the data to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the data should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the data is inserted at position 0; for a value\n             greater than the current size of the aggregation, the data is inserted at\n             the last position"}},"setShrinkable":{"!description":"Sets a new value for property <code>shrinkable<\/code>.\n\nIf it is set to true, the height of the control is defined by its content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShrinkable: Boolean) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"bShrinkable":"type: boolean, description: New value for property <code>shrinkable<\/code>"}},"unbindData":{"!description":"Unbinds aggregation <code>data<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ComparisonMicroChart"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ComparisonMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getScale scale} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.ComparisonMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getShrinkable shrinkable} : boolean (default: false)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.suite.ui.microchart.ComparisonMicroChartData[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getColorPalette":{"!description":"Gets current value of property <code>colorPalette<\/code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"removeAllData":{"!description":"Removes all the controls from the aggregation <code>data<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ComparisonMicroChartData]"},"getView":{"!description":"Gets current value of property <code>view<\/code>.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ComparisonMicroChartViewType"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getData":{"!description":"Gets content of aggregation <code>data<\/code>.\n\nThe comparison chart bar data.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ComparisonMicroChartData]"},"getShrinkable":{"!description":"Gets current value of property <code>shrinkable<\/code>.\n\nIf it is set to true, the height of the control is defined by its content.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setScale":{"!description":"Sets a new value for property <code>scale<\/code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sScale: String) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sScale":"type: string, description: New value for property <code>scale<\/code>"}},"addData":{"!description":"Adds some data to the aggregation <code>data<\/code>.","!static":false,"!category":"function","!type":"fn(oData: sap.suite.ui.microchart.ComparisonMicroChartData) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oData":"type: sap.suite.ui.microchart.ComparisonMicroChartData, description: the data to add; if empty, nothing is inserted"}},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/suite/ui/microchart/ComparisonMicroChart","getScale":{"!description":"Gets current value of property <code>scale<\/code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart.","indexOfData":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code> in the aggregation <code>data<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oData: sap.suite.ui.microchart.ComparisonMicroChartData) -> Number","parameters":{"oData":"type: sap.suite.ui.microchart.ComparisonMicroChartData, description: The data whose index is looked for"}},"setView":{"!description":"Sets a new value for property <code>view<\/code>.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn(sView: sap.suite.ui.microchart.ComparisonMicroChartViewType) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sView":"type: sap.suite.ui.microchart.ComparisonMicroChartViewType, description: New value for property <code>view<\/code>"}},"setColorPalette":{"!description":"Sets a new value for property <code>colorPalette<\/code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sColorPalette: [String]) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sColorPalette":"type: string[], description: New value for property <code>colorPalette<\/code>"}},"removeData":{"!description":"Removes a data from the aggregation <code>data<\/code>.","!static":false,"!category":"function","!type":"fn(vData: Number | String | sap.suite.ui.microchart.ComparisonMicroChartData) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"vData":"type: int|string|sap.suite.ui.microchart.ComparisonMicroChartData, description: The datato remove or its index or id"}},"bindData":{"!description":"Binds aggregation <code>data<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}}},"sap.suite.ui.microchart.ColumnMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ColumnMicroChart"},"sap.suite.ui.microchart.BulletMicroChartData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChartData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.BulletMicroChartData"},"sap.suite.ui.microchart.ColumnMicroChartLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartLabel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ColumnMicroChartLabel"},"sap.suite.ui.microchart.HarveyBallMicroChartItem":{"!description":"Configures the slices of the pie chart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChartItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFraction":{"!description":"Sets a new value for property <code>fraction<\/code>.\n\nThe fraction value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fFraction: Number) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"fFraction":"type: float, description: New value for property <code>fraction<\/code>"}},"setFractionLabel":{"!description":"Sets a new value for property <code>fractionLabel<\/code>.\n\nThe fraction label. If specified, it is displayed instead of the fraction value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFractionLabel: String) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"sFractionLabel":"type: string, description: New value for property <code>fractionLabel<\/code>"}},"!proto":"sap.ui.core.Control","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe slice color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChartItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getFraction fraction} : float (default: 0)<\/li>\n<li>{@link #getFractionLabel fractionLabel} : string<\/li>\n<li>{@link #getFractionScale fractionScale} : string<\/li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe slice color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/HarveyBallMicroChartItem","!helpDescription":"Configures the slices of the pie chart.","getFractionScale":{"!description":"Gets current value of property <code>fractionScale<\/code>.\n\nThe scaling factor that is displayed after the fraction value.","!static":false,"!category":"function","!type":"fn() -> String"},"setFormattedLabel":{"!description":"Sets a new value for property <code>formattedLabel<\/code>.\n\nIf set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFormattedLabel: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"bFormattedLabel":"type: boolean, description: New value for property <code>formattedLabel<\/code>"}},"getFormattedLabel":{"!description":"Gets current value of property <code>formattedLabel<\/code>.\n\nIf set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFractionLabel":{"!description":"Gets current value of property <code>fractionLabel<\/code>.\n\nThe fraction label. If specified, it is displayed instead of the fraction value.","!static":false,"!category":"function","!type":"fn() -> String"},"setFractionScale":{"!description":"Sets a new value for property <code>fractionScale<\/code>.\n\nThe scaling factor that is displayed after the fraction value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFractionScale: String) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"sFractionScale":"type: string, description: New value for property <code>fractionScale<\/code>"}},"getFraction":{"!description":"Gets current value of property <code>fraction<\/code>.\n\nThe fraction value.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.suite.ui.microchart.AreaMicroChartViewType":{"!description":"Enum of available views for the area micro chart concerning the position of the labels.","!module":"sap/suite/ui/microchart/library","!category":"static class","Wide":{"!description":"The view with labels on the left and right.","!category":"enum","!type":"String"},"Normal":{"!description":"The view with labels on the top and bottom.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.AreaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChart"},"sap.suite.ui.microchart.ColumnMicroChartData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ColumnMicroChartData"},"sap.suite.ui.microchart.BulletMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.BulletMicroChart"},"sap.suite.ui.microchart.RadialMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.RadialMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.RadialMicroChart"},"sap.suite.ui.microchart.CommonBackgroundType":{"!description":"Lists the available theme-specific background colors.","ExtraLight":{"!description":"Extra light background color.","!category":"enum","!type":"String"},"MediumLight":{"!description":"Medium light background color.","!category":"enum","!type":"String"},"!module":"sap/suite/ui/microchart/library","Transparent":{"!description":"The transparent background color.","!category":"enum","!type":"String"},"Dark":{"!description":"Dark background color.","!category":"enum","!type":"String"},"Darkest":{"!description":"The darkest background color.","!category":"enum","!type":"String"},"Light":{"!description":"Light background color.","!category":"enum","!type":"String"},"Medium":{"!description":"Medium background color.","!category":"enum","!type":"String"},"ExtraDark":{"!description":"Extra dark background color.","!category":"enum","!type":"String"},"!category":"static class","Lightest":{"!description":"The lightest background color.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.AreaMicroChartLabel":{"!description":"Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartLabel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartLabel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nThe line title.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.AreaMicroChartLabel","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/AreaMicroChartLabel","!helpDescription":"Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.","!proto":"sap.ui.core.Control","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.AreaMicroChartLabel","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"!category":"class"},"sap.suite.ui.microchart.BulletMicroChart":{"insertThreshold":{"!description":"Inserts a threshold into the aggregation <code>thresholds<\/code>.","!static":false,"!category":"function","!type":"fn(oThreshold: sap.suite.ui.microchart.BulletMicroChartData, iIndex: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oThreshold":"type: sap.suite.ui.microchart.BulletMicroChartData, description: the threshold to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the threshold should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the threshold is inserted at position 0; for a value\n             greater than the current size of the aggregation, the threshold is inserted at\n             the last position"}},"setShowTargetValue":{"!description":"Sets a new value for property <code>showTargetValue<\/code>.\n\nIf set to true, shows the numeric target value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTargetValue: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowTargetValue":"type: boolean, description: New value for property <code>showTargetValue<\/code>"}},"getActualValueLabel":{"!description":"Gets current value of property <code>actualValueLabel<\/code>.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowActualValue":{"!description":"Sets a new value for property <code>showActualValue<\/code>.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowActualValue: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowActualValue":"type: boolean, description: New value for property <code>showActualValue<\/code>"}},"destroyThresholds":{"!description":"Destroys all the thresholds in the aggregation <code>thresholds<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nDefault value is <code>Actual<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChartModeType"},"setActualValueLabel":{"!description":"Sets a new value for property <code>actualValueLabel<\/code>.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sActualValueLabel: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sActualValueLabel":"type: string, description: New value for property <code>actualValueLabel<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.BulletMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.BulletMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.BulletMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values.  This control replaces the deprecated sap.suite.ui.commons.BulletChart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTargetValue":{"!description":"Gets current value of property <code>targetValue<\/code>.\n\nThe target value that is displayed as a black vertical bar.","!static":false,"!category":"function","!type":"fn() -> Number"},"getTargetValueLabel":{"!description":"Gets current value of property <code>targetValueLabel<\/code>.\n\nIf set, displays a specified label instead of the numeric target value.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setScale":{"!description":"Sets a new value for property <code>scale<\/code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sScale: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sScale":"type: string, description: New value for property <code>scale<\/code>"}},"setForecastValue":{"!description":"Sets a new value for property <code>forecastValue<\/code>.\n\nThe forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fForecastValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fForecastValue":"type: float, description: New value for property <code>forecastValue<\/code>"}},"getDeltaValueLabel":{"!description":"Gets current value of property <code>deltaValueLabel<\/code>.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"unbindThresholds":{"!description":"Unbinds aggregation <code>thresholds<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.BulletMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setMaxValue":{"!description":"Sets a new value for property <code>maxValue<\/code>.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaxValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fMaxValue":"type: float, description: New value for property <code>maxValue<\/code>"}},"setScaleColor":{"!description":"Sets a new value for property <code>scaleColor<\/code>.\n\nThe background color of the scale.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>MediumLight<\/code>.","!static":false,"!category":"function","!type":"fn(sScaleColor: sap.suite.ui.microchart.CommonBackgroundType) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sScaleColor":"type: sap.suite.ui.microchart.CommonBackgroundType, description: New value for property <code>scaleColor<\/code>"}},"!module":"sap/suite/ui/microchart/BulletMicroChart","getScale":{"!description":"Gets current value of property <code>scale<\/code>.\n\nThe scaling suffix that is added to the actual and target values.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values.  This control replaces the deprecated sap.suite.ui.commons.BulletChart.","setTargetValueLabel":{"!description":"Sets a new value for property <code>targetValueLabel<\/code>.\n\nIf set, displays a specified label instead of the numeric target value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTargetValueLabel: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sTargetValueLabel":"type: string, description: New value for property <code>targetValueLabel<\/code>"}},"setMinValue":{"!description":"Sets a new value for property <code>minValue<\/code>.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMinValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fMinValue":"type: float, description: New value for property <code>minValue<\/code>"}},"getShowValueMarker":{"!description":"Gets current value of property <code>showValueMarker<\/code>.\n\nIf set to true, shows the value marker.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getActual":{"!description":"Gets content of aggregation <code>actual<\/code>.\n\nActual data of the BulletMicroChart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChartData"},"getThresholds":{"!description":"Gets content of aggregation <code>thresholds<\/code>.\n\nThreshold data of the BulletMicroChart.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.BulletMicroChartData]"},"getMaxValue":{"!description":"Gets current value of property <code>maxValue<\/code>.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllThresholds":{"!description":"Removes all the controls from the aggregation <code>thresholds<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.BulletMicroChartData]"},"!proto":"sap.ui.core.Control","getScaleColor":{"!description":"Gets current value of property <code>scaleColor<\/code>.\n\nThe background color of the scale.\n\nDefault value is <code>MediumLight<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.CommonBackgroundType"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new BulletMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getMode mode} : sap.suite.ui.microchart.BulletMicroChartModeType (default: Actual)<\/li>\n<li>{@link #getScale scale} : string (default: )<\/li>\n<li>{@link #getForecastValue forecastValue} : float<\/li>\n<li>{@link #getTargetValue targetValue} : float<\/li>\n<li>{@link #getMinValue minValue} : float<\/li>\n<li>{@link #getMaxValue maxValue} : float<\/li>\n<li>{@link #getShowActualValue showActualValue} : boolean (default: true)<\/li>\n<li>{@link #getShowDeltaValue showDeltaValue} : boolean (default: true)<\/li>\n<li>{@link #getShowTargetValue showTargetValue} : boolean (default: true)<\/li>\n<li>{@link #getShowValueMarker showValueMarker} : boolean (default: false)<\/li>\n<li>{@link #getActualValueLabel actualValueLabel} : string (default: )<\/li>\n<li>{@link #getDeltaValueLabel deltaValueLabel} : string (default: )<\/li>\n<li>{@link #getTargetValueLabel targetValueLabel} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getScaleColor scaleColor} : sap.suite.ui.microchart.CommonBackgroundType (default: MediumLight)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActual actual} : sap.suite.ui.microchart.BulletMicroChartData (default)<\/li>\n<li>{@link #getThresholds thresholds} : sap.suite.ui.microchart.BulletMicroChartData[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowActualValue":{"!description":"Gets current value of property <code>showActualValue<\/code>.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindActual":{"!description":"Binds aggregation <code>actual<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getShowDeltaValue":{"!description":"Gets current value of property <code>showDeltaValue<\/code>.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyActual":{"!description":"Destroys the actual in the aggregation <code>actual<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"addThreshold":{"!description":"Adds some threshold to the aggregation <code>thresholds<\/code>.","!static":false,"!category":"function","!type":"fn(oThreshold: sap.suite.ui.microchart.BulletMicroChartData) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oThreshold":"type: sap.suite.ui.microchart.BulletMicroChartData, description: the threshold to add; if empty, nothing is inserted"}},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Actual<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.suite.ui.microchart.BulletMicroChartModeType) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sMode":"type: sap.suite.ui.microchart.BulletMicroChartModeType, description: New value for property <code>mode<\/code>"}},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"setTargetValue":{"!description":"Sets a new value for property <code>targetValue<\/code>.\n\nThe target value that is displayed as a black vertical bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fTargetValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fTargetValue":"type: float, description: New value for property <code>targetValue<\/code>"}},"setActual":{"!description":"Sets the aggregated <code>actual<\/code>.","!static":false,"!category":"function","!type":"fn(oActual: sap.suite.ui.microchart.BulletMicroChartData) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oActual":"type: sap.suite.ui.microchart.BulletMicroChartData, description: The actual to set"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"unbindActual":{"!description":"Unbinds aggregation <code>actual<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"setShowValueMarker":{"!description":"Sets a new value for property <code>showValueMarker<\/code>.\n\nIf set to true, shows the value marker.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueMarker: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowValueMarker":"type: boolean, description: New value for property <code>showValueMarker<\/code>"}},"getMinValue":{"!description":"Gets current value of property <code>minValue<\/code>.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.","!static":false,"!category":"function","!type":"fn() -> Number"},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"bindThresholds":{"!description":"Binds aggregation <code>thresholds<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeThreshold":{"!description":"Removes a threshold from the aggregation <code>thresholds<\/code>.","!static":false,"!category":"function","!type":"fn(vThreshold: Number | String | sap.suite.ui.microchart.BulletMicroChartData) -> sap.suite.ui.microchart.BulletMicroChartData","parameters":{"vThreshold":"type: int|string|sap.suite.ui.microchart.BulletMicroChartData, description: The thresholdto remove or its index or id"}},"setDeltaValueLabel":{"!description":"Sets a new value for property <code>deltaValueLabel<\/code>.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDeltaValueLabel: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sDeltaValueLabel":"type: string, description: New value for property <code>deltaValueLabel<\/code>"}},"setShowDeltaValue":{"!description":"Sets a new value for property <code>showDeltaValue<\/code>.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDeltaValue: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowDeltaValue":"type: boolean, description: New value for property <code>showDeltaValue<\/code>"}},"getForecastValue":{"!description":"Gets current value of property <code>forecastValue<\/code>.\n\nThe forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar.","!static":false,"!category":"function","!type":"fn() -> Number"},"indexOfThreshold":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.BulletMicroChartData<\/code> in the aggregation <code>thresholds<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oThreshold: sap.suite.ui.microchart.BulletMicroChartData) -> Number","parameters":{"oThreshold":"type: sap.suite.ui.microchart.BulletMicroChartData, description: The threshold whose index is looked for"}},"getShowTargetValue":{"!description":"Gets current value of property <code>showTargetValue<\/code>.\n\nIf set to true, shows the numeric target value.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.suite.ui.microchart.HarveyBallMicroChart":{"setTotal":{"!description":"Sets a new value for property <code>total<\/code>.\n\nThe total value. This is taken as 360 degrees value on the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fTotal: Number) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"fTotal":"type: float, description: New value for property <code>total<\/code>"}},"setTotalScale":{"!description":"Sets a new value for property <code>totalScale<\/code>.\n\nThe scaling factor that is displayed next to the total value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTotalScale: String) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sTotalScale":"type: string, description: New value for property <code>totalScale<\/code>"}},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.suite.ui.microchart.HarveyBallMicroChartItem) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"vItem":"type: int|string|sap.suite.ui.microchart.HarveyBallMicroChartItem, description: The itemto remove or its index or id"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.HarveyBallMicroChart"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowTotal":{"!description":"Gets current value of property <code>showTotal<\/code>.\n\nIf it is set to true, the total value is displayed next to the chart. The default setting is true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowFractions":{"!description":"Gets current value of property <code>showFractions<\/code>.\n\nIf it is set to true, the fraction values are displayed next to the chart. The default setting is true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.suite.ui.microchart.HarveyBallMicroChartItem) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oItem":"type: sap.suite.ui.microchart.HarveyBallMicroChartItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe set of points for this graphic element.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.HarveyBallMicroChartItem]"},"!constructorDescription":"The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTotal total} : float<\/li>\n<li>{@link #getTotalLabel totalLabel} : string<\/li>\n<li>{@link #getTotalScale totalScale} : string<\/li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)<\/li>\n<li>{@link #getShowTotal showTotal} : boolean (default: true)<\/li>\n<li>{@link #getShowFractions showFractions} : boolean (default: true)<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.microchart.HarveyBallMicroChartItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nThe size of the chart. If it is not set, the default size is applied based on the device type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfItem":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.HarveyBallMicroChartItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.suite.ui.microchart.HarveyBallMicroChartItem) -> Number","parameters":{"oItem":"type: sap.suite.ui.microchart.HarveyBallMicroChartItem, description: The item whose index is looked for"}},"setTotalLabel":{"!description":"Sets a new value for property <code>totalLabel<\/code>.\n\nThe total label. If specified, it is displayed instead of the total value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTotalLabel: String) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sTotalLabel":"type: string, description: New value for property <code>totalLabel<\/code>"}},"getTotalScale":{"!description":"Gets current value of property <code>totalScale<\/code>.\n\nThe scaling factor that is displayed next to the total value.","!static":false,"!category":"function","!type":"fn() -> String"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getColorPalette":{"!description":"Gets current value of property <code>colorPalette<\/code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Displays a pie chart with highlighted sectors.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.HarveyBallMicroChart"},"getTotalLabel":{"!description":"Gets current value of property <code>totalLabel<\/code>.\n\nThe total label. If specified, it is displayed instead of the total value.","!static":false,"!category":"function","!type":"fn() -> String"},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.HarveyBallMicroChartItem]"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nThe size of the chart. If it is not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/suite/ui/microchart/HarveyBallMicroChart","setShowFractions":{"!description":"Sets a new value for property <code>showFractions<\/code>.\n\nIf it is set to true, the fraction values are displayed next to the chart. The default setting is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFractions: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bShowFractions":"type: boolean, description: New value for property <code>showFractions<\/code>"}},"setShowTotal":{"!description":"Sets a new value for property <code>showTotal<\/code>.\n\nIf it is set to true, the total value is displayed next to the chart. The default setting is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTotal: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bShowTotal":"type: boolean, description: New value for property <code>showTotal<\/code>"}},"!helpDescription":"Displays a pie chart with highlighted sectors.","setFormattedLabel":{"!description":"Sets a new value for property <code>formattedLabel<\/code>.\n\nIf set to true, the totalLabel parameter is considered as the combination of the total value and its scaling factor. The default value is false. It means that the total value and the scaling factor are defined separately by the total and the totalScale properties accordingly.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFormattedLabel: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bFormattedLabel":"type: boolean, description: New value for property <code>formattedLabel<\/code>"}},"getFormattedLabel":{"!description":"Gets current value of property <code>formattedLabel<\/code>.\n\nIf set to true, the totalLabel parameter is considered as the combination of the total value and its scaling factor. The default value is false. It means that the total value and the scaling factor are defined separately by the total and the totalScale properties accordingly.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTotal":{"!description":"Gets current value of property <code>total<\/code>.\n\nThe total value. This is taken as 360 degrees value on the chart.","!static":false,"!category":"function","!type":"fn() -> Number"},"setColorPalette":{"!description":"Sets a new value for property <code>colorPalette<\/code>.\n\nThe color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sColorPalette: [String]) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sColorPalette":"type: string[], description: New value for property <code>colorPalette<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.suite.ui.microchart.HarveyBallMicroChartItem, iIndex: Number) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.suite.ui.microchart.HarveyBallMicroChartItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.suite.ui.microchart.AreaMicroChartLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartLabel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChartLabel"},"sap.suite.ui.microchart.ComparisonMicroChartData":{"!description":"Contains the values of the comparison chart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChartData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe semantic color of the value.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nThe comparison bar title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","setDisplayValue":{"!description":"Sets a new value for property <code>displayValue<\/code>.\n\nIf this property is set then it will be displayed instead of value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChartData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe value for comparison.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new ComparisonMicroChartData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getDisplayValue displayValue} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nThe comparison bar title.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/ComparisonMicroChartData","!helpDescription":"Contains the values of the comparison chart.","getDisplayValue":{"!description":"Gets current value of property <code>displayValue<\/code>.\n\nIf this property is set then it will be displayed instead of value.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe value for comparison.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code> itself.\n\nThe event is fired when the user chooses the comparison chart bar.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.suite.ui":{"microchart":"sap.suite.ui.microchart","!category":"namespace"},"sap.suite.ui.microchart.RadialMicroChart":{"!description":"Displays a ring chart highlighting a current status. The status is displayed with a semantically colored radial bar and a percentage value.","setTotal":{"!description":"Sets a new value for property <code>total<\/code>.\n\nThe total value. This is taken as 360 degrees value on the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fTotal: Number) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"fTotal":"type: float, description: New value for property <code>total<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.RadialMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFraction":{"!description":"Sets a new value for property <code>fraction<\/code>.\n\nThe fraction of the total value that is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fFraction: Number) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"fFraction":"type: float, description: New value for property <code>fraction<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","setPercentage":{"!description":"Sets a new value for property <code>percentage<\/code>.\n\nThe percentage that is displayed.\nWhen a percentage is set, properties total and fraction are not considered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fPercentage: Number) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"fPercentage":"type: float, description: New value for property <code>percentage<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.RadialMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.RadialMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Describes the configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTotal total} : float<\/li>\n<li>{@link #getFraction fraction} : float<\/li>\n<li>{@link #getPercentage percentage} : float<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/microchart/RadialMicroChart","!helpDescription":"Displays a ring chart highlighting a current status. The status is displayed with a semantically colored radial bar and a percentage value.","getValueColor":{"!description":"Gets current value of property <code>valueColor<\/code>.\n\nThe color shown in the completed path.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setValueColor":{"!description":"Sets a new value for property <code>valueColor<\/code>.\n\nThe color shown in the completed path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sValueColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"sValueColor":"type: sap.m.ValueCSSColor, description: New value for property <code>valueColor<\/code>"}},"getTotal":{"!description":"Gets current value of property <code>total<\/code>.\n\nThe total value. This is taken as 360 degrees value on the chart.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.RadialMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.RadialMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.RadialMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPercentage":{"!description":"Gets current value of property <code>percentage<\/code>.\n\nThe percentage that is displayed.\nWhen a percentage is set, properties total and fraction are not considered.","!static":false,"!category":"function","!type":"fn() -> Number"},"getFraction":{"!description":"Gets current value of property <code>fraction<\/code>.\n\nThe fraction of the total value that is displayed.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.suite.ui.microchart.ComparisonMicroChartViewType":{"!description":"Lists the views of the comparison micro chart concerning the position of titles and labels.","!module":"sap/suite/ui/microchart/library","!category":"static class","Wide":{"!description":"Titles and values are displayed in the same line with the bars.","!category":"enum","!type":"String"},"Normal":{"!description":"Titles and values are displayed above the bars.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.AreaMicroChartItem":{"!description":"Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removePoint":{"!description":"Removes a point from the aggregation <code>points<\/code>.","!static":false,"!category":"function","!type":"fn(vPoint: Number | String | sap.suite.ui.microchart.AreaMicroChartPoint) -> sap.suite.ui.microchart.AreaMicroChartPoint","parameters":{"vPoint":"type: int|string|sap.suite.ui.microchart.AreaMicroChartPoint, description: The pointto remove or its index or id"}},"!proto":"sap.ui.core.Control","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","addPoint":{"!description":"Adds some point to the aggregation <code>points<\/code>.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.AreaMicroChartPoint) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"oPoint":"type: sap.suite.ui.microchart.AreaMicroChartPoint, description: the point to add; if empty, nothing is inserted"}},"bindPoints":{"!description":"Binds aggregation <code>points<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.AreaMicroChartPoint[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nThe line title.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfPoint":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartPoint<\/code> in the aggregation <code>points<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.AreaMicroChartPoint) -> Number","parameters":{"oPoint":"type: sap.suite.ui.microchart.AreaMicroChartPoint, description: The point whose index is looked for"}},"insertPoint":{"!description":"Inserts a point into the aggregation <code>points<\/code>.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.AreaMicroChartPoint, iIndex: Number) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"oPoint":"type: sap.suite.ui.microchart.AreaMicroChartPoint, description: the point to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the point should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the point is inserted at position 0; for a value\n             greater than the current size of the aggregation, the point is inserted at\n             the last position"}},"setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/AreaMicroChartItem","!helpDescription":"Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.","destroyPoints":{"!description":"Destroys all the points in the aggregation <code>points<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"getPoints":{"!description":"Gets content of aggregation <code>points<\/code>.\n\nThe set of points for this graphic element.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartPoint]"},"removeAllPoints":{"!description":"Removes all the controls from the aggregation <code>points<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartPoint]"},"unbindPoints":{"!description":"Unbinds aggregation <code>points<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"}},"sap.suite.ui.microchart.ComparisonMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ComparisonMicroChart"},"sap.suite.ui.microchart":{"deltaDisplayValue":{"!description":"If this property is set, it is rendered instead of a calculated delta.","!category":"enum","!type":"String"},"targetValueLabel":{"!description":"If set, displays a specified label instead of the numeric target value.","!category":"enum","!type":"String"},"showDeltaValue":{"!description":"If set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.","!category":"enum","!type":"Boolean"},"value2":{"!description":"The second value for delta calculation.","!category":"enum","!type":"Number"},"value1":{"!description":"The first value for delta calculation.","!category":"enum","!type":"Number"},"showValueMarker":{"!description":"If set to true, shows the value marker.","!category":"enum","!type":"Boolean"},"RadialMicroChart":"sap.suite.ui.microchart.RadialMicroChart_obj","showLabel":{"!description":"Determines if the labels are displayed or not.","!category":"enum","!type":"Boolean"},"mode":{"!description":"The mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.","!category":"enum","!type":"sap.suite.ui.microchart.BulletMicroChartModeType"},"ColumnMicroChartLabel":"sap.suite.ui.microchart.ColumnMicroChartLabel_obj","view":{"!description":"The view of the chart. If not set, the Normal view is used by default.","!category":"enum","!type":"sap.suite.ui.microchart.ComparisonMicroChartViewType"},"showTargetValue":{"!description":"If set to true, shows the numeric target value.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"ColumnMicroChartData":"sap.suite.ui.microchart.ColumnMicroChartData_obj","percentage":{"!description":"The percentage that is displayed.\nWhen a percentage is set, properties total and fraction are not considered.","!category":"enum","!type":"Number"},"scaleColor":{"!description":"The background color of the scale.","!category":"enum","!type":"sap.suite.ui.microchart.CommonBackgroundType"},"AreaMicroChartPoint":"sap.suite.ui.microchart.AreaMicroChartPoint_obj","height":{"!description":"Height of the chart.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"UI5 library: sap.suite.ui.microchart.","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"showFractions":{"!description":"If it is set to true, the fraction values are displayed next to the chart. The default setting is true.","!category":"enum","!type":"Boolean"},"showActualValue":{"!description":"If set to true, shows the numeric actual value. This property works in Actual mode only.","!category":"enum","!type":"Boolean"},"totalScale":{"!description":"The scaling factor that is displayed next to the total value.","!category":"enum","!type":"String"},"maxValue":{"!description":"The maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.","!category":"enum","!type":"Number"},"shrinkable":{"!description":"If it is set to true, the height of the control is defined by its content.","!category":"enum","!type":"Boolean"},"maxXValue":{"!description":"If this property is set it indicates the value X axis ends with.","!category":"enum","!type":"Number"},"ColumnMicroChart":"sap.suite.ui.microchart.ColumnMicroChart_obj","title1":{"!description":"The first value title.","!category":"enum","!type":"String"},"title2":{"!description":"The second value title.","!category":"enum","!type":"String"},"forecastValue":{"!description":"The forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar.","!category":"enum","!type":"Number"},"HarveyBallMicroChart":"sap.suite.ui.microchart.HarveyBallMicroChart_obj","fractionLabel":{"!description":"The fraction label. If specified, it is displayed instead of the fraction value.","!category":"enum","!type":"String"},"!module":"sap/suite/ui/microchart/library","size":{"!description":"The size of the chart. If it is not set, the default size is applied based on the device type.","!category":"enum","!type":"sap.m.Size"},"!helpDescription":"UI5 library: sap.suite.ui.microchart.","showTotal":{"!description":"If it is set to true, the total value is displayed next to the chart. The default setting is true.","!category":"enum","!type":"Boolean"},"AreaMicroChartLabel":"sap.suite.ui.microchart.AreaMicroChartLabel_obj","HarveyBallMicroChartItem":"sap.suite.ui.microchart.HarveyBallMicroChartItem_obj","BulletMicroChartData":"sap.suite.ui.microchart.BulletMicroChartData_obj","BulletMicroChart":"sap.suite.ui.microchart.BulletMicroChart_obj","color":{"!description":"The slice color.","!category":"enum","!type":"sap.m.ValueColor"},"formattedLabel":{"!description":"If set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.","!category":"enum","!type":"Boolean"},"scale":{"!description":"The scaling suffix that is added to the actual and target values.","!category":"enum","!type":"String"},"!category":"namespace","minXValue":{"!description":"If this property is set it indicates the value X axis ends with.","!category":"enum","!type":"Number"},"title":{"!description":"The comparison bar title.","!category":"enum","!type":"String"},"valueColor":{"!description":"The color shown in the completed path.","!category":"enum","!type":"sap.m.ValueCSSColor"},"isResponsive":{"!description":"If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.","!category":"enum","!type":"Boolean"},"ComparisonMicroChart":"sap.suite.ui.microchart.ComparisonMicroChart_obj","ComparisonMicroChartViewType":"sap.suite.ui.microchart.ComparisonMicroChartViewType","minValue":{"!description":"The minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.","!category":"enum","!type":"Number"},"total":{"!description":"The total value. This is taken as 360 degrees value on the chart.","!category":"enum","!type":"Number"},"maxYValue":{"!description":"If this property is set it indicates the value X axis ends with.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"AreaMicroChartItem":"sap.suite.ui.microchart.AreaMicroChartItem_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"targetValue":{"!description":"The target value that is displayed as a black vertical bar.","!category":"enum","!type":"Number"},"value":{"!description":"The value for comparison.","!category":"enum","!type":"Number"},"minYValue":{"!description":"If this property is set it indicates the value X axis ends with.","!category":"enum","!type":"Number"},"AreaMicroChartViewType":"sap.suite.ui.microchart.AreaMicroChartViewType","actualValueLabel":{"!description":"If set, displays a specified label instead of the numeric actual value.","!category":"enum","!type":"String"},"CommonBackgroundType":"sap.suite.ui.microchart.CommonBackgroundType","label":{"!description":"The line title.","!category":"enum","!type":"String"},"fractionScale":{"!description":"The scaling factor that is displayed after the fraction value.","!category":"enum","!type":"String"},"ComparisonMicroChartData":"sap.suite.ui.microchart.ComparisonMicroChartData_obj","fraction":{"!description":"The fraction of the total value that is displayed.","!category":"enum","!type":"Number"},"deltaValueLabel":{"!description":"If set, displays a specified label instead of the calculated numeric delta value.","!category":"enum","!type":"String"},"displayValue":{"!description":"If this property is set then it will be displayed instead of value.","!category":"enum","!type":"String"},"totalLabel":{"!description":"The total label. If specified, it is displayed instead of the total value.","!category":"enum","!type":"String"},"AreaMicroChart":"sap.suite.ui.microchart.AreaMicroChart_obj","displayValue1":{"!description":"If this property is set, it is rendered instead of value1.","!category":"enum","!type":"String"},"displayValue2":{"!description":"If this property is set, it is rendered instead of value2.","!category":"enum","!type":"String"},"DeltaMicroChart":"sap.suite.ui.microchart.DeltaMicroChart_obj","width":{"!description":"The width of the chart. If it is not set, the size of the control is defined by the size property.","!category":"enum","!type":"sap.ui.core.CSSSize"},"x":{"!description":"X value for the given point.","!category":"enum","!type":"Number"},"y":{"!description":"Y value for the given point.","!category":"enum","!type":"Number"},"colorPalette":{"!description":"The color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.","!category":"enum","!type":"[String]"},"BulletMicroChartModeType":"sap.suite.ui.microchart.BulletMicroChartModeType"},"sap":{"suite":"sap.suite","sap":"sap","!category":"namespace"},"sap.suite.ui.microchart.DeltaMicroChart":{"!proto":"sap.ui.core.Control","getTitle1":{"!description":"Gets current value of property <code>title1<\/code>.\n\nThe first value title.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setValue2":{"!description":"Sets a new value for property <code>value2<\/code>.\n\nThe second value for delta calculation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue2: Number) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"fValue2":"type: float, description: New value for property <code>value2<\/code>"}},"!constructorDescription":"Constructor for a new DeltaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue1 value1} : float<\/li>\n<li>{@link #getValue2 value2} : float<\/li>\n<li>{@link #getTitle1 title1} : string<\/li>\n<li>{@link #getTitle2 title2} : string<\/li>\n<li>{@link #getDisplayValue1 displayValue1} : string<\/li>\n<li>{@link #getDisplayValue2 displayValue2} : string<\/li>\n<li>{@link #getDeltaDisplayValue deltaDisplayValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nThe size of the chart. If is not set, the default size is applied based on the device type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"setValue1":{"!description":"Sets a new value for property <code>value1<\/code>.\n\nThe first value for delta calculation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue1: Number) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"fValue1":"type: float, description: New value for property <code>value1<\/code>"}},"getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle2":{"!description":"Gets current value of property <code>title2<\/code>.\n\nThe second value title.","!static":false,"!category":"function","!type":"fn() -> String"},"setDeltaDisplayValue":{"!description":"Sets a new value for property <code>deltaDisplayValue<\/code>.\n\nIf this property is set, it is rendered instead of a calculated delta.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDeltaDisplayValue: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sDeltaDisplayValue":"type: string, description: New value for property <code>deltaDisplayValue<\/code>"}},"getDisplayValue1":{"!description":"Gets current value of property <code>displayValue1<\/code>.\n\nIf this property is set, it is rendered instead of value1.","!static":false,"!category":"function","!type":"fn() -> String"},"getDisplayValue2":{"!description":"Gets current value of property <code>displayValue2<\/code>.\n\nIf this property is set, it is rendered instead of value2.","!static":false,"!category":"function","!type":"fn() -> String"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code> itself.\n\nThe event is fired when the user chooses the delta micro chart.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart.","setTitle2":{"!description":"Sets a new value for property <code>title2<\/code>.\n\nThe second value title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle2: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sTitle2":"type: string, description: New value for property <code>title2<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.DeltaMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTitle1":{"!description":"Sets a new value for property <code>title1<\/code>.\n\nThe first value title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle1: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sTitle1":"type: string, description: New value for property <code>title1<\/code>"}},"getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe semantic color of the delta value.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getValue1":{"!description":"Gets current value of property <code>value1<\/code>.\n\nThe first value for delta calculation.","!static":false,"!category":"function","!type":"fn() -> Number"},"getValue2":{"!description":"Gets current value of property <code>value2<\/code>.\n\nThe second value for delta calculation.","!static":false,"!category":"function","!type":"fn() -> Number"},"setDisplayValue1":{"!description":"Sets a new value for property <code>displayValue1<\/code>.\n\nIf this property is set, it is rendered instead of value1.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue1: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sDisplayValue1":"type: string, description: New value for property <code>displayValue1<\/code>"}},"getDeltaDisplayValue":{"!description":"Gets current value of property <code>deltaDisplayValue<\/code>.\n\nIf this property is set, it is rendered instead of a calculated delta.","!static":false,"!category":"function","!type":"fn() -> String"},"setDisplayValue2":{"!description":"Sets a new value for property <code>displayValue2<\/code>.\n\nIf this property is set, it is rendered instead of value2.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue2: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sDisplayValue2":"type: string, description: New value for property <code>displayValue2<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.DeltaMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nThe size of the chart. If is not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe semantic color of the delta value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/DeltaMicroChart","!helpDescription":"Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart."},"sap.suite.ui.microchart.ComparisonMicroChartData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChartData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ComparisonMicroChartData"},"sap.suite.ui.microchart.ColumnMicroChart":{"destroyRightTopLabel":{"!description":"Destroys the rightTopLabel in the aggregation <code>rightTopLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"destroyLeftBottomLabel":{"!description":"Destroys the leftBottomLabel in the aggregation <code>leftBottomLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"getRightTopLabel":{"!description":"Gets content of aggregation <code>rightTopLabel<\/code>.\n\nThe label on the right top corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"setLeftBottomLabel":{"!description":"Sets the aggregated <code>leftBottomLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oLeftBottomLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oLeftBottomLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The leftBottomLabel to set"}},"!proto":"sap.ui.core.Control","setRightBottomLabel":{"!description":"Sets the aggregated <code>rightBottomLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oRightBottomLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oRightBottomLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The rightBottomLabel to set"}},"getRightBottomLabel":{"!description":"Gets content of aggregation <code>rightBottomLabel<\/code>.\n\nThe label on the right bottom corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the width of the control is defined by the size property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getColumns":{"!description":"Gets content of aggregation <code>columns<\/code>.\n\nThe column chart data.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ColumnMicroChartData]"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the chart. If it is not set, the height of the control is defined by the size property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ColumnMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.suite.ui.microchart.ColumnMicroChartData[] (default)<\/li>\n<li>{@link #getLeftTopLabel leftTopLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getRightTopLabel rightTopLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getLeftBottomLabel leftBottomLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getRightBottomLabel rightBottomLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLeftTopLabel":{"!description":"Sets the aggregated <code>leftTopLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oLeftTopLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oLeftTopLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The leftTopLabel to set"}},"removeAllColumns":{"!description":"Removes all the controls from the aggregation <code>columns<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ColumnMicroChartData]"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code> itself.\n\nThe event is fired when the user chooses the column chart.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart.","destroyLeftTopLabel":{"!description":"Destroys the leftTopLabel in the aggregation <code>leftTopLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"setRightTopLabel":{"!description":"Sets the aggregated <code>rightTopLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oRightTopLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oRightTopLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The rightTopLabel to set"}},"addColumn":{"!description":"Adds some column to the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.suite.ui.microchart.ColumnMicroChartData) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oColumn":"type: sap.suite.ui.microchart.ColumnMicroChartData, description: the column to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLeftBottomLabel":{"!description":"Gets content of aggregation <code>leftBottomLabel<\/code>.\n\nThe label on the left bottom corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"destroyColumns":{"!description":"Destroys all the columns in the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"destroyRightBottomLabel":{"!description":"Destroys the rightBottomLabel in the aggregation <code>rightBottomLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"getLeftTopLabel":{"!description":"Gets content of aggregation <code>leftTopLabel<\/code>.\n\nThe label on the left top corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"indexOfColumn":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code> in the aggregation <code>columns<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.suite.ui.microchart.ColumnMicroChartData) -> Number","parameters":{"oColumn":"type: sap.suite.ui.microchart.ColumnMicroChartData, description: The column whose index is looked for"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the chart. If it is not set, the height of the control is defined by the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the chart. If it is not set, the width of the control is defined by the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeColumn":{"!description":"Removes a column from the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(vColumn: Number | String | sap.suite.ui.microchart.ColumnMicroChartData) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"vColumn":"type: int|string|sap.suite.ui.microchart.ColumnMicroChartData, description: The columnto remove or its index or id"}},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"unbindColumns":{"!description":"Unbinds aggregation <code>columns<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"!module":"sap/suite/ui/microchart/ColumnMicroChart","insertColumn":{"!description":"Inserts a column into the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.suite.ui.microchart.ColumnMicroChartData, iIndex: Number) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oColumn":"type: sap.suite.ui.microchart.ColumnMicroChartData, description: the column to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the column should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value\n             greater than the current size of the aggregation, the column is inserted at\n             the last position"}},"!helpDescription":"Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart.","bindColumns":{"!description":"Binds aggregation <code>columns<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}}},"sap.suite.ui.microchart.ColumnMicroChartData":{"!description":"Defines the column chart data.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nThe line title.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe actual value.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new ColumnMicroChartData control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<li>{@link #getValue value} : float<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/ColumnMicroChartData","!helpDescription":"Defines the column chart data.","setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code> itself.\n\nThe event is fired when the user chooses the column data.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.suite.ui.microchart.AreaMicroChartPoint":{"!description":"Contains the data for the point.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartPoint.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setY":{"!description":"Sets a new value for property <code>y<\/code>.\n\nY value for the given point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fY: Number) -> sap.suite.ui.microchart.AreaMicroChartPoint","parameters":{"fY":"type: float, description: New value for property <code>y<\/code>"}},"setX":{"!description":"Sets a new value for property <code>x<\/code>.\n\nX value for the given point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fX: Number) -> sap.suite.ui.microchart.AreaMicroChartPoint","parameters":{"fX":"type: float, description: New value for property <code>x<\/code>"}},"!proto":"sap.ui.core.Control","getXValue":{"!description":"Returns the x value. It returns 'undefined', if the x property was not set or an invalid number was set.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartPoint with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getX":{"!description":"Gets current value of property <code>x<\/code>.\n\nX value for the given point.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"This control contains data for the point.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : float<\/li>\n<li>{@link #getY y} : float<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getY":{"!description":"Gets current value of property <code>y<\/code>.\n\nY value for the given point.","!static":false,"!category":"function","!type":"fn() -> Number"},"!module":"sap/suite/ui/microchart/AreaMicroChartPoint","!helpDescription":"Contains the data for the point.","getYValue":{"!description":"Returns the y value. It returns 'undefined', if the y property was not set or an invalid number was set.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.suite.ui.microchart.BulletMicroChartData":{"!description":"Contains the thresholds data.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChartData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe actual value.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChartData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new BulletMicroChartData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe semantic color of the actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.BulletMicroChartData","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/BulletMicroChartData","!helpDescription":"Contains the thresholds data.","setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.BulletMicroChartData","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe semantic color of the actual value.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"!category":"class"},"sap.suite.ui.microchart.ColumnMicroChartLabel":{"!description":"Displays or hides the labels of a column micro chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartLabel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartLabel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ColumnMicroChartLabel control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nThe line title.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setColor":{"!description":"Sets a new value for property <code>color<\/code>.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.ColumnMicroChartLabel","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/ColumnMicroChartLabel","!helpDescription":"Displays or hides the labels of a column micro chart.","!proto":"sap.ui.core.Control","getColor":{"!description":"Gets current value of property <code>color<\/code>.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.ColumnMicroChartLabel","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"!category":"class"},"sap.suite.ui.microchart.HarveyBallMicroChartItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChartItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.HarveyBallMicroChartItem"},"sap.suite.ui.microchart.AreaMicroChart":{"destroyLastXLabel":{"!description":"Destroys the lastXLabel in the aggregation <code>lastXLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getMinLabel":{"!description":"Gets content of aggregation <code>minLabel<\/code>.\n\nThe label for the minimum point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"destroyInnerMinThreshold":{"!description":"Destroys the innerMinThreshold in the aggregation <code>innerMinThreshold<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setInnerMaxThreshold":{"!description":"Sets the aggregated <code>innerMaxThreshold<\/code>.","!static":false,"!category":"function","!type":"fn(oInnerMaxThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oInnerMaxThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The innerMaxThreshold to set"}},"destroyInnerMaxThreshold":{"!description":"Destroys the innerMaxThreshold in the aggregation <code>innerMaxThreshold<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getLines":{"!description":"Gets content of aggregation <code>lines<\/code>.\n\nThe set of lines.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartItem]"},"setInnerMinThreshold":{"!description":"Sets the aggregated <code>innerMinThreshold<\/code>.","!static":false,"!category":"function","!type":"fn(oInnerMinThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oInnerMinThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The innerMinThreshold to set"}},"destroyMinLabel":{"!description":"Destroys the minLabel in the aggregation <code>minLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setShowLabel":{"!description":"Sets a new value for property <code>showLabel<\/code>.\n\nDetermines if the labels are displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel: Boolean) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"destroyChart":{"!description":"Destroys the chart in the aggregation <code>chart<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getTarget":{"!description":"Gets content of aggregation <code>target<\/code>.\n\nThe configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"getMinYValue":{"!description":"Gets current value of property <code>minYValue<\/code>.\n\nIf this property is set it indicates the value X axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllLines":{"!description":"Removes all the controls from the aggregation <code>lines<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartItem]"},"getView":{"!description":"Gets current value of property <code>view<\/code>.\n\nThe view of the chart.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartViewType"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.suite.ui.microchart.AreaMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.suite.ui.microchart.AreaMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.AreaMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFirstXLabel":{"!description":"Sets the aggregated <code>firstXLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oFirstXLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oFirstXLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The firstXLabel to set"}},"!description":"Chart that displays the history of values and target values as segmented lines and shows thresholds as colored background. This control replaces the deprecated sap.suite.ui.commons.MicroAreaChart.","setFirstYLabel":{"!description":"Sets the aggregated <code>firstYLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oFirstYLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oFirstYLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The firstYLabel to set"}},"bindChart":{"!description":"Binds aggregation <code>chart<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getInnerMaxThreshold":{"!description":"Gets content of aggregation <code>innerMaxThreshold<\/code>.\n\nThe configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyMinThreshold":{"!description":"Destroys the minThreshold in the aggregation <code>minThreshold<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getLastXLabel":{"!description":"Gets content of aggregation <code>lastXLabel<\/code>.\n\nThe label on X axis for the last point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"getMaxThreshold":{"!description":"Gets content of aggregation <code>maxThreshold<\/code>.\n\nThe configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"setMaxLabel":{"!description":"Sets the aggregated <code>maxLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oMaxLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMaxLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The maxLabel to set"}},"destroyFirstYLabel":{"!description":"Destroys the firstYLabel in the aggregation <code>firstYLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getShowLabel":{"!description":"Gets current value of property <code>showLabel<\/code>.\n\nDetermines if the labels are displayed or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyMaxThreshold":{"!description":"Destroys the maxThreshold in the aggregation <code>maxThreshold<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"destroyLastYLabel":{"!description":"Destroys the lastYLabel in the aggregation <code>lastYLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setMaxXValue":{"!description":"Property setter for the Max X value","!static":false,"!category":"function","!type":"fn(value: Number, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: int, description: new value Max X"}},"setMaxThreshold":{"!description":"Sets the aggregated <code>maxThreshold<\/code>.","!static":false,"!category":"function","!type":"fn(oMaxThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMaxThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The maxThreshold to set"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.suite.ui.microchart.AreaMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroyTarget":{"!description":"Destroys the target in the aggregation <code>target<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"addLine":{"!description":"Adds some line to the aggregation <code>lines<\/code>.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLine":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: the line to add; if empty, nothing is inserted"}},"!module":"sap/suite/ui/microchart/AreaMicroChart","getInnerMinThreshold":{"!description":"Gets content of aggregation <code>innerMinThreshold<\/code>.\n\nThe configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"!helpDescription":"Chart that displays the history of values and target values as segmented lines and shows thresholds as colored background. This control replaces the deprecated sap.suite.ui.commons.MicroAreaChart.","setMinThreshold":{"!description":"Sets the aggregated <code>minThreshold<\/code>.","!static":false,"!category":"function","!type":"fn(oMinThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMinThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The minThreshold to set"}},"destroyLines":{"!description":"Destroys all the lines in the aggregation <code>lines<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setMinLabel":{"!description":"Sets the aggregated <code>minLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oMinLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMinLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The minLabel to set"}},"indexOfLine":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartItem<\/code> in the aggregation <code>lines<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.AreaMicroChartItem) -> Number","parameters":{"oLine":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The line whose index is looked for"}},"setLastYLabel":{"!description":"Sets the aggregated <code>lastYLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oLastYLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLastYLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The lastYLabel to set"}},"destroyMaxLabel":{"!description":"Destroys the maxLabel in the aggregation <code>maxLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setColorPalette":{"!description":"Sets a new value for property <code>colorPalette<\/code>.\n\nThe color palette for the chart. If this property is set,\nsemantic colors defined in AreaMicroChartItem are ignored.\nColors from the palette are assigned to each line consequentially.\nWhen all the palette colors are used, assignment of the colors begins\nfrom the first palette color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sColorPalette: [String]) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sColorPalette":"type: string[], description: New value for property <code>colorPalette<\/code>"}},"unbindChart":{"!description":"Unbinds aggregation <code>chart<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"unbindTarget":{"!description":"Unbinds aggregation <code>target<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"bindLines":{"!description":"Binds aggregation <code>lines<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getMaxXValue":{"!description":"Gets current value of property <code>maxXValue<\/code>.\n\nIf this property is set it indicates the value X axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLastYLabel":{"!description":"Gets content of aggregation <code>lastYLabel<\/code>.\n\nThe label on Y axis for the last point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"!proto":"sap.ui.core.Control","setMinXValue":{"!description":"Property setter for the Min X value","!static":false,"!category":"function","!type":"fn(value: Number, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: int, description: new value Min X"}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getFirstYLabel":{"!description":"Gets content of aggregation <code>firstYLabel<\/code>.\n\nThe label on Y axis for the first point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"getMaxYValue":{"!description":"Gets current value of property <code>maxYValue<\/code>.\n\nIf this property is set it indicates the value X axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMaxYValue":{"!description":"Property setter for the Max Y value","!static":false,"!category":"function","!type":"fn(value: String, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: string, description: new value Max Y"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxXValue maxXValue} : float<\/li>\n<li>{@link #getMinXValue minXValue} : float<\/li>\n<li>{@link #getMaxYValue maxYValue} : float<\/li>\n<li>{@link #getMinYValue minYValue} : float<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.AreaMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getChart chart} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getMaxThreshold maxThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getInnerMaxThreshold innerMaxThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getInnerMinThreshold innerMinThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getMinThreshold minThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getTarget target} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getFirstXLabel firstXLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getFirstYLabel firstYLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLastXLabel lastXLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLastYLabel lastYLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getMaxLabel maxLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getMinLabel minLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLines lines} : sap.suite.ui.microchart.AreaMicroChartItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setChart":{"!description":"Sets the aggregated <code>chart<\/code>.","!static":false,"!category":"function","!type":"fn(oChart: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oChart":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The chart to set"}},"getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Width and height properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getColorPalette":{"!description":"Gets current value of property <code>colorPalette<\/code>.\n\nThe color palette for the chart. If this property is set,\nsemantic colors defined in AreaMicroChartItem are ignored.\nColors from the palette are assigned to each line consequentially.\nWhen all the palette colors are used, assignment of the colors begins\nfrom the first palette color.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setTarget":{"!description":"Sets the aggregated <code>target<\/code>.","!static":false,"!category":"function","!type":"fn(oTarget: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oTarget":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The target to set"}},"setLastXLabel":{"!description":"Sets the aggregated <code>lastXLabel<\/code>.","!static":false,"!category":"function","!type":"fn(oLastXLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLastXLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The lastXLabel to set"}},"unbindLines":{"!description":"Unbinds aggregation <code>lines<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setMinYValue":{"!description":"Property setter for the Min Y value","!static":false,"!category":"function","!type":"fn(value: value, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: value, description: new value Min Y"}},"insertLine":{"!description":"Inserts a line into the aggregation <code>lines<\/code>.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.AreaMicroChartItem, iIndex: Number) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLine":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: the line to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the line should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the line is inserted at position 0; for a value\n             greater than the current size of the aggregation, the line is inserted at\n             the last position"}},"getChart":{"!description":"Gets content of aggregation <code>chart<\/code>.\n\nThe configuration of the actual values line.\nThe color property defines the color of the line.\nPoints are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Width and height properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getMinThreshold":{"!description":"Gets content of aggregation <code>minThreshold<\/code>.\n\nThe configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"bindTarget":{"!description":"Binds aggregation <code>target<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeLine":{"!description":"Removes a line from the aggregation <code>lines<\/code>.","!static":false,"!category":"function","!type":"fn(vLine: Number | String | sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"vLine":"type: int|string|sap.suite.ui.microchart.AreaMicroChartItem, description: The lineto remove or its index or id"}},"destroyFirstXLabel":{"!description":"Destroys the firstXLabel in the aggregation <code>firstXLabel<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setView":{"!description":"Sets a new value for property <code>view<\/code>.\n\nThe view of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn(sView: sap.suite.ui.microchart.AreaMicroChartViewType) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sView":"type: sap.suite.ui.microchart.AreaMicroChartViewType, description: New value for property <code>view<\/code>"}},"getMinXValue":{"!description":"Gets current value of property <code>minXValue<\/code>.\n\nIf this property is set it indicates the value X axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"getFirstXLabel":{"!description":"Gets content of aggregation <code>firstXLabel<\/code>.\n\nThe label on X axis for the first point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"getMaxLabel":{"!description":"Gets content of aggregation <code>maxLabel<\/code>.\n\nThe label for the maximum point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"}},"sap.suite.ui.microchart.BulletMicroChartModeType":{"!description":"Defines if the horizontal bar represents a current value only or if it represents the delta between a current value and a threshold value.","!module":"sap/suite/ui/microchart/library","Delta":{"!description":"Displays delta between the Actual and Threshold values.","!category":"enum","!type":"String"},"!category":"static class","Actual":{"!description":"Displays the Actual value.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.HarveyBallMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.HarveyBallMicroChart"},"sap.suite":{"ui":"sap.suite.ui","!category":"namespace"},"sap.suite.ui.microchart.AreaMicroChartItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChartItem"},"sap.suite.ui.microchart.AreaMicroChartPoint_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartPoint with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChartPoint"},"sap.suite.ui.microchart.DeltaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.DeltaMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.DeltaMicroChart"}}}