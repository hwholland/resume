{
	"xmlns": "http://www.sap.com/sap.ui.library.api.xsd",
	"_version": "1.0.0",
	"version": "1.38.16",
	"library": "sap.suite.ui.generic.template",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.suite.ui.generic.template",
			"basename": "template",
			"resource": "sap/suite/ui/generic/template/library.js",
			"module": "sap/suite/ui/generic/template/library",
			"static": true,
			"visibility": "public",
			"description": "Library with generic Suite UI templates."
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.generic.template.extensionAPI.extensionAPI",
			"basename": "extensionAPI",
			"resource": "sap/suite/ui/generic/template/extensionAPI/extensionAPI.js",
			"module": "sap/suite/ui/generic/template/extensionAPI/extensionAPI",
			"static": true,
			"visibility": "public",
			"description": "Static access to extension API for Smart Template Application development",
			"methods": [
				{
					"name": "getExtensionAPIPromise",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "A <code>Promise</code> which resolves to the extension API for the embedding Smart Template view"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": "false",
							"description": "a control which is embedded into a Smart Template view."
						}
					],
					"description": "Get the extension API valid for the specified control embedded in a Smart Template view.  Note that extension API\ncan also be retrieved directly from the controller of the Smart Template view. Therefore, this method needs only\nbe called in scenarios where this controller is not directly accessible. The most prominent use case for this would be\nthe context of a controller of a view extension. In this case it is recommended to pass the extending view to this method. </br>\nNote that this method does not return the extension API directly, but a Promise that resolves to the extension API.\nThus, a typical use of this method might look as follows: </br>\n<code>extensionAPI.getExtensionAPIPromise(oView).then(function(oExtensionAPI){ oExtensionAPI.someMethod(); });</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.generic.template.ListReport.extensionAPI.ExtensionAPI",
			"basename": "ExtensionAPI",
			"resource": "sap/suite/ui/generic/template/ListReport/extensionAPI/ExtensionAPI.js",
			"module": "sap/suite/ui/generic/template/ListReport/extensionAPI/ExtensionAPI",
			"static": true,
			"visibility": "public",
			"constructor": {
				"visibility": "public",
				"description": "API to be used in extensions of ListReport. Breakout coding can access an instance of this class via\n<code>this.extensionAPI</code>. Do not instantiate yourself."
			},
			"methods": [
				{
					"name": "attachToView",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": "false",
							"description": "the control to be attached to the view"
						}
					],
					"description": "Attaches a control to the current View. Should be called whenever a new control is created and used in the\ncontext of this view. This applies especially for dialogs, action sheets, popovers, ... This method cares for\ndefining dependency and handling device specific style classes"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": "false",
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": "true",
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": "true",
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.generic.template.ListReport.extensionAPI.ExtensionAPI with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.generic.template.ListReport.extensionAPI.ExtensionAPI."
				},
				{
					"name": "getSelectedContexts",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "contains one entry per line selected"
					},
					"description": "Get the list entries currently selected"
				},
				{
					"name": "getTransactionController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.generic.template.ListReport.extensionAPI.NonDraftTransactionController",
						"description": "the transaction controller"
					},
					"description": "Get the transaction controller for editing actions on the list Note: Currently implemented for non draft case"
				},
				{
					"name": "invokeActions",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A <code>Promise</code> for asynchronous execution of the action"
					},
					"parameters": [
						{
							"name": "sFunctionName",
							"type": "string",
							"optional": "false",
							"description": "The name of the function or action"
						},
						{
							"name": "aContext",
							"type": "array",
							"optional": "false",
							"description": "The given binding contexts"
						}
					],
					"description": "Invokes multiple time the action with the given name and submits changes to the back-end."
				},
				{
					"name": "refreshTable",
					"visibility": "public",
					"description": "Refreshes the List from the backend"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.generic.template.ListReport.extensionAPI.NonDraftTransactionController",
			"basename": "NonDraftTransactionController",
			"resource": "sap/suite/ui/generic/template/ListReport/extensionAPI/NonDraftTransactionController.js",
			"module": "sap/suite/ui/generic/template/ListReport/extensionAPI/NonDraftTransactionController",
			"static": true,
			"visibility": "public",
			"constructor": {
				"visibility": "public",
				"description": "Non draft transaction controller to be used in extensions of ListReport. Breakout coding can access an instance of\nthis class via <code>EtensionAPI.getTransactionController</code>. Do not instantiate yourself.\n\nNote: Only one object can be edited at a given point in time."
			},
			"methods": [
				{
					"name": "cancel",
					"visibility": "public",
					"description": "Cancel editing"
				},
				{
					"name": "edit",
					"visibility": "public",
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": "false",
							"description": "the context identifying the entry to be edited"
						}
					],
					"description": "Start editing one list entry"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": "false",
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": "true",
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": "true",
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.generic.template.ListReport.extensionAPI.NonDraftTransactionController with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.generic.template.ListReport.extensionAPI.NonDraftTransactionController."
				},
				{
					"name": "save",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "is resolved when entry is successfully saved and rejected when saving fails"
					},
					"description": "Save the changes which have been applied to the OData model"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.generic.template.ObjectPage.extensionAPI.DraftTransactionController",
			"basename": "DraftTransactionController",
			"resource": "sap/suite/ui/generic/template/ObjectPage/extensionAPI/DraftTransactionController.js",
			"module": "sap/suite/ui/generic/template/ObjectPage/extensionAPI/DraftTransactionController",
			"static": true,
			"visibility": "public",
			"constructor": {
				"visibility": "public",
				"description": "Draft transaction controller to be used in extensions of ObjectPage. Breakout coding can access an instance of this\nclass via <code>ExtensionAPI.getTransactionController</code>. Do not instantiate yourself."
			},
			"methods": [
				{
					"name": "attachAfterActivate",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Attach a handler to the activate event"
				},
				{
					"name": "attachAfterCancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Attach a handler to the discard event"
				},
				{
					"name": "attachAfterDelete",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Attach a handler to the delete event"
				},
				{
					"name": "detachAfterActivate",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Detach a handler from the activate event"
				},
				{
					"name": "detachAfterCancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Detach a handler from the discard event"
				},
				{
					"name": "detachAfterDelete",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Detach a handler from the delete event"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.generic.template.ObjectPage.extensionAPI.ExtensionAPI",
			"basename": "ExtensionAPI",
			"resource": "sap/suite/ui/generic/template/ObjectPage/extensionAPI/ExtensionAPI.js",
			"module": "sap/suite/ui/generic/template/ObjectPage/extensionAPI/ExtensionAPI",
			"static": true,
			"visibility": "public",
			"constructor": {
				"visibility": "public",
				"description": "API to be used in extensions of ObjectPage. Breakout coding can access an instance of this class via\n<code>this.extensionAPI</code>. Do not instantiate yourself."
			},
			"methods": [
				{
					"name": "attachPageDataLoaded",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function. Note that the event passed to this function possesses an attribute <code>context</code>\nwhich contains the current header context"
						}
					],
					"description": "Attach a handler to the PageDataLoaded event.\nThis event is fired each time the object page is navigated to or the object to be displayed is changed\nNote, that the event will not be fired before:\n<ul compact>\n<li>the navigation to the page has been completed\n<li>the header data of the object are available\n</ul>"
				},
				{
					"name": "attachToView",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": "false",
							"description": "the control to be attached to the view"
						}
					],
					"description": "Attaches a control to the current View. Should be called whenever a new control is created and used in the\ncontext of this view. This applies especially for dialogs, action sheets, popovers, ... This method cares\nfor defining dependency and handling device specific style classes"
				},
				{
					"name": "detachPageDataLoaded",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Detach a handler from the PageDataLoaded event"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": "false",
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": "true",
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": "true",
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.generic.template.ObjectPage.extensionAPI.ExtensionAPI with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.generic.template.ObjectPage.extensionAPI.ExtensionAPI."
				},
				{
					"name": "getSelectedContexts",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "contains one entry per entry selected"
					},
					"parameters": [
						{
							"name": "sUiElementId",
							"type": "string",
							"optional": "false",
							"description": "the id identifying the ui element the selected context is requested for"
						}
					],
					"description": "Get the entries currently selected in one ui element"
				},
				{
					"name": "getTransactionController",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.generic.template.ObjectPage.extensionAPI.DraftTransactionController",
						"description": "the transaction\n        controller"
					},
					"description": "Get the transaction controller for editing actions on the page. Note: Currently implemented for draft case"
				},
				{
					"name": "invokeActions",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A <code>Promise</code> for asynchronous execution of the action"
					},
					"parameters": [
						{
							"name": "sFunctionName",
							"type": "string",
							"optional": "false",
							"description": "The name of the function or action"
						},
						{
							"name": "aContext",
							"type": "array",
							"optional": "false",
							"description": "The given binding contexts"
						}
					],
					"description": "Invokes multiple time the action with the given name and submits changes to the back-end."
				},
				{
					"name": "registerMessageFilterProvider",
					"visibility": "public",
					"parameters": [
						{
							"name": "Callback",
							"type": "fnProvider",
							"optional": "false",
							"description": "function to provide single or array of sap.ui.model.Filter"
						}
					],
					"description": "Registers a filter provider for the the message popover"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.generic.template.ObjectPage.extensionAPI.NonDraftTransactionController",
			"basename": "NonDraftTransactionController",
			"resource": "sap/suite/ui/generic/template/ObjectPage/extensionAPI/NonDraftTransactionController.js",
			"module": "sap/suite/ui/generic/template/ObjectPage/extensionAPI/NonDraftTransactionController",
			"static": true,
			"visibility": "public",
			"constructor": {
				"visibility": "public",
				"description": "Non Draft transaction controller to be used in extensions of ObjectPage. Breakout coding can access an instance of this\nclass via <code>ExtensionAPI.getTransactionController</code>. Do not instantiate yourself."
			},
			"methods": [
				{
					"name": "attachAfterCancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Attach a handler to the cancel event"
				},
				{
					"name": "attachAfterDelete",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Attach a handler to the delete event"
				},
				{
					"name": "attachAfterSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Attach a handler to the save event"
				},
				{
					"name": "detachAfterCancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Detach a handler from the cancel event"
				},
				{
					"name": "detachAfterDelete",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Detach a handler from the delete event"
				},
				{
					"name": "detachAfterSave",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": "false",
							"description": "the handler function"
						}
					],
					"description": "Detach a handler from the save event"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": "false",
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": "true",
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": "true",
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.generic.template.ObjectPage.extensionAPI.NonDraftTransactionController with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.generic.template.ObjectPage.extensionAPI.NonDraftTransactionController."
				}
			]
		}
	]
}