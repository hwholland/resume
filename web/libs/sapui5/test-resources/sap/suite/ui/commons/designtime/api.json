{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.21",
	"library": "sap.suite.ui.commons",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons",
			"basename": "commons",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "SAP UI library: sap.suite.ui.commons"
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.BulletChart",
			"basename": "BulletChart",
			"resource": "sap/suite/ui/commons/BulletChart.js",
			"module": "sap/suite/ui/commons/BulletChart",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Chart that displays an actual value as a horizontal bar in semantic color on the top of the background bar, the numeric value, the scaling factor, along with the thresholds, and a target value as vertical bars.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.BulletMicroChart should be used."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new BulletChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getMode mode} : sap.suite.ui.commons.BulletChartMode (default: sap.suite.ui.commons.BulletChartMode.Actual)</li>\n<li>{@link #getScale scale} : string</li>\n<li>{@link #getForecastValue forecastValue} : float</li>\n<li>{@link #getTargetValue targetValue} : float</li>\n<li>{@link #getMinValue minValue} : float</li>\n<li>{@link #getMaxValue maxValue} : float</li>\n<li>{@link #getShowActualValue showActualValue} : boolean (default: true)</li>\n<li>{@link #getShowDeltaValue showDeltaValue} : boolean (default: false)</li>\n<li>{@link #getShowTargetValue showTargetValue} : boolean (default: true)</li>\n<li>{@link #getShowValueMarker showValueMarker} : boolean (default: false)</li>\n<li>{@link #getActualValueLabel actualValueLabel} : string</li>\n<li>{@link #getDeltaValueLabel deltaValueLabel} : string</li>\n<li>{@link #getTargetValueLabel targetValueLabel} : string</li>\n<li>{@link #getWidth width} : string</li>\n<li>{@link #getScaleColor scaleColor} : sap.suite.ui.commons.CommonBackground (default: sap.suite.ui.commons.CommonBackground.MediumLight)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getActual actual} : sap.suite.ui.commons.BulletChartData</li>\n<li>{@link #getThresholds thresholds} : sap.suite.ui.commons.BulletChartData[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.BulletChart#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the bullet chart."
				}
			],
			"methods": [
				{
					"name": "addThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oThreshold",
							"type": "sap.suite.ui.commons.BulletChartData",
							"optional": false,
							"description": "the threshold to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some threshold <code>oThreshold</code> \nto the aggregation named <code>thresholds</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.BulletChart</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.BulletChart</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.BulletChart</code>.<br/> itself. \n\nThe event is fired when the user chooses the bullet chart."
				},
				{
					"name": "destroyActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the actual in the aggregation \nnamed <code>actual</code>."
				},
				{
					"name": "destroyThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the thresholds in the aggregation \nnamed <code>thresholds</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.BulletChart</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.BulletChart with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChartData"
					},
					"description": "Getter for aggregation <code>actual</code>.<br/>\nThe bullet chart actual data."
				},
				{
					"name": "getActualValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>actualValueLabel</code>"
					},
					"description": "Getter for property <code>actualValueLabel</code>.\nIf set, displays a specified label instead of the numeric actual value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getDeltaValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>deltaValueLabel</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>deltaValueLabel</code>.\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getForecastValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>forecastValue</code>"
					},
					"since": "1.21",
					"description": "Getter for property <code>forecastValue</code>.\nThe forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMaxValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>maxValue</code>"
					},
					"description": "Getter for property <code>maxValue</code>.\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.BulletChart."
				},
				{
					"name": "getMinValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>minValue</code>"
					},
					"description": "Getter for property <code>minValue</code>.\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChartMode",
						"description": "the value of property <code>mode</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>mode</code>.\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nDefault value is <code>Actual</code>"
				},
				{
					"name": "getScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>scale</code>"
					},
					"description": "Getter for property <code>scale</code>.\nThe scaling suffix that is added to the actual and target values.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getScaleColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.CommonBackground",
						"description": "the value of property <code>scaleColor</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>scaleColor</code>.\nThe background color of the scale.\n\nDefault value is <code>MediumLight</code>"
				},
				{
					"name": "getShowActualValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showActualValue</code>"
					},
					"description": "Getter for property <code>showActualValue</code>.\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowDeltaValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showDeltaValue</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>showDeltaValue</code>.\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getShowTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showTargetValue</code>"
					},
					"description": "Getter for property <code>showTargetValue</code>.\nIf set to true, shows the numeric target value.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowValueMarker",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showValueMarker</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>showValueMarker</code>.\nIf set to true, shows the value marker.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nThe size of the chart. If not set, the default size is applied based on the size of the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>targetValue</code>"
					},
					"description": "Getter for property <code>targetValue</code>.\nThe target value that is displayed as a black vertical bar.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTargetValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>targetValueLabel</code>"
					},
					"description": "Getter for property <code>targetValueLabel</code>.\nIf set, displays a specified label instead of the numeric target value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChartData[]"
					},
					"description": "Getter for aggregation <code>thresholds</code>.<br/>\nThe bullet chart thresholds data."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>width</code>"
					},
					"since": "1.22",
					"description": "Getter for property <code>width</code>.\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oThreshold",
							"type": "sap.suite.ui.commons.BulletChartData",
							"optional": false,
							"description": "the threshold whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.BulletChartData</code> in the aggregation named <code>thresholds</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oThreshold",
							"type": "sap.suite.ui.commons.BulletChartData",
							"optional": false,
							"description": "the threshold to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the threshold should be inserted at; for \n            a negative value of <code>iIndex</code>, the threshold is inserted at position 0; for a value \n            greater than the current size of the aggregation, the threshold is inserted at \n            the last position"
						}
					],
					"description": "Inserts a threshold into the aggregation named <code>thresholds</code>."
				},
				{
					"name": "removeAllThresholds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChartData[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>thresholds</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChartData",
						"description": "the removed threshold or null"
					},
					"parameters": [
						{
							"name": "vThreshold",
							"type": "int|string|sap.suite.ui.commons.BulletChartData",
							"optional": false,
							"description": "the threshold to remove or its index or id"
						}
					],
					"description": "Removes an threshold from the aggregation named <code>thresholds</code>."
				},
				{
					"name": "setActual",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oActual",
							"type": "sap.suite.ui.commons.BulletChartData",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>actual</code>."
				},
				{
					"name": "setActualValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sActualValueLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>actualValueLabel</code>"
						}
					],
					"description": "Setter for property <code>actualValueLabel</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDeltaValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "sDeltaValueLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>deltaValueLabel</code>"
						}
					],
					"description": "Setter for property <code>deltaValueLabel</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setForecastValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.21",
					"parameters": [
						{
							"name": "fForecastValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>forecastValue</code>"
						}
					],
					"description": "Setter for property <code>forecastValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMaxValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMaxValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>maxValue</code>"
						}
					],
					"description": "Setter for property <code>maxValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMinValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMinValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>minValue</code>"
						}
					],
					"description": "Setter for property <code>minValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "oMode",
							"type": "sap.suite.ui.commons.BulletChartMode",
							"optional": false,
							"description": "new value for property <code>mode</code>"
						}
					],
					"description": "Setter for property <code>mode</code>.\n\nDefault value is <code>Actual</code>"
				},
				{
					"name": "setScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sScale",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>scale</code>"
						}
					],
					"description": "Setter for property <code>scale</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setScaleColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "oScaleColor",
							"type": "sap.suite.ui.commons.CommonBackground",
							"optional": false,
							"description": "new value for property <code>scaleColor</code>"
						}
					],
					"description": "Setter for property <code>scaleColor</code>.\n\nDefault value is <code>MediumLight</code>"
				},
				{
					"name": "setShowActualValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowActualValue",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showActualValue</code>"
						}
					],
					"description": "Setter for property <code>showActualValue</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowDeltaValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "bShowDeltaValue",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showDeltaValue</code>"
						}
					],
					"description": "Setter for property <code>showDeltaValue</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setShowTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowTargetValue",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showTargetValue</code>"
						}
					],
					"description": "Setter for property <code>showTargetValue</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowValueMarker",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "bShowValueMarker",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showValueMarker</code>"
						}
					],
					"description": "Setter for property <code>showValueMarker</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setTargetValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fTargetValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>targetValue</code>"
						}
					],
					"description": "Setter for property <code>targetValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTargetValueLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTargetValueLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>targetValueLabel</code>"
						}
					],
					"description": "Setter for property <code>targetValueLabel</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.BulletChartData",
			"basename": "BulletChartData",
			"resource": "sap/suite/ui/commons/BulletChartData.js",
			"module": "sap/suite/ui/commons/BulletChartData",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Thresholds data holder.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.BulletMicroChartData should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new BulletChartData.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)</li>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: sap.suite.ui.commons.InfoTileValueColor.Neutral)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.BulletChartData with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe semantic color of the actual value.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.BulletChartData."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe actual value.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChartData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BulletChartData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is <code>0</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.BulletChartMode",
			"basename": "BulletChartMode",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible BulletChart display modes.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.BulletMicroChartModeType should be used."
			},
			"properties": [
				{
					"name": "Actual",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Displays the Actual value."
				},
				{
					"name": "Delta",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Displays delta between the Actual and Threshold values."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.BusinessCard",
			"basename": "BusinessCard",
			"resource": "sap/suite/ui/commons/BusinessCard.js",
			"module": "sap/suite/ui/commons/BusinessCard",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control allows you to display business card information including an image, first title (either URL link or text), second title, and multiple text lines.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Standard Fiori technology should be used."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "type",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Title of the BusinessCard that describes its type.",
						"methods": [
							"getType",
							"setType"
						]
					},
					{
						"name": "iconPath",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A path to the BusinessCard icon.",
						"methods": [
							"getIconPath",
							"setIconPath"
						]
					},
					{
						"name": "secondTitle",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A short text line that describes this BusinessCard.",
						"methods": [
							"getSecondTitle",
							"setSecondTitle"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Width of the BusinessCard. Alternatively, CSS size can be set in %, px, or em.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "imageTooltip",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A tooltip that is set for an image.",
						"methods": [
							"getImageTooltip",
							"setImageTooltip"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The content of the BusinessCard body must be provided by the application developer.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					},
					{
						"name": "firstTitle",
						"singularName": "firstTitle",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Any control that can display a title. Content of this control appears at the first position in BusinessCard. Recomended controls: sap.ui.commons.Label and sap.ui.commons.Link.",
						"methods": [
							"getFirstTitle",
							"destroyFirstTitle",
							"setFirstTitle"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new BusinessCard.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : string</li>\n<li>{@link #getIconPath iconPath} : sap.ui.core.URI</li>\n<li>{@link #getSecondTitle secondTitle} : string</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize</li>\n<li>{@link #getImageTooltip imageTooltip} : string</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li>\n<li>{@link #getFirstTitle firstTitle} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "destroyFirstTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the firstTitle in the aggregation \nnamed <code>firstTitle</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.BusinessCard with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nThe content of the BusinessCard body must be provided by the application developer."
				},
				{
					"name": "getFirstTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>firstTitle</code>.<br/>\nAny control that can display a title. Content of this control appears at the first position in BusinessCard. Recomended controls: sap.ui.commons.Label and sap.ui.commons.Link."
				},
				{
					"name": "getIconPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>iconPath</code>"
					},
					"description": "Getter for property <code>iconPath</code>.\nA path to the BusinessCard icon.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getImageTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>imageTooltip</code>"
					},
					"description": "Getter for property <code>imageTooltip</code>.\nA tooltip that is set for an image.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.BusinessCard."
				},
				{
					"name": "getSecondTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>secondTitle</code>"
					},
					"description": "Getter for property <code>secondTitle</code>.\nA short text line that describes this BusinessCard.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>type</code>"
					},
					"description": "Getter for property <code>type</code>.\nTitle of the BusinessCard that describes its type.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nWidth of the BusinessCard. Alternatively, CSS size can be set in %, px, or em.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setFirstTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFirstTitle",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>firstTitle</code>."
				},
				{
					"name": "setIconPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconPath",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>iconPath</code>"
						}
					],
					"description": "Setter for property <code>iconPath</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setImageTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sImageTooltip",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>imageTooltip</code>"
						}
					],
					"description": "Setter for property <code>imageTooltip</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSecondTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSecondTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>secondTitle</code>"
						}
					],
					"description": "Setter for property <code>secondTitle</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>type</code>"
						}
					],
					"description": "Setter for property <code>type</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.BusinessCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ChartContainer",
			"basename": "ChartContainer",
			"resource": "sap/suite/ui/commons/ChartContainer.js",
			"module": "sap/suite/ui/commons/ChartContainer",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Provides a toolbar with generic functions for tables and charts based on the VizFrame control like zoom, display in fullscreen mode, toggle the legend, switch between chart types, and changes of the chart dimension. The controls of the content aggregation are positioned below the toolbar. Additional functions can be added to the toolbar with the customIcons aggregation.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "showPersonalization",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Set to true to display the personalization icon. Set to false to hide it.",
						"methods": [
							"getShowPersonalization",
							"setShowPersonalization"
						]
					},
					{
						"name": "showFullScreen",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Set to true to display the full screen icon. Set to false to hide it.",
						"methods": [
							"getShowFullScreen",
							"setShowFullScreen"
						]
					},
					{
						"name": "fullScreen",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Display the chart and the toolbar in full screen or normal mode.",
						"methods": [
							"getFullScreen",
							"setFullScreen"
						]
					},
					{
						"name": "showLegend",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Set to true to display the charts' legends. Set to false to hide them. See also showLegendButton.",
						"methods": [
							"getShowLegend",
							"setShowLegend"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "String shown if there are no dimensions to display.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "selectorGroupLabel",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Custom Label for Selectors Group.",
						"deprecated": {
							"since": "1.32.0",
							"text": "Obsolete property as sap.m.Toolbar is replaced by sap.m.OverflowToolbar."
						},
						"methods": [
							"getSelectorGroupLabel",
							"setSelectorGroupLabel"
						]
					},
					{
						"name": "autoAdjustHeight",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Determine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.",
						"methods": [
							"getAutoAdjustHeight",
							"setAutoAdjustHeight"
						]
					},
					{
						"name": "showZoom",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Set to true to display zoom icons. Set to false to hide them.",
						"methods": [
							"getShowZoom",
							"setShowZoom"
						]
					},
					{
						"name": "showLegendButton",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Set to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.",
						"methods": [
							"getShowLegendButton",
							"setShowLegendButton"
						]
					}
				],
				"aggregations": [
					{
						"name": "dimensionSelectors",
						"singularName": "dimensionSelector",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Dimension Selects.",
						"methods": [
							"getDimensionSelectors",
							"destroyDimensionSelectors",
							"insertDimensionSelector",
							"addDimensionSelector",
							"removeDimensionSelector",
							"indexOfDimensionSelector",
							"removeAllDimensionSelectors"
						]
					},
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.suite.ui.commons.ChartContainerContent",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "ChartToolBar Content aggregation. Only vizFrame, sap.m.Table and sap.ui.table.Table can be embedded.\nIf not specified explicitly, the rendering order of the charts is determined by the sequence of contents provided by the application via this aggregation. That means, per default the first chart of the aggregation will be rendered within the container.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "toolBar",
						"singularName": "toolBar",
						"type": "sap.m.OverflowToolbar",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Embedded ToolBar.",
						"methods": [
							"getToolBar",
							"destroyToolBar",
							"setToolBar"
						]
					},
					{
						"name": "customIcons",
						"singularName": "customIcon",
						"type": "sap.ui.core.Icon",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "This aggregation contains the custom icons that should be displayed additionally on the toolbar.\nIt is not guaranteed that the same instance of the sap.ui.core.Icon control will be used within the toolbar,\nbut the toolbar will contain a sap.m.OverflowToolbarButton with an icon property equal to the src property\nof the sap.ui.core.Icon provided in the aggregation.\nIf a press event is triggered by the icon displayed on the toolbar, then the press handler of\nthe original sap.ui.core.Icon control is used. The instance of the control, that has triggered the press event,\ncan be accessed using the \"controlReference\" parameter of the event object.",
						"methods": [
							"getCustomIcons",
							"destroyCustomIcons",
							"insertCustomIcon",
							"addCustomIcon",
							"removeCustomIcon",
							"indexOfCustomIcon",
							"removeAllCustomIcons"
						]
					}
				],
				"defaultAggregation": "content",
				"events": [
					{
						"name": "personalizationPress",
						"visibility": "public",
						"description": "Event fired when a user clicks on the personalization icon.",
						"methods": [
							"attachPersonalizationPress",
							"detachPersonalizationPress",
							"firePersonalizationPress"
						]
					},
					{
						"name": "contentChange",
						"visibility": "public",
						"description": "Event fired when a user changes the displayed content.",
						"parameters": {
							"selectedItemId": {
								"name": "selectedItemId",
								"type": "string",
								"description": "Id of the selected item."
							}
						},
						"methods": [
							"attachContentChange",
							"detachContentChange",
							"fireContentChange"
						]
					},
					{
						"name": "customZoomInPress",
						"visibility": "public",
						"description": "Custom event for zoom in.",
						"methods": [
							"attachCustomZoomInPress",
							"detachCustomZoomInPress",
							"fireCustomZoomInPress"
						]
					},
					{
						"name": "customZoomOutPress",
						"visibility": "public",
						"description": "Custom event for zoom out.",
						"methods": [
							"attachCustomZoomOutPress",
							"detachCustomZoomOutPress",
							"fireCustomZoomOutPress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ChartContainer.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPersonalization showPersonalization} : boolean (default: false)</li>\n<li>{@link #getShowFullScreen showFullScreen} : boolean (default: false)</li>\n<li>{@link #getFullScreen fullScreen} : boolean (default: false)</li>\n<li>{@link #getShowLegend showLegend} : boolean (default: true)</li>\n<li>{@link #getTitle title} : string (default: '')</li>\n<li>{@link #getSelectorGroupLabel selectorGroupLabel} : string</li>\n<li>{@link #getAutoAdjustHeight autoAdjustHeight} : boolean (default: false)</li>\n<li>{@link #getShowZoom showZoom} : boolean (default: true)</li>\n<li>{@link #getShowLegendButton showLegendButton} : boolean (default: true)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getDimensionSelectors dimensionSelectors} : sap.ui.core.Control[]</li>\n<li>{@link #getContent content} <strong>(default aggregation)</strong> : sap.suite.ui.commons.ChartContainerContent[]</li>\n<li>{@link #getCustomIcons customIcons} : sap.ui.core.Icon[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ChartContainer#event:personalizationPress personalizationPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ChartContainer#event:contentChange contentChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ChartContainer#event:customZoomInPress customZoomInPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ChartContainer#event:customZoomOutPress customZoomOutPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "contentChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectedItemId": {
											"name": "selectedItemId",
											"type": "string",
											"optional": false,
											"description": "Id of the selected item."
										}
									}
								}
							}
						}
					],
					"description": "Event fired when a user changes the displayed content."
				},
				{
					"name": "customZoomInPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Custom event for zoom in."
				},
				{
					"name": "customZoomOutPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Custom event for zoom out."
				},
				{
					"name": "personalizationPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fired when a user clicks on the personalization icon."
				}
			],
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.suite.ui.commons.ChartContainerContent",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content <code>oContent</code> \nto the aggregation named <code>content</code>."
				},
				{
					"name": "addCustomIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomIcon",
							"type": "sap.ui.core.Icon",
							"optional": false,
							"description": "the customIcon to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some customIcon <code>oCustomIcon</code> \nto the aggregation named <code>customIcons</code>."
				},
				{
					"name": "addDimensionSelector",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDimensionSelector",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the dimensionSelector to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some dimensionSelector <code>oDimensionSelector</code> \nto the aggregation named <code>dimensionSelectors</code>."
				},
				{
					"name": "attachContentChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'contentChange' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself. \n\nEvent fired when a user changes the displayed content."
				},
				{
					"name": "attachCustomZoomInPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'customZoomInPress' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself. \n\nCustom event for zoom in."
				},
				{
					"name": "attachCustomZoomOutPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'customZoomOutPress' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself. \n\nCustom event for zoom out."
				},
				{
					"name": "attachPersonalizationPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'personalizationPress' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ChartContainer</code>.<br/> itself. \n\nEvent fired when a user clicks on the personalization icon."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "destroyCustomIcons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the customIcons in the aggregation \nnamed <code>customIcons</code>."
				},
				{
					"name": "destroyDimensionSelectors",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the dimensionSelectors in the aggregation \nnamed <code>dimensionSelectors</code>."
				},
				{
					"name": "detachContentChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'contentChange' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachCustomZoomInPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'customZoomInPress' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachCustomZoomOutPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'customZoomOutPress' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPersonalizationPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'personalizationPress' event of this <code>sap.suite.ui.commons.ChartContainer</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ChartContainer with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireContentChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event contentChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectedItemId' of type <code>string</code> Id of the selected item.</li>\n</ul>"
				},
				{
					"name": "fireCustomZoomInPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event customZoomInPress to attached listeners."
				},
				{
					"name": "fireCustomZoomOutPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event customZoomOutPress to attached listeners."
				},
				{
					"name": "firePersonalizationPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event personalizationPress to attached listeners."
				},
				{
					"name": "getAutoAdjustHeight",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>autoAdjustHeight</code>"
					},
					"description": "Getter for property <code>autoAdjustHeight</code>.\nDetermine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainerContent[]"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nChartToolBar Content aggregation. Only vizFrame, sap.m.Table and sap.ui.table.Table can be embedded.\nIf not specified explicitly, the rendering order of the charts is determined by the sequence of contents provided by the application via this aggregation. That means, per default the first chart of the aggregation will be rendered within the container.\n\n<strong>Note</strong>: this is the default aggregation for ChartContainer."
				},
				{
					"name": "getCustomIcons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon[]"
					},
					"description": "Getter for aggregation <code>customIcons</code>.<br/>\nThis aggregation contains the custom icons that should be displayed additionally on the toolbar.\nIt is not guaranteed that the same instance of the sap.ui.core.Icon control will be used within the toolbar,\nbut the toolbar will contain a sap.m.OverflowToolbarButton with an icon property equal to the src property\nof the sap.ui.core.Icon provided in the aggregation.\nIf a press event is triggered by the icon displayed on the toolbar, then the press handler of\nthe original sap.ui.core.Icon control is used. The instance of the control, that has triggered the press event,\ncan be accessed using the \"controlReference\" parameter of the event object."
				},
				{
					"name": "getDimensionSelectors",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Getter for aggregation <code>dimensionSelectors</code>.<br/>\nDimension Selects."
				},
				{
					"name": "getFullScreen",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>fullScreen</code>"
					},
					"description": "Getter for property <code>fullScreen</code>.\nDisplay the chart and the toolbar in full screen or normal mode.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ChartContainer."
				},
				{
					"name": "getScrollDelegate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.delegate.ScrollEnablement",
						"description": "The current instance of the delegate"
					},
					"description": "Returns the current instance of the delegate to other controls."
				},
				{
					"name": "getSelectedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The currently selected content"
					},
					"description": "Returns the currently selected content control."
				},
				{
					"name": "getSelectorGroupLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>selectorGroupLabel</code>"
					},
					"description": "Getter for property <code>selectorGroupLabel</code>.\nCustom Label for Selectors Group.\n\nDefault value is empty/<code>undefined</code>",
					"deprecated": {
						"since": "1.32.0",
						"text": "Obsolete property as sap.m.Toolbar is replaced by sap.m.OverflowToolbar."
					}
				},
				{
					"name": "getShowFullScreen",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showFullScreen</code>"
					},
					"description": "Getter for property <code>showFullScreen</code>.\nSet to true to display the full screen icon. Set to false to hide it.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getShowLegend",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showLegend</code>"
					},
					"description": "Getter for property <code>showLegend</code>.\nSet to true to display the charts' legends. Set to false to hide them. See also showLegendButton.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowLegendButton",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showLegendButton</code>"
					},
					"description": "Getter for property <code>showLegendButton</code>.\nSet to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowPersonalization",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showPersonalization</code>"
					},
					"description": "Getter for property <code>showPersonalization</code>.\nSet to true to display the personalization icon. Set to false to hide it.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getShowZoom",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showZoom</code>"
					},
					"description": "Getter for property <code>showZoom</code>.\nSet to true to display zoom icons. Set to false to hide them.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nString shown if there are no dimensions to display.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.suite.ui.commons.ChartContainerContent",
							"optional": false,
							"description": "the content whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.ChartContainerContent</code> in the aggregation named <code>content</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfCustomIcon",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCustomIcon",
							"type": "sap.ui.core.Icon",
							"optional": false,
							"description": "the customIcon whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Icon</code> in the aggregation named <code>customIcons</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfDimensionSelector",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oDimensionSelector",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the dimensionSelector whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation named <code>dimensionSelectors</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.suite.ui.commons.ChartContainerContent",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for \n            a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value \n            greater than the current size of the aggregation, the content is inserted at \n            the last position"
						}
					],
					"description": "Inserts a content into the aggregation named <code>content</code>."
				},
				{
					"name": "insertCustomIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomIcon",
							"type": "sap.ui.core.Icon",
							"optional": false,
							"description": "the customIcon to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the customIcon should be inserted at; for \n            a negative value of <code>iIndex</code>, the customIcon is inserted at position 0; for a value \n            greater than the current size of the aggregation, the customIcon is inserted at \n            the last position"
						}
					],
					"description": "Inserts a customIcon into the aggregation named <code>customIcons</code>."
				},
				{
					"name": "insertDimensionSelector",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDimensionSelector",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the dimensionSelector to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the dimensionSelector should be inserted at; for \n            a negative value of <code>iIndex</code>, the dimensionSelector is inserted at position 0; for a value \n            greater than the current size of the aggregation, the dimensionSelector is inserted at \n            the last position"
						}
					],
					"description": "Inserts a dimensionSelector into the aggregation named <code>dimensionSelectors</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainerContent[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>content</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllCustomIcons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>customIcons</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllDimensionSelectors",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>dimensionSelectors</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainerContent",
						"description": "the removed content or null"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.suite.ui.commons.ChartContainerContent",
							"optional": false,
							"description": "the content to remove or its index or id"
						}
					],
					"description": "Removes an content from the aggregation named <code>content</code>."
				},
				{
					"name": "removeCustomIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "the removed customIcon or null"
					},
					"parameters": [
						{
							"name": "vCustomIcon",
							"type": "int|string|sap.ui.core.Icon",
							"optional": false,
							"description": "the customIcon to remove or its index or id"
						}
					],
					"description": "Removes an customIcon from the aggregation named <code>customIcons</code>."
				},
				{
					"name": "removeDimensionSelector",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed dimensionSelector or null"
					},
					"parameters": [
						{
							"name": "vDimensionSelector",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the dimensionSelector to remove or its index or id"
						}
					],
					"description": "Removes an dimensionSelector from the aggregation named <code>dimensionSelectors</code>."
				},
				{
					"name": "setAutoAdjustHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bAutoAdjustHeight",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>autoAdjustHeight</code>"
						}
					],
					"description": "Setter for property <code>autoAdjustHeight</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setFullScreen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFullScreen",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>fullScreen</code>"
						}
					],
					"description": "Setter for property <code>fullScreen</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setShowFullScreen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowFullScreen",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showFullScreen</code>"
						}
					],
					"description": "Setter for property <code>showFullScreen</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setShowLegend",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowLegend",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showLegend</code>"
						}
					],
					"description": "Setter for property <code>showLegend</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowLegendButton",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowLegendButton",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showLegendButton</code>"
						}
					],
					"description": "Setter for property <code>showLegendButton</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowPersonalization",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowPersonalization",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showPersonalization</code>"
						}
					],
					"description": "Setter for property <code>showPersonalization</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setShowZoom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowZoom",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showZoom</code>"
						}
					],
					"description": "Setter for property <code>showZoom</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "switchChart",
					"visibility": "public",
					"parameters": [
						{
							"name": "chart",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The new content (Chart or Table) to be displayed"
						}
					],
					"description": "Switches the currently viewed content (triggers re-rendering)."
				},
				{
					"name": "updateChartContainer",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainer",
						"description": "Reference to this in order to allow method chaining"
					},
					"description": "Updates ChartContainer and re-renders all its contents."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ChartContainerContent",
			"basename": "ChartContainerContent",
			"resource": "sap/suite/ui/commons/ChartContainerContent.js",
			"module": "sap/suite/ui/commons/ChartContainerContent",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Content aggregation for ChartContainer.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "icon",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Icon of the Chart.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Title of the Chart/Table",
						"methods": [
							"getTitle",
							"setTitle"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Chart or Table as content of the ChartToolBar. Supported Types: sap.viz.ui5.controls.VizFrame, sap.m.Table, sap.ui.table.Table",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ChartContainerContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string</li>\n<li>{@link #getTitle title} : string</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainerContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ChartContainerContent with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nChart or Table as content of the ChartToolBar. Supported Types: sap.viz.ui5.controls.VizFrame, sap.m.Table, sap.ui.table.Table"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>icon</code>"
					},
					"description": "Getter for property <code>icon</code>.\nIcon of the Chart.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ChartContainerContent."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nTitle of the Chart/Table\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainerContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainerContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>icon</code>"
						}
					],
					"description": "Setter for property <code>icon</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartContainerContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ChartTile",
			"basename": "ChartTile",
			"resource": "sap/suite/ui/commons/ChartTile.js",
			"module": "sap/suite/ui/commons/ChartTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.suite.ui.commons.InfoTile",
			"description": "This control is the implementation of the InfoTile to show a comparison or bullet chart.",
			"deprecated": {
				"since": "1.25",
				"text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "unit",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The percent sign, the currency symbol, or the unit of measure.",
						"methods": [
							"getUnit",
							"setUnit"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ChartTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUnit unit} : string</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.InfoTile#constructor sap.suite.ui.commons.InfoTile}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ChartTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ChartTile."
				},
				{
					"name": "getUnit",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>unit</code>"
					},
					"description": "Getter for property <code>unit</code>.\nThe percent sign, the currency symbol, or the unit of measure.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setUnit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ChartTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUnit",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>unit</code>"
						}
					],
					"description": "Setter for property <code>unit</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ColumnData",
			"basename": "ColumnData",
			"resource": "sap/suite/ui/commons/ColumnData.js",
			"module": "sap/suite/ui/commons/ColumnData",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Column data holder.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.ColumnMicroChartData should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ColumnData.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string</li>\n<li>{@link #getValue value} : float</li>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: sap.suite.ui.commons.InfoTileValueColor.Neutral)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ColumnData#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"since": "1.30",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the column data."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.30",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ColumnData</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.ColumnData</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ColumnData</code>.<br/> itself. \n\nThe event is fired when the user chooses the column data."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.30",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.ColumnData</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ColumnData with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.30",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe semantic color of the column.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>label</code>"
					},
					"description": "Getter for property <code>label</code>.\nThe label.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ColumnData."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe actual value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>label</code>"
						}
					],
					"description": "Setter for property <code>label</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ColumnMicroChart",
			"basename": "ColumnMicroChart",
			"resource": "sap/suite/ui/commons/ColumnMicroChart.js",
			"module": "sap/suite/ui/commons/ColumnMicroChart",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control shows a column chart.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.ColumnMicroChart should be used."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ColumnMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize</li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.suite.ui.commons.ColumnData[]</li>\n<li>{@link #getLeftTopLabel leftTopLabel} : sap.suite.ui.commons.ColumnMicroChartLabel</li>\n<li>{@link #getRightTopLabel rightTopLabel} : sap.suite.ui.commons.ColumnMicroChartLabel</li>\n<li>{@link #getLeftBottomLabel leftBottomLabel} : sap.suite.ui.commons.ColumnMicroChartLabel</li>\n<li>{@link #getRightBottomLabel rightBottomLabel} : sap.suite.ui.commons.ColumnMicroChartLabel</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ColumnMicroChart#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the column chart."
				}
			],
			"methods": [
				{
					"name": "addColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.commons.ColumnData",
							"optional": false,
							"description": "the column to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some column <code>oColumn</code> \nto the aggregation named <code>columns</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ColumnMicroChart</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.ColumnMicroChart</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ColumnMicroChart</code>.<br/> itself. \n\nThe event is fired when the user chooses the column chart."
				},
				{
					"name": "destroyColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the columns in the aggregation \nnamed <code>columns</code>."
				},
				{
					"name": "destroyLeftBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"description": "Destroys the leftBottomLabel in the aggregation \nnamed <code>leftBottomLabel</code>."
				},
				{
					"name": "destroyLeftTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"description": "Destroys the leftTopLabel in the aggregation \nnamed <code>leftTopLabel</code>."
				},
				{
					"name": "destroyRightBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"description": "Destroys the rightBottomLabel in the aggregation \nnamed <code>rightBottomLabel</code>."
				},
				{
					"name": "destroyRightTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"description": "Destroys the rightTopLabel in the aggregation \nnamed <code>rightTopLabel</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.ColumnMicroChart</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChart with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData[]"
					},
					"description": "Getter for aggregation <code>columns</code>.<br/>\nThe column chart data."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nThe height of the chart. If it is not set, the height of the control is defined by the size property.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getLeftBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChartLabel"
					},
					"since": "1.28",
					"description": "Getter for aggregation <code>leftBottomLabel</code>.<br/>\nThe label on the left bottom corner of the chart."
				},
				{
					"name": "getLeftTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChartLabel"
					},
					"since": "1.28",
					"description": "Getter for aggregation <code>leftTopLabel</code>.<br/>\nThe label on the left top corner of the chart."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ColumnMicroChart."
				},
				{
					"name": "getRightBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChartLabel"
					},
					"since": "1.28",
					"description": "Getter for aggregation <code>rightBottomLabel</code>.<br/>\nThe label on the right bottom corner of the chart."
				},
				{
					"name": "getRightTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChartLabel"
					},
					"since": "1.28",
					"description": "Getter for aggregation <code>rightTopLabel</code>.<br/>\nThe label on the right top corner of the chart."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nThe width of the chart. If it is not set, the width of the control is defined by the size property.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfColumn",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.commons.ColumnData",
							"optional": false,
							"description": "the column whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.ColumnData</code> in the aggregation named <code>columns</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.commons.ColumnData",
							"optional": false,
							"description": "the column to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the column should be inserted at; for \n            a negative value of <code>iIndex</code>, the column is inserted at position 0; for a value \n            greater than the current size of the aggregation, the column is inserted at \n            the last position"
						}
					],
					"description": "Inserts a column into the aggregation named <code>columns</code>."
				},
				{
					"name": "removeAllColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>columns</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnData",
						"description": "the removed column or null"
					},
					"parameters": [
						{
							"name": "vColumn",
							"type": "int|string|sap.suite.ui.commons.ColumnData",
							"optional": false,
							"description": "the column to remove or its index or id"
						}
					],
					"description": "Removes an column from the aggregation named <code>columns</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setLeftBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"parameters": [
						{
							"name": "oLeftBottomLabel",
							"type": "sap.suite.ui.commons.ColumnMicroChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>leftBottomLabel</code>."
				},
				{
					"name": "setLeftTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"parameters": [
						{
							"name": "oLeftTopLabel",
							"type": "sap.suite.ui.commons.ColumnMicroChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>leftTopLabel</code>."
				},
				{
					"name": "setRightBottomLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"parameters": [
						{
							"name": "oRightBottomLabel",
							"type": "sap.suite.ui.commons.ColumnMicroChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>rightBottomLabel</code>."
				},
				{
					"name": "setRightTopLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28",
					"parameters": [
						{
							"name": "oRightTopLabel",
							"type": "sap.suite.ui.commons.ColumnMicroChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>rightTopLabel</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ColumnMicroChartLabel",
			"basename": "ColumnMicroChartLabel",
			"resource": "sap/suite/ui/commons/ColumnMicroChartLabel.js",
			"module": "sap/suite/ui/commons/ColumnMicroChartLabel",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "This element contains data for a label in ColumnMicroChart control.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.ColumnMicroChartLabel should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ColumnMicroChartLabel.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string</li>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: \"Neutral\")</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChartLabel with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe color of the label.\n\nDefault value is <code>\"Neutral\"</code>"
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>label</code>"
					},
					"description": "Getter for property <code>label</code>.\nThe text of the label.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ColumnMicroChartLabel."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChartLabel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>\"Neutral\"</code>"
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ColumnMicroChartLabel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>label</code>"
						}
					],
					"description": "Setter for property <code>label</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.CommonBackground",
			"basename": "CommonBackground",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible theme specific background colors.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to sapui5.runtime."
			},
			"properties": [
				{
					"name": "Dark",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Dark background color."
				},
				{
					"name": "Darkest",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The darkest background color."
				},
				{
					"name": "ExtraDark",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Extra dark background color."
				},
				{
					"name": "ExtraLight",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Extra light background color."
				},
				{
					"name": "Light",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Light background color."
				},
				{
					"name": "Lightest",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The lightest background color."
				},
				{
					"name": "Medium",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Medium background color."
				},
				{
					"name": "MediumLight",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Medium light background color."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ComparisonChart",
			"basename": "ComparisonChart",
			"resource": "sap/suite/ui/commons/ComparisonChart.js",
			"module": "sap/suite/ui/commons/ComparisonChart",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control shows a comparison chart.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.ComparisonMicroChart should be used."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ComparisonChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScale scale} : string</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getView view} : sap.suite.ui.commons.ComparisonChartView (default: sap.suite.ui.commons.ComparisonChartView.Normal)</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize</li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])</li>\n<li>{@link #getShrinkable shrinkable} : boolean (default: false)</li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.suite.ui.commons.ComparisonData[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ComparisonChart#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the comparison chart."
				}
			],
			"methods": [
				{
					"name": "addData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "sap.suite.ui.commons.ComparisonData",
							"optional": false,
							"description": "the data to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some data <code>oData</code> \nto the aggregation named <code>data</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ComparisonChart</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.ComparisonChart</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ComparisonChart</code>.<br/> itself. \n\nThe event is fired when the user chooses the comparison chart."
				},
				{
					"name": "destroyData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the data in the aggregation \nnamed <code>data</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.ComparisonChart</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ComparisonChart with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the value of property <code>colorPalette</code>"
					},
					"since": "1.24",
					"description": "Getter for property <code>colorPalette</code>.\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "getData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData[]"
					},
					"description": "Getter for aggregation <code>data</code>.<br/>\nThe comparison chart data."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>height</code>.\nHeight of the chart.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ComparisonChart."
				},
				{
					"name": "getScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>scale</code>"
					},
					"description": "Getter for property <code>scale</code>.\nThe scaling suffix.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getShrinkable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>shrinkable</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>shrinkable</code>.\nIf it is set to true, the height of the control is defined by its content.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChartView",
						"description": "the value of property <code>view</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>view</code>.\nThe view of the chart. If not set, the Normal view is used by default.\n\nDefault value is <code>Normal</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"since": "1.22",
					"description": "Getter for property <code>width</code>.\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfData",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "sap.suite.ui.commons.ComparisonData",
							"optional": false,
							"description": "the data whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.ComparisonData</code> in the aggregation named <code>data</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "sap.suite.ui.commons.ComparisonData",
							"optional": false,
							"description": "the data to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the data should be inserted at; for \n            a negative value of <code>iIndex</code>, the data is inserted at position 0; for a value \n            greater than the current size of the aggregation, the data is inserted at \n            the last position"
						}
					],
					"description": "Inserts a data into the aggregation named <code>data</code>."
				},
				{
					"name": "removeAllData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>data</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "the removed data or null"
					},
					"parameters": [
						{
							"name": "vData",
							"type": "int|string|sap.suite.ui.commons.ComparisonData",
							"optional": false,
							"description": "the data to remove or its index or id"
						}
					],
					"description": "Removes an data from the aggregation named <code>data</code>."
				},
				{
					"name": "setColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "aColorPalette",
							"type": "string[]",
							"optional": false,
							"description": "new value for property <code>colorPalette</code>"
						}
					],
					"description": "Setter for property <code>colorPalette</code>.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sScale",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>scale</code>"
						}
					],
					"description": "Setter for property <code>scale</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setShrinkable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "bShrinkable",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>shrinkable</code>"
						}
					],
					"description": "Setter for property <code>shrinkable</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "oView",
							"type": "sap.suite.ui.commons.ComparisonChartView",
							"optional": false,
							"description": "new value for property <code>view</code>"
						}
					],
					"description": "Setter for property <code>view</code>.\n\nDefault value is <code>Normal</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ComparisonChartView",
			"basename": "ComparisonChartView",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "The view of the ComparisonChart.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.ComparisonMicroChartViewType should be used."
			},
			"properties": [
				{
					"name": "Normal",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Titles and values are displayed above the bars."
				},
				{
					"name": "Wide",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Titles and values are displayed in the same line with the bars."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ComparisonData",
			"basename": "ComparisonData",
			"resource": "sap/suite/ui/commons/ComparisonData.js",
			"module": "sap/suite/ui/commons/ComparisonData",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Comparison tile value holder.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.ComparisonMicroChartData should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ComparisonData.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getValue value} : float (default: 0)</li>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: sap.suite.ui.commons.InfoTileValueColor.Neutral)</li>\n<li>{@link #getDisplayValue displayValue} : string</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ComparisonData#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"since": "1.30",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the comparison data."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.30",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ComparisonData</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.ComparisonData</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ComparisonData</code>.<br/> itself. \n\nThe event is fired when the user chooses the comparison data."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.30",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.ComparisonData</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ComparisonData with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.30",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe semantic color of the value.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>displayValue</code>"
					},
					"since": "1.22",
					"description": "Getter for property <code>displayValue</code>.\nIf this property is set then it will be rendered instead of value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ComparisonData."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe comparison bar title.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe float value for comparison.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "sDisplayValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>displayValue</code>"
						}
					],
					"description": "Setter for property <code>displayValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ComparisonData",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is <code>0</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.CountingNavigationItem",
			"basename": "CountingNavigationItem",
			"resource": "sap/suite/ui/commons/CountingNavigationItem.js",
			"module": "sap/suite/ui/commons/CountingNavigationItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.ux3.NavigationItem",
			"description": "This control extends the sap.ui.ux3.NavigationItem control. This control can display the quantity of items on a corresponding content area. It also provides a rich tooltip that can appear and disappear after a certain delay.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "quantity",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Stores the number of content items associated with this navigation item. This number appears in brackets next to the navigation item name. For example, Employes (10000).",
						"methods": [
							"getQuantity",
							"setQuantity"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new CountingNavigationItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getQuantity quantity} : string</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.NavigationItem#constructor sap.ui.ux3.NavigationItem}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.CountingNavigationItem with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.CountingNavigationItem."
				},
				{
					"name": "getQuantity",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>quantity</code>"
					},
					"description": "Getter for property <code>quantity</code>.\nStores the number of content items associated with this navigation item. This number appears in brackets next to the navigation item name. For example, Employes (10000).\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setQuantity",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.CountingNavigationItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sQuantity",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>quantity</code>"
						}
					],
					"description": "Setter for property <code>quantity</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.DateRangeScroller",
			"basename": "DateRangeScroller",
			"resource": "sap/suite/ui/commons/DateRangeScroller.js",
			"module": "sap/suite/ui/commons/DateRangeScroller",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The DateRangeScroller provides a method to scroll through a series of time periods, each of which is represented by a starting date and an ending date, known as the date range. The user may scroll to the previous or next date range. Several predefined ranges are supported such as day, week, work week, month, and year.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Not Fiori."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"associations": [
					{
						"name": "ariaDescribedBy",
						"singularName": "ariaDescribedBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).",
						"methods": [
							"getAriaDescribedBy",
							"addAriaDescribedBy",
							"removeAriaDescribedBy",
							"removeAllAriaDescribedBy"
						]
					},
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "This event is fired whenever the date range is changed.",
						"parameters": {
							"dateRange": {
								"name": "dateRange",
								"type": "any",
								"description": "Object containing startDate and endDate Date properties signifying the start and ending dates of the currently selected range."
							}
						},
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DateRangeScroller.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : string | sap.ui.core.Control</li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : string | sap.ui.core.Control</li></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.DateRangeScroller#event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"dateRange": {
											"name": "dateRange",
											"type": "any",
											"optional": false,
											"description": "Object containing startDate and endDate Date properties signifying the start and ending dates of the currently selected range."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired whenever the date range is changed."
				}
			],
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "Id of a ariaDescribedBy which becomes an additional target of this <code>ariaDescribedBy</code> association.\n   Alternatively, a ariaDescribedBy instance may be given."
						}
					]
				},
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "Id of a ariaLabelledBy which becomes an additional target of this <code>ariaLabelledBy</code> association.\n   Alternatively, a ariaLabelledBy instance may be given."
						}
					]
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeScroller</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'change' event of this <code>sap.suite.ui.commons.DateRangeScroller</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.DateRangeScroller</code>.<br/> itself. \n\nThis event is fired whenever the date range is changed."
				},
				{
					"name": "decrementDateRange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Decrement the date range by a time period increment according to the the date range type and fire the dateChange event."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'change' event of this <code>sap.suite.ui.commons.DateRangeScroller</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.DateRangeScroller with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'dateRange' of type <code>any</code> Object containing startDate and endDate Date properties signifying the start and ending dates of the currently selected range.</li>\n</ul>"
				},
				{
					"name": "getAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "string[]"
					},
					"description": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "string[]"
					},
					"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
				},
				{
					"name": "getDateRange",
					"visibility": "public",
					"returnValue": {
						"description": "The date range containing start and end Date."
					},
					"description": "Returns an object containing startDate and endDate set to the current start and end Date objects."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.DateRangeScroller."
				},
				{
					"name": "incrementDateRange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining."
					},
					"description": "Increment the date range by a time period increment according to the the date range type and fire the dateChange event."
				},
				{
					"name": "removeAllAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "an array with the ids of the removed elements (might be empty)"
					}
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "an array with the ids of the removed elements (might be empty)"
					}
				},
				{
					"name": "removeAriaDescribedBy",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the id of the removed ariaDescribedBy or null"
					},
					"parameters": [
						{
							"name": "vAriaDescribedBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaDescribedBy to remove or its index or id"
						}
					]
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the id of the removed ariaLabelledBy or null"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to remove or its index or id"
						}
					]
				},
				{
					"name": "setDateFormat",
					"visibility": "public",
					"parameters": [
						{
							"name": "oDateFormat",
							"type": "sap.ui.core.format.DateFormat",
							"optional": false
						}
					],
					"description": "Setter for dateFormat which is used for formating the dates If passed object is null or is of incorrect type, control's default formatting will be used."
				},
				{
					"name": "setDateRangeCustom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "dInitialDate",
							"type": "undefined",
							"optional": false,
							"description": "The initial date for the custom range."
						},
						{
							"name": "[iDuration=current\n               custom duration]",
							"type": "undefined",
							"optional": false,
							"description": "The number of days in the custom range, including the start date."
						}
					],
					"description": "Set a custom date range beginning with the specified start date that increments/decrements <code>iDuration</code> days at a time."
				},
				{
					"name": "setDateRangeDay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "dInitialDate",
							"type": "Date",
							"optional": false,
							"description": "The initial date."
						}
					],
					"description": "Set a date range equal to a single day, starting with the given initial date."
				},
				{
					"name": "setDateRangeMonth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "dInitialDate",
							"type": "Date",
							"optional": false,
							"description": "Any date that falls within the desired month."
						}
					],
					"description": "Set a date range that increments/decrements one calendar month at a time. The month date range begins on the first day of the month (beginning of the day) and ends on the\nlast day of the month (end of the day)."
				},
				{
					"name": "setDateRangeWeek",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "dInitialDate",
							"type": "Date",
							"optional": false,
							"description": "Any date that falls on the desired week. Start/end dates will be adjusted according to the first day of the week."
						},
						{
							"name": "oSettings",
							"type": "Object",
							"optional": true,
							"parameterProperties": {
								"duration": {
									"name": "duration",
									"type": "undefined",
									"optional": true,
									"defaultValue": 7,
									"description": "The number of days in the range with a minimum of 1 and maximum of 7."
								},
								"iFirstDayOfWeek": {
									"name": "iFirstDayOfWeek",
									"type": "undefined",
									"optional": true,
									"defaultValue": 1,
									"description": "The starting day for the range. Valid values are 0-6, with 0=Sunday and 6=Saturday."
								}
							}
						}
					],
					"description": "Set a date range that steps one week at a time. The starting date is set according to the first day of the week (default is Monday) and the initial date. For example, if the\nfirst day of the week is set to Tuesday and the initial date is Wednesday, January 9, 2013, then the starting date will be Tuesday, January 8, 2013.\n\nThe last day of the range is calculated by adding (duration - 1) days to the starting date."
				},
				{
					"name": "setDateRangeYear",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeScroller",
						"description": "<code>this</code> to allow method chaining."
					},
					"parameters": [
						{
							"name": "dInitialDate",
							"type": "Date",
							"optional": false,
							"description": "Any date that falls within the desired year."
						}
					],
					"description": "Set a date range that increments/decrements one calendar year at a time. The year date range begins on the first day of the year (beginning of the day) and ends on the last\nday of the year (end of the day)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.DateRangeSlider",
			"basename": "DateRangeSlider",
			"resource": "sap/suite/ui/commons/DateRangeSlider.js",
			"module": "sap/suite/ui/commons/DateRangeSlider",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Not Fiori."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Width of the horizontal date range slider.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "This property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "This property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "This property switches the visible state of the control. Invisible date range slider are not rendered.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "showBubbles",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Property to show or hide bubbles. Default is true.",
						"methods": [
							"getShowBubbles",
							"setShowBubbles"
						]
					},
					{
						"name": "smallStepWidth",
						"type": "float",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The grips of the control can only be moved in steps of this width.",
						"methods": [
							"getSmallStepWidth",
							"setSmallStepWidth"
						]
					},
					{
						"name": "totalUnits",
						"type": "int",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Number of units between ticks.",
						"methods": [
							"getTotalUnits",
							"setTotalUnits"
						]
					},
					{
						"name": "stepLabels",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Display a date label above each tick.",
						"methods": [
							"getStepLabels",
							"setStepLabels"
						]
					},
					{
						"name": "labels",
						"type": "string[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Labels to be displayed instead of dates.",
						"methods": [
							"getLabels",
							"setLabels"
						]
					},
					{
						"name": "min",
						"type": "object",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "Minimum date for the slider.",
						"methods": [
							"getMin",
							"setMin"
						]
					},
					{
						"name": "max",
						"type": "object",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "Maximum date for the slider.",
						"methods": [
							"getMax",
							"setMax"
						]
					},
					{
						"name": "value",
						"type": "object",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "Date value of the left grip.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "value2",
						"type": "object",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "Date value of the right grip.",
						"methods": [
							"getValue2",
							"setValue2"
						]
					},
					{
						"name": "pinGrip",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Pin the left grip so that user cannot move it with the keyboard or mouse.",
						"methods": [
							"getPinGrip",
							"setPinGrip"
						]
					},
					{
						"name": "pinGrip2",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Pin the right grip so that user cannot move it with the keyboard or mouse.",
						"methods": [
							"getPinGrip2",
							"setPinGrip2"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "This event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.",
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "liveChange",
						"visibility": "public",
						"description": "This live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.",
						"methods": [
							"attachLiveChange",
							"detachLiveChange",
							"fireLiveChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DateRangeSlider.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: '100%')</li>\n<li>{@link #getEnabled enabled} : boolean (default: true)</li>\n<li>{@link #getEditable editable} : boolean (default: true)</li>\n<li>{@link #getVisible visible} : boolean (default: true)</li>\n<li>{@link #getShowBubbles showBubbles} : boolean (default: true)</li>\n<li>{@link #getSmallStepWidth smallStepWidth} : float</li>\n<li>{@link #getTotalUnits totalUnits} : int</li>\n<li>{@link #getStepLabels stepLabels} : boolean (default: false)</li>\n<li>{@link #getLabels labels} : string[]</li>\n<li>{@link #getMin min} : object</li>\n<li>{@link #getMax max} : object</li>\n<li>{@link #getValue value} : object</li>\n<li>{@link #getValue2 value2} : object</li>\n<li>{@link #getPinGrip pinGrip} : boolean (default: false)</li>\n<li>{@link #getPinGrip2 pinGrip2} : boolean (default: false)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.DateRangeSlider#event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.DateRangeSlider#event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
				},
				{
					"name": "liveChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
				}
			],
			"methods": [
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'change' event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/> itself. \n\nThis event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
				},
				{
					"name": "attachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'liveChange' event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/> itself. \n\nThis live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'change' event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'liveChange' event of this <code>sap.suite.ui.commons.DateRangeSlider</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.DateRangeSlider with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event change to attached listeners."
				},
				{
					"name": "fireLiveChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event liveChange to attached listeners."
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>editable</code>"
					},
					"description": "Getter for property <code>editable</code>.\nThis property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enabled</code>"
					},
					"description": "Getter for property <code>enabled</code>.\nThis property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getLabels",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the value of property <code>labels</code>"
					},
					"description": "Getter for property <code>labels</code>.\nLabels to be displayed instead of dates.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMax",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>max</code>"
					},
					"description": "Getter for property <code>max</code>.\nMaximum date for the slider.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.DateRangeSlider."
				},
				{
					"name": "getMin",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>min</code>"
					},
					"description": "Getter for property <code>min</code>.\nMinimum date for the slider.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getPinGrip",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>pinGrip</code>"
					},
					"description": "Getter for property <code>pinGrip</code>.\nPin the left grip so that user cannot move it with the keyboard or mouse.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getPinGrip2",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>pinGrip2</code>"
					},
					"description": "Getter for property <code>pinGrip2</code>.\nPin the right grip so that user cannot move it with the keyboard or mouse.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getShowBubbles",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showBubbles</code>"
					},
					"description": "Getter for property <code>showBubbles</code>.\nProperty to show or hide bubbles. Default is true.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getSmallStepWidth",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>smallStepWidth</code>"
					},
					"description": "Getter for property <code>smallStepWidth</code>.\nThe grips of the control can only be moved in steps of this width.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getStepLabels",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>stepLabels</code>"
					},
					"description": "Getter for property <code>stepLabels</code>.\nDisplay a date label above each tick.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getTotalUnits",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>totalUnits</code>"
					},
					"description": "Getter for property <code>totalUnits</code>.\nNumber of units between ticks.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"description": "Date - date representing position of the grip"
					},
					"description": "Get value property for the control."
				},
				{
					"name": "getValue2",
					"visibility": "public",
					"returnValue": {
						"description": "Date - date representing position of the grip2"
					},
					"description": "Get value2 property for the control."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>visible</code>"
					},
					"description": "Getter for property <code>visible</code>.\nThis property switches the visible state of the control. Invisible date range slider are not rendered.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nWidth of the horizontal date range slider.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "setDateFormat",
					"visibility": "public",
					"parameters": [
						{
							"name": "oDateFormat",
							"type": "sap.ui.core.format.DateFormat",
							"optional": false
						}
					],
					"description": "Setter for dateFormat which is used to format the dates for Labels, bubble texts, and tool tips. If passed object is null or is of incorrect type,\n_oDateRangeSliderInternal's default formatting will be used."
				},
				{
					"name": "setDayGranularity",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining."
					},
					"description": "Set Date Range Slider Granularity to Day"
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"parameters": [
						{
							"name": "bEditable",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Set editable property for the DateRangeSlider"
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Set enabled property for the DateRangeSlider"
				},
				{
					"name": "setLabels",
					"visibility": "public",
					"parameters": [
						{
							"name": "aLabels",
							"type": "string[]",
							"optional": false
						}
					],
					"description": "Set labels property for the DateRangeSlider"
				},
				{
					"name": "setMax",
					"visibility": "public",
					"parameters": [
						{
							"name": "dMax",
							"type": "Date",
							"optional": false
						}
					],
					"description": "Set max property for the DateRangeSlider. This sets the maximum date for the slider."
				},
				{
					"name": "setMin",
					"visibility": "public",
					"parameters": [
						{
							"name": "dMin",
							"type": "Date",
							"optional": false
						}
					],
					"description": "Set min property for the DateRangeSlider. This sets the minimum date for the slider."
				},
				{
					"name": "setMonthGranularity",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSlider",
						"description": "<code>this</code> to allow method chaining."
					},
					"description": "Set Date Range Slider Granularity to Month"
				},
				{
					"name": "setPinGrip",
					"visibility": "public",
					"parameters": [
						{
							"name": "bPinGrip",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Set pinGrip property for the DateRangeSlider"
				},
				{
					"name": "setPinGrip2",
					"visibility": "public",
					"parameters": [
						{
							"name": "bPinGrip2",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Set pinGrip2 property for the DateRangeSlider"
				},
				{
					"name": "setShowBubbles",
					"visibility": "public",
					"parameters": [
						{
							"name": "bShowBubbles",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Set showBubbles property for the DateRangeSlider"
				},
				{
					"name": "setSmallStepWidth",
					"visibility": "public",
					"parameters": [
						{
							"name": "fSmallStepWidth",
							"type": "float",
							"optional": false
						}
					],
					"description": "Set smallStepWidth property for the DateRangeSlider"
				},
				{
					"name": "setStepLabels",
					"visibility": "public",
					"parameters": [
						{
							"name": "bStepLabels",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Set stepLabels property for the DateRangeSlider"
				},
				{
					"name": "setTotalUnits",
					"visibility": "public",
					"parameters": [
						{
							"name": "iTotalUnits",
							"type": "int",
							"optional": false
						}
					],
					"description": "Set totalUnits property for the DateRangeSlider"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "dValue",
							"type": "Date",
							"optional": false
						}
					],
					"description": "Set value property for the DateRangeSlider. This sets the value date for the slider."
				},
				{
					"name": "setValue2",
					"visibility": "public",
					"parameters": [
						{
							"name": "dValue2",
							"type": "Date",
							"optional": false
						}
					],
					"description": "Set value2 property for the DateRangeSlider. This sets the value2 date for the slider."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Set visible property for the DateRangeSlider"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"parameters": [
						{
							"name": "tWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false
						}
					],
					"description": "Set width property for the DateRangeSlider"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.DateRangeSliderInternal",
			"basename": "DateRangeSliderInternal",
			"resource": "sap/suite/ui/commons/DateRangeSliderInternal.js",
			"module": "sap/suite/ui/commons/DateRangeSliderInternal",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.RangeSlider",
			"description": "The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Not Fiori."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "showBubbles",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Property to show or hide bubbles. Default is true.",
						"methods": [
							"getShowBubbles",
							"setShowBubbles"
						]
					},
					{
						"name": "pinGrip",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Property to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.",
						"methods": [
							"getPinGrip",
							"setPinGrip"
						]
					},
					{
						"name": "pinGrip2",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Property to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.",
						"methods": [
							"getPinGrip2",
							"setPinGrip2"
						]
					}
				],
				"events": [
					{
						"name": "change",
						"visibility": "public",
						"description": "This event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.",
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					},
					{
						"name": "liveChange",
						"visibility": "public",
						"description": "This live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.",
						"methods": [
							"attachLiveChange",
							"detachLiveChange",
							"fireLiveChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DateRangeSliderInternal.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowBubbles showBubbles} : boolean (default: true)</li>\n<li>{@link #getPinGrip pinGrip} : boolean (default: false)</li>\n<li>{@link #getPinGrip2 pinGrip2} : boolean (default: false)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.DateRangeSliderInternal#event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.DateRangeSliderInternal#event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.RangeSlider#constructor sap.ui.commons.RangeSlider}\ncan be used as well."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
				},
				{
					"name": "liveChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
				}
			],
			"methods": [
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'change' event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/> itself. \n\nThis event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
				},
				{
					"name": "attachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'liveChange' event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/> itself. \n\nThis live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'change' event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'liveChange' event of this <code>sap.suite.ui.commons.DateRangeSliderInternal</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.DateRangeSliderInternal with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event change to attached listeners."
				},
				{
					"name": "fireLiveChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event liveChange to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.DateRangeSliderInternal."
				},
				{
					"name": "getPinGrip",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>pinGrip</code>"
					},
					"description": "Getter for property <code>pinGrip</code>.\nProperty to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getPinGrip2",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>pinGrip2</code>"
					},
					"description": "Getter for property <code>pinGrip2</code>.\nProperty to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getShowBubbles",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showBubbles</code>"
					},
					"description": "Getter for property <code>showBubbles</code>.\nProperty to show or hide bubbles. Default is true.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setPinGrip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPinGrip",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>pinGrip</code>"
						}
					],
					"description": "Setter for property <code>pinGrip</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setPinGrip2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPinGrip2",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>pinGrip2</code>"
						}
					],
					"description": "Setter for property <code>pinGrip2</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setShowBubbles",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DateRangeSliderInternal",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowBubbles",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showBubbles</code>"
						}
					],
					"description": "Setter for property <code>showBubbles</code>.\n\nDefault value is <code>true</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.DeltaMicroChart",
			"basename": "DeltaMicroChart",
			"resource": "sap/suite/ui/commons/DeltaMicroChart.js",
			"module": "sap/suite/ui/commons/DeltaMicroChart",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control displays a delta of two values as a chart.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.DeltaMicroChart should be used."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DeltaMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue1 value1} : float</li>\n<li>{@link #getValue2 value2} : float</li>\n<li>{@link #getTitle1 title1} : string</li>\n<li>{@link #getTitle2 title2} : string</li>\n<li>{@link #getDisplayValue1 displayValue1} : string</li>\n<li>{@link #getDisplayValue2 displayValue2} : string</li>\n<li>{@link #getDeltaDisplayValue deltaDisplayValue} : string</li>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: sap.suite.ui.commons.InfoTileValueColor.Neutral)</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.DeltaMicroChart#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the delta micro chart."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DeltaMicroChart</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.DeltaMicroChart</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.DeltaMicroChart</code>.<br/> itself. \n\nThe event is fired when the user chooses the delta micro chart."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.DeltaMicroChart</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.DeltaMicroChart with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe semantic color of the delta value.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getDeltaDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>deltaDisplayValue</code>"
					},
					"description": "Getter for property <code>deltaDisplayValue</code>.\nIf this property is set, it is rendered instead of a calculated delta.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getDisplayValue1",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>displayValue1</code>"
					},
					"description": "Getter for property <code>displayValue1</code>.\nIf this property is set, it is rendered instead of value1.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getDisplayValue2",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>displayValue2</code>"
					},
					"description": "Getter for property <code>displayValue2</code>.\nIf this property is set, it is rendered instead of value2.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.DeltaMicroChart."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nThe size of the chart. If is not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getTitle1",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title1</code>"
					},
					"description": "Getter for property <code>title1</code>.\nThe first value title.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitle2",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title2</code>"
					},
					"description": "Getter for property <code>title2</code>.\nThe second value title.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValue1",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>value1</code>"
					},
					"description": "Getter for property <code>value1</code>.\nThe first value for delta calculation.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValue2",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>value2</code>"
					},
					"description": "Getter for property <code>value2</code>.\nThe second value for delta calculation.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nThe width of the chart.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setDeltaDisplayValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDeltaDisplayValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>deltaDisplayValue</code>"
						}
					],
					"description": "Setter for property <code>deltaDisplayValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDisplayValue1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayValue1",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>displayValue1</code>"
						}
					],
					"description": "Setter for property <code>displayValue1</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDisplayValue2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayValue2",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>displayValue2</code>"
						}
					],
					"description": "Setter for property <code>displayValue2</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setTitle1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle1",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title1</code>"
						}
					],
					"description": "Setter for property <code>title1</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle2",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title2</code>"
						}
					],
					"description": "Setter for property <code>title2</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValue1",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue1",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>value1</code>"
						}
					],
					"description": "Setter for property <code>value1</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValue2",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fValue2",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>value2</code>"
						}
					],
					"description": "Setter for property <code>value2</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeltaMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.DeviationIndicator",
			"basename": "DeviationIndicator",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "The marker for the deviation trend.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to sapui5.runtime."
			},
			"properties": [
				{
					"name": "Down",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The actual value is less than the target value."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "No value."
				},
				{
					"name": "Up",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The actual value is more than the target value."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.DynamicContainer",
			"basename": "DynamicContainer",
			"resource": "sap/suite/ui/commons/DynamicContainer.js",
			"module": "sap/suite/ui/commons/DynamicContainer",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The control that displays multiple GenericTile controls as changing slides.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to openui5."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new DynamicContainer.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayTime displayTime} : int (default: 5000)</li>\n<li>{@link #getTransitionTime transitionTime} : int (default: 500)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.suite.ui.commons.GenericTile[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "addTile",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DynamicContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTile",
							"type": "sap.suite.ui.commons.GenericTile",
							"optional": false,
							"description": "the tile to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some tile <code>oTile</code> \nto the aggregation named <code>tiles</code>."
				},
				{
					"name": "destroyTiles",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DynamicContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the tiles in the aggregation \nnamed <code>tiles</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.DynamicContainer with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getDisplayTime",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>displayTime</code>"
					},
					"description": "Getter for property <code>displayTime</code>.\nThe time of the slide display in milliseconds.\n\nDefault value is <code>5000</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.DynamicContainer."
				},
				{
					"name": "getTiles",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile[]"
					},
					"description": "Getter for aggregation <code>tiles</code>.<br/>\nThe set of Generic Tiles to be shown in the control."
				},
				{
					"name": "getTransitionTime",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>transitionTime</code>"
					},
					"description": "Getter for property <code>transitionTime</code>.\nThe time of the slide changing in milliseconds.\n\nDefault value is <code>500</code>"
				},
				{
					"name": "indexOfTile",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTile",
							"type": "sap.suite.ui.commons.GenericTile",
							"optional": false,
							"description": "the tile whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.GenericTile</code> in the aggregation named <code>tiles</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertTile",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DynamicContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTile",
							"type": "sap.suite.ui.commons.GenericTile",
							"optional": false,
							"description": "the tile to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the tile should be inserted at; for \n            a negative value of <code>iIndex</code>, the tile is inserted at position 0; for a value \n            greater than the current size of the aggregation, the tile is inserted at \n            the last position"
						}
					],
					"description": "Inserts a tile into the aggregation named <code>tiles</code>."
				},
				{
					"name": "removeAllTiles",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>tiles</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeTile",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "the removed tile or null"
					},
					"parameters": [
						{
							"name": "vTile",
							"type": "int|string|sap.suite.ui.commons.GenericTile",
							"optional": false,
							"description": "the tile to remove or its index or id"
						}
					],
					"description": "Removes an tile from the aggregation named <code>tiles</code>."
				},
				{
					"name": "setDisplayTime",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DynamicContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iDisplayTime",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>displayTime</code>"
						}
					],
					"description": "Setter for property <code>displayTime</code>.\n\nDefault value is <code>5000</code>"
				},
				{
					"name": "setTransitionTime",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DynamicContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iTransitionTime",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>transitionTime</code>"
						}
					],
					"description": "Setter for property <code>transitionTime</code>.\n\nDefault value is <code>500</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.FacetOverview",
			"basename": "FacetOverview",
			"resource": "sap/suite/ui/commons/FacetOverview.js",
			"module": "sap/suite/ui/commons/FacetOverview",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control is used in UnifiedThingInspector to display the preview of the facet content.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This property is shown in the upper left part of control.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "quantity",
						"type": "int",
						"defaultValue": -1,
						"group": "Misc",
						"visibility": "public",
						"description": "Displays a label with the number of items in the right part of the control.",
						"methods": [
							"getQuantity",
							"setQuantity"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the width of the control. By default, the value is empty and the control inhertis the size from its content.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "10rem",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.",
						"deprecated": {
							"since": "1.17.1",
							"text": "This property was replaced by heightType property."
						},
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "rowSpan",
						"type": "int",
						"defaultValue": 1,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines the number of rows that the control represents in an external layout.",
						"deprecated": {
							"since": "1.17.1",
							"text": "It is not used any more for the laoyut calculations in UnifiedThingInspector."
						},
						"methods": [
							"getRowSpan",
							"setRowSpan"
						]
					},
					{
						"name": "heightType",
						"type": "sap.suite.ui.commons.FacetOverviewHeight",
						"defaultValue": "None",
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.",
						"methods": [
							"getHeightType",
							"setHeightType"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The content that appears in the left part of the control.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control.",
						"parameters": {
							"id": {
								"name": "id",
								"type": "string",
								"description": "The control ID."
							}
						},
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					},
					{
						"name": "heightChange",
						"visibility": "public",
						"description": "This event is fired when a new value to the heightType or height property is set.",
						"methods": [
							"attachHeightChange",
							"detachHeightChange",
							"fireHeightChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FacetOverview.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getQuantity quantity} : int (default: -1)</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 'auto')</li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '10rem')</li>\n<li>{@link #getRowSpan rowSpan} : int (default: 1)</li>\n<li>{@link #getHeightType heightType} : sap.suite.ui.commons.FacetOverviewHeight (default: sap.suite.ui.commons.FacetOverviewHeight.None)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.FacetOverview#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.FacetOverview#event:heightChange heightChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "heightChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when a new value to the heightType or height property is set."
				},
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"id": {
											"name": "id",
											"type": "string",
											"optional": false,
											"description": "The control ID."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control."
				}
			],
			"methods": [
				{
					"name": "attachHeightChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FacetOverview</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'heightChange' event of this <code>sap.suite.ui.commons.FacetOverview</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.FacetOverview</code>.<br/> itself. \n\nThis event is fired when a new value to the heightType or height property is set."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FacetOverview</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.FacetOverview</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.FacetOverview</code>.<br/> itself. \n\nThe event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "detachHeightChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'heightChange' event of this <code>sap.suite.ui.commons.FacetOverview</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.FacetOverview</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.FacetOverview with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireHeightChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event heightChange to attached listeners."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'id' of type <code>string</code> The control ID.</li>\n</ul>"
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nThe content that appears in the left part of the control."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nDefines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.\n\nDefault value is <code>10rem</code>",
					"deprecated": {
						"since": "1.17.1",
						"text": "This property was replaced by heightType property."
					}
				},
				{
					"name": "getHeightType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverviewHeight",
						"description": "the value of property <code>heightType</code>"
					},
					"description": "Getter for property <code>heightType</code>.\nIndicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.\n\nDefault value is <code>None</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.FacetOverview."
				},
				{
					"name": "getQuantity",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>quantity</code>"
					},
					"description": "Getter for property <code>quantity</code>.\nDisplays a label with the number of items in the right part of the control.\n\nDefault value is <code>-1</code>"
				},
				{
					"name": "getRowSpan",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>rowSpan</code>"
					},
					"description": "Getter for property <code>rowSpan</code>.\nDefines the number of rows that the control represents in an external layout.\n\nDefault value is <code>1</code>",
					"deprecated": {
						"since": "1.17.1",
						"text": "It is not used any more for the laoyut calculations in UnifiedThingInspector."
					}
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThis property is shown in the upper left part of control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nDefines the width of the control. By default, the value is empty and the control inhertis the size from its content.\n\nDefault value is <code>auto</code>"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is <code>10rem</code>",
					"deprecated": {
						"since": "1.17.1",
						"text": "This property was replaced by heightType property."
					}
				},
				{
					"name": "setHeightType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeightType",
							"type": "sap.suite.ui.commons.FacetOverviewHeight",
							"optional": false,
							"description": "new value for property <code>heightType</code>"
						}
					],
					"description": "Setter for property <code>heightType</code>.\n\nDefault value is <code>None</code>"
				},
				{
					"name": "setQuantity",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iQuantity",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>quantity</code>"
						}
					],
					"description": "Setter for property <code>quantity</code>.\n\nDefault value is <code>-1</code>"
				},
				{
					"name": "setRowSpan",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iRowSpan",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>rowSpan</code>"
						}
					],
					"description": "Setter for property <code>rowSpan</code>.\n\nDefault value is <code>1</code>",
					"deprecated": {
						"since": "1.17.1",
						"text": "It is not used any more for the laoyut calculations in UnifiedThingInspector."
					}
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is <code>auto</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.FacetOverviewHeight",
			"basename": "FacetOverviewHeight",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible FacetOverview height settings.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"properties": [
				{
					"name": "Auto",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Content based height"
				},
				{
					"name": "L",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Large height"
				},
				{
					"name": "M",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Medium height"
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "No value. The height of the control is defined by depricated height property."
				},
				{
					"name": "S",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Small height"
				},
				{
					"name": "XL",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Extra Large height"
				},
				{
					"name": "XS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Extra small height"
				},
				{
					"name": "XXL",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Extra extra large height"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.FeedItem",
			"basename": "FeedItem",
			"resource": "sap/suite/ui/commons/FeedItem.js",
			"module": "sap/suite/ui/commons/FeedItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "This element represents a news feed item.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Generic Tile should be used instead."
			},
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The title of the feed item.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "image",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The background image for the feed item.",
						"methods": [
							"getImage",
							"setImage"
						]
					},
					{
						"name": "link",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The target location of the feed item.",
						"methods": [
							"getLink",
							"setLink"
						]
					},
					{
						"name": "source",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The source of the feed item.",
						"methods": [
							"getSource",
							"setSource"
						]
					},
					{
						"name": "publicationDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The date the feed was published.",
						"methods": [
							"getPublicationDate",
							"setPublicationDate"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FeedItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getImage image} : sap.ui.core.URI</li>\n<li>{@link #getLink link} : sap.ui.core.URI</li>\n<li>{@link #getSource source} : string</li>\n<li>{@link #getPublicationDate publicationDate} : object</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.FeedItem with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>image</code>"
					},
					"description": "Getter for property <code>image</code>.\nThe background image for the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>link</code>"
					},
					"description": "Getter for property <code>link</code>.\nThe target location of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.FeedItem."
				},
				{
					"name": "getPublicationDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>publicationDate</code>"
					},
					"description": "Getter for property <code>publicationDate</code>.\nThe date the feed was published.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getSource",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>source</code>"
					},
					"description": "Getter for property <code>source</code>.\nThe source of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe title of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setImage",
					"visibility": "public",
					"parameters": [
						{
							"name": "oImage",
							"type": "object",
							"optional": false
						}
					],
					"description": "validate the url first and then set the image property"
				},
				{
					"name": "setLink",
					"visibility": "public",
					"parameters": [
						{
							"name": "sLink",
							"type": "string",
							"optional": false
						}
					],
					"description": "validate the url first and then set the link property"
				},
				{
					"name": "setPublicationDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPublicationDate",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>publicationDate</code>"
						}
					],
					"description": "Setter for property <code>publicationDate</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSource",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSource",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>source</code>"
						}
					],
					"description": "Setter for property <code>source</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.FeedItemHeader",
			"basename": "FeedItemHeader",
			"resource": "sap/suite/ui/commons/FeedItemHeader.js",
			"module": "sap/suite/ui/commons/FeedItemHeader",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.ListItemBase",
			"description": "This control displays feed item header information.",
			"deprecated": {
				"since": "1.25",
				"text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The title of the feed item.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "image",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The image associated with the feed item.",
						"methods": [
							"getImage",
							"setImage"
						]
					},
					{
						"name": "link",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The target location of the feed item.",
						"methods": [
							"getLink",
							"setLink"
						]
					},
					{
						"name": "source",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The source of the feed item.",
						"methods": [
							"getSource",
							"setSource"
						]
					},
					{
						"name": "publicationDate",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The date the feed item was published.",
						"methods": [
							"getPublicationDate",
							"setPublicationDate"
						]
					},
					{
						"name": "description",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The description of the feed item.",
						"methods": [
							"getDescription",
							"setDescription"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FeedItemHeader.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getImage image} : sap.ui.core.URI</li>\n<li>{@link #getLink link} : sap.ui.core.URI</li>\n<li>{@link #getSource source} : string</li>\n<li>{@link #getPublicationDate publicationDate} : object</li>\n<li>{@link #getDescription description} : string</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.FeedItemHeader with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>description</code>"
					},
					"description": "Getter for property <code>description</code>.\nThe description of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>image</code>"
					},
					"description": "Getter for property <code>image</code>.\nThe image associated with the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>link</code>"
					},
					"description": "Getter for property <code>link</code>.\nThe target location of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.FeedItemHeader."
				},
				{
					"name": "getPublicationDate",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>publicationDate</code>"
					},
					"description": "Getter for property <code>publicationDate</code>.\nThe date the feed item was published.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getSource",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>source</code>"
					},
					"description": "Getter for property <code>source</code>.\nThe source of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe title of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItemHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>description</code>"
						}
					],
					"description": "Setter for property <code>description</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setImage",
					"visibility": "public",
					"parameters": [
						{
							"name": "sImageUri",
							"type": "String",
							"optional": false
						}
					],
					"description": "Sets the specified image URI if it is valid, otherwise an error messsage is logged."
				},
				{
					"name": "setLink",
					"visibility": "public",
					"parameters": [
						{
							"name": "sLinkUri",
							"type": "String",
							"optional": false
						}
					],
					"description": "Sets the specified link URL if it is valid, otherwise an error messsage is logged."
				},
				{
					"name": "setPublicationDate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItemHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPublicationDate",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>publicationDate</code>"
						}
					],
					"description": "Setter for property <code>publicationDate</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSource",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItemHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSource",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>source</code>"
						}
					],
					"description": "Setter for property <code>source</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItemHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.FeedTile",
			"basename": "FeedTile",
			"resource": "sap/suite/ui/commons/FeedTile.js",
			"module": "sap/suite/ui/commons/FeedTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control displays news feeds.",
			"deprecated": {
				"since": "1.25",
				"text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "displayDuration",
						"type": "int",
						"defaultValue": 5,
						"group": "Misc",
						"visibility": "public",
						"description": "The length of time in seconds the control displays each feed item. Default value is 5 seconds.",
						"methods": [
							"getDisplayDuration",
							"setDisplayDuration"
						]
					},
					{
						"name": "displayArticleImage",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "To display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.",
						"methods": [
							"getDisplayArticleImage",
							"setDisplayArticleImage"
						]
					},
					{
						"name": "source",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The source of the feed item.",
						"methods": [
							"getSource",
							"setSource"
						]
					},
					{
						"name": "defaultImages",
						"type": "sap.ui.core.URI[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A list of default images that is cycled by the control when no image is available for a feed item or when no feed items exist. After a random image is displayed first time, control cycles through this list of images.",
						"methods": [
							"getDefaultImages",
							"setDefaultImages"
						]
					}
				],
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.suite.ui.commons.FeedItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The feed items the control cycles through.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event fired when the user clicks on the control.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new FeedTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayDuration displayDuration} : int (default: 5)</li>\n<li>{@link #getDisplayArticleImage displayArticleImage} : boolean (default: true)</li>\n<li>{@link #getSource source} : string</li>\n<li>{@link #getDefaultImages defaultImages} : sap.ui.core.URI[]</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.commons.FeedItem[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.FeedTile#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event fired when the user clicks on the control."
				}
			],
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.commons.FeedItem",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item <code>oItem</code> \nto the aggregation named <code>items</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FeedTile</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.FeedTile</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.FeedTile</code>.<br/> itself. \n\nThe event fired when the user clicks on the control."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation \nnamed <code>items</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.FeedTile</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.FeedTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getDefaultImages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI[]",
						"description": "the value of property <code>defaultImages</code>"
					},
					"description": "Getter for property <code>defaultImages</code>.\nA list of default images that is cycled by the control when no image is available for a feed item or when no feed items exist. After a random image is displayed first time, control cycles through this list of images.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getDisplayArticleImage",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>displayArticleImage</code>"
					},
					"description": "Getter for property <code>displayArticleImage</code>.\nTo display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getDisplayDuration",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>displayDuration</code>"
					},
					"description": "Getter for property <code>displayDuration</code>.\nThe length of time in seconds the control displays each feed item. Default value is 5 seconds.\n\nDefault value is <code>5</code>"
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItem[]"
					},
					"description": "Getter for aggregation <code>items</code>.<br/>\nThe feed items the control cycles through."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.FeedTile."
				},
				{
					"name": "getSource",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>source</code>"
					},
					"description": "Getter for property <code>source</code>.\nThe source of the feed item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.commons.FeedItem",
							"optional": false,
							"description": "the item whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.FeedItem</code> in the aggregation named <code>items</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.commons.FeedItem",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for \n            a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value \n            greater than the current size of the aggregation, the item is inserted at \n            the last position"
						}
					],
					"description": "Inserts a item into the aggregation named <code>items</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItem[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>items</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedItem",
						"description": "the removed item or null"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.suite.ui.commons.FeedItem",
							"optional": false,
							"description": "the item to remove or its index or id"
						}
					],
					"description": "Removes an item from the aggregation named <code>items</code>."
				},
				{
					"name": "setDefaultImages",
					"visibility": "public",
					"parameters": [
						{
							"name": "oDefaultImages",
							"type": "object[]",
							"optional": false
						}
					],
					"description": "Validate the array of URI first and then set the defaultImages property"
				},
				{
					"name": "setDisplayArticleImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplayArticleImage",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>displayArticleImage</code>"
						}
					],
					"description": "Setter for property <code>displayArticleImage</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setDisplayDuration",
					"visibility": "public",
					"parameters": [
						{
							"name": "iDisplayDuration",
							"type": "int",
							"optional": false
						}
					],
					"description": "Set displayDuration property for the control"
				},
				{
					"name": "setSource",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FeedTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSource",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>source</code>"
						}
					],
					"description": "Setter for property <code>source</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "stageModel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oModel",
							"type": "undefined",
							"optional": false,
							"description": "Model of new feed items."
						}
					],
					"description": "Set a new model of feed items, such as when a feed aggregator has collected the latest feed items. This model is staged (not immediately set on the control) to avoid\nre-rendering before the currently displayed article is faded out. Therefore a smooth transition between the display of feed items is always maintained."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.FrameType",
			"basename": "FrameType",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible frame types.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to openUI5."
			},
			"properties": [
				{
					"name": "Auto",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The Auto frame type that adjusts the size of the control to the content."
				},
				{
					"name": "OneByOne",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The 1x1 frame type."
				},
				{
					"name": "TwoByOne",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The 2x1 frame type."
				},
				{
					"name": "TwoThirds",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The 2/3 frame type."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.GenericTile",
			"basename": "GenericTile",
			"resource": "sap/suite/ui/commons/GenericTile.js",
			"module": "sap/suite/ui/commons/GenericTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The tile control that displays the title, description, and customizable main area.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to openui5."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new GenericTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeader header} : string</li>\n<li>{@link #getSubheader subheader} : string</li>\n<li>{@link #getFailedText failedText} : string</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getFrameType frameType} : sap.suite.ui.commons.FrameType (default: sap.suite.ui.commons.FrameType.OneByOne)</li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI</li>\n<li>{@link #getHeaderImage headerImage} : sap.ui.core.URI</li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: sap.suite.ui.commons.LoadState.Loaded)</li>\n<li>{@link #getImageDescription imageDescription} : string</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getTileContent tileContent} : sap.suite.ui.commons.TileContent[]</li>\n<li>{@link #getIcon icon} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.GenericTile#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the tile."
				}
			],
			"methods": [
				{
					"name": "addTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTileContent",
							"type": "sap.suite.ui.commons.TileContent",
							"optional": false,
							"description": "the tileContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some tileContent <code>oTileContent</code> \nto the aggregation named <code>tileContent</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.GenericTile</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.GenericTile</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.GenericTile</code>.<br/> itself. \n\nThe event is fired when the user chooses the tile."
				},
				{
					"name": "destroyIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the icon in the aggregation \nnamed <code>icon</code>."
				},
				{
					"name": "destroyTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the tileContent in the aggregation \nnamed <code>tileContent</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.GenericTile</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.GenericTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getBackgroundImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>backgroundImage</code>"
					},
					"description": "Getter for property <code>backgroundImage</code>.\nThe URI of the background image.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFailedText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>failedText</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>failedText</code>.\nThe message that appears when the control is in the Failed state.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFrameType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FrameType",
						"description": "the value of property <code>frameType</code>"
					},
					"description": "Getter for property <code>frameType</code>.\nThe frame type: 1x1 or 2x1.\n\nDefault value is <code>OneByOne</code>"
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>header</code>"
					},
					"description": "Getter for property <code>header</code>.\nThe header of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getHeaderImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>headerImage</code>"
					},
					"description": "Getter for property <code>headerImage</code>.\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>icon</code>.<br/>\nAn icon or image to be displayed in the control."
				},
				{
					"name": "getImageDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>imageDescription</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>imageDescription</code>.\nDescription of a header image that is used in the tooltip.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.GenericTile."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nThe size of the tile. If not set, then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LoadState",
						"description": "the value of property <code>state</code>"
					},
					"since": "1.22",
					"description": "Getter for property <code>state</code>.\nThe load status.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "getSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>subheader</code>"
					},
					"description": "Getter for property <code>subheader</code>.\nThe subheader of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent[]"
					},
					"description": "Getter for aggregation <code>tileContent</code>.<br/>\nThe switchable view that depends on the tile type."
				},
				{
					"name": "indexOfTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTileContent",
							"type": "sap.suite.ui.commons.TileContent",
							"optional": false,
							"description": "the tileContent whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.TileContent</code> in the aggregation named <code>tileContent</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTileContent",
							"type": "sap.suite.ui.commons.TileContent",
							"optional": false,
							"description": "the tileContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the tileContent should be inserted at; for \n            a negative value of <code>iIndex</code>, the tileContent is inserted at position 0; for a value \n            greater than the current size of the aggregation, the tileContent is inserted at \n            the last position"
						}
					],
					"description": "Inserts a tileContent into the aggregation named <code>tileContent</code>."
				},
				{
					"name": "removeAllTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>tileContent</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "the removed tileContent or null"
					},
					"parameters": [
						{
							"name": "vTileContent",
							"type": "int|string|sap.suite.ui.commons.TileContent",
							"optional": false,
							"description": "the tileContent to remove or its index or id"
						}
					],
					"description": "Removes an tileContent from the aggregation named <code>tileContent</code>."
				},
				{
					"name": "setBackgroundImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBackgroundImage",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>backgroundImage</code>"
						}
					],
					"description": "Setter for property <code>backgroundImage</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFailedText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "sFailedText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>failedText</code>"
						}
					],
					"description": "Setter for property <code>failedText</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFrameType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFrameType",
							"type": "sap.suite.ui.commons.FrameType",
							"optional": false,
							"description": "new value for property <code>frameType</code>"
						}
					],
					"description": "Setter for property <code>frameType</code>.\n\nDefault value is <code>OneByOne</code>"
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeader",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>header</code>"
						}
					],
					"description": "Setter for property <code>header</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setHeaderImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeaderImage",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>headerImage</code>"
						}
					],
					"description": "Setter for property <code>headerImage</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIcon",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>icon</code>."
				},
				{
					"name": "setImageDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "sImageDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>imageDescription</code>"
						}
					],
					"description": "Setter for property <code>imageDescription</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.LoadState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "setSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSubheader",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>subheader</code>"
						}
					],
					"description": "Setter for property <code>subheader</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.GenericTile2X2",
			"basename": "GenericTile2X2",
			"resource": "sap/suite/ui/commons/GenericTile2X2.js",
			"module": "sap/suite/ui/commons/GenericTile2X2",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The tile control that displays the title, description, and customizable main area.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "header",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The header of the tile.",
						"methods": [
							"getHeader",
							"setHeader"
						]
					},
					{
						"name": "subheader",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The subheader of the tile.",
						"methods": [
							"getSubheader",
							"setSubheader"
						]
					},
					{
						"name": "failedText",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The message that appears when the control is in the Failed state.",
						"methods": [
							"getFailedText",
							"setFailedText"
						]
					},
					{
						"name": "size",
						"type": "sap.suite.ui.commons.InfoTileSize",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "The size of the tile. If not set, then the default size is applied based on the device tile.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "backgroundImage",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The URI of the background image.",
						"methods": [
							"getBackgroundImage",
							"setBackgroundImage"
						]
					},
					{
						"name": "headerImage",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.",
						"methods": [
							"getHeaderImage",
							"setHeaderImage"
						]
					},
					{
						"name": "frameType",
						"type": "sap.suite.ui.commons.FrameType",
						"defaultValue": "OneByOne",
						"group": "Misc",
						"visibility": "public",
						"description": "The frame type: 1x1 or 2x1.",
						"methods": [
							"getFrameType",
							"setFrameType"
						]
					},
					{
						"name": "state",
						"type": "sap.suite.ui.commons.LoadState",
						"defaultValue": "Loaded",
						"group": "Misc",
						"visibility": "public",
						"description": "The load status.",
						"methods": [
							"getState",
							"setState"
						]
					},
					{
						"name": "imageDescription",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Description of a header image that is used in the tooltip.",
						"methods": [
							"getImageDescription",
							"setImageDescription"
						]
					}
				],
				"aggregations": [
					{
						"name": "tileContent",
						"singularName": "tileContent",
						"type": "sap.suite.ui.commons.TileContent2X2",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The switchable view that depends on the tile type.",
						"methods": [
							"getTileContent",
							"destroyTileContent",
							"insertTileContent",
							"addTileContent",
							"removeTileContent",
							"indexOfTileContent",
							"removeAllTileContent"
						]
					},
					{
						"name": "icon",
						"singularName": "icon",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "An icon or image to be displayed in the control.",
						"methods": [
							"getIcon",
							"destroyIcon",
							"setIcon"
						]
					},
					{
						"name": "titleText",
						"singularName": "titleText",
						"type": "sap.m.Text",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the title.",
						"methods": [
							"getTitleText",
							"destroyTitleText",
							"setTitleText"
						]
					},
					{
						"name": "failedMessageText",
						"singularName": "failedMessageText",
						"type": "sap.m.Text",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the message in the failed state.",
						"methods": [
							"getFailedMessageText",
							"destroyFailedMessageText",
							"setFailedMessageText"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the tile.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new GenericTile2X2.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeader header} : string</li>\n<li>{@link #getSubheader subheader} : string</li>\n<li>{@link #getFailedText failedText} : string</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI</li>\n<li>{@link #getHeaderImage headerImage} : sap.ui.core.URI</li>\n<li>{@link #getFrameType frameType} : sap.suite.ui.commons.FrameType (default: sap.suite.ui.commons.FrameType.OneByOne)</li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: sap.suite.ui.commons.LoadState.Loaded)</li>\n<li>{@link #getImageDescription imageDescription} : string</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getTileContent tileContent} : sap.suite.ui.commons.TileContent2X2[]</li>\n<li>{@link #getIcon icon} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.GenericTile2X2#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the tile."
				}
			],
			"methods": [
				{
					"name": "addTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTileContent",
							"type": "sap.suite.ui.commons.TileContent2X2",
							"optional": false,
							"description": "the tileContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some tileContent <code>oTileContent</code> \nto the aggregation named <code>tileContent</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.GenericTile2X2</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.GenericTile2X2</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.GenericTile2X2</code>.<br/> itself. \n\nThe event is fired when the user chooses the tile."
				},
				{
					"name": "destroyIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the icon in the aggregation \nnamed <code>icon</code>."
				},
				{
					"name": "destroyTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the tileContent in the aggregation \nnamed <code>tileContent</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.GenericTile2X2</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.GenericTile2X2 with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getBackgroundImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>backgroundImage</code>"
					},
					"description": "Getter for property <code>backgroundImage</code>.\nThe URI of the background image.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFailedText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>failedText</code>"
					},
					"description": "Getter for property <code>failedText</code>.\nThe message that appears when the control is in the Failed state.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFrameType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FrameType",
						"description": "the value of property <code>frameType</code>"
					},
					"description": "Getter for property <code>frameType</code>.\nThe frame type: 1x1 or 2x1.\n\nDefault value is <code>OneByOne</code>"
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>header</code>"
					},
					"description": "Getter for property <code>header</code>.\nThe header of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getHeaderImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>headerImage</code>"
					},
					"description": "Getter for property <code>headerImage</code>.\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>icon</code>.<br/>\nAn icon or image to be displayed in the control."
				},
				{
					"name": "getImageDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>imageDescription</code>"
					},
					"description": "Getter for property <code>imageDescription</code>.\nDescription of a header image that is used in the tooltip.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.GenericTile2X2."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nThe size of the tile. If not set, then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LoadState",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nThe load status.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "getSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>subheader</code>"
					},
					"description": "Getter for property <code>subheader</code>.\nThe subheader of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2[]"
					},
					"description": "Getter for aggregation <code>tileContent</code>.<br/>\nThe switchable view that depends on the tile type."
				},
				{
					"name": "indexOfTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTileContent",
							"type": "sap.suite.ui.commons.TileContent2X2",
							"optional": false,
							"description": "the tileContent whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.TileContent2X2</code> in the aggregation named <code>tileContent</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTileContent",
							"type": "sap.suite.ui.commons.TileContent2X2",
							"optional": false,
							"description": "the tileContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the tileContent should be inserted at; for \n            a negative value of <code>iIndex</code>, the tileContent is inserted at position 0; for a value \n            greater than the current size of the aggregation, the tileContent is inserted at \n            the last position"
						}
					],
					"description": "Inserts a tileContent into the aggregation named <code>tileContent</code>."
				},
				{
					"name": "removeAllTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>tileContent</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeTileContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2",
						"description": "the removed tileContent or null"
					},
					"parameters": [
						{
							"name": "vTileContent",
							"type": "int|string|sap.suite.ui.commons.TileContent2X2",
							"optional": false,
							"description": "the tileContent to remove or its index or id"
						}
					],
					"description": "Removes an tileContent from the aggregation named <code>tileContent</code>."
				},
				{
					"name": "setBackgroundImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBackgroundImage",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>backgroundImage</code>"
						}
					],
					"description": "Setter for property <code>backgroundImage</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFailedText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFailedText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>failedText</code>"
						}
					],
					"description": "Setter for property <code>failedText</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFrameType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFrameType",
							"type": "sap.suite.ui.commons.FrameType",
							"optional": false,
							"description": "new value for property <code>frameType</code>"
						}
					],
					"description": "Setter for property <code>frameType</code>.\n\nDefault value is <code>OneByOne</code>"
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeader",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>header</code>"
						}
					],
					"description": "Setter for property <code>header</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setHeaderImage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeaderImage",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>headerImage</code>"
						}
					],
					"description": "Setter for property <code>headerImage</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIcon",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>icon</code>."
				},
				{
					"name": "setImageDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sImageDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>imageDescription</code>"
						}
					],
					"description": "Setter for property <code>imageDescription</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.LoadState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "setSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.GenericTile2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSubheader",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>subheader</code>"
						}
					],
					"description": "Setter for property <code>subheader</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.HarveyBallMicroChart",
			"basename": "HarveyBallMicroChart",
			"resource": "sap/suite/ui/commons/HarveyBallMicroChart.js",
			"module": "sap/suite/ui/commons/HarveyBallMicroChart",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This chart shows the part comparative to total.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.HarveyBallMicroChart should be used."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HarveyBallMicroChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTotal total} : float (default: 0)</li>\n<li>{@link #getTotalLabel totalLabel} : string</li>\n<li>{@link #getTotalScale totalScale} : string</li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)</li>\n<li>{@link #getShowTotal showTotal} : boolean (default: true)</li>\n<li>{@link #getShowFractions showFractions} : boolean (default: true)</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.commons.HarveyBallMicroChartItem[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.HarveyBallMicroChart#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the control."
				}
			],
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item <code>oItem</code> \nto the aggregation named <code>items</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.HarveyBallMicroChart</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.HarveyBallMicroChart</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.HarveyBallMicroChart</code>.<br/> itself. \n\nThe event is fired when the user chooses the control."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation \nnamed <code>items</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.HarveyBallMicroChart</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChart with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the value of property <code>colorPalette</code>"
					},
					"description": "Getter for property <code>colorPalette</code>.\nThe color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "getFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>formattedLabel</code>"
					},
					"description": "Getter for property <code>formattedLabel</code>.\nIf set to true, the totalLabel parameter is considered as the combination of the total value and its scaling factor. The default value is false. It means that the total value and the scaling factor are defined separately by the total and the totalScale properties accordingly.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem[]"
					},
					"description": "Getter for aggregation <code>items</code>.<br/>\nThe pie chart slices."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.HarveyBallMicroChart."
				},
				{
					"name": "getShowFractions",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showFractions</code>"
					},
					"description": "Getter for property <code>showFractions</code>.\nIf it is set to true, the fraction values are displayed next to the chart. The default setting is true.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowTotal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showTotal</code>"
					},
					"description": "Getter for property <code>showTotal</code>.\nIf it is set to true, the total value is displayed next to the chart. The default setting is true.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nThe size of the chart. If it is not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getTotal",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>total</code>"
					},
					"description": "Getter for property <code>total</code>.\nThe total value. This is taken as 360 degrees value on the chart.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "getTotalLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>totalLabel</code>"
					},
					"description": "Getter for property <code>totalLabel</code>.\nThe total label. If specified, it is displayed instead of the total value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTotalScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>totalScale</code>"
					},
					"description": "Getter for property <code>totalScale</code>.\nThe scaling factor that is displayed next to the total value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
							"optional": false,
							"description": "the item whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.HarveyBallMicroChartItem</code> in the aggregation named <code>items</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for \n            a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value \n            greater than the current size of the aggregation, the item is inserted at \n            the last position"
						}
					],
					"description": "Inserts a item into the aggregation named <code>items</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>items</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
						"description": "the removed item or null"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.suite.ui.commons.HarveyBallMicroChartItem",
							"optional": false,
							"description": "the item to remove or its index or id"
						}
					],
					"description": "Removes an item from the aggregation named <code>items</code>."
				},
				{
					"name": "setColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "aColorPalette",
							"type": "string[]",
							"optional": false,
							"description": "new value for property <code>colorPalette</code>"
						}
					],
					"description": "Setter for property <code>colorPalette</code>.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "setFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFormattedLabel",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>formattedLabel</code>"
						}
					],
					"description": "Setter for property <code>formattedLabel</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setShowFractions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowFractions",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showFractions</code>"
						}
					],
					"description": "Setter for property <code>showFractions</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowTotal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowTotal",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showTotal</code>"
						}
					],
					"description": "Setter for property <code>showTotal</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setTotal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fTotal",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>total</code>"
						}
					],
					"description": "Setter for property <code>total</code>.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "setTotalLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTotalLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>totalLabel</code>"
						}
					],
					"description": "Setter for property <code>totalLabel</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTotalScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTotalScale",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>totalScale</code>"
						}
					],
					"description": "Setter for property <code>totalScale</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.HarveyBallMicroChartItem",
			"basename": "HarveyBallMicroChartItem",
			"resource": "sap/suite/ui/commons/HarveyBallMicroChartItem.js",
			"module": "sap/suite/ui/commons/HarveyBallMicroChartItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The configuration of the slice on the pie chart.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.HarveyBallMicroChartItem should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HarveyBallMicroChartItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: sap.suite.ui.commons.InfoTileValueColor.Neutral)</li>\n<li>{@link #getFraction fraction} : float (default: 0)</li>\n<li>{@link #getFractionLabel fractionLabel} : string</li>\n<li>{@link #getFractionScale fractionScale} : string</li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChartItem with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe slice color.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>formattedLabel</code>"
					},
					"description": "Getter for property <code>formattedLabel</code>.\nIf set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getFraction",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>fraction</code>"
					},
					"description": "Getter for property <code>fraction</code>.\nThe fraction value.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "getFractionLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>fractionLabel</code>"
					},
					"description": "Getter for property <code>fractionLabel</code>.\nThe fraction label. If specified, it is displayed instead of the fraction value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFractionScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>fractionScale</code>"
					},
					"description": "Getter for property <code>fractionScale</code>.\nThe scaling factor that is displayed after the fraction value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.HarveyBallMicroChartItem."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setFormattedLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFormattedLabel",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>formattedLabel</code>"
						}
					],
					"description": "Setter for property <code>formattedLabel</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setFraction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fFraction",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>fraction</code>"
						}
					],
					"description": "Setter for property <code>fraction</code>.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "setFractionLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFractionLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>fractionLabel</code>"
						}
					],
					"description": "Setter for property <code>fractionLabel</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFractionScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HarveyBallMicroChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFractionScale",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>fractionScale</code>"
						}
					],
					"description": "Setter for property <code>fractionScale</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.HeaderCell",
			"basename": "HeaderCell",
			"resource": "sap/suite/ui/commons/HeaderCell.js",
			"module": "sap/suite/ui/commons/HeaderCell",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control contains 4 cells (West, North, East, South). It can display one or more controls in different layouts. Each aggregation must contain only one instance of HeaderCellItem.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "heigth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100px",
						"group": "Misc",
						"visibility": "public",
						"description": "Height of the HeaderCell control.",
						"deprecated": {
							"since": "1.20.2",
							"text": "Wrong property name"
						},
						"methods": [
							"getHeigth",
							"setHeigth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "106px",
						"group": "Misc",
						"visibility": "public",
						"description": "Height of the HeaderCell control.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "west",
						"singularName": "west",
						"type": "sap.suite.ui.commons.HeaderCellItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Objecth that contains control to render in west area of the HeaderCell.",
						"methods": [
							"getWest",
							"destroyWest",
							"setWest"
						]
					},
					{
						"name": "north",
						"singularName": "north",
						"type": "sap.suite.ui.commons.HeaderCellItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Objecth that contains control to render in north area of the HeaderCell.",
						"methods": [
							"getNorth",
							"destroyNorth",
							"setNorth"
						]
					},
					{
						"name": "east",
						"singularName": "east",
						"type": "sap.suite.ui.commons.HeaderCellItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Objecth that contains control to render in east area of the HeaderCell.",
						"methods": [
							"getEast",
							"destroyEast",
							"setEast"
						]
					},
					{
						"name": "south",
						"singularName": "south",
						"type": "sap.suite.ui.commons.HeaderCellItem",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Objecth that contains control to render in south area of the HeaderCell.",
						"methods": [
							"getSouth",
							"destroySouth",
							"setSouth"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HeaderCell.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeigth heigth} : sap.ui.core.CSSSize (default: '100px')</li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '106px')</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getWest west} : sap.suite.ui.commons.HeaderCellItem</li>\n<li>{@link #getNorth north} : sap.suite.ui.commons.HeaderCellItem</li>\n<li>{@link #getEast east} : sap.suite.ui.commons.HeaderCellItem</li>\n<li>{@link #getSouth south} : sap.suite.ui.commons.HeaderCellItem</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyEast",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the east in the aggregation \nnamed <code>east</code>."
				},
				{
					"name": "destroyNorth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the north in the aggregation \nnamed <code>north</code>."
				},
				{
					"name": "destroySouth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the south in the aggregation \nnamed <code>south</code>."
				},
				{
					"name": "destroyWest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the west in the aggregation \nnamed <code>west</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.HeaderCell with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getEast",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCellItem"
					},
					"description": "Getter for aggregation <code>east</code>.<br/>\nObjecth that contains control to render in east area of the HeaderCell."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nHeight of the HeaderCell control.\n\nDefault value is <code>106px</code>"
				},
				{
					"name": "getHeigth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>heigth</code>"
					},
					"description": "Getter for property <code>heigth</code>.\nHeight of the HeaderCell control.\n\nDefault value is <code>100px</code>",
					"deprecated": {
						"since": "1.20.2",
						"text": "Wrong property name"
					}
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.HeaderCell."
				},
				{
					"name": "getNorth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCellItem"
					},
					"description": "Getter for aggregation <code>north</code>.<br/>\nObjecth that contains control to render in north area of the HeaderCell."
				},
				{
					"name": "getSouth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCellItem"
					},
					"description": "Getter for aggregation <code>south</code>.<br/>\nObjecth that contains control to render in south area of the HeaderCell."
				},
				{
					"name": "getWest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCellItem"
					},
					"description": "Getter for aggregation <code>west</code>.<br/>\nObjecth that contains control to render in west area of the HeaderCell."
				},
				{
					"name": "setEast",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oEast",
							"type": "sap.suite.ui.commons.HeaderCellItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>east</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is <code>106px</code>"
				},
				{
					"name": "setHeigth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeigth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>heigth</code>"
						}
					],
					"description": "Setter for property <code>heigth</code>.\n\nDefault value is <code>100px</code>",
					"deprecated": {
						"since": "1.20.2",
						"text": "Wrong property name"
					}
				},
				{
					"name": "setNorth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNorth",
							"type": "sap.suite.ui.commons.HeaderCellItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>north</code>."
				},
				{
					"name": "setSouth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSouth",
							"type": "sap.suite.ui.commons.HeaderCellItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>south</code>."
				},
				{
					"name": "setWest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCell",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oWest",
							"type": "sap.suite.ui.commons.HeaderCellItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>west</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.HeaderCellItem",
			"basename": "HeaderCellItem",
			"resource": "sap/suite/ui/commons/HeaderCellItem.js",
			"module": "sap/suite/ui/commons/HeaderCellItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Object that contains instance of control and infomation about height. It should be used inside sap.suite.ui.commons.HeaderCell",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Height of area to occupy by control.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Instance of UI5 Control that is used as content.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HeaderCellItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCellItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.HeaderCellItem with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nInstance of UI5 Control that is used as content."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nHeight of area to occupy by control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.HeaderCellItem."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCellItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderCellItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.HeaderContainer",
			"basename": "HeaderContainer",
			"resource": "sap/suite/ui/commons/HeaderContainer.js",
			"module": "sap/suite/ui/commons/HeaderContainer",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The container that provides a horizontal layout. It provides a horizontal scroll on the tablet and phone. On the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation. You can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control. Use Enter or Space to choose the control.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "scrollStep",
						"type": "int",
						"defaultValue": 300,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.",
						"methods": [
							"getScrollStep",
							"setScrollStep"
						]
					},
					{
						"name": "scrollTime",
						"type": "int",
						"defaultValue": 500,
						"group": "Misc",
						"visibility": "public",
						"description": "Scroll animation time in milliseconds.",
						"methods": [
							"getScrollTime",
							"setScrollTime"
						]
					},
					{
						"name": "showDividers",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.25",
						"description": "If set to true, shows dividers between scrollable items.",
						"methods": [
							"getShowDividers",
							"setShowDividers"
						]
					},
					{
						"name": "view",
						"type": "sap.suite.ui.commons.HeaderContainerView",
						"defaultValue": "Horizontal",
						"group": "Misc",
						"visibility": "public",
						"since": "1.25",
						"description": "The view of the HeaderContainer.",
						"methods": [
							"getView",
							"setView"
						]
					},
					{
						"name": "backgroundDesign",
						"type": "sap.m.BackgroundDesign",
						"defaultValue": "Transparent",
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"description": "Specifies the background color of the content. The visualization of the different options depends on the used theme.",
						"methods": [
							"getBackgroundDesign",
							"setBackgroundDesign"
						]
					}
				],
				"aggregations": [
					{
						"name": "scrollContainer",
						"singularName": "scrollContainer",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Scroll container for smooth scrolling on different platforms.",
						"methods": [
							"getScrollContainer",
							"destroyScrollContainer",
							"setScrollContainer"
						]
					},
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Items to add to HeaderContainer.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					},
					{
						"name": "buttonPrev",
						"singularName": "buttonPrev",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Button that allows to scroll to previous section.",
						"methods": [
							"getButtonPrev",
							"destroyButtonPrev",
							"setButtonPrev"
						]
					},
					{
						"name": "buttonNext",
						"singularName": "buttonNext",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Button that allows to scroll to next section.",
						"methods": [
							"getButtonNext",
							"destroyButtonNext",
							"setButtonNext"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HeaderContainer.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScrollStep scrollStep} : int (default: 300)</li>\n<li>{@link #getScrollTime scrollTime} : int (default: 500)</li>\n<li>{@link #getShowDividers showDividers} : boolean (default: true)</li>\n<li>{@link #getView view} : sap.suite.ui.commons.HeaderContainerView (default: sap.suite.ui.commons.HeaderContainerView.Horizontal)</li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: sap.m.BackgroundDesign.Transparent)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item <code>oItem</code> \nto the aggregation named <code>items</code>."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation \nnamed <code>items</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.HeaderContainer with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getBackgroundDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.BackgroundDesign",
						"description": "the value of property <code>backgroundDesign</code>"
					},
					"since": "1.38",
					"description": "Getter for property <code>backgroundDesign</code>.\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nDefault value is <code>Transparent</code>"
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Getter for aggregation <code>items</code>.<br/>\nItems to add to HeaderContainer."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.HeaderContainer."
				},
				{
					"name": "getScrollStep",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>scrollStep</code>"
					},
					"description": "Getter for property <code>scrollStep</code>.\nNumber of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.\n\nDefault value is <code>300</code>"
				},
				{
					"name": "getScrollTime",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>scrollTime</code>"
					},
					"description": "Getter for property <code>scrollTime</code>.\nScroll animation time in milliseconds.\n\nDefault value is <code>500</code>"
				},
				{
					"name": "getShowDividers",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showDividers</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>showDividers</code>.\nIf set to true, shows dividers between scrollable items.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainerView",
						"description": "the value of property <code>view</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>view</code>.\nThe view of the HeaderContainer.\n\nDefault value is <code>Horizontal</code>"
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the item whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation named <code>items</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for \n            a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value \n            greater than the current size of the aggregation, the item is inserted at \n            the last position"
						}
					],
					"description": "Inserts a item into the aggregation named <code>items</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>items</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed item or null"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the item to remove or its index or id"
						}
					],
					"description": "Removes an item from the aggregation named <code>items</code>."
				},
				{
					"name": "setBackgroundDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "oBackgroundDesign",
							"type": "sap.m.BackgroundDesign",
							"optional": false,
							"description": "new value for property <code>backgroundDesign</code>"
						}
					],
					"description": "Setter for property <code>backgroundDesign</code>.\n\nDefault value is <code>Transparent</code>"
				},
				{
					"name": "setScrollStep",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iScrollStep",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>scrollStep</code>"
						}
					],
					"description": "Setter for property <code>scrollStep</code>.\n\nDefault value is <code>300</code>"
				},
				{
					"name": "setScrollTime",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iScrollTime",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>scrollTime</code>"
						}
					],
					"description": "Setter for property <code>scrollTime</code>.\n\nDefault value is <code>500</code>"
				},
				{
					"name": "setShowDividers",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "bShowDividers",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showDividers</code>"
						}
					],
					"description": "Setter for property <code>showDividers</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.HeaderContainer",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "oView",
							"type": "sap.suite.ui.commons.HeaderContainerView",
							"optional": false,
							"description": "new value for property <code>view</code>"
						}
					],
					"description": "Setter for property <code>view</code>.\n\nDefault value is <code>Horizontal</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.HeaderContainerView",
			"basename": "HeaderContainerView",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "The list of possible HeaderContainer views.",
			"properties": [
				{
					"name": "Horizontal",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The horizontal orientation of the control."
				},
				{
					"name": "Vertical",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The vertical orientation of the control."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.InfoTile",
			"basename": "InfoTile",
			"resource": "sap/suite/ui/commons/InfoTile.js",
			"module": "sap/suite/ui/commons/InfoTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The tile control that displays the title, description, footer, and customizable main area.",
			"deprecated": {
				"since": "1.25",
				"text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "description",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Shows the description of the selected tile.",
						"methods": [
							"getDescription",
							"setDescription"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The title of the tile.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "footer",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The footer text of the tile.",
						"methods": [
							"getFooter",
							"setFooter"
						]
					},
					{
						"name": "size",
						"type": "sap.suite.ui.commons.InfoTileSize",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Updates the size of the tile. If not set then the default size is applied based on the device tile.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "state",
						"type": "sap.suite.ui.commons.LoadState",
						"defaultValue": "Loading",
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates the load status.",
						"methods": [
							"getState",
							"setState"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The switchable view that depends on the tile type.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					},
					{
						"name": "titleText",
						"singularName": "titleText",
						"type": "sap.m.Text",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the title.",
						"methods": [
							"getTitleText",
							"destroyTitleText",
							"setTitleText"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the tile.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new InfoTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string</li>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getFooter footer} : string</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: \"Auto\")</li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: sap.suite.ui.commons.LoadState.Loading)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.InfoTile#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the tile."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.InfoTile</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.InfoTile</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.InfoTile</code>.<br/> itself. \n\nThe event is fired when the user chooses the tile."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.InfoTile</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.InfoTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nThe switchable view that depends on the tile type."
				},
				{
					"name": "getDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>description</code>"
					},
					"description": "Getter for property <code>description</code>.\nShows the description of the selected tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFooter",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>footer</code>"
					},
					"description": "Getter for property <code>footer</code>.\nThe footer text of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.InfoTile."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>\"Auto\"</code>"
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LoadState",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nIndicates the load status.\n\nDefault value is <code>Loading</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe title of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>description</code>"
						}
					],
					"description": "Setter for property <code>description</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFooter",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>footer</code>"
						}
					],
					"description": "Setter for property <code>footer</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>\"Auto\"</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.LoadState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Loading</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.InfoTileSize",
			"basename": "InfoTileSize",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible PointTile size settings.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.m.InfoTileSize should be used."
			},
			"properties": [
				{
					"name": "Auto",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The size of the tile depends on the device it is running on. It is large on desktop, medium on tablet and small on phone."
				},
				{
					"name": "L",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Large size."
				},
				{
					"name": "M",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Medium size."
				},
				{
					"name": "S",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Small size."
				},
				{
					"name": "XS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Extra small size."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.InfoTileTextColor",
			"basename": "InfoTileTextColor",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible InfoTile text color settings.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.m.InfoTileTextColor should be used."
			},
			"properties": [
				{
					"name": "Critical",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Critical InfoTile text color."
				},
				{
					"name": "Negative",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Negative InfoTile text color."
				},
				{
					"name": "Positive",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Positive InfoTile text color."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.InfoTileValueColor",
			"basename": "InfoTileValueColor",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible InfoTile value color settings.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.m.InfoTileValueColor should be used."
			},
			"properties": [
				{
					"name": "Critical",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Critical InfoTile value color."
				},
				{
					"name": "Error",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Error InfoTile value color."
				},
				{
					"name": "Good",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Good InfoTile value color."
				},
				{
					"name": "Neutral",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Neutral InfoTile value color."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.JamContent",
			"basename": "JamContent",
			"resource": "sap/suite/ui/commons/JamContent.js",
			"module": "sap/suite/ui/commons/JamContent",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control displays the jam content text, subheader, and numeric value in a tile.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to openui5."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new JamContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getContentText contentText} : string</li>\n<li>{@link #getSubheader subheader} : string</li>\n<li>{@link #getValue value} : string</li>\n<li>{@link #getValueColor valueColor} : sap.suite.ui.commons.InfoTileValueColor</li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.JamContent#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the jam content."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.JamContent</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.JamContent</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.JamContent</code>.<br/> itself. \n\nThe event is fired when the user chooses the jam content."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.JamContent</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.JamContent with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getContentText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>contentText</code>"
					},
					"description": "Getter for property <code>contentText</code>.\nThe content text.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.JamContent."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>subheader</code>"
					},
					"description": "Getter for property <code>subheader</code>.\nThe subheader.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTruncateValueTo",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>truncateValueTo</code>"
					},
					"description": "Getter for property <code>truncateValueTo</code>.\nThe number of characters to display for the value property.\n\nDefault value is <code>4</code>"
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe actual value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>valueColor</code>"
					},
					"description": "Getter for property <code>valueColor</code>.\nThe semantic color of the value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContentText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContentText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>contentText</code>"
						}
					],
					"description": "Setter for property <code>contentText</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSubheader",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>subheader</code>"
						}
					],
					"description": "Setter for property <code>subheader</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTruncateValueTo",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iTruncateValueTo",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>truncateValueTo</code>"
						}
					],
					"description": "Setter for property <code>truncateValueTo</code>.\n\nDefault value is <code>4</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.JamContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oValueColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>valueColor</code>"
						}
					],
					"description": "Setter for property <code>valueColor</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.KpiTile",
			"basename": "KpiTile",
			"resource": "sap/suite/ui/commons/KpiTile.js",
			"module": "sap/suite/ui/commons/KpiTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control is used in UnifiedThingInspector to display object-related KPIs in a factsheet.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Numeric content or any other standard Fiori control should be used instead."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The Value field.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "description",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The Description field.",
						"methods": [
							"getDescription",
							"setDescription"
						]
					},
					{
						"name": "doubleFontSize",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If true, the value text will have 2 rem, if false - 1 rem.",
						"methods": [
							"getDoubleFontSize",
							"setDoubleFontSize"
						]
					},
					{
						"name": "valueUnit",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The percent sign, currency symbol, or unit for a value.",
						"methods": [
							"getValueUnit",
							"setValueUnit"
						]
					},
					{
						"name": "valueScale",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The scale of a value.",
						"methods": [
							"getValueScale",
							"setValueScale"
						]
					},
					{
						"name": "valueStatus",
						"type": "sap.suite.ui.commons.ValueStatus",
						"defaultValue": "Neutral",
						"group": "Misc",
						"visibility": "public",
						"description": "The status color of the value. Depending on the status the tile is displayed in different colors.",
						"methods": [
							"getValueStatus",
							"setValueStatus"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new KpiTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string</li>\n<li>{@link #getDescription description} : string</li>\n<li>{@link #getDoubleFontSize doubleFontSize} : boolean (default: true)</li>\n<li>{@link #getValueUnit valueUnit} : string</li>\n<li>{@link #getValueScale valueScale} : string</li>\n<li>{@link #getValueStatus valueStatus} : sap.suite.ui.commons.ValueStatus (default: sap.suite.ui.commons.ValueStatus.Neutral)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.KpiTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>description</code>"
					},
					"description": "Getter for property <code>description</code>.\nThe Description field.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getDoubleFontSize",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>doubleFontSize</code>"
					},
					"description": "Getter for property <code>doubleFontSize</code>.\nIf true, the value text will have 2 rem, if false - 1 rem.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.KpiTile."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe Value field.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValueScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>valueScale</code>"
					},
					"description": "Getter for property <code>valueScale</code>.\nThe scale of a value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValueStatus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ValueStatus",
						"description": "the value of property <code>valueStatus</code>"
					},
					"description": "Getter for property <code>valueStatus</code>.\nThe status color of the value. Depending on the status the tile is displayed in different colors.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getValueUnit",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>valueUnit</code>"
					},
					"description": "Getter for property <code>valueUnit</code>.\nThe percent sign, currency symbol, or unit for a value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>description</code>"
						}
					],
					"description": "Setter for property <code>description</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDoubleFontSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDoubleFontSize",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>doubleFontSize</code>"
						}
					],
					"description": "Setter for property <code>doubleFontSize</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValueScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueScale",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>valueScale</code>"
						}
					],
					"description": "Setter for property <code>valueScale</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValueStatus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oValueStatus",
							"type": "sap.suite.ui.commons.ValueStatus",
							"optional": false,
							"description": "new value for property <code>valueStatus</code>"
						}
					],
					"description": "Setter for property <code>valueStatus</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setValueUnit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueUnit",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>valueUnit</code>"
						}
					],
					"description": "Setter for property <code>valueUnit</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.LaunchTile",
			"basename": "LaunchTile",
			"resource": "sap/suite/ui/commons/LaunchTile.js",
			"module": "sap/suite/ui/commons/LaunchTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control launches a URL.",
			"deprecated": {
				"since": "1.25",
				"text": "Deprecated."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Descriptive title of the launch destination.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Icon associated with the launch destination.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "link",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The launch destination.",
						"methods": [
							"getLink",
							"setLink"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event fired when the user clicks on the control.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new LaunchTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getIcon icon} : sap.ui.core.URI</li>\n<li>{@link #getLink link} : sap.ui.core.URI</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.LaunchTile#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event fired when the user clicks on the control."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LaunchTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.LaunchTile</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.LaunchTile</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.LaunchTile</code>.<br/> itself. \n\nThe event fired when the user clicks on the control."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LaunchTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.LaunchTile</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.LaunchTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.LaunchTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>icon</code>"
					},
					"description": "Getter for property <code>icon</code>.\nIcon associated with the launch destination.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>link</code>"
					},
					"description": "Getter for property <code>link</code>.\nThe launch destination.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.LaunchTile."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nDescriptive title of the launch destination.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setLink",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LaunchTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLink",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>link</code>"
						}
					],
					"description": "Setter for property <code>link</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LaunchTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.LinkActionSheet",
			"basename": "LinkActionSheet",
			"resource": "sap/suite/ui/commons/LinkActionSheet.js",
			"module": "sap/suite/ui/commons/LinkActionSheet",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.ActionSheet",
			"description": "This control contains one or more sap.m.Button controls or sap.ui.commons.Link controls. The LinkActionSheet control is closed if the user chooses one of the buttons or links. It looks similar to sap.m.Dialog in iPhone and Android, and to sap.m.Popover in iPad.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"aggregations": [
					{
						"name": "items",
						"singularName": "item",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "These buttons or links are added to the content area in the LinkActionSheet control. If the user chooses a button or a link, the LinkActionSheet is closed before the event listener is called.",
						"methods": [
							"getItems",
							"destroyItems",
							"insertItem",
							"addItem",
							"removeItem",
							"indexOfItem",
							"removeAllItems"
						]
					}
				],
				"events": [
					{
						"name": "itemPress",
						"visibility": "public",
						"description": "The event is fired when the user chooses any item.",
						"parameters": {
							"item": {
								"name": "item",
								"type": "sap.ui.core.Control",
								"description": "The object that initiated the event."
							}
						},
						"methods": [
							"attachItemPress",
							"detachItemPress",
							"fireItemPress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new LinkActionSheet.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.LinkActionSheet#event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.m.ActionSheet#constructor sap.m.ActionSheet}\ncan be used as well."
			},
			"events": [
				{
					"name": "itemPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"item": {
											"name": "item",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The object that initiated the event."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the user chooses any item."
				}
			],
			"methods": [
				{
					"name": "addItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LinkActionSheet",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the item to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some item <code>oItem</code> \nto the aggregation named <code>items</code>."
				},
				{
					"name": "attachItemPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LinkActionSheet",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.LinkActionSheet</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'itemPress' event of this <code>sap.suite.ui.commons.LinkActionSheet</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.LinkActionSheet</code>.<br/> itself. \n\nThe event is fired when the user chooses any item."
				},
				{
					"name": "destroyItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LinkActionSheet",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the items in the aggregation \nnamed <code>items</code>."
				},
				{
					"name": "detachItemPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LinkActionSheet",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'itemPress' event of this <code>sap.suite.ui.commons.LinkActionSheet</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.LinkActionSheet with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireItemPress",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether to prevent the default action"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event itemPress to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\nExpects following event parameters:\n<ul>\n<li>'item' of type <code>sap.ui.core.Control</code> The object that initiated the event.</li>\n</ul>"
				},
				{
					"name": "getItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Getter for aggregation <code>items</code>.<br/>\nThese buttons or links are added to the content area in the LinkActionSheet control. If the user chooses a button or a link, the LinkActionSheet is closed before the event listener is called."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.LinkActionSheet."
				},
				{
					"name": "indexOfItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the item whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation named <code>items</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LinkActionSheet",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oItem",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the item to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the item should be inserted at; for \n            a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value \n            greater than the current size of the aggregation, the item is inserted at \n            the last position"
						}
					],
					"description": "Inserts a item into the aggregation named <code>items</code>."
				},
				{
					"name": "removeAllItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>items</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed item or null"
					},
					"parameters": [
						{
							"name": "vItem",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the item to remove or its index or id"
						}
					],
					"description": "Removes an item from the aggregation named <code>items</code>."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.LoadState",
			"basename": "LoadState",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of possible load states for LoadableView.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.m.LoadState should be used."
			},
			"properties": [
				{
					"name": "Disabled",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "LoadableView disabled to load the control."
				},
				{
					"name": "Failed",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "LoadableView failed to load the control."
				},
				{
					"name": "Loaded",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "LoadableView has loaded the control."
				},
				{
					"name": "Loading",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "LoadableView is loading the control."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.MicroAreaChart",
			"basename": "MicroAreaChart",
			"resource": "sap/suite/ui/commons/MicroAreaChart.js",
			"module": "sap/suite/ui/commons/MicroAreaChart",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control displays the history of values as a line mini chart or an area mini chart.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.AreaMicroChart should be used."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MicroAreaChart.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: '200px')</li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '190px')</li>\n<li>{@link #getMaxXValue maxXValue} : float</li>\n<li>{@link #getMinXValue minXValue} : float</li>\n<li>{@link #getMaxYValue maxYValue} : float</li>\n<li>{@link #getMinYValue minYValue} : float</li>\n<li>{@link #getView view} : sap.suite.ui.commons.MicroAreaChartView (default: sap.suite.ui.commons.MicroAreaChartView.Normal)</li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getChart chart} : sap.suite.ui.commons.MicroAreaChartItem</li>\n<li>{@link #getMaxThreshold maxThreshold} : sap.suite.ui.commons.MicroAreaChartItem</li>\n<li>{@link #getInnerMaxThreshold innerMaxThreshold} : sap.suite.ui.commons.MicroAreaChartItem</li>\n<li>{@link #getInnerMinThreshold innerMinThreshold} : sap.suite.ui.commons.MicroAreaChartItem</li>\n<li>{@link #getMinThreshold minThreshold} : sap.suite.ui.commons.MicroAreaChartItem</li>\n<li>{@link #getTarget target} : sap.suite.ui.commons.MicroAreaChartItem</li>\n<li>{@link #getFirstXLabel firstXLabel} : sap.suite.ui.commons.MicroAreaChartLabel</li>\n<li>{@link #getFirstYLabel firstYLabel} : sap.suite.ui.commons.MicroAreaChartLabel</li>\n<li>{@link #getLastXLabel lastXLabel} : sap.suite.ui.commons.MicroAreaChartLabel</li>\n<li>{@link #getLastYLabel lastYLabel} : sap.suite.ui.commons.MicroAreaChartLabel</li>\n<li>{@link #getMaxLabel maxLabel} : sap.suite.ui.commons.MicroAreaChartLabel</li>\n<li>{@link #getMinLabel minLabel} : sap.suite.ui.commons.MicroAreaChartLabel</li>\n<li>{@link #getLines lines} : sap.suite.ui.commons.MicroAreaChartItem[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.MicroAreaChart#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the micro area chart."
				}
			],
			"methods": [
				{
					"name": "addLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "oLine",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false,
							"description": "the line to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some line <code>oLine</code> \nto the aggregation named <code>lines</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.MicroAreaChart</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.MicroAreaChart</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.MicroAreaChart</code>.<br/> itself. \n\nThe event is fired when the user chooses the micro area chart."
				},
				{
					"name": "destroyChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the chart in the aggregation \nnamed <code>chart</code>."
				},
				{
					"name": "destroyFirstXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the firstXLabel in the aggregation \nnamed <code>firstXLabel</code>."
				},
				{
					"name": "destroyFirstYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the firstYLabel in the aggregation \nnamed <code>firstYLabel</code>."
				},
				{
					"name": "destroyInnerMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the innerMaxThreshold in the aggregation \nnamed <code>innerMaxThreshold</code>."
				},
				{
					"name": "destroyInnerMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the innerMinThreshold in the aggregation \nnamed <code>innerMinThreshold</code>."
				},
				{
					"name": "destroyLastXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the lastXLabel in the aggregation \nnamed <code>lastXLabel</code>."
				},
				{
					"name": "destroyLastYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the lastYLabel in the aggregation \nnamed <code>lastYLabel</code>."
				},
				{
					"name": "destroyLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.29",
					"description": "Destroys all the lines in the aggregation \nnamed <code>lines</code>."
				},
				{
					"name": "destroyMaxLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the maxLabel in the aggregation \nnamed <code>maxLabel</code>."
				},
				{
					"name": "destroyMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the maxThreshold in the aggregation \nnamed <code>maxThreshold</code>."
				},
				{
					"name": "destroyMinLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the minLabel in the aggregation \nnamed <code>minLabel</code>."
				},
				{
					"name": "destroyMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the minThreshold in the aggregation \nnamed <code>minThreshold</code>."
				},
				{
					"name": "destroyTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the target in the aggregation \nnamed <code>target</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.MicroAreaChart</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChart with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem"
					},
					"description": "Getter for aggregation <code>chart</code>.<br/>\nThe configuration of the actual values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the value of property <code>colorPalette</code>"
					},
					"since": "1.29",
					"description": "Getter for property <code>colorPalette</code>.\nThe color palette for the chart. If this property is set, semantic colors defined in MicroAreaChartItem are ignored. Colors from the palette are assigned to each line consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "getFirstXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel"
					},
					"description": "Getter for aggregation <code>firstXLabel</code>.<br/>\nThe label on X axis for the first point of the chart."
				},
				{
					"name": "getFirstYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel"
					},
					"description": "Getter for aggregation <code>firstYLabel</code>.<br/>\nThe label on Y axis for the first point of the chart."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nThe height of the chart.\n\nDefault value is <code>190px</code>"
				},
				{
					"name": "getInnerMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem"
					},
					"description": "Getter for aggregation <code>innerMaxThreshold</code>.<br/>\nThe configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getInnerMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem"
					},
					"description": "Getter for aggregation <code>innerMinThreshold</code>.<br/>\nThe configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getLastXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel"
					},
					"description": "Getter for aggregation <code>lastXLabel</code>.<br/>\nThe label on X axis for the last point of the chart."
				},
				{
					"name": "getLastYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel"
					},
					"description": "Getter for aggregation <code>lastYLabel</code>.<br/>\nThe label on Y axis for the last point of the chart."
				},
				{
					"name": "getLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem[]"
					},
					"since": "1.29",
					"description": "Getter for aggregation <code>lines</code>.<br/>\nThe set of lines."
				},
				{
					"name": "getMaxLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel"
					},
					"description": "Getter for aggregation <code>maxLabel</code>.<br/>\nThe label for the maximum point of the chart."
				},
				{
					"name": "getMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem"
					},
					"description": "Getter for aggregation <code>maxThreshold</code>.<br/>\nThe configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getMaxXValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>maxXValue</code>"
					},
					"description": "Getter for property <code>maxXValue</code>.\nIf this property is set it indicates the value X axis ends with.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMaxYValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>maxYValue</code>"
					},
					"description": "Getter for property <code>maxYValue</code>.\nIf this property is set it indicates the value Y axis ends with.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChart."
				},
				{
					"name": "getMinLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel"
					},
					"description": "Getter for aggregation <code>minLabel</code>.<br/>\nThe label for the minimum point of the chart."
				},
				{
					"name": "getMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem"
					},
					"description": "Getter for aggregation <code>minThreshold</code>.<br/>\nThe configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getMinXValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>minXValue</code>"
					},
					"description": "Getter for property <code>minXValue</code>.\nIf this property is set it indicates the value X axis starts with.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMinYValue",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>minYValue</code>"
					},
					"description": "Getter for property <code>minYValue</code>.\nIf this property is set it indicates the value Y axis starts with.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem"
					},
					"description": "Getter for aggregation <code>target</code>.<br/>\nThe configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation."
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartView",
						"description": "the value of property <code>view</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>view</code>.\nThe view of the chart.\n\nDefault value is <code>Normal</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nThe width of the chart.\n\nDefault value is <code>200px</code>"
				},
				{
					"name": "indexOfLine",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "oLine",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false,
							"description": "the line whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.MicroAreaChartItem</code> in the aggregation named <code>lines</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "oLine",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false,
							"description": "the line to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the line should be inserted at; for \n            a negative value of <code>iIndex</code>, the line is inserted at position 0; for a value \n            greater than the current size of the aggregation, the line is inserted at \n            the last position"
						}
					],
					"description": "Inserts a line into the aggregation named <code>lines</code>."
				},
				{
					"name": "removeAllLines",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"since": "1.29",
					"description": "Removes all the controls in the aggregation named <code>lines</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeLine",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "the removed line or null"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "vLine",
							"type": "int|string|sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false,
							"description": "the line to remove or its index or id"
						}
					],
					"description": "Removes an line from the aggregation named <code>lines</code>."
				},
				{
					"name": "setChart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oChart",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>chart</code>."
				},
				{
					"name": "setColorPalette",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "aColorPalette",
							"type": "string[]",
							"optional": false,
							"description": "new value for property <code>colorPalette</code>"
						}
					],
					"description": "Setter for property <code>colorPalette</code>.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "setFirstXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFirstXLabel",
							"type": "sap.suite.ui.commons.MicroAreaChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>firstXLabel</code>."
				},
				{
					"name": "setFirstYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFirstYLabel",
							"type": "sap.suite.ui.commons.MicroAreaChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>firstYLabel</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is <code>190px</code>"
				},
				{
					"name": "setInnerMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInnerMaxThreshold",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>innerMaxThreshold</code>."
				},
				{
					"name": "setInnerMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInnerMinThreshold",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>innerMinThreshold</code>."
				},
				{
					"name": "setLastXLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLastXLabel",
							"type": "sap.suite.ui.commons.MicroAreaChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>lastXLabel</code>."
				},
				{
					"name": "setLastYLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLastYLabel",
							"type": "sap.suite.ui.commons.MicroAreaChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>lastYLabel</code>."
				},
				{
					"name": "setMaxLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMaxLabel",
							"type": "sap.suite.ui.commons.MicroAreaChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>maxLabel</code>."
				},
				{
					"name": "setMaxThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMaxThreshold",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>maxThreshold</code>."
				},
				{
					"name": "setMaxXValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMaxXValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>maxXValue</code>"
						}
					],
					"description": "Setter for property <code>maxXValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMaxYValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMaxYValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>maxYValue</code>"
						}
					],
					"description": "Setter for property <code>maxYValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMinLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMinLabel",
							"type": "sap.suite.ui.commons.MicroAreaChartLabel",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>minLabel</code>."
				},
				{
					"name": "setMinThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMinThreshold",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>minThreshold</code>."
				},
				{
					"name": "setMinXValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMinXValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>minXValue</code>"
						}
					],
					"description": "Setter for property <code>minXValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMinYValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fMinYValue",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>minYValue</code>"
						}
					],
					"description": "Setter for property <code>minYValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTarget",
							"type": "sap.suite.ui.commons.MicroAreaChartItem",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>target</code>."
				},
				{
					"name": "setView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "oView",
							"type": "sap.suite.ui.commons.MicroAreaChartView",
							"optional": false,
							"description": "new value for property <code>view</code>"
						}
					],
					"description": "Setter for property <code>view</code>.\n\nDefault value is <code>Normal</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChart",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is <code>200px</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.MicroAreaChartItem",
			"basename": "MicroAreaChartItem",
			"resource": "sap/suite/ui/commons/MicroAreaChartItem.js",
			"module": "sap/suite/ui/commons/MicroAreaChartItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The configuration of the graphic element on the chart.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.AreaMicroChartItem should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MicroAreaChartItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: sap.suite.ui.commons.InfoTileValueColor.Neutral)</li>\n<li>{@link #getTitle title} : string</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.commons.MicroAreaChartPoint[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "addPoint",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPoint",
							"type": "sap.suite.ui.commons.MicroAreaChartPoint",
							"optional": false,
							"description": "the point to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some point <code>oPoint</code> \nto the aggregation named <code>points</code>."
				},
				{
					"name": "bindPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "path to a list in the model"
						},
						{
							"name": "oTemplate",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "the control template for this aggregation"
						},
						{
							"name": "oSorter",
							"type": "sap.ui.model.Sorter",
							"optional": false,
							"description": "the initial sort order (optional)"
						},
						{
							"name": "aFilters",
							"type": "array",
							"optional": false,
							"description": "the predefined filters for this aggregation (optional)"
						}
					],
					"description": "Binder for aggregation <code>points</code>."
				},
				{
					"name": "destroyPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the points in the aggregation \nnamed <code>points</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartItem with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe graphic element color.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartItem."
				},
				{
					"name": "getPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartPoint[]"
					},
					"description": "Getter for aggregation <code>points</code>.<br/>\nThe set of points for this graphic element."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"since": "1.29",
					"description": "Getter for property <code>title</code>.\nThe line title.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfPoint",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oPoint",
							"type": "sap.suite.ui.commons.MicroAreaChartPoint",
							"optional": false,
							"description": "the point whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.MicroAreaChartPoint</code> in the aggregation named <code>points</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertPoint",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPoint",
							"type": "sap.suite.ui.commons.MicroAreaChartPoint",
							"optional": false,
							"description": "the point to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the point should be inserted at; for \n            a negative value of <code>iIndex</code>, the point is inserted at position 0; for a value \n            greater than the current size of the aggregation, the point is inserted at \n            the last position"
						}
					],
					"description": "Inserts a point into the aggregation named <code>points</code>."
				},
				{
					"name": "removeAllPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartPoint[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>points</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removePoint",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartPoint",
						"description": "the removed point or null"
					},
					"parameters": [
						{
							"name": "vPoint",
							"type": "int|string|sap.suite.ui.commons.MicroAreaChartPoint",
							"optional": false,
							"description": "the point to remove or its index or id"
						}
					],
					"description": "Removes an point from the aggregation named <code>points</code>."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.29",
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "unbindPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Unbinder for aggregation <code>points</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.MicroAreaChartLabel",
			"basename": "MicroAreaChartLabel",
			"resource": "sap/suite/ui/commons/MicroAreaChartLabel.js",
			"module": "sap/suite/ui/commons/MicroAreaChartLabel",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "This element contains data for a label in MicroAreaChart control.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.AreaMicroChartLabel should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MicroAreaChartLabel.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string</li>\n<li>{@link #getColor color} : sap.suite.ui.commons.InfoTileValueColor (default: \"Neutral\")</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartLabel with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>color</code>"
					},
					"description": "Getter for property <code>color</code>.\nThe color of the label.\n\nDefault value is <code>\"Neutral\"</code>"
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>label</code>"
					},
					"description": "Getter for property <code>label</code>.\nThe text of the label.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartLabel."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>color</code>"
						}
					],
					"description": "Setter for property <code>color</code>.\n\nDefault value is <code>\"Neutral\"</code>"
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartLabel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>label</code>"
						}
					],
					"description": "Setter for property <code>label</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.MicroAreaChartPoint",
			"basename": "MicroAreaChartPoint",
			"resource": "sap/suite/ui/commons/MicroAreaChartPoint.js",
			"module": "sap/suite/ui/commons/MicroAreaChartPoint",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "This control contains data for the point.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.AreaMicroChartPoint should be used."
			},
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MicroAreaChartPoint.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : float</li>\n<li>{@link #getY y} : float</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartPoint with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartPoint."
				},
				{
					"name": "getX",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>x</code>"
					},
					"description": "Getter for property <code>x</code>.\nX value for the given point.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getXValue",
					"visibility": "public",
					"returnValue": {
						"type": "float"
					},
					"description": "Returns x value including undefined if the x property was not set or an invalid number was set."
				},
				{
					"name": "getY",
					"visibility": "public",
					"returnValue": {
						"type": "float",
						"description": "the value of property <code>y</code>"
					},
					"description": "Getter for property <code>y</code>.\nY value for the given point.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getYValue",
					"visibility": "public",
					"returnValue": {
						"type": "float"
					},
					"description": "Returns y value including undefined if the y property was not set or an invalid number was set."
				},
				{
					"name": "setX",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartPoint",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fX",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>x</code>"
						}
					],
					"description": "Setter for property <code>x</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setY",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MicroAreaChartPoint",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fY",
							"type": "float",
							"optional": false,
							"description": "new value for property <code>y</code>"
						}
					],
					"description": "Setter for property <code>y</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.MicroAreaChartView",
			"basename": "MicroAreaChartView",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "The list of possible MicroAreaChart views.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.suite.ui.microchart.AreaMicroChartViewType should be used."
			},
			"properties": [
				{
					"name": "Normal",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The view with labels on the top and bottom."
				},
				{
					"name": "Wide",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The view with labels on the left and right."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.MonitoringContent",
			"basename": "MonitoringContent",
			"resource": "sap/suite/ui/commons/MonitoringContent.js",
			"module": "sap/suite/ui/commons/MonitoringContent",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control is used in a tile or any other place to display numeric values and an icon.",
			"deprecated": {
				"since": "1.25",
				"text": "This control has been deprecated in favor of new sap.suite.ui.commons.NumericContent."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The actual value.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "iconSrc",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.",
						"methods": [
							"getIconSrc",
							"setIconSrc"
						]
					},
					{
						"name": "size",
						"type": "sap.suite.ui.commons.InfoTileSize",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Updates the size of the chart. If not set then the default size is applied based on the device tile.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "state",
						"type": "sap.suite.ui.commons.LoadState",
						"defaultValue": "Loaded",
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates the load status.",
						"methods": [
							"getState",
							"setState"
						]
					},
					{
						"name": "animateTextChange",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, changing of the value is animated.",
						"methods": [
							"getAnimateTextChange",
							"setAnimateTextChange"
						]
					}
				],
				"aggregations": [
					{
						"name": "icon",
						"singularName": "icon",
						"type": "sap.ui.core.Icon",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The icon that is displayed in the content.",
						"methods": [
							"getIcon",
							"destroyIcon",
							"setIcon"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "The event is fired when the user chooses the monitoring content.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MonitoringContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string</li>\n<li>{@link #getIconSrc iconSrc} : string</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: sap.suite.ui.commons.LoadState.Loaded)</li>\n<li>{@link #getAnimateTextChange animateTextChange} : boolean (default: true)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.Icon</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.MonitoringContent#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the monitoring content."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.MonitoringContent</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.MonitoringContent</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.MonitoringContent</code>.<br/> itself. \n\nThe event is fired when the user chooses the monitoring content."
				},
				{
					"name": "destroyIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the icon in the aggregation \nnamed <code>icon</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.MonitoringContent</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.MonitoringContent with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getAnimateTextChange",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>animateTextChange</code>"
					},
					"description": "Getter for property <code>animateTextChange</code>.\nIf set to true, changing of the value is animated.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon"
					},
					"description": "Getter for aggregation <code>icon</code>.<br/>\nThe icon that is displayed in the content."
				},
				{
					"name": "getIconSrc",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>iconSrc</code>"
					},
					"description": "Getter for property <code>iconSrc</code>.\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.MonitoringContent."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LoadState",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nIndicates the load status.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe actual value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setAnimateTextChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bAnimateTextChange",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>animateTextChange</code>"
						}
					],
					"description": "Setter for property <code>animateTextChange</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIcon",
							"type": "sap.ui.core.Icon",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>icon</code>."
				},
				{
					"name": "setIconSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconSrc",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>iconSrc</code>"
						}
					],
					"description": "Setter for property <code>iconSrc</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.LoadState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.MonitoringTile",
			"basename": "MonitoringTile",
			"resource": "sap/suite/ui/commons/MonitoringTile.js",
			"module": "sap/suite/ui/commons/MonitoringTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.suite.ui.commons.InfoTile",
			"description": "This control is the implementation of the InfoTile to show a numeric value and an icon.",
			"deprecated": {
				"since": "1.25",
				"text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The actual value.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "iconSrc",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.",
						"methods": [
							"getIconSrc",
							"setIconSrc"
						]
					},
					{
						"name": "footerColor",
						"type": "sap.suite.ui.commons.InfoTileTextColor",
						"defaultValue": "Positive",
						"group": "Misc",
						"visibility": "public",
						"description": "The color of the tile footer text.",
						"methods": [
							"getFooterColor",
							"setFooterColor"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new MonitoringTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string</li>\n<li>{@link #getIconSrc iconSrc} : string</li>\n<li>{@link #getFooterColor footerColor} : sap.suite.ui.commons.InfoTileTextColor (default: sap.suite.ui.commons.InfoTileTextColor.Positive)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.InfoTile#constructor sap.suite.ui.commons.InfoTile}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.MonitoringTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getFooterColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileTextColor",
						"description": "the value of property <code>footerColor</code>"
					},
					"description": "Getter for property <code>footerColor</code>.\nThe color of the tile footer text.\n\nDefault value is <code>Positive</code>"
				},
				{
					"name": "getIconSrc",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>iconSrc</code>"
					},
					"description": "Getter for property <code>iconSrc</code>.\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.MonitoringTile."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe actual value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFooterColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFooterColor",
							"type": "sap.suite.ui.commons.InfoTileTextColor",
							"optional": false,
							"description": "new value for property <code>footerColor</code>"
						}
					],
					"description": "Setter for property <code>footerColor</code>.\n\nDefault value is <code>Positive</code>"
				},
				{
					"name": "setIconSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconSrc",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>iconSrc</code>"
						}
					],
					"description": "Setter for property <code>iconSrc</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.MonitoringTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.NewsContent",
			"basename": "NewsContent",
			"resource": "sap/suite/ui/commons/NewsContent.js",
			"module": "sap/suite/ui/commons/NewsContent",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control displays the news content text and subheader in a tile.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. sap.m.NewsContent should be used."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new NewsContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getContentText contentText} : string</li>\n<li>{@link #getSubheader subheader} : string</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.NewsContent#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the news content."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NewsContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NewsContent</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.NewsContent</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NewsContent</code>.<br/> itself. \n\nThe event is fired when the user chooses the news content."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NewsContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.NewsContent</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.NewsContent with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NewsContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getContentText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>contentText</code>"
					},
					"description": "Getter for property <code>contentText</code>.\nThe content text.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.NewsContent."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>subheader</code>"
					},
					"description": "Getter for property <code>subheader</code>.\nThe subheader.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContentText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NewsContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContentText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>contentText</code>"
						}
					],
					"description": "Setter for property <code>contentText</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NewsContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setSubheader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NewsContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSubheader",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>subheader</code>"
						}
					],
					"description": "Setter for property <code>subheader</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.NoteTaker",
			"basename": "NoteTaker",
			"resource": "sap/suite/ui/commons/NoteTaker.js",
			"module": "sap/suite/ui/commons/NoteTaker",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control allows you to create and store your notes for further reference.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Standard Fiori technology should be used."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "visibleNotes",
						"type": "int",
						"defaultValue": 2,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of notes to display.",
						"methods": [
							"getVisibleNotes",
							"setVisibleNotes"
						]
					},
					{
						"name": "cardViewAllTrigger",
						"type": "int",
						"defaultValue": 1800,
						"group": "Misc",
						"visibility": "public",
						"description": "The View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.",
						"methods": [
							"getCardViewAllTrigger",
							"setCardViewAllTrigger"
						]
					},
					{
						"name": "filterCriteria",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A composite object containing criteria for filtering cards in the Note Taker.",
						"methods": [
							"getFilterCriteria",
							"setFilterCriteria"
						]
					},
					{
						"name": "attachmentUploadUrl",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines a path on the server where the attached files are uploaded.",
						"methods": [
							"getAttachmentUploadUrl",
							"setAttachmentUploadUrl"
						]
					},
					{
						"name": "attachmentName",
						"type": "string",
						"defaultValue": "attachment",
						"group": "Misc",
						"visibility": "public",
						"description": "The attachment property name for identification on the server side after sending data to the server.",
						"methods": [
							"getAttachmentName",
							"setAttachmentName"
						]
					}
				],
				"aggregations": [
					{
						"name": "cards",
						"singularName": "card",
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "This aggregation allows you to add note cards to the Note Taker and remove them from the Note Taker.",
						"methods": [
							"getCards",
							"destroyCards",
							"insertCard",
							"addCard",
							"removeCard",
							"indexOfCard",
							"removeAllCards"
						]
					},
					{
						"name": "carousel",
						"singularName": "carousel",
						"type": "sap.ui.commons.Carousel",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "A slideable container for the NoteTaker cards and Feeder card.",
						"methods": [
							"getCarousel",
							"destroyCarousel",
							"setCarousel"
						]
					}
				],
				"events": [
					{
						"name": "addCard",
						"visibility": "public",
						"description": "The event is fired when a new card is added if no data binding is available.\nIf data binding is available, the event is fired to notify a developer to add an element to the model.",
						"parameters": {
							"title": {
								"name": "title",
								"type": "string",
								"description": "The title of the note to be added."
							},
							"body": {
								"name": "body",
								"type": "string",
								"description": "The text of the note to be added."
							},
							"timestamp": {
								"name": "timestamp",
								"type": "object",
								"description": "The timestamp of the note to be added."
							},
							"viewAllTrigger": {
								"name": "viewAllTrigger",
								"type": "int",
								"description": "The View All link appears in the Note Taker card when length of a body text exceeds the specified value."
							},
							"thumbUp": {
								"name": "thumbUp",
								"type": "boolean",
								"description": "Indicates positive information for a new card."
							},
							"thumbDown": {
								"name": "thumbDown",
								"type": "boolean",
								"description": "Indicates negative information for a new card."
							},
							"attachmentFilename": {
								"name": "attachmentFilename",
								"type": "string",
								"description": "Stores the name of the file attached to the card."
							},
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "The unique ID if available."
							},
							"attachmentUrl": {
								"name": "attachmentUrl",
								"type": "string",
								"description": "Stores the URL of the file attached to the card."
							},
							"card": {
								"name": "card",
								"type": "sap.suite.ui.commons.NoteTakerCard",
								"description": "A newly created card if no data binding is available. If data binding is available, this parameter is empty."
							}
						},
						"methods": [
							"attachAddCard",
							"detachAddCard",
							"fireAddCard"
						]
					},
					{
						"name": "deleteCard",
						"visibility": "public",
						"description": "The event is fired when a new card is deleted if no data binding is available.\nIf data binding is available, the event is fired to notify a developer to delete the element from the model.",
						"parameters": {
							"title": {
								"name": "title",
								"type": "string",
								"description": "The title of the card to be deleted."
							},
							"body": {
								"name": "body",
								"type": "string",
								"description": "The text of the card to be deleted."
							},
							"timestamp": {
								"name": "timestamp",
								"type": "string",
								"description": "The timestamp of the card to be deleted."
							},
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "The unique ID that was set by an application developer."
							},
							"thumbUp": {
								"name": "thumbUp",
								"type": "boolean",
								"description": "Indicates positive information for the deleted card."
							},
							"thumbDown": {
								"name": "thumbDown",
								"type": "boolean",
								"description": "Indicates negative information for the deleted card."
							}
						},
						"methods": [
							"attachDeleteCard",
							"detachDeleteCard",
							"fireDeleteCard"
						]
					},
					{
						"name": "editCard",
						"visibility": "public",
						"description": "The event is fired when a new card has been edited.",
						"parameters": {
							"title": {
								"name": "title",
								"type": "string",
								"description": "The title of the edited card."
							},
							"body": {
								"name": "body",
								"type": "string",
								"description": "A new text of the edited card."
							},
							"timestamp": {
								"name": "timestamp",
								"type": "string",
								"description": "A new timestamp of the edited card."
							},
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "A unique ID that was set by an application developer."
							},
							"thumbUp": {
								"name": "thumbUp",
								"type": "boolean",
								"description": "Indicates positive information for the edited card."
							},
							"thumbDown": {
								"name": "thumbDown",
								"type": "boolean",
								"description": "Indicates negative information for the edited card."
							},
							"tags": {
								"name": "tags",
								"type": "object",
								"description": "Updated array of the String type tags applied to the card during editing."
							}
						},
						"methods": [
							"attachEditCard",
							"detachEditCard",
							"fireEditCard"
						]
					},
					{
						"name": "attachmentSelect",
						"visibility": "public",
						"description": "The event is fired when the value of attached file has been changed.",
						"parameters": {
							"filename": {
								"name": "filename",
								"type": "string",
								"description": "A name of the attached file."
							}
						},
						"methods": [
							"attachAttachmentSelect",
							"detachAttachmentSelect",
							"fireAttachmentSelect"
						]
					},
					{
						"name": "attachmentUploadComplete",
						"visibility": "public",
						"description": "Fire event uploadComplete to attached listeners.",
						"parameters": {
							"response": {
								"name": "response",
								"type": "string",
								"description": "The response message of the String type that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
							},
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "The unique ID of the card."
							}
						},
						"methods": [
							"attachAttachmentUploadComplete",
							"detachAttachmentUploadComplete",
							"fireAttachmentUploadComplete"
						]
					},
					{
						"name": "attachmentDelete",
						"visibility": "public",
						"description": "The event is fired, when user deletes the attached file.",
						"parameters": {
							"filename": {
								"name": "filename",
								"type": "string",
								"description": "A name of the attached file."
							},
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "The unique ID of the card."
							}
						},
						"methods": [
							"attachAttachmentDelete",
							"detachAttachmentDelete",
							"fireAttachmentDelete"
						]
					},
					{
						"name": "attachmentClick",
						"visibility": "public",
						"description": "The event is fired when a user presses the attachment link.",
						"parameters": {
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "The unique ID of the card."
							},
							"isCardAttachment": {
								"name": "isCardAttachment",
								"type": "string",
								"description": "If true, a user chooses the attachment in the Note card. If false, a user chooses the attachment in the Feeder card."
							},
							"filename": {
								"name": "filename",
								"type": "string",
								"description": "A name of the attached file."
							}
						},
						"methods": [
							"attachAttachmentClick",
							"detachAttachmentClick",
							"fireAttachmentClick"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new NoteTaker.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleNotes visibleNotes} : int (default: 2)</li>\n<li>{@link #getCardViewAllTrigger cardViewAllTrigger} : int (default: 1800)</li>\n<li>{@link #getFilterCriteria filterCriteria} : object</li>\n<li>{@link #getAttachmentUploadUrl attachmentUploadUrl} : string</li>\n<li>{@link #getAttachmentName attachmentName} : string (default: 'attachment')</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getCards cards} : sap.suite.ui.commons.NoteTakerCard[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.NoteTaker#event:addCard addCard} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTaker#event:deleteCard deleteCard} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTaker#event:editCard editCard} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTaker#event:attachmentSelect attachmentSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTaker#event:attachmentUploadComplete attachmentUploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTaker#event:attachmentDelete attachmentDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTaker#event:attachmentClick attachmentClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "addCard",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The title of the note to be added."
										},
										"body": {
											"name": "body",
											"type": "string",
											"optional": false,
											"description": "The text of the note to be added."
										},
										"timestamp": {
											"name": "timestamp",
											"type": "object",
											"optional": false,
											"description": "The timestamp of the note to be added."
										},
										"viewAllTrigger": {
											"name": "viewAllTrigger",
											"type": "int",
											"optional": false,
											"description": "The View All link appears in the Note Taker card when length of a body text exceeds the specified value."
										},
										"thumbUp": {
											"name": "thumbUp",
											"type": "boolean",
											"optional": false,
											"description": "Indicates positive information for a new card."
										},
										"thumbDown": {
											"name": "thumbDown",
											"type": "boolean",
											"optional": false,
											"description": "Indicates negative information for a new card."
										},
										"attachmentFilename": {
											"name": "attachmentFilename",
											"type": "string",
											"optional": false,
											"description": "Stores the name of the file attached to the card."
										},
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "The unique ID if available."
										},
										"attachmentUrl": {
											"name": "attachmentUrl",
											"type": "string",
											"optional": false,
											"description": "Stores the URL of the file attached to the card."
										},
										"card": {
											"name": "card",
											"type": "sap.suite.ui.commons.NoteTakerCard",
											"optional": false,
											"description": "A newly created card if no data binding is available. If data binding is available, this parameter is empty."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a new card is added if no data binding is available.\nIf data binding is available, the event is fired to notify a developer to add an element to the model."
				},
				{
					"name": "attachmentClick",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "The unique ID of the card."
										},
										"isCardAttachment": {
											"name": "isCardAttachment",
											"type": "string",
											"optional": false,
											"description": "If true, a user chooses the attachment in the Note card. If false, a user chooses the attachment in the Feeder card."
										},
										"filename": {
											"name": "filename",
											"type": "string",
											"optional": false,
											"description": "A name of the attached file."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a user presses the attachment link."
				},
				{
					"name": "attachmentDelete",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"filename": {
											"name": "filename",
											"type": "string",
											"optional": false,
											"description": "A name of the attached file."
										},
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "The unique ID of the card."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired, when user deletes the attached file."
				},
				{
					"name": "attachmentSelect",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"filename": {
											"name": "filename",
											"type": "string",
											"optional": false,
											"description": "A name of the attached file."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the value of attached file has been changed."
				},
				{
					"name": "attachmentUploadComplete",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"response": {
											"name": "response",
											"type": "string",
											"optional": false,
											"description": "The response message of the String type that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
										},
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "The unique ID of the card."
										}
									}
								}
							}
						}
					],
					"description": "Fire event uploadComplete to attached listeners."
				},
				{
					"name": "deleteCard",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The title of the card to be deleted."
										},
										"body": {
											"name": "body",
											"type": "string",
											"optional": false,
											"description": "The text of the card to be deleted."
										},
										"timestamp": {
											"name": "timestamp",
											"type": "string",
											"optional": false,
											"description": "The timestamp of the card to be deleted."
										},
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "The unique ID that was set by an application developer."
										},
										"thumbUp": {
											"name": "thumbUp",
											"type": "boolean",
											"optional": false,
											"description": "Indicates positive information for the deleted card."
										},
										"thumbDown": {
											"name": "thumbDown",
											"type": "boolean",
											"optional": false,
											"description": "Indicates negative information for the deleted card."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a new card is deleted if no data binding is available.\nIf data binding is available, the event is fired to notify a developer to delete the element from the model."
				},
				{
					"name": "editCard",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The title of the edited card."
										},
										"body": {
											"name": "body",
											"type": "string",
											"optional": false,
											"description": "A new text of the edited card."
										},
										"timestamp": {
											"name": "timestamp",
											"type": "string",
											"optional": false,
											"description": "A new timestamp of the edited card."
										},
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "A unique ID that was set by an application developer."
										},
										"thumbUp": {
											"name": "thumbUp",
											"type": "boolean",
											"optional": false,
											"description": "Indicates positive information for the edited card."
										},
										"thumbDown": {
											"name": "thumbDown",
											"type": "boolean",
											"optional": false,
											"description": "Indicates negative information for the edited card."
										},
										"tags": {
											"name": "tags",
											"type": "object",
											"optional": false,
											"description": "Updated array of the String type tags applied to the card during editing."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a new card has been edited."
				}
			],
			"methods": [
				{
					"name": "attachAddCard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'addCard' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself. \n\nThe event is fired when a new card is added if no data binding is available.\nIf data binding is available, the event is fired to notify a developer to add an element to the model."
				},
				{
					"name": "attachAttachmentClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentClick' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself. \n\nThe event is fired when a user presses the attachment link."
				},
				{
					"name": "attachAttachmentDelete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentDelete' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself. \n\nThe event is fired, when user deletes the attached file."
				},
				{
					"name": "attachAttachmentSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentSelect' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself. \n\nThe event is fired when the value of attached file has been changed."
				},
				{
					"name": "attachAttachmentUploadComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentUploadComplete' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself. \n\nFire event uploadComplete to attached listeners."
				},
				{
					"name": "attachDeleteCard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'deleteCard' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself. \n\nThe event is fired when a new card is deleted if no data binding is available.\nIf data binding is available, the event is fired to notify a developer to delete the element from the model."
				},
				{
					"name": "attachEditCard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'editCard' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTaker</code>.<br/> itself. \n\nThe event is fired when a new card has been edited."
				},
				{
					"name": "detachAddCard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'addCard' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentClick' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentDelete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentDelete' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentSelect' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentUploadComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentUploadComplete' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachDeleteCard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'deleteCard' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachEditCard",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'editCard' event of this <code>sap.suite.ui.commons.NoteTaker</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.NoteTaker with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireAddCard",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event addCard to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'title' of type <code>string</code> The title of the note to be added.</li>\n<li>'body' of type <code>string</code> The text of the note to be added.</li>\n<li>'timestamp' of type <code>object</code> The timestamp of the note to be added.</li>\n<li>'viewAllTrigger' of type <code>int</code> The View All link appears in the Note Taker card when length of a body text exceeds the specified value.</li>\n<li>'thumbUp' of type <code>boolean</code> Indicates positive information for a new card.</li>\n<li>'thumbDown' of type <code>boolean</code> Indicates negative information for a new card.</li>\n<li>'attachmentFilename' of type <code>string</code> Stores the name of the file attached to the card.</li>\n<li>'uid' of type <code>string</code> The unique ID if available.</li>\n<li>'attachmentUrl' of type <code>string</code> Stores the URL of the file attached to the card.</li>\n<li>'card' of type <code>sap.suite.ui.commons.NoteTakerCard</code> A newly created card if no data binding is available. If data binding is available, this parameter is empty.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentClick",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentClick to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'uid' of type <code>string</code> The unique ID of the card.</li>\n<li>'isCardAttachment' of type <code>string</code> If true, a user chooses the attachment in the Note card. If false, a user chooses the attachment in the Feeder card.</li>\n<li>'filename' of type <code>string</code> A name of the attached file.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentDelete",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentDelete to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'filename' of type <code>string</code> A name of the attached file.</li>\n<li>'uid' of type <code>string</code> The unique ID of the card.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentSelect to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'filename' of type <code>string</code> A name of the attached file.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentUploadComplete",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentUploadComplete to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'response' of type <code>string</code> The response message of the String type  that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios.</li>\n<li>'uid' of type <code>string</code> The unique ID of the card.</li>\n</ul>"
				},
				{
					"name": "fireDeleteCard",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event deleteCard to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'title' of type <code>string</code> The title of the card to be deleted.</li>\n<li>'body' of type <code>string</code> The text of the card to be deleted.</li>\n<li>'timestamp' of type <code>string</code> The timestamp of the card to be deleted.</li>\n<li>'uid' of type <code>string</code> The unique ID that was set by an application developer.</li>\n<li>'thumbUp' of type <code>boolean</code> Indicates positive information for the deleted card.</li>\n<li>'thumbDown' of type <code>boolean</code> Indicates negative information for the deleted card.</li>\n</ul>"
				},
				{
					"name": "fireEditCard",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event editCard to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'title' of type <code>string</code> The title of the edited card.</li>\n<li>'body' of type <code>string</code> A new text of the edited card.</li>\n<li>'timestamp' of type <code>string</code> A new timestamp of the edited card.</li>\n<li>'uid' of type <code>string</code> A unique ID that was set by an application developer.</li>\n<li>'thumbUp' of type <code>boolean</code> Indicates positive information for the edited card.</li>\n<li>'thumbDown' of type <code>boolean</code> Indicates negative information for the edited card.</li>\n<li>'tags' of type <code>object</code> Updated array of the String type tags applied to the card during editing.</li>\n</ul>"
				},
				{
					"name": "getAllTags",
					"visibility": "public",
					"returnValue": {
						"type": "object"
					},
					"description": "Returns tags from all cards in the control."
				},
				{
					"name": "getAttachmentName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>attachmentName</code>"
					},
					"description": "Getter for property <code>attachmentName</code>.\nThe attachment property name for identification on the server side after sending data to the server.\n\nDefault value is <code>attachment</code>"
				},
				{
					"name": "getAttachmentUploadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>attachmentUploadUrl</code>"
					},
					"description": "Getter for property <code>attachmentUploadUrl</code>.\nDefines a path on the server where the attached files are uploaded.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getCardViewAllTrigger",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>cardViewAllTrigger</code>"
					},
					"description": "Getter for property <code>cardViewAllTrigger</code>.\nThe View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.\n\nDefault value is <code>1800</code>"
				},
				{
					"name": "getFilterCriteria",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>filterCriteria</code>"
					},
					"description": "Getter for property <code>filterCriteria</code>.\nA composite object containing criteria for filtering cards in the Note Taker.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.NoteTaker."
				},
				{
					"name": "getVisibleNotes",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>visibleNotes</code>"
					},
					"description": "Getter for property <code>visibleNotes</code>.\nNumber of notes to display.\n\nDefault value is <code>2</code>"
				},
				{
					"name": "handleAttachmentUploadFail",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker"
					},
					"description": "Must be called when the file upload to the server fail and it is needed to remove the attachment panel from the Feeder card."
				},
				{
					"name": "setAttachmentData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker"
					},
					"parameters": [
						{
							"name": "sAdditionalData",
							"type": "string",
							"optional": false,
							"description": "Actual additional data."
						}
					],
					"description": "Additional data that is sent to the back end service. Data will be transmitted as a value of a hidden input where the name is derived from the name property with suffix -data. Exposed from the FileUploader control."
				},
				{
					"name": "setAttachmentName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAttachmentName",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>attachmentName</code>"
						}
					],
					"description": "Setter for property <code>attachmentName</code>.\n\nDefault value is <code>attachment</code>"
				},
				{
					"name": "setAttachmentUploadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAttachmentUploadUrl",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>attachmentUploadUrl</code>"
						}
					],
					"description": "Setter for property <code>attachmentUploadUrl</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setCardViewAllTrigger",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCardViewAllTrigger",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>cardViewAllTrigger</code>"
						}
					],
					"description": "Setter for property <code>cardViewAllTrigger</code>.\n\nDefault value is <code>1800</code>"
				},
				{
					"name": "setFilterCriteria",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilterCriteria",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>filterCriteria</code>"
						}
					],
					"description": "Setter for property <code>filterCriteria</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setNextCardAttachmentUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker"
					},
					"parameters": [
						{
							"name": "sSUrl",
							"type": "string",
							"optional": false,
							"description": "The download URL of attachment for a card that will be added when a user chooses the Add button."
						}
					],
					"description": "Sets a URL for downloading the attachment. It must be called in the attachmentUploadComplete event handler."
				},
				{
					"name": "setNextCardUid",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker"
					},
					"parameters": [
						{
							"name": "sSUid",
							"type": "string",
							"optional": false
						}
					],
					"description": "Sets an unique ID of the next card."
				},
				{
					"name": "setVisibleNotes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTaker",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iVisibleNotes",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>visibleNotes</code>"
						}
					],
					"description": "Setter for property <code>visibleNotes</code>.\n\nDefault value is <code>2</code>"
				},
				{
					"name": "uploadAttachment",
					"visibility": "public",
					"description": "Uploads the attached file to the server. Exposed from the FileUploader control."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.NoteTakerCard",
			"basename": "NoteTakerCard",
			"resource": "sap/suite/ui/commons/NoteTakerCard.js",
			"module": "sap/suite/ui/commons/NoteTakerCard",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control allows you to store Note Taker card header and body text.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Standard Fiori technology should be used."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "header",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Stores the Note Taker card header.",
						"methods": [
							"getHeader",
							"setHeader"
						]
					},
					{
						"name": "body",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Stores the Note Taker card body text.",
						"methods": [
							"getBody",
							"setBody"
						]
					},
					{
						"name": "timestamp",
						"type": "object",
						"defaultValue": "???",
						"group": "Misc",
						"visibility": "public",
						"description": "Stores a timestamp of the Note Taker card.",
						"methods": [
							"getTimestamp",
							"setTimestamp"
						]
					},
					{
						"name": "tags",
						"type": "object",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"description": "Contains an array of the String type tags applied to the current card.",
						"methods": [
							"getTags",
							"setTags"
						]
					},
					{
						"name": "viewAllTrigger",
						"type": "int",
						"defaultValue": 1800,
						"group": "Misc",
						"visibility": "public",
						"description": "The View All link appears in the Note Taker card if a body text length exceeds the specified value.",
						"methods": [
							"getViewAllTrigger",
							"setViewAllTrigger"
						]
					},
					{
						"name": "uid",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The card ID. This property should be set by an application developer.",
						"methods": [
							"getUid",
							"setUid"
						]
					},
					{
						"name": "isFiltered",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Shows whether the note card is hidden by the applied filter.",
						"methods": [
							"getIsFiltered",
							"setIsFiltered"
						]
					},
					{
						"name": "thumbUp",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates positive information for the card.",
						"methods": [
							"getThumbUp",
							"setThumbUp"
						]
					},
					{
						"name": "thumbDown",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates negative information for the card.",
						"methods": [
							"getThumbDown",
							"setThumbDown"
						]
					},
					{
						"name": "allTags",
						"type": "object",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"description": "Contains an array of the String type tags available for selection during the card update.",
						"methods": [
							"getAllTags",
							"setAllTags"
						]
					},
					{
						"name": "attachmentFilename",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Stores the name of the file attached to the card.",
						"methods": [
							"getAttachmentFilename",
							"setAttachmentFilename"
						]
					},
					{
						"name": "attachmentUrl",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Stores the address of the file attached to the card.",
						"methods": [
							"getAttachmentUrl",
							"setAttachmentUrl"
						]
					}
				],
				"events": [
					{
						"name": "editNote",
						"visibility": "public",
						"description": "The event is fired when a user chooses the Edit button in the note card.",
						"parameters": {
							"title": {
								"name": "title",
								"type": "string",
								"description": "The title of edited card."
							},
							"body": {
								"name": "body",
								"type": "string",
								"description": "A new text of the edited card."
							},
							"timestamp": {
								"name": "timestamp",
								"type": "string",
								"description": "A new timestamp of the edited card."
							},
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "A unique ID that was set by an application developer."
							},
							"thumbUp": {
								"name": "thumbUp",
								"type": "boolean",
								"description": "Indicates positive information for the edited card."
							},
							"thumbDown": {
								"name": "thumbDown",
								"type": "boolean",
								"description": "Indicates negative information for the edited card."
							},
							"tags": {
								"name": "tags",
								"type": "object",
								"description": "Updated array of the String type tags applied to the card during editing."
							}
						},
						"methods": [
							"attachEditNote",
							"detachEditNote",
							"fireEditNote"
						]
					},
					{
						"name": "deleteNote",
						"visibility": "public",
						"description": "The event is fired when a card needs to be deleted. This event is needed for the Note Taker control.",
						"parameters": {
							"cardId": {
								"name": "cardId",
								"type": "string",
								"description": "The HTML ID of a card that needs to be deleted."
							},
							"title": {
								"name": "title",
								"type": "string",
								"description": "The title of the card to be deleted."
							},
							"body": {
								"name": "body",
								"type": "string",
								"description": "The text of the card to be deleted."
							},
							"timestamp": {
								"name": "timestamp",
								"type": "string",
								"description": "The timestamp of the card to be deleted."
							},
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "A unique ID that was set by an application developer."
							},
							"thumbUp": {
								"name": "thumbUp",
								"type": "boolean",
								"description": "Indicates positive information for the deleted card."
							},
							"thumbDown": {
								"name": "thumbDown",
								"type": "boolean",
								"description": "Indicates negative information for the deleted card."
							}
						},
						"methods": [
							"attachDeleteNote",
							"detachDeleteNote",
							"fireDeleteNote"
						]
					},
					{
						"name": "attachmentClick",
						"visibility": "public",
						"description": "The event is fired when a user chooses the attachment download link.",
						"parameters": {
							"uid": {
								"name": "uid",
								"type": "string",
								"description": "A unique ID that was set by an application developer."
							},
							"url": {
								"name": "url",
								"type": "string",
								"description": "The address of the file attached to the card."
							},
							"filename": {
								"name": "filename",
								"type": "string",
								"description": "The name of the file attached to the card."
							}
						},
						"methods": [
							"attachAttachmentClick",
							"detachAttachmentClick",
							"fireAttachmentClick"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new NoteTakerCard.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeader header} : string</li>\n<li>{@link #getBody body} : string</li>\n<li>{@link #getTimestamp timestamp} : object (default: new Date())</li>\n<li>{@link #getTags tags} : object (default: [])</li>\n<li>{@link #getViewAllTrigger viewAllTrigger} : int (default: 1800)</li>\n<li>{@link #getUid uid} : string</li>\n<li>{@link #getIsFiltered isFiltered} : boolean (default: false)</li>\n<li>{@link #getThumbUp thumbUp} : boolean</li>\n<li>{@link #getThumbDown thumbDown} : boolean</li>\n<li>{@link #getAllTags allTags} : object (default: [])</li>\n<li>{@link #getAttachmentFilename attachmentFilename} : string</li>\n<li>{@link #getAttachmentUrl attachmentUrl} : string</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.NoteTakerCard#event:editNote editNote} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTakerCard#event:deleteNote deleteNote} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTakerCard#event:attachmentClick attachmentClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "attachmentClick",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "A unique ID that was set by an application developer."
										},
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The address of the file attached to the card."
										},
										"filename": {
											"name": "filename",
											"type": "string",
											"optional": false,
											"description": "The name of the file attached to the card."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a user chooses the attachment download link."
				},
				{
					"name": "deleteNote",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"cardId": {
											"name": "cardId",
											"type": "string",
											"optional": false,
											"description": "The HTML ID of a card that needs to be deleted."
										},
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The title of the card to be deleted."
										},
										"body": {
											"name": "body",
											"type": "string",
											"optional": false,
											"description": "The text of the card to be deleted."
										},
										"timestamp": {
											"name": "timestamp",
											"type": "string",
											"optional": false,
											"description": "The timestamp of the card to be deleted."
										},
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "A unique ID that was set by an application developer."
										},
										"thumbUp": {
											"name": "thumbUp",
											"type": "boolean",
											"optional": false,
											"description": "Indicates positive information for the deleted card."
										},
										"thumbDown": {
											"name": "thumbDown",
											"type": "boolean",
											"optional": false,
											"description": "Indicates negative information for the deleted card."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a card needs to be deleted. This event is needed for the Note Taker control."
				},
				{
					"name": "editNote",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The title of edited card."
										},
										"body": {
											"name": "body",
											"type": "string",
											"optional": false,
											"description": "A new text of the edited card."
										},
										"timestamp": {
											"name": "timestamp",
											"type": "string",
											"optional": false,
											"description": "A new timestamp of the edited card."
										},
										"uid": {
											"name": "uid",
											"type": "string",
											"optional": false,
											"description": "A unique ID that was set by an application developer."
										},
										"thumbUp": {
											"name": "thumbUp",
											"type": "boolean",
											"optional": false,
											"description": "Indicates positive information for the edited card."
										},
										"thumbDown": {
											"name": "thumbDown",
											"type": "boolean",
											"optional": false,
											"description": "Indicates negative information for the edited card."
										},
										"tags": {
											"name": "tags",
											"type": "object",
											"optional": false,
											"description": "Updated array of the String type tags applied to the card during editing."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a user chooses the Edit button in the note card."
				}
			],
			"methods": [
				{
					"name": "attachAttachmentClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentClick' event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/> itself. \n\nThe event is fired when a user chooses the attachment download link."
				},
				{
					"name": "attachDeleteNote",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'deleteNote' event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/> itself. \n\nThe event is fired when a card needs to be deleted. This event is needed for the Note Taker control."
				},
				{
					"name": "attachEditNote",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'editNote' event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/> itself. \n\nThe event is fired when a user chooses the Edit button in the note card."
				},
				{
					"name": "detachAttachmentClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentClick' event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachDeleteNote",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'deleteNote' event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachEditNote",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'editNote' event of this <code>sap.suite.ui.commons.NoteTakerCard</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.NoteTakerCard with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireAttachmentClick",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentClick to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'uid' of type <code>string</code> A unique ID that was set by an application developer.</li>\n<li>'url' of type <code>string</code> The address of the file attached to the card.</li>\n<li>'filename' of type <code>string</code> The name of the file attached to the card.</li>\n</ul>"
				},
				{
					"name": "fireDeleteNote",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event deleteNote to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'cardId' of type <code>string</code> The HTML ID of a card that needs to be deleted.</li>\n<li>'title' of type <code>string</code> The title of the card to be deleted.</li>\n<li>'body' of type <code>string</code> The text of the card to be deleted.</li>\n<li>'timestamp' of type <code>string</code> The timestamp of the card to be deleted.</li>\n<li>'uid' of type <code>string</code> A unique ID that was set by an application developer.</li>\n<li>'thumbUp' of type <code>boolean</code> Indicates positive information for the deleted card.</li>\n<li>'thumbDown' of type <code>boolean</code> Indicates negative information for the deleted card.</li>\n</ul>"
				},
				{
					"name": "fireEditNote",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event editNote to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'title' of type <code>string</code> The title of edited card.</li>\n<li>'body' of type <code>string</code> A new text of the edited card.</li>\n<li>'timestamp' of type <code>string</code> A new timestamp of the edited card.</li>\n<li>'uid' of type <code>string</code> A unique ID that was set by an application developer.</li>\n<li>'thumbUp' of type <code>boolean</code> Indicates positive information for the edited card.</li>\n<li>'thumbDown' of type <code>boolean</code> Indicates negative information for the edited card.</li>\n<li>'tags' of type <code>object</code> Updated array of the String type tags applied to the card during editing.</li>\n</ul>"
				},
				{
					"name": "getAllTags",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>allTags</code>"
					},
					"description": "Getter for property <code>allTags</code>.\nContains an array of the String type tags available for selection during the card update.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "getAttachmentFilename",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>attachmentFilename</code>"
					},
					"description": "Getter for property <code>attachmentFilename</code>.\nStores the name of the file attached to the card.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getAttachmentUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>attachmentUrl</code>"
					},
					"description": "Getter for property <code>attachmentUrl</code>.\nStores the address of the file attached to the card.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getBody",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>body</code>"
					},
					"description": "Getter for property <code>body</code>.\nStores the Note Taker card body text.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>header</code>"
					},
					"description": "Getter for property <code>header</code>.\nStores the Note Taker card header.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIsFiltered",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>isFiltered</code>"
					},
					"description": "Getter for property <code>isFiltered</code>.\nShows whether the note card is hidden by the applied filter.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.NoteTakerCard."
				},
				{
					"name": "getTags",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>tags</code>"
					},
					"description": "Getter for property <code>tags</code>.\nContains an array of the String type tags applied to the current card.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "getThumbDown",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>thumbDown</code>"
					},
					"description": "Getter for property <code>thumbDown</code>.\nIndicates negative information for the card.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getThumbUp",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>thumbUp</code>"
					},
					"description": "Getter for property <code>thumbUp</code>.\nIndicates positive information for the card.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTimestamp",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>timestamp</code>"
					},
					"description": "Getter for property <code>timestamp</code>.\nStores a timestamp of the Note Taker card.\n\nDefault value is <code>new Date()</code>"
				},
				{
					"name": "getUid",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>uid</code>"
					},
					"description": "Getter for property <code>uid</code>.\nThe card ID. This property should be set by an application developer.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getViewAllTrigger",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>viewAllTrigger</code>"
					},
					"description": "Getter for property <code>viewAllTrigger</code>.\nThe View All link appears in the Note Taker card if a body text length exceeds the specified value.\n\nDefault value is <code>1800</code>"
				},
				{
					"name": "setAllTags",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAllTags",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>allTags</code>"
						}
					],
					"description": "Setter for property <code>allTags</code>.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "setAttachmentFilename",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAttachmentFilename",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>attachmentFilename</code>"
						}
					],
					"description": "Setter for property <code>attachmentFilename</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setAttachmentUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAttachmentUrl",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>attachmentUrl</code>"
						}
					],
					"description": "Setter for property <code>attachmentUrl</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setBody",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBody",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>body</code>"
						}
					],
					"description": "Setter for property <code>body</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeader",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>header</code>"
						}
					],
					"description": "Setter for property <code>header</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIsFiltered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsFiltered",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>isFiltered</code>"
						}
					],
					"description": "Setter for property <code>isFiltered</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setTags",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTags",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>tags</code>"
						}
					],
					"description": "Setter for property <code>tags</code>.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "setThumbDown",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bThumbDown",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>thumbDown</code>"
						}
					],
					"description": "Setter for property <code>thumbDown</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setThumbUp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bThumbUp",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>thumbUp</code>"
						}
					],
					"description": "Setter for property <code>thumbUp</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTimestamp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTimestamp",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>timestamp</code>"
						}
					],
					"description": "Setter for property <code>timestamp</code>.\n\nDefault value is <code>new Date()</code>"
				},
				{
					"name": "setUid",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUid",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>uid</code>"
						}
					],
					"description": "Setter for property <code>uid</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setViewAllTrigger",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerCard",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iViewAllTrigger",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>viewAllTrigger</code>"
						}
					],
					"description": "Setter for property <code>viewAllTrigger</code>.\n\nDefault value is <code>1800</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.NoteTakerFeeder",
			"basename": "NoteTakerFeeder",
			"resource": "sap/suite/ui/commons/NoteTakerFeeder.js",
			"module": "sap/suite/ui/commons/NoteTakerFeeder",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control allows you to enter a quick note and N note cards.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Standard Fiori technology should be used."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "body",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The text inside the note card.",
						"methods": [
							"getBody",
							"setBody"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "This text is the header of a new note.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "tags",
						"type": "object",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"description": "The list of tags selected for addition to a new note card.",
						"methods": [
							"getTags",
							"setTags"
						]
					},
					{
						"name": "thumbUp",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Sets positive indication for a new note.",
						"methods": [
							"getThumbUp",
							"setThumbUp"
						]
					},
					{
						"name": "thumbDown",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Sets negative indication for a new note.",
						"methods": [
							"getThumbDown",
							"setThumbDown"
						]
					},
					{
						"name": "attachmentUploadUrl",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Sets the upload attachment URL for a new card.",
						"methods": [
							"getAttachmentUploadUrl",
							"setAttachmentUploadUrl"
						]
					},
					{
						"name": "attachmentName",
						"type": "string",
						"defaultValue": "attachment",
						"group": "Misc",
						"visibility": "public",
						"description": "The attachment property name for identification on the server side after sending data to the server.",
						"methods": [
							"getAttachmentName",
							"setAttachmentName"
						]
					}
				],
				"aggregations": [
					{
						"name": "bodyArea",
						"singularName": "bodyArea",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden aggregation of body area control.",
						"methods": [
							"getBodyArea",
							"destroyBodyArea",
							"setBodyArea"
						]
					},
					{
						"name": "titleInput",
						"singularName": "titleInput",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden aggregation of title field control.",
						"methods": [
							"getTitleInput",
							"destroyTitleInput",
							"setTitleInput"
						]
					},
					{
						"name": "fileUploader",
						"singularName": "fileUploader",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden aggregation of FileUploader control.",
						"methods": [
							"getFileUploader",
							"destroyFileUploader",
							"setFileUploader"
						]
					},
					{
						"name": "tagInput",
						"singularName": "tagInput",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden aggregation of tag field control.",
						"methods": [
							"getTagInput",
							"destroyTagInput",
							"setTagInput"
						]
					}
				],
				"events": [
					{
						"name": "addNote",
						"visibility": "public",
						"description": "The event is fired when a user chooses the Add button in the control.",
						"parameters": {
							"title": {
								"name": "title",
								"type": "string",
								"description": "The title of the note to be added."
							},
							"body": {
								"name": "body",
								"type": "string",
								"description": "The text of the note to be added."
							},
							"timestamp": {
								"name": "timestamp",
								"type": "object",
								"description": "The timestamp of the note to be added."
							},
							"thumbUp": {
								"name": "thumbUp",
								"type": "boolean",
								"description": "If set to true, a new card should be marked as positive one."
							},
							"thumbDown": {
								"name": "thumbDown",
								"type": "boolean",
								"description": "If set to true, a new card should be marked as negative one."
							},
							"attachmentFilename": {
								"name": "attachmentFilename",
								"type": "string",
								"description": "Stores the attachment file name for a new card."
							}
						},
						"methods": [
							"attachAddNote",
							"detachAddNote",
							"fireAddNote"
						]
					},
					{
						"name": "attachmentSelect",
						"visibility": "public",
						"description": "The event is fired when the value of attached file has been changed.",
						"parameters": {
							"filename": {
								"name": "filename",
								"type": "string",
								"description": "A name of the attached file."
							}
						},
						"methods": [
							"attachAttachmentSelect",
							"detachAttachmentSelect",
							"fireAttachmentSelect"
						]
					},
					{
						"name": "attachmentUploadComplete",
						"visibility": "public",
						"description": "The event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server.",
						"parameters": {
							"response": {
								"name": "response",
								"type": "string",
								"description": "The response message that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
							}
						},
						"methods": [
							"attachAttachmentUploadComplete",
							"detachAttachmentUploadComplete",
							"fireAttachmentUploadComplete"
						]
					},
					{
						"name": "attachmentDelete",
						"visibility": "public",
						"description": "The event is fired when a user presses the Delete button in the Feeder card.",
						"parameters": {
							"filename": {
								"name": "filename",
								"type": "string",
								"description": "A name of the attached file."
							}
						},
						"methods": [
							"attachAttachmentDelete",
							"detachAttachmentDelete",
							"fireAttachmentDelete"
						]
					},
					{
						"name": "attachmentClick",
						"visibility": "public",
						"description": "The event is fired when a user presses the attachment link.",
						"parameters": {
							"filename": {
								"name": "filename",
								"type": "string",
								"description": "A name of the attached file."
							}
						},
						"methods": [
							"attachAttachmentClick",
							"detachAttachmentClick",
							"fireAttachmentClick"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new NoteTakerFeeder.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBody body} : string</li>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getTags tags} : object (default: [])</li>\n<li>{@link #getThumbUp thumbUp} : boolean</li>\n<li>{@link #getThumbDown thumbDown} : boolean</li>\n<li>{@link #getAttachmentUploadUrl attachmentUploadUrl} : string</li>\n<li>{@link #getAttachmentName attachmentName} : string (default: 'attachment')</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.NoteTakerFeeder#event:addNote addNote} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTakerFeeder#event:attachmentSelect attachmentSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTakerFeeder#event:attachmentUploadComplete attachmentUploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTakerFeeder#event:attachmentDelete attachmentDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.NoteTakerFeeder#event:attachmentClick attachmentClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "addNote",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The title of the note to be added."
										},
										"body": {
											"name": "body",
											"type": "string",
											"optional": false,
											"description": "The text of the note to be added."
										},
										"timestamp": {
											"name": "timestamp",
											"type": "object",
											"optional": false,
											"description": "The timestamp of the note to be added."
										},
										"thumbUp": {
											"name": "thumbUp",
											"type": "boolean",
											"optional": false,
											"description": "If set to true, a new card should be marked as positive one."
										},
										"thumbDown": {
											"name": "thumbDown",
											"type": "boolean",
											"optional": false,
											"description": "If set to true, a new card should be marked as negative one."
										},
										"attachmentFilename": {
											"name": "attachmentFilename",
											"type": "string",
											"optional": false,
											"description": "Stores the attachment file name for a new card."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a user chooses the Add button in the control."
				},
				{
					"name": "attachmentClick",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"filename": {
											"name": "filename",
											"type": "string",
											"optional": false,
											"description": "A name of the attached file."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a user presses the attachment link."
				},
				{
					"name": "attachmentDelete",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"filename": {
											"name": "filename",
											"type": "string",
											"optional": false,
											"description": "A name of the attached file."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when a user presses the Delete button in the Feeder card."
				},
				{
					"name": "attachmentSelect",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"filename": {
											"name": "filename",
											"type": "string",
											"optional": false,
											"description": "A name of the attached file."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the value of attached file has been changed."
				},
				{
					"name": "attachmentUploadComplete",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"response": {
											"name": "response",
											"type": "string",
											"optional": false,
											"description": "The response message that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server."
				}
			],
			"methods": [
				{
					"name": "attachAddNote",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'addNote' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself. \n\nThe event is fired when a user chooses the Add button in the control."
				},
				{
					"name": "attachAttachmentClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentClick' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself. \n\nThe event is fired when a user presses the attachment link."
				},
				{
					"name": "attachAttachmentDelete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentDelete' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself. \n\nThe event is fired when a user presses the Delete button in the Feeder card."
				},
				{
					"name": "attachAttachmentSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentSelect' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself. \n\nThe event is fired when the value of attached file has been changed."
				},
				{
					"name": "attachAttachmentUploadComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'attachmentUploadComplete' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/> itself. \n\nThe event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server."
				},
				{
					"name": "detachAddNote",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'addNote' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentClick' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentDelete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentDelete' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentSelect' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAttachmentUploadComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'attachmentUploadComplete' event of this <code>sap.suite.ui.commons.NoteTakerFeeder</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.NoteTakerFeeder with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireAddNote",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event addNote to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'title' of type <code>string</code> The title of the note to be added.</li>\n<li>'body' of type <code>string</code> The text of the note to be added.</li>\n<li>'timestamp' of type <code>object</code> The timestamp of the note to be added.</li>\n<li>'thumbUp' of type <code>boolean</code> If set to true, a new card should be marked as positive one.</li>\n<li>'thumbDown' of type <code>boolean</code> If set to true, a new card should be marked as negative one.</li>\n<li>'attachmentFilename' of type <code>string</code> Stores the attachment file name for a new card.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentClick",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentClick to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'filename' of type <code>string</code> A name of the attached file.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentDelete",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentDelete to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'filename' of type <code>string</code> A name of the attached file.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentSelect to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'filename' of type <code>string</code> A name of the attached file.</li>\n</ul>"
				},
				{
					"name": "fireAttachmentUploadComplete",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event attachmentUploadComplete to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'response' of type <code>string</code> The response message that comes from the server. On the server side this response has to be put within the \"body\" tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios.</li>\n</ul>"
				},
				{
					"name": "getAttachmentName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>attachmentName</code>"
					},
					"description": "Getter for property <code>attachmentName</code>.\nThe attachment property name for identification on the server side after sending data to the server.\n\nDefault value is <code>attachment</code>"
				},
				{
					"name": "getAttachmentUploadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>attachmentUploadUrl</code>"
					},
					"description": "Getter for property <code>attachmentUploadUrl</code>.\nSets the upload attachment URL for a new card.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getBody",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>body</code>"
					},
					"description": "Getter for property <code>body</code>.\nThe text inside the note card.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.NoteTakerFeeder."
				},
				{
					"name": "getTags",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>tags</code>"
					},
					"description": "Getter for property <code>tags</code>.\nThe list of tags selected for addition to a new note card.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "getThumbDown",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>thumbDown</code>"
					},
					"description": "Getter for property <code>thumbDown</code>.\nSets negative indication for a new note.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getThumbUp",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>thumbUp</code>"
					},
					"description": "Getter for property <code>thumbUp</code>.\nSets positive indication for a new note.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThis text is the header of a new note.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setAttachmentName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAttachmentName",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>attachmentName</code>"
						}
					],
					"description": "Setter for property <code>attachmentName</code>.\n\nDefault value is <code>attachment</code>"
				},
				{
					"name": "setAttachmentUploadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAttachmentUploadUrl",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>attachmentUploadUrl</code>"
						}
					],
					"description": "Setter for property <code>attachmentUploadUrl</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setBody",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBody",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>body</code>"
						}
					],
					"description": "Setter for property <code>body</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTags",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTags",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>tags</code>"
						}
					],
					"description": "Setter for property <code>tags</code>.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "setThumbDown",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bThumbDown",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>thumbDown</code>"
						}
					],
					"description": "Setter for property <code>thumbDown</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setThumbUp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bThumbUp",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>thumbUp</code>"
						}
					],
					"description": "Setter for property <code>thumbUp</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NoteTakerFeeder",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.NumericContent",
			"basename": "NumericContent",
			"resource": "sap/suite/ui/commons/NumericContent.js",
			"module": "sap/suite/ui/commons/NumericContent",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "NumericContent to be used in tile or in other place where need to show numeric values with sematic colors and deviations.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to openui5."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new NumericContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: sap.suite.ui.commons.InfoTileSize.Auto)</li>\n<li>{@link #getValue value} : string</li>\n<li>{@link #getScale scale} : string</li>\n<li>{@link #getValueColor valueColor} : sap.suite.ui.commons.InfoTileValueColor (default: sap.suite.ui.commons.InfoTileValueColor.Neutral)</li>\n<li>{@link #getIndicator indicator} : sap.suite.ui.commons.DeviationIndicator (default: sap.suite.ui.commons.DeviationIndicator.None)</li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: sap.suite.ui.commons.LoadState.Loaded)</li>\n<li>{@link #getAnimateTextChange animateTextChange} : boolean (default: true)</li>\n<li>{@link #getFormatterValue formatterValue} : boolean (default: false)</li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)</li>\n<li>{@link #getIcon icon} : sap.ui.core.URI</li>\n<li>{@link #getNullifyValue nullifyValue} : boolean (default: true)</li>\n<li>{@link #getIconDescription iconDescription} : string</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize</li>\n<li>{@link #getWithMargin withMargin} : boolean (default: true)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.NumericContent#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the numeric content."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NumericContent</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.NumericContent</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.NumericContent</code>.<br/> itself. \n\nThe event is fired when the user chooses the numeric content."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.NumericContent</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.NumericContent with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners."
				},
				{
					"name": "getAnimateTextChange",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>animateTextChange</code>"
					},
					"description": "Getter for property <code>animateTextChange</code>.\nIf set to true, the change of the value will be animated.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getFormatterValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>formatterValue</code>"
					},
					"description": "Getter for property <code>formatterValue</code>.\nIf set to true, the value parameter contains a numeric value and scale. If set to false (default), the value parameter contains a numeric value only.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>icon</code>"
					},
					"since": "1.21",
					"description": "Getter for property <code>icon</code>.\nThe icon to be displayed as a graphical element within the control. This can be an image or an icon from the icon font.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIconDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>iconDescription</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>iconDescription</code>.\nDescription of an icon that is used in the tooltip.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeviationIndicator",
						"description": "the value of property <code>indicator</code>"
					},
					"description": "Getter for property <code>indicator</code>.\nThe indicator arrow that shows value deviation.\n\nDefault value is <code>None</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.NumericContent."
				},
				{
					"name": "getNullifyValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>nullifyValue</code>"
					},
					"since": "1.21",
					"description": "Getter for property <code>nullifyValue</code>.\nIf set to true, the omitted value property is set to 0.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>scale</code>"
					},
					"description": "Getter for property <code>scale</code>.\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units. If the scaling prefix contains more than three characters, only the first three characters are displayed.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.LoadState",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nIndicates the load status.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "getTruncateValueTo",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>truncateValueTo</code>"
					},
					"description": "Getter for property <code>truncateValueTo</code>.\nThe number of characters to display for the value property.\n\nDefault value is <code>4</code>"
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe actual value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>valueColor</code>"
					},
					"description": "Getter for property <code>valueColor</code>.\nThe semantic color of the value.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>width</code>.\nThe width of the chart. If it is not set, the size of the control is defined by the size property.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getWithMargin",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>withMargin</code>"
					},
					"since": "1.31",
					"description": "Getter for property <code>withMargin</code>.\nIf the value is set to false, the content will fit to the whole size of the control.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setAnimateTextChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bAnimateTextChange",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>animateTextChange</code>"
						}
					],
					"description": "Setter for property <code>animateTextChange</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setFormatterValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFormatterValue",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>formatterValue</code>"
						}
					],
					"description": "Setter for property <code>formatterValue</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.21",
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>icon</code>"
						}
					],
					"description": "Setter for property <code>icon</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIconDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "sIconDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>iconDescription</code>"
						}
					],
					"description": "Setter for property <code>iconDescription</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIndicator",
							"type": "sap.suite.ui.commons.DeviationIndicator",
							"optional": false,
							"description": "new value for property <code>indicator</code>"
						}
					],
					"description": "Setter for property <code>indicator</code>.\n\nDefault value is <code>None</code>"
				},
				{
					"name": "setNullifyValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.21",
					"parameters": [
						{
							"name": "bNullifyValue",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>nullifyValue</code>"
						}
					],
					"description": "Setter for property <code>nullifyValue</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sScale",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>scale</code>"
						}
					],
					"description": "Setter for property <code>scale</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.LoadState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Loaded</code>"
				},
				{
					"name": "setTruncateValueTo",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iTruncateValueTo",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>truncateValueTo</code>"
						}
					],
					"description": "Setter for property <code>truncateValueTo</code>.\n\nDefault value is <code>4</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oValueColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>valueColor</code>"
						}
					],
					"description": "Setter for property <code>valueColor</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setWithMargin",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.31",
					"parameters": [
						{
							"name": "bWithMargin",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>withMargin</code>"
						}
					],
					"description": "Setter for property <code>withMargin</code>.\n\nDefault value is <code>true</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.NumericTile",
			"basename": "NumericTile",
			"resource": "sap/suite/ui/commons/NumericTile.js",
			"module": "sap/suite/ui/commons/NumericTile",
			"static": true,
			"visibility": "public",
			"extends": "sap.suite.ui.commons.InfoTile",
			"description": "This control is the implementation of the InfoTile to show a numeric value.",
			"deprecated": {
				"since": "1.25",
				"text": "This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The actual value.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "scale",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.",
						"methods": [
							"getScale",
							"setScale"
						]
					},
					{
						"name": "unit",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The percent sign, the currency symbol, or the unit of measure.",
						"methods": [
							"getUnit",
							"setUnit"
						]
					},
					{
						"name": "valueColor",
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The semantic color of the value.",
						"methods": [
							"getValueColor",
							"setValueColor"
						]
					},
					{
						"name": "indicator",
						"type": "sap.suite.ui.commons.DeviationIndicator",
						"defaultValue": "None",
						"group": "Misc",
						"visibility": "public",
						"description": "The indicator arrow that shows value deviation.",
						"methods": [
							"getIndicator",
							"setIndicator"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new NumericTile.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string</li>\n<li>{@link #getScale scale} : string</li>\n<li>{@link #getUnit unit} : string</li>\n<li>{@link #getValueColor valueColor} : sap.suite.ui.commons.InfoTileValueColor</li>\n<li>{@link #getIndicator indicator} : sap.suite.ui.commons.DeviationIndicator (default: sap.suite.ui.commons.DeviationIndicator.None)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.InfoTile#constructor sap.suite.ui.commons.InfoTile}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.NumericTile with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.DeviationIndicator",
						"description": "the value of property <code>indicator</code>"
					},
					"description": "Getter for property <code>indicator</code>.\nThe indicator arrow that shows value deviation.\n\nDefault value is <code>None</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.NumericTile."
				},
				{
					"name": "getScale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>scale</code>"
					},
					"description": "Getter for property <code>scale</code>.\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getUnit",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>unit</code>"
					},
					"description": "Getter for property <code>unit</code>.\nThe percent sign, the currency symbol, or the unit of measure.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>value</code>"
					},
					"description": "Getter for property <code>value</code>.\nThe actual value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileValueColor",
						"description": "the value of property <code>valueColor</code>"
					},
					"description": "Getter for property <code>valueColor</code>.\nThe semantic color of the value.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oIndicator",
							"type": "sap.suite.ui.commons.DeviationIndicator",
							"optional": false,
							"description": "new value for property <code>indicator</code>"
						}
					],
					"description": "Setter for property <code>indicator</code>.\n\nDefault value is <code>None</code>"
				},
				{
					"name": "setScale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sScale",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>scale</code>"
						}
					],
					"description": "Setter for property <code>scale</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setUnit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUnit",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>unit</code>"
						}
					],
					"description": "Setter for property <code>unit</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>value</code>"
						}
					],
					"description": "Setter for property <code>value</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setValueColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.NumericTile",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oValueColor",
							"type": "sap.suite.ui.commons.InfoTileValueColor",
							"optional": false,
							"description": "new value for property <code>valueColor</code>"
						}
					],
					"description": "Setter for property <code>valueColor</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.PictureZoomIn",
			"basename": "PictureZoomIn",
			"resource": "sap/suite/ui/commons/PictureZoomIn.js",
			"module": "sap/suite/ui/commons/PictureZoomIn",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Shows picture in fullscreen.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Not Fiori."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "description",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Description is shown under image.",
						"methods": [
							"getDescription",
							"setDescription"
						]
					},
					{
						"name": "imageSrc",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Source for image.",
						"methods": [
							"getImageSrc",
							"setImageSrc"
						]
					}
				],
				"aggregations": [
					{
						"name": "busyIndicator",
						"singularName": "busyIndicator",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Custom busy indicator.",
						"methods": [
							"getBusyIndicator",
							"destroyBusyIndicator",
							"setBusyIndicator"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new PictureZoomIn.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string</li>\n<li>{@link #getImageSrc imageSrc} : sap.ui.core.URI</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getBusyIndicator busyIndicator} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyBusyIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.PictureZoomIn",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the busyIndicator in the aggregation \nnamed <code>busyIndicator</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.PictureZoomIn with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getBusyIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>busyIndicator</code>.<br/>\nCustom busy indicator."
				},
				{
					"name": "getDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>description</code>"
					},
					"description": "Getter for property <code>description</code>.\nDescription is shown under image.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getImageSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>imageSrc</code>"
					},
					"description": "Getter for property <code>imageSrc</code>.\nSource for image.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.PictureZoomIn."
				},
				{
					"name": "setBusyIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.PictureZoomIn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBusyIndicator",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>busyIndicator</code>."
				},
				{
					"name": "setDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.PictureZoomIn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>description</code>"
						}
					],
					"description": "Setter for property <code>description</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setImageSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.PictureZoomIn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sImageSrc",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>imageSrc</code>"
						}
					],
					"description": "Setter for property <code>imageSrc</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ProcessFlow",
			"basename": "ProcessFlow",
			"resource": "sap/suite/ui/commons/ProcessFlow.js",
			"module": "sap/suite/ui/commons/ProcessFlow",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Complex control that enables you to display documents or other items in their flow.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "foldedCorners",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "This property defines the folded corners for the single node control. The following values exist:\n- true: means folded corner\n- false/null/undefined: means normal corner",
						"methods": [
							"getFoldedCorners",
							"setFoldedCorners"
						]
					},
					{
						"name": "scrollable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "By default, the control body is embedded into a scroll container of fixed size, so the user\ncan put the control into a fixe sized layout.\nWhen the control body (the graph) gets larger than the container cuts the overflowing parts of the graph and the cut parts can be viewed by scroling the control body.\nWhen the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false,\nso the width/height of the whole control will change as the flow graph gets smaller/larger.\nIn this case the control body could not be scrolled, as the control body size matches the control container size.",
						"methods": [
							"getScrollable",
							"setScrollable"
						]
					},
					{
						"name": "wheelZoomable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "The property specifies if to enable semantic zooming by mouse wheel events on desktop browsers.",
						"methods": [
							"getWheelZoomable",
							"setWheelZoomable"
						]
					},
					{
						"name": "showLabels",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines if the connection labels are shown or not.",
						"methods": [
							"getShowLabels",
							"setShowLabels"
						]
					}
				],
				"aggregations": [
					{
						"name": "_connections",
						"singularName": "_connection",
						"type": "sap.suite.ui.commons.ProcessFlowConnection",
						"cardinality": "0..n",
						"visibility": "hidden",
						"description": "This is the aggregation of the connection controls put into the table to the calculated cells.",
						"methods": [
							"get_connections",
							"destroy_connections",
							"insert_connection",
							"add_connection",
							"remove_connection",
							"indexOf_connection",
							"removeAll_connections"
						]
					},
					{
						"name": "nodes",
						"singularName": "node",
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "This is the aggregation of the node controls put into the table to the calculated cells.",
						"methods": [
							"getNodes",
							"destroyNodes",
							"insertNode",
							"addNode",
							"removeNode",
							"indexOfNode",
							"removeAllNodes"
						]
					},
					{
						"name": "lanes",
						"singularName": "lane",
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "This is a header of the table for the process flow control.",
						"methods": [
							"getLanes",
							"destroyLanes",
							"insertLane",
							"addLane",
							"removeLane",
							"indexOfLane",
							"removeAllLanes"
						]
					}
				],
				"defaultAggregation": "lanes",
				"events": [
					{
						"name": "nodeTitlePress",
						"visibility": "public",
						"description": "This event is fired when a process flow node title was\nclicked. The user can access the clicked process flow node control object which is the only argument of the event handler.",
						"deprecated": {
							"since": "1.26",
							"text": "Should not be used any longer, use nodePress event instead ( click on the node)"
						},
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "This object represents the wrapped process flow node object."
							}
						},
						"methods": [
							"attachNodeTitlePress",
							"detachNodeTitlePress",
							"fireNodeTitlePress"
						]
					},
					{
						"name": "nodePress",
						"visibility": "public",
						"description": "This event is fired when a process flow node was clicked.",
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "This object represents the wrapped process flow node object."
							}
						},
						"methods": [
							"attachNodePress",
							"detachNodePress",
							"fireNodePress"
						]
					},
					{
						"name": "labelPress",
						"visibility": "public",
						"description": "This event is fired when a process flow connection label was clicked.",
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "This object represents the label information."
							}
						},
						"methods": [
							"attachLabelPress",
							"detachLabelPress",
							"fireLabelPress"
						]
					},
					{
						"name": "headerPress",
						"visibility": "public",
						"description": "This event is fired when the header column was clicked.",
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "This object represents the wrapped process flow lane header object."
							}
						},
						"methods": [
							"attachHeaderPress",
							"detachHeaderPress",
							"fireHeaderPress"
						]
					},
					{
						"name": "onError",
						"visibility": "public",
						"description": "This event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors.",
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "This parameters contains the localized string with error message."
							}
						},
						"methods": [
							"attachOnError",
							"detachOnError",
							"fireOnError"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ProcessFlow.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFoldedCorners foldedCorners} : boolean (default: false)</li>\n<li>{@link #getScrollable scrollable} : boolean (default: true)</li>\n<li>{@link #getWheelZoomable wheelZoomable} : boolean (default: true)</li>\n<li>{@link #getShowLabels showLabels} : boolean (default: false)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.suite.ui.commons.ProcessFlowNode[]</li>\n<li>{@link #getLanes lanes} <strong>(default aggregation)</strong> : sap.suite.ui.commons.ProcessFlowLaneHeader[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ProcessFlow#event:nodeTitlePress nodeTitlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ProcessFlow#event:nodePress nodePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ProcessFlow#event:labelPress labelPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ProcessFlow#event:headerPress headerPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ProcessFlow#event:onError onError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "headerPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "This object represents the wrapped process flow lane header object."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the header column was clicked."
				},
				{
					"name": "labelPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "This object represents the label information."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when a process flow connection label was clicked."
				},
				{
					"name": "nodePress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "This object represents the wrapped process flow node object."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when a process flow node was clicked."
				},
				{
					"name": "nodeTitlePress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "This object represents the wrapped process flow node object."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when a process flow node title was\nclicked. The user can access the clicked process flow node control object which is the only argument of the event handler.",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use nodePress event instead ( click on the node)"
					}
				},
				{
					"name": "onError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "This parameters contains the localized string with error message."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors."
				}
			],
			"methods": [
				{
					"name": "addLane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLane",
							"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
							"optional": false,
							"description": "the lane to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some lane <code>oLane</code> \nto the aggregation named <code>lanes</code>."
				},
				{
					"name": "applyNodeDisplayState",
					"visibility": "public",
					"description": "Function applies the changes to the display state based on the requirements.\nIf any node is in the highlighted state all others are set to the dimmed state."
				},
				{
					"name": "attachHeaderPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'headerPress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself. \n\nThis event is fired when the header column was clicked."
				},
				{
					"name": "attachLabelPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'labelPress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself. \n\nThis event is fired when a process flow connection label was clicked."
				},
				{
					"name": "attachNodePress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'nodePress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself. \n\nThis event is fired when a process flow node was clicked."
				},
				{
					"name": "attachNodeTitlePress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'nodeTitlePress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself. \n\nThis event is fired when a process flow node title was\nclicked. The user can access the clicked process flow node control object which is the only argument of the event handler.",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use nodePress event instead ( click on the node)"
					}
				},
				{
					"name": "attachOnError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'onError' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/> itself. \n\nThis event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors."
				},
				{
					"name": "destroyLanes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the lanes in the aggregation \nnamed <code>lanes</code>."
				},
				{
					"name": "destroyNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the nodes in the aggregation \nnamed <code>nodes</code>."
				},
				{
					"name": "detachHeaderPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'headerPress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLabelPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'labelPress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNodePress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'nodePress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNodeTitlePress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'nodeTitlePress' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration.",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use nodePress event instead ( click on the node)"
					}
				},
				{
					"name": "detachOnError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'onError' event of this <code>sap.suite.ui.commons.ProcessFlow</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlow with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireHeaderPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event headerPress to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> This object represents the wrapped process flow lane header object.</li>\n</ul>"
				},
				{
					"name": "fireLabelPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event labelPress to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> This object represents the label information.</li>\n</ul>"
				},
				{
					"name": "fireNodePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event nodePress to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> This object represents the wrapped process flow node object.</li>\n</ul>"
				},
				{
					"name": "fireNodeTitlePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event nodeTitlePress to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> This object represents the wrapped process flow node object.</li>\n</ul>",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use nodePress event instead ( click on the node)"
					}
				},
				{
					"name": "fireOnError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event onError to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> This parameters contains the localized string with error message.</li>\n</ul>"
				},
				{
					"name": "getFocusedNode",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The id of focused node"
					},
					"description": "Function returns the nodeId of the node which is focused."
				},
				{
					"name": "getFoldedCorners",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>foldedCorners</code>"
					},
					"description": "Getter for property <code>foldedCorners</code>.\nThis property defines the folded corners for the single node control. The following values exist:\n- true: means folded corner\n- false/null/undefined: means normal corner\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getLanes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader[]"
					},
					"description": "Getter for aggregation <code>lanes</code>.<br/>\nThis is a header of the table for the process flow control.\n\n<strong>Note</strong>: this is the default aggregation for ProcessFlow."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlow."
				},
				{
					"name": "getNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode[]"
					},
					"description": "Getter for aggregation <code>nodes</code>.<br/>\nThis is the aggregation of the node controls put into the table to the calculated cells."
				},
				{
					"name": "getScrollable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>scrollable</code>"
					},
					"description": "Getter for property <code>scrollable</code>.\nBy default, the control body is embedded into a scroll container of fixed size, so the user\ncan put the control into a fixe sized layout.\nWhen the control body (the graph) gets larger than the container cuts the overflowing parts of the graph and the cut parts can be viewed by scroling the control body.\nWhen the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false,\nso the width/height of the whole control will change as the flow graph gets smaller/larger.\nIn this case the control body could not be scrolled, as the control body size matches the control container size.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowLabels",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showLabels</code>"
					},
					"description": "Getter for property <code>showLabels</code>.\nDefines if the connection labels are shown or not.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getWheelZoomable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>wheelZoomable</code>"
					},
					"description": "Getter for property <code>wheelZoomable</code>.\nThe property specifies if to enable semantic zooming by mouse wheel events on desktop browsers.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getZoomLevel",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The zoomLevel"
					},
					"description": "Function returns current zoom level."
				},
				{
					"name": "indexOfLane",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oLane",
							"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
							"optional": false,
							"description": "the lane whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code> in the aggregation named <code>lanes</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfNode",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.suite.ui.commons.ProcessFlowNode",
							"optional": false,
							"description": "the node whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.ProcessFlowNode</code> in the aggregation named <code>nodes</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertLane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oLane",
							"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
							"optional": false,
							"description": "the lane to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the lane should be inserted at; for \n            a negative value of <code>iIndex</code>, the lane is inserted at position 0; for a value \n            greater than the current size of the aggregation, the lane is inserted at \n            the last position"
						}
					],
					"description": "Inserts a lane into the aggregation named <code>lanes</code>."
				},
				{
					"name": "insertNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNode",
							"type": "sap.suite.ui.commons.ProcessFlowNode",
							"optional": false,
							"description": "the node to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the node should be inserted at; for \n            a negative value of <code>iIndex</code>, the node is inserted at position 0; for a value \n            greater than the current size of the aggregation, the node is inserted at \n            the last position"
						}
					],
					"description": "Inserts a node into the aggregation named <code>nodes</code>."
				},
				{
					"name": "removeAllLanes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>lanes</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllNodes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>nodes</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeLane",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "the removed lane or null"
					},
					"parameters": [
						{
							"name": "vLane",
							"type": "int|string|sap.suite.ui.commons.ProcessFlowLaneHeader",
							"optional": false,
							"description": "the lane to remove or its index or id"
						}
					],
					"description": "Removes an lane from the aggregation named <code>lanes</code>."
				},
				{
					"name": "removeNode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "the removed node or null"
					},
					"parameters": [
						{
							"name": "vNode",
							"type": "int|string|sap.suite.ui.commons.ProcessFlowNode",
							"optional": false,
							"description": "the node to remove or its index or id"
						}
					],
					"description": "Removes an node from the aggregation named <code>nodes</code>."
				},
				{
					"name": "setFocusToLabel",
					"visibility": "public",
					"since": "1.32",
					"parameters": [
						{
							"name": "Label",
							"type": "sap.suite.ui.commons.ProcessFlowConnectionlabel",
							"optional": false,
							"description": "to focus"
						}
					],
					"description": "Sets the focus to the given Label"
				},
				{
					"name": "setFoldedCorners",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFoldedCorners",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>foldedCorners</code>"
						}
					],
					"description": "Setter for property <code>foldedCorners</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setScrollable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bScrollable",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>scrollable</code>"
						}
					],
					"description": "Setter for property <code>scrollable</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setSelectedPath",
					"visibility": "public",
					"since": "1.32",
					"parameters": [
						{
							"name": "sourceNodeId",
							"type": "String",
							"optional": false,
							"description": "of the path or null"
						},
						{
							"name": "targetNodeId",
							"type": "String",
							"optional": false,
							"description": "of the path or null"
						}
					],
					"description": "Sets the path between source and target node to selected status and rerenders the control. If parameters are null, sets all nodes to normal status."
				},
				{
					"name": "setShowLabels",
					"visibility": "public",
					"parameters": [
						{
							"name": "New",
							"type": "Boolean",
							"optional": false,
							"description": "value for showLabels"
						}
					],
					"description": "Overwrites setShowLabels of ProcessFlow control to apply additional functionality."
				},
				{
					"name": "setWheelZoomable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlow",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bWheelZoomable",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>wheelZoomable</code>"
						}
					],
					"description": "Setter for property <code>wheelZoomable</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setZoomLevel",
					"visibility": "public",
					"parameters": [],
					"description": "Function sets the zoom level."
				},
				{
					"name": "updateModel",
					"visibility": "public",
					"description": "Updates the model and rerenders the control."
				},
				{
					"name": "updateNodesOnly",
					"visibility": "public",
					"description": "Updates the nodes and rerenders the control."
				},
				{
					"name": "zoomIn",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The updated zoomLevel"
					},
					"description": "Function sets new zoom level with higher level of details. Having max details it stays as it is."
				},
				{
					"name": "zoomOut",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The updated zoomLevel"
					},
					"description": "Function sets new zoom level with smaller level of details. Having the least detail view it stays as it is."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ProcessFlowConnection",
			"basename": "ProcessFlowConnection",
			"resource": "sap/suite/ui/commons/ProcessFlowConnection.js",
			"module": "sap/suite/ui/commons/ProcessFlowConnection",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control is used inside the ProcessFlow control to connect process flow node A with process flow node B in respect to the style(x) chosen by the application.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "drawData",
						"type": "object[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This is an array of the following attributes for one element:\n1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters:\n- \"r\" for right,\n- \"t\" for top,\n- \"l\" for left,\n- \"b\" for bottom.\n2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid.\nIf the target node is planned, the line is dashed.\n3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control.\n4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.",
						"methods": [
							"getDrawData",
							"setDrawData"
						]
					},
					{
						"name": "zoomLevel",
						"type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
						"defaultValue": "Two",
						"group": "Misc",
						"visibility": "public",
						"description": "This is a current zoom level for the connection. The point of connection to the node is derived from zoom level.",
						"methods": [
							"getZoomLevel",
							"setZoomLevel"
						]
					},
					{
						"name": "type",
						"type": "sap.suite.ui.commons.ProcessFlowConnectionType",
						"defaultValue": "Normal",
						"group": "Appearance",
						"visibility": "public",
						"description": "Type of the connection.",
						"deprecated": {
							"since": "1.32",
							"text": "Type is deprecated because of no usages. There will be no replacement."
						},
						"methods": [
							"getType",
							"setType"
						]
					},
					{
						"name": "state",
						"type": "sap.suite.ui.commons.ProcessFlowConnectionState",
						"defaultValue": "Regular",
						"group": "Appearance",
						"visibility": "public",
						"description": "State of the connection.",
						"deprecated": {
							"since": "1.32",
							"text": "State is deprecated because of no usages. There will be no replacement."
						},
						"methods": [
							"getState",
							"setState"
						]
					}
				],
				"aggregations": [
					{
						"name": "_labels",
						"singularName": "_label",
						"type": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
						"cardinality": "0..n",
						"visibility": "hidden",
						"description": "Specifies the ProcessFlowConnectionLabels for the current ProcessFlowConnection.",
						"methods": [
							"get_labels",
							"destroy_labels",
							"insert_label",
							"add_label",
							"remove_label",
							"indexOf_label",
							"removeAll_labels"
						]
					}
				],
				"defaultAggregation": "_labels"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ProcessFlowConnection.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDrawData drawData} : object[]</li>\n<li>{@link #getZoomLevel zoomLevel} : sap.suite.ui.commons.ProcessFlowZoomLevel (default: sap.suite.ui.commons.ProcessFlowZoomLevel.Two)</li>\n<li>{@link #getType type} : sap.suite.ui.commons.ProcessFlowConnectionType (default: sap.suite.ui.commons.ProcessFlowConnectionType.Normal)</li>\n<li>{@link #getState state} : sap.suite.ui.commons.ProcessFlowConnectionState (default: sap.suite.ui.commons.ProcessFlowConnectionState.Regular)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "addConnectionData",
					"visibility": "public",
					"returnValue": {
						"type": "Array",
						"description": "connectionData"
					},
					"parameters": [
						{
							"name": "singleConnectionData",
							"type": "object",
							"optional": false
						}
					],
					"description": "Adds connection data."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnection with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getDrawData",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "the value of property <code>drawData</code>"
					},
					"description": "Getter for property <code>drawData</code>.\nThis is an array of the following attributes for one element:\n1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters:\n- \"r\" for right,\n- \"t\" for top,\n- \"l\" for left,\n- \"b\" for bottom.\n2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid.\nIf the target node is planned, the line is dashed.\n3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control.\n4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowConnection."
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnectionState",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nState of the connection.\n\nDefault value is <code>Regular</code>",
					"deprecated": {
						"since": "1.32",
						"text": "State is deprecated because of no usages. There will be no replacement."
					}
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnectionType",
						"description": "the value of property <code>type</code>"
					},
					"description": "Getter for property <code>type</code>.\nType of the connection.\n\nDefault value is <code>Normal</code>",
					"deprecated": {
						"since": "1.32",
						"text": "Type is deprecated because of no usages. There will be no replacement."
					}
				},
				{
					"name": "getZoomLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
						"description": "the value of property <code>zoomLevel</code>"
					},
					"description": "Getter for property <code>zoomLevel</code>.\nThis is a current zoom level for the connection. The point of connection to the node is derived from zoom level.\n\nDefault value is <code>Two</code>"
				},
				{
					"name": "setDrawData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "aDrawData",
							"type": "object[]",
							"optional": false,
							"description": "new value for property <code>drawData</code>"
						}
					],
					"description": "Setter for property <code>drawData</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.ProcessFlowConnectionState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Regular</code>",
					"deprecated": {
						"since": "1.32",
						"text": "State is deprecated because of no usages. There will be no replacement."
					}
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oType",
							"type": "sap.suite.ui.commons.ProcessFlowConnectionType",
							"optional": false,
							"description": "new value for property <code>type</code>"
						}
					],
					"description": "Setter for property <code>type</code>.\n\nDefault value is <code>Normal</code>",
					"deprecated": {
						"since": "1.32",
						"text": "Type is deprecated because of no usages. There will be no replacement."
					}
				},
				{
					"name": "setZoomLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oZoomLevel",
							"type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
							"optional": false,
							"description": "new value for property <code>zoomLevel</code>"
						}
					],
					"description": "Setter for property <code>zoomLevel</code>.\n\nDefault value is <code>Two</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
			"basename": "ProcessFlowConnectionLabel",
			"resource": "sap/suite/ui/commons/ProcessFlowConnectionLabel.js",
			"module": "sap/suite/ui/commons/ProcessFlowConnectionLabel",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Button",
			"description": "This control is used inside the ProcessFlow control providing information on connections. Using this control, you need to take care of the lifetime handling instance as instances of this control are not destroyed automatically.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "priority",
						"type": "int",
						"defaultValue": 0,
						"group": "Misc",
						"visibility": "public",
						"description": "Priority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.",
						"methods": [
							"getPriority",
							"setPriority"
						]
					},
					{
						"name": "state",
						"type": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
						"defaultValue": "Neutral",
						"group": "Appearance",
						"visibility": "public",
						"description": "Specifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -> Positive -> Critical -> Negative.",
						"methods": [
							"getState",
							"setState"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ProcessFlowConnectionLabel.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPriority priority} : int (default: 0)</li>\n<li>{@link #getState state} : sap.suite.ui.commons.ProcessFlowConnectionLabelState (default: sap.suite.ui.commons.ProcessFlowConnectionLabelState.Neutral)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnectionLabel with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowConnectionLabel."
				},
				{
					"name": "getPriority",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>priority</code>"
					},
					"description": "Getter for property <code>priority</code>.\nPriority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nSpecifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -> Positive -> Critical -> Negative.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setPriority",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iPriority",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>priority</code>"
						}
					],
					"description": "Setter for property <code>priority</code>.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowConnectionLabel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Neutral</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowConnectionLabelState",
			"basename": "ProcessFlowConnectionLabelState",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Describes the state of a connection label.",
			"properties": [
				{
					"name": "Critical",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Critical connection label."
				},
				{
					"name": "Negative",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Negative connection label."
				},
				{
					"name": "Neutral",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Neutral connection label."
				},
				{
					"name": "Positive",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Positive connection label."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowConnectionState",
			"basename": "ProcessFlowConnectionState",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Describes the state of a connection.",
			"properties": [
				{
					"name": "Dimmed",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Dimmed connection."
				},
				{
					"name": "Highlighted",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Highlighted connection."
				},
				{
					"name": "Regular",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Regular connection."
				},
				{
					"name": "Selected",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Selected connection."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowConnectionType",
			"basename": "ProcessFlowConnectionType",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Describes the type of a connection.",
			"properties": [
				{
					"name": "Normal",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Normal connection."
				},
				{
					"name": "Planned",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Planned connection."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowDisplayState",
			"basename": "ProcessFlowDisplayState",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "The ProcessFlow calculates the ProcessFlowDisplayState based on the 'focused' and ?highlighted? properties of each node.",
			"properties": [
				{
					"name": "Dimmed",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the dimmed state"
				},
				{
					"name": "DimmedFocused",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the combination of dimmed and focused display state"
				},
				{
					"name": "Highlighted",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in highlighted display state"
				},
				{
					"name": "HighlightedFocused",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the combination of highlighted and focused display state"
				},
				{
					"name": "Regular",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the regular display state"
				},
				{
					"name": "RegularFocused",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the combination of regular and focused display state"
				},
				{
					"name": "Selected",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the selected display state"
				},
				{
					"name": "SelectedFocused",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the combination of selected and focused display state"
				},
				{
					"name": "SelectedHighlighted",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the combination of selected and highlighted display state"
				},
				{
					"name": "SelectedHighlightedFocused",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The control is in the combination of selected, highlighted and focused display state"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ProcessFlowLaneHeader",
			"basename": "ProcessFlowLaneHeader",
			"resource": "sap/suite/ui/commons/ProcessFlowLaneHeader.js",
			"module": "sap/suite/ui/commons/ProcessFlowLaneHeader",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control gives you an overview of documents/items used in a process flow. The process flow is represented by the doughnut chart sections which are colored according to the documents’ status(es). This control can be used in two different ways. If you use it standalone, an event is fired and can be caught in to display the node map. If you use it with the node/document, it gives you an overview of the documents/items used in the process flow that is represented by the doughnut chart sections.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text information that is displayed in the control.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "iconSrc",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Icon to be displayed in the middle of the control.",
						"methods": [
							"getIconSrc",
							"setIconSrc"
						]
					},
					{
						"name": "position",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Position of the lane in the process flow control. Numbering of the position has to be sequential and needs to start from 0.",
						"methods": [
							"getPosition",
							"setPosition"
						]
					},
					{
						"name": "laneId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Internal identification of the header.",
						"methods": [
							"getLaneId",
							"setLaneId"
						]
					},
					{
						"name": "state",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Array of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned.",
						"methods": [
							"getState",
							"setState"
						]
					},
					{
						"name": "zoomLevel",
						"type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Current zoom level for the lane header.",
						"methods": [
							"getZoomLevel",
							"setZoomLevel"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "This event is fired when the header is clicked.",
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "tbd"
							}
						},
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ProcessFlowLaneHeader.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string</li>\n<li>{@link #getIconSrc iconSrc} : sap.ui.core.URI</li>\n<li>{@link #getPosition position} : int</li>\n<li>{@link #getLaneId laneId} : string</li>\n<li>{@link #getState state} : object</li>\n<li>{@link #getZoomLevel zoomLevel} : sap.suite.ui.commons.ProcessFlowZoomLevel</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ProcessFlowLaneHeader#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "tbd"
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the header is clicked."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code>.<br/> itself. \n\nThis event is fired when the header is clicked."
				},
				{
					"name": "createNewEndSymbol",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "a new end symbol node"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "isHeaderMode",
							"type": "Boolean",
							"optional": false,
							"description": "true if the hand cursor should be displayed above the header"
						}
					],
					"description": "Process symbol node factory method - creates a control with a square symbol used at the end of the lane header."
				},
				{
					"name": "createNewProcessSymbol",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "a new process symbol node"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "isHeaderMode",
							"type": "Boolean",
							"optional": false,
							"description": "true if the hand cursor should be displayed above the header"
						}
					],
					"description": "Process symbol node factory method - creates a control with a '>>>' symbol."
				},
				{
					"name": "createNewStartSymbol",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "a new start symbol node"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "isHeaderMode",
							"type": "Boolean",
							"optional": false,
							"description": "true if the hand cursor should be displayed above the header"
						}
					],
					"description": "Creates the start symbol at the beginning of the lane header."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.ProcessFlowLaneHeader</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "enableEllipsisSupportForText",
					"visibility": "public",
					"static": true,
					"since": "1.22",
					"parameters": [
						{
							"name": "isSupportEnabled",
							"type": "Boolean",
							"optional": false,
							"description": "false if the ellipsis support is to be disabled"
						}
					],
					"description": "Enable/disable ellipsis support for non-webkit browsers (for the case where there is no native ellipsis support).\nIt is recommended to disable the ellipsis support in case the control is inserted\ninto a container of variable width as the ellipsis position is not updated automatically.\nBy default the ellipsis support is enabled."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowLaneHeader with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> tbd</li>\n</ul>"
				},
				{
					"name": "getIconSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>iconSrc</code>"
					},
					"description": "Getter for property <code>iconSrc</code>.\nIcon to be displayed in the middle of the control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getLaneId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>laneId</code>"
					},
					"description": "Getter for property <code>laneId</code>.\nInternal identification of the header.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowLaneHeader."
				},
				{
					"name": "getPosition",
					"visibility": "public",
					"description": "Overrides the getter method for property position. It returns the position that was changed due to the artificial merged lanes.\nOtherwise it returns the position set in the model."
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nArray of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>text</code>"
					},
					"description": "Getter for property <code>text</code>.\nText information that is displayed in the control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getZoomLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
						"description": "the value of property <code>zoomLevel</code>"
					},
					"description": "Getter for property <code>zoomLevel</code>.\nCurrent zoom level for the lane header.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "init",
					"visibility": "public",
					"description": "Process Flow Lane Header controller."
				},
				{
					"name": "onAfterRendering",
					"visibility": "public",
					"description": "Standard method called after the control rendering."
				},
				{
					"name": "onBeforeRendering",
					"visibility": "public",
					"description": "Standard method called before the control rendering."
				},
				{
					"name": "setIconSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconSrc",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>iconSrc</code>"
						}
					],
					"description": "Setter for property <code>iconSrc</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setLaneId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLaneId",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>laneId</code>"
						}
					],
					"description": "Setter for property <code>laneId</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iPosition",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>position</code>"
						}
					],
					"description": "Setter for property <code>position</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>text</code>"
						}
					],
					"description": "Setter for property <code>text</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setZoomLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowLaneHeader",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oZoomLevel",
							"type": "sap.suite.ui.commons.ProcessFlowZoomLevel",
							"optional": false,
							"description": "new value for property <code>zoomLevel</code>"
						}
					],
					"description": "Setter for property <code>zoomLevel</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowLaneState",
			"basename": "ProcessFlowLaneState",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "This type is used in the ?state? property of the ProcessFlowLaneHeader. For example, as an app developer you have the option to set explicitly the status of the lane header outside of the control coding if the lanes are displayed without documents.\nIf the complete process flow is displayed (that is, if the lane header is displayed with documents underneath), the given state values of the lane header are ignored and will be calculated in the ProcessFlow according to the current state of the documents.",
			"properties": [
				{
					"name": "state",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The ?state? property is associated with the given value. The possible states are: positive, negative, neutral, and planned."
				},
				{
					"name": "value",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "In the ?state? array , the total sum of all values needs to be 100%."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ProcessFlowNode",
			"basename": "ProcessFlowNode",
			"resource": "sap/suite/ui/commons/ProcessFlowNode.js",
			"module": "sap/suite/ui/commons/ProcessFlowNode",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control enables you to see documents (or other items) in respect to their statuses – positive, negative, neutral, planned, planned negative. In addition to the node title (which can be optionally a hyperlink) also two other text fields are provided and can be filled. The process flow nodes consider all styles depending on the status they are in. The user can update or change the content of the node. The content of the node can be also filtered according to updated data and specific parameters set. This means that also the node’s style is affected.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The node title.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "isTitleClickable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Specifies if the node title is clickable.",
						"deprecated": {
							"since": "1.26",
							"text": "According to the new requirement there should be only one click event for each node (click on the whole node – see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either."
						},
						"methods": [
							"getIsTitleClickable",
							"setIsTitleClickable"
						]
					},
					{
						"name": "laneId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Specifies the assignment of the node to the respective lane.",
						"methods": [
							"getLaneId",
							"setLaneId"
						]
					},
					{
						"name": "nodeId",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": ">Node identifier.",
						"methods": [
							"getNodeId",
							"setNodeId"
						]
					},
					{
						"name": "state",
						"type": "sap.suite.ui.commons.ProcessFlowNodeState",
						"defaultValue": "Neutral",
						"group": "Appearance",
						"visibility": "public",
						"description": "State of the node.",
						"methods": [
							"getState",
							"setState"
						]
					},
					{
						"name": "type",
						"type": "sap.suite.ui.commons.ProcessFlowNodeType",
						"defaultValue": "Single",
						"group": "Appearance",
						"visibility": "public",
						"description": "Type of the node.",
						"methods": [
							"getType",
							"setType"
						]
					},
					{
						"name": "children",
						"type": "string[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines an array of children of the node.",
						"methods": [
							"getChildren",
							"setChildren"
						]
					},
					{
						"name": "titleAbbreviation",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Title abbreviation is used in the compact mode.",
						"methods": [
							"getTitleAbbreviation",
							"setTitleAbbreviation"
						]
					},
					{
						"name": "stateText",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Description of the state, for example \"Status OK\".",
						"methods": [
							"getStateText",
							"setStateText"
						]
					},
					{
						"name": "texts",
						"type": "string[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.",
						"methods": [
							"getTexts",
							"setTexts"
						]
					},
					{
						"name": "highlighted",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "The parameter defines if the node should be displayed in highlighted state.",
						"methods": [
							"getHighlighted",
							"setHighlighted"
						]
					},
					{
						"name": "focused",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "The parameter defines if the node should be displayed in focus state.",
						"methods": [
							"getFocused",
							"setFocused"
						]
					},
					{
						"name": "tag",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The user-defined object which is returned back to the user by a node click event.",
						"methods": [
							"getTag",
							"setTag"
						]
					},
					{
						"name": "selected",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "The parameter defines if the node should be displayed in selected state.",
						"methods": [
							"getSelected",
							"setSelected"
						]
					}
				],
				"associations": [
					{
						"name": "parents",
						"singularName": "parent",
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Reference to ProcessFlowNodes which appears before this ProcessFlowNode.",
						"methods": [
							"getParents",
							"addParent",
							"removeParent",
							"removeAllParents"
						]
					}
				],
				"events": [
					{
						"name": "titlePress",
						"visibility": "public",
						"description": "This event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).",
						"deprecated": {
							"since": "1.26",
							"text": "Should not be used any longer, use Press event instead ( click on the node)"
						},
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "The node identification."
							}
						},
						"methods": [
							"attachTitlePress",
							"detachTitlePress",
							"fireTitlePress"
						]
					},
					{
						"name": "press",
						"visibility": "public",
						"description": "This event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired.",
						"parameters": {
							"oEvent": {
								"name": "oEvent",
								"type": "object",
								"description": "The node identification."
							}
						},
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ProcessFlowNode.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getIsTitleClickable isTitleClickable} : boolean (default: false)</li>\n<li>{@link #getLaneId laneId} : string</li>\n<li>{@link #getNodeId nodeId} : string</li>\n<li>{@link #getState state} : sap.suite.ui.commons.ProcessFlowNodeState (default: sap.suite.ui.commons.ProcessFlowNodeState.Neutral)</li>\n<li>{@link #getType type} : sap.suite.ui.commons.ProcessFlowNodeType (default: sap.suite.ui.commons.ProcessFlowNodeType.Single)</li>\n<li>{@link #getChildren children} : string[]</li>\n<li>{@link #getTitleAbbreviation titleAbbreviation} : string</li>\n<li>{@link #getStateText stateText} : string</li>\n<li>{@link #getTexts texts} : string[]</li>\n<li>{@link #getHighlighted highlighted} : boolean (default: false)</li>\n<li>{@link #getFocused focused} : boolean (default: false)</li>\n<li>{@link #getTag tag} : object</li>\n<li>{@link #getSelected selected} : boolean (default: false)</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul>\n<li>{@link #getParents parents} : string | sap.suite.ui.commons.ProcessFlowNode</li></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ProcessFlowNode#event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ProcessFlowNode#event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "The node identification."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired."
				},
				{
					"name": "titlePress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oEvent": {
											"name": "oEvent",
											"type": "object",
											"optional": false,
											"description": "The node identification."
										}
									}
								}
							}
						}
					],
					"description": "This event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use Press event instead ( click on the node)"
					}
				}
			],
			"methods": [
				{
					"name": "addParent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vParent",
							"type": "string|sap.suite.ui.commons.ProcessFlowNode",
							"optional": false,
							"description": "Id of a parent which becomes an additional target of this <code>parents</code> association.\n   Alternatively, a parent instance may be given."
						}
					]
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'press' event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/> itself. \n\nThis event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired."
				},
				{
					"name": "attachTitlePress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'titlePress' event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/> itself. \n\nThis event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use Press event instead ( click on the node)"
					}
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'press' event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachTitlePress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'titlePress' event of this <code>sap.suite.ui.commons.ProcessFlowNode</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration.",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use Press event instead ( click on the node)"
					}
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ProcessFlowNode with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event press to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> The node identification.</li>\n</ul>"
				},
				{
					"name": "fireTitlePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event titlePress to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oEvent' of type <code>object</code> The node identification.</li>\n</ul>",
					"deprecated": {
						"since": "1.26",
						"text": "Should not be used any longer, use Press event instead ( click on the node)"
					}
				},
				{
					"name": "getChildren",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the value of property <code>children</code>"
					},
					"description": "Getter for property <code>children</code>.\nDefines an array of children of the node.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFocused",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>focused</code>"
					},
					"description": "Getter for property <code>focused</code>.\nThe parameter defines if the node should be displayed in focus state.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getHighlighted",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>highlighted</code>"
					},
					"description": "Getter for property <code>highlighted</code>.\nThe parameter defines if the node should be displayed in highlighted state.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getIsTitleClickable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>isTitleClickable</code>"
					},
					"description": "Getter for property <code>isTitleClickable</code>.\nSpecifies if the node title is clickable.\n\nDefault value is <code>false</code>",
					"deprecated": {
						"since": "1.26",
						"text": "According to the new requirement there should be only one click event for each node (click on the whole node – see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either."
					}
				},
				{
					"name": "getLaneId",
					"visibility": "public",
					"description": "Overwrites the getter method for property laneId. It returns the artificially merged laneId, if the node is in such a lane.\nOtherwise it returns the laneId set in the model."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ProcessFlowNode."
				},
				{
					"name": "getNodeId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>nodeId</code>"
					},
					"description": "Getter for property <code>nodeId</code>.\n>Node identifier.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getParents",
					"visibility": "public",
					"returnValue": {
						"type": "string[]"
					},
					"description": "Reference to ProcessFlowNodes which appears before this ProcessFlowNode."
				},
				{
					"name": "getSelected",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>selected</code>"
					},
					"description": "Getter for property <code>selected</code>.\nThe parameter defines if the node should be displayed in selected state.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNodeState",
						"description": "the value of property <code>state</code>"
					},
					"description": "Getter for property <code>state</code>.\nState of the node.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "getStateText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>stateText</code>"
					},
					"description": "Getter for property <code>stateText</code>.\nDescription of the state, for example \"Status OK\".\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTag",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>tag</code>"
					},
					"description": "Getter for property <code>tag</code>.\nThe user-defined object which is returned back to the user by a node click event.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTexts",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the value of property <code>texts</code>"
					},
					"description": "Getter for property <code>texts</code>.\nThe property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe node title.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitleAbbreviation",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>titleAbbreviation</code>"
					},
					"description": "Getter for property <code>titleAbbreviation</code>.\nTitle abbreviation is used in the compact mode.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNodeType",
						"description": "the value of property <code>type</code>"
					},
					"description": "Getter for property <code>type</code>.\nType of the node.\n\nDefault value is <code>Single</code>"
				},
				{
					"name": "removeAllParents",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "an array with the ids of the removed elements (might be empty)"
					}
				},
				{
					"name": "removeParent",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the id of the removed parent or null"
					},
					"parameters": [
						{
							"name": "vParent",
							"type": "int|string|sap.suite.ui.commons.ProcessFlowNode",
							"optional": false,
							"description": "the parent to remove or its index or id"
						}
					]
				},
				{
					"name": "setChildren",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "aChildren",
							"type": "string[]",
							"optional": false,
							"description": "new value for property <code>children</code>"
						}
					],
					"description": "Setter for property <code>children</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFocused",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFocused",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>focused</code>"
						}
					],
					"description": "Setter for property <code>focused</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setHighlighted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHighlighted",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>highlighted</code>"
						}
					],
					"description": "Setter for property <code>highlighted</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setIsTitleClickable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsTitleClickable",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>isTitleClickable</code>"
						}
					],
					"description": "Setter for property <code>isTitleClickable</code>.\n\nDefault value is <code>false</code>",
					"deprecated": {
						"since": "1.26",
						"text": "According to the new requirement there should be only one click event for each node (click on the whole node – see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either."
					}
				},
				{
					"name": "setLaneId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLaneId",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>laneId</code>"
						}
					],
					"description": "Setter for property <code>laneId</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setNodeId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sNodeId",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>nodeId</code>"
						}
					],
					"description": "Setter for property <code>nodeId</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSelected",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>selected</code>"
						}
					],
					"description": "Setter for property <code>selected</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oState",
							"type": "sap.suite.ui.commons.ProcessFlowNodeState",
							"optional": false,
							"description": "new value for property <code>state</code>"
						}
					],
					"description": "Setter for property <code>state</code>.\n\nDefault value is <code>Neutral</code>"
				},
				{
					"name": "setStateText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStateText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>stateText</code>"
						}
					],
					"description": "Setter for property <code>stateText</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTag",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTag",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>tag</code>"
						}
					],
					"description": "Setter for property <code>tag</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTexts",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "aTexts",
							"type": "string[]",
							"optional": false,
							"description": "new value for property <code>texts</code>"
						}
					],
					"description": "Setter for property <code>texts</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitleAbbreviation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitleAbbreviation",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>titleAbbreviation</code>"
						}
					],
					"description": "Setter for property <code>titleAbbreviation</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ProcessFlowNode",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oType",
							"type": "sap.suite.ui.commons.ProcessFlowNodeType",
							"optional": false,
							"description": "new value for property <code>type</code>"
						}
					],
					"description": "Setter for property <code>type</code>.\n\nDefault value is <code>Single</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowNodeState",
			"basename": "ProcessFlowNodeState",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Describes the state info connected to the content displayed in the Process Flow Node body. Also Process Flow Lane Header uses this enumeration for the chart",
			"properties": [
				{
					"name": "Negative",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Negative status for a Created document: a document has an issue"
				},
				{
					"name": "Neutral",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Neutral status for a Created document: document is in progress"
				},
				{
					"name": "Planned",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Planned status for a document: a document is planned"
				},
				{
					"name": "PlannedNegative",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Planned document has an issue"
				},
				{
					"name": "Positive",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Positive status for a Created document: document is done, finished, solved"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowNodeType",
			"basename": "ProcessFlowNodeType",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Describes the type of a node. The type value could be single or aggregated. With this type,\nthe application can define if several nodes should be displayed as one aggregated node in a path per column to\nrepresent a grouping of semantically equal nodes.",
			"properties": [
				{
					"name": "Aggregated",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Aggregated node - several nodes are illustrated as a stack of nodes in the same path and in one column."
				},
				{
					"name": "Single",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Single node - one node is illustrated in a column."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ProcessFlowZoomLevel",
			"basename": "ProcessFlowZoomLevel",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "The zoom level defines level of details for the node and how much space the process flow requires.",
			"properties": [
				{
					"name": "Four",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Zoom level for least details - only icon is displayed."
				},
				{
					"name": "One",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The full details with normal font size."
				},
				{
					"name": "Three",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The details are the icon, title text and no additional texts."
				},
				{
					"name": "Two",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The full detail view of the node but with smaller font size."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.RepeaterViewConfiguration",
			"basename": "RepeaterViewConfiguration",
			"resource": "sap/suite/ui/commons/RepeaterViewConfiguration.js",
			"module": "sap/suite/ui/commons/RepeaterViewConfiguration",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "A configuration control defining how the content of the sap.suite.ui.commons.ViewRepeater control is displayed and what data is bound.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Standard Fiori technology should be used."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor \"icon\" property are defined, the default title \"View ##\" will be shown, where ## is an index number of the view in View Repeater starting from 1.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "iconHovered",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.",
						"methods": [
							"getIconHovered",
							"setIconHovered"
						]
					},
					{
						"name": "path",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A path used for rows/titles data binding.",
						"methods": [
							"getPath",
							"setPath"
						]
					},
					{
						"name": "itemMinWidth",
						"type": "int",
						"defaultValue": -1,
						"group": "Misc",
						"visibility": "public",
						"description": "The minimal width of the tile in this view. Only applicable if \"responsive\" property is set to true.",
						"methods": [
							"getItemMinWidth",
							"setItemMinWidth"
						]
					},
					{
						"name": "numberOfTiles",
						"type": "int",
						"defaultValue": -1,
						"group": "Misc",
						"visibility": "public",
						"description": "The number of tiles/rows that will be shown on a single page in this view.",
						"methods": [
							"getNumberOfTiles",
							"setNumberOfTiles"
						]
					},
					{
						"name": "responsive",
						"type": "any",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "This parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.",
						"methods": [
							"getResponsive",
							"setResponsive"
						]
					},
					{
						"name": "external",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates if the external representation of this view is rendered instead of the row repeater's own content.",
						"methods": [
							"getExternal",
							"setExternal"
						]
					},
					{
						"name": "iconSelected",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.",
						"methods": [
							"getIconSelected",
							"setIconSelected"
						]
					},
					{
						"name": "itemHeight",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.",
						"methods": [
							"getItemHeight",
							"setItemHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "template",
						"singularName": "template",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The control used as a template while displaying rows/tiles in this view. It should not have fixed width wider than defined by the \"itemMinWidth\" property, otherwise some content may appear cropped.",
						"methods": [
							"getTemplate",
							"destroyTemplate",
							"setTemplate"
						]
					},
					{
						"name": "externalRepresentation",
						"singularName": "externalRepresentation",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The control to be rendered instead of sap.suite.ui.commons.ViewRepeater's own content. Only used if the \"external\" property is set to true. This allows you to create custom views, for example, Table views. The sap.suite.ui.commons.ViewRepeater control will share its model with this control if the control does not have its own model.",
						"methods": [
							"getExternalRepresentation",
							"destroyExternalRepresentation",
							"setExternalRepresentation"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new RepeaterViewConfiguration.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getIcon icon} : sap.ui.core.URI</li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI</li>\n<li>{@link #getPath path} : string</li>\n<li>{@link #getItemMinWidth itemMinWidth} : int (default: -1)</li>\n<li>{@link #getNumberOfTiles numberOfTiles} : int (default: -1)</li>\n<li>{@link #getResponsive responsive} : any (default: false)</li>\n<li>{@link #getExternal external} : boolean (default: false)</li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI</li>\n<li>{@link #getItemHeight itemHeight} : int</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getTemplate template} : sap.ui.core.Control</li>\n<li>{@link #getExternalRepresentation externalRepresentation} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyExternalRepresentation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the externalRepresentation in the aggregation \nnamed <code>externalRepresentation</code>."
				},
				{
					"name": "destroyTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the template in the aggregation \nnamed <code>template</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.RepeaterViewConfiguration with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getExternal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>external</code>"
					},
					"description": "Getter for property <code>external</code>.\nIndicates if the external representation of this view is rendered instead of the row repeater's own content.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getExternalRepresentation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>externalRepresentation</code>.<br/>\nThe control to be rendered instead of sap.suite.ui.commons.ViewRepeater's own content. Only used if the \"external\" property is set to true. This allows you to create custom views, for example, Table views. The sap.suite.ui.commons.ViewRepeater control will share its model with this control if the control does not have its own model."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>icon</code>"
					},
					"description": "Getter for property <code>icon</code>.\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>iconHovered</code>"
					},
					"description": "Getter for property <code>iconHovered</code>.\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>iconSelected</code>"
					},
					"description": "Getter for property <code>iconSelected</code>.\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getItemHeight",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>itemHeight</code>"
					},
					"description": "Getter for property <code>itemHeight</code>.\nThe height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getItemMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>itemMinWidth</code>"
					},
					"description": "Getter for property <code>itemMinWidth</code>.\nThe minimal width of the tile in this view. Only applicable if \"responsive\" property is set to true.\n\nDefault value is <code>-1</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.RepeaterViewConfiguration."
				},
				{
					"name": "getNumberOfTiles",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>numberOfTiles</code>"
					},
					"description": "Getter for property <code>numberOfTiles</code>.\nThe number of tiles/rows that will be shown on a single page in this view.\n\nDefault value is <code>-1</code>"
				},
				{
					"name": "getPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>path</code>"
					},
					"description": "Getter for property <code>path</code>.\nA path used for rows/titles data binding.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of property <code>responsive</code>"
					},
					"description": "Getter for property <code>responsive</code>.\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>template</code>.<br/>\nThe control used as a template while displaying rows/tiles in this view. It should not have fixed width wider than defined by the \"itemMinWidth\" property, otherwise some content may appear cropped."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor \"icon\" property are defined, the default title \"View ##\" will be shown, where ## is an index number of the view in View Repeater starting from 1.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setExternal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bExternal",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>external</code>"
						}
					],
					"description": "Setter for property <code>external</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setExternalRepresentation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oExternalRepresentation",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>externalRepresentation</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>icon</code>"
						}
					],
					"description": "Setter for property <code>icon</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIconHovered",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconHovered",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>iconHovered</code>"
						}
					],
					"description": "Setter for property <code>iconHovered</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIconSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconSelected",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>iconSelected</code>"
						}
					],
					"description": "Setter for property <code>iconSelected</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setItemHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iItemHeight",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>itemHeight</code>"
						}
					],
					"description": "Setter for property <code>itemHeight</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setItemMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iItemMinWidth",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>itemMinWidth</code>"
						}
					],
					"description": "Setter for property <code>itemMinWidth</code>.\n\nDefault value is <code>-1</code>"
				},
				{
					"name": "setNumberOfTiles",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iNumberOfTiles",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>numberOfTiles</code>"
						}
					],
					"description": "Setter for property <code>numberOfTiles</code>.\n\nDefault value is <code>-1</code>"
				},
				{
					"name": "setPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>path</code>"
						}
					],
					"description": "Setter for property <code>path</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oResponsive",
							"type": "any",
							"optional": false,
							"description": "new value for property <code>responsive</code>"
						}
					],
					"description": "Setter for property <code>responsive</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTemplate",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>template</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.SelectionState",
			"basename": "SelectionState",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "SelectionState",
			"properties": [
				{
					"name": "NotSelected",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "[Enter description for newValue]"
				},
				{
					"name": "Selected",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "[Enter description for newValue]"
				},
				{
					"name": "Semantic",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "[Enter description for newValue]"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.SplitButton",
			"basename": "SplitButton",
			"resource": "sap/suite/ui/commons/SplitButton.js",
			"module": "sap/suite/ui/commons/SplitButton",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The Split Button Control is a composite control that consists of a default-action Button and a Menu Button control.\nThe default-action button control represents a simple push button. It is used for initiating actions, such as save or print. It can contain some text, an icon, or both; the order of the two can be configured. The action initiated by this button is considered to be the default action for the control, and it must be one of the selections defined in the Menu Button menu.\nThe Menu Button control is a button that opens a menu upon user's click. MenuButton is a composition of the Menu control and the Button control and thus inheriting all features. When a menu item is selected by the user, MenuButton throws an event called itemSelected. The event transfers the itemId of the selected item. As an alternative, the button press event can be used which has a similar behavior.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Not Fiori."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Invisible split buttons are not rendered",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "lite",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "The split button is rendered as lite split button.",
						"methods": [
							"getLite",
							"setLite"
						]
					},
					{
						"name": "style",
						"type": "sap.ui.commons.ButtonStyle",
						"defaultValue": "Default",
						"group": "Appearance",
						"visibility": "public",
						"description": "Style of the control (e.g. emphasized, accept)",
						"methods": [
							"getStyle",
							"setStyle"
						]
					},
					{
						"name": "styled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Indicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.",
						"methods": [
							"getStyled",
							"setStyled"
						]
					},
					{
						"name": "iconFirst",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set to true (default), the display sequence is 1. icon 2. control text .",
						"methods": [
							"getIconFirst",
							"setIconFirst"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Text to be displayed for the action button.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": "",
						"group": "Appearance",
						"visibility": "public",
						"description": "Icon to be displayed as graphical element within the action button.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					}
				],
				"aggregations": [
					{
						"name": "menu",
						"singularName": "menu",
						"type": "sap.ui.commons.Menu",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Menu that shall be opened when the menu part of the button is clicked",
						"methods": [
							"getMenu",
							"destroyMenu",
							"setMenu"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new SplitButton.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)</li>\n<li>{@link #getEnabled enabled} : boolean (default: true)</li>\n<li>{@link #getLite lite} : boolean (default: false)</li>\n<li>{@link #getStyle style} : sap.ui.commons.ButtonStyle (default: sap.ui.commons.ButtonStyle.Default)</li>\n<li>{@link #getStyled styled} : boolean (default: true)</li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)</li>\n<li>{@link #getText text} : string (default: '')</li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: '')</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.ui.commons.Menu</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyMenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Menu"
					},
					"description": "Destroy the menu."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.SplitButton with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enabled</code>"
					},
					"description": "Getter for property <code>enabled</code>.\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>icon</code>"
					},
					"description": "Getter for property <code>icon</code>.\nIcon to be displayed as graphical element within the action button.\n\nDefault value is <code>''</code>"
				},
				{
					"name": "getIconFirst",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>iconFirst</code>"
					},
					"description": "Getter for property <code>iconFirst</code>.\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getLite",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>lite</code>"
					},
					"description": "Getter for property <code>lite</code>.\nThe split button is rendered as lite split button.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getMenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Menu"
					},
					"description": "Return the menu."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.SplitButton."
				},
				{
					"name": "getStyle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.ButtonStyle",
						"description": "the value of property <code>style</code>"
					},
					"description": "Getter for property <code>style</code>.\nStyle of the control (e.g. emphasized, accept)\n\nDefault value is <code>sap.ui.commons.ButtonStyle.Default</code>"
				},
				{
					"name": "getStyled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>styled</code>"
					},
					"description": "Getter for property <code>styled</code>.\nIndicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>text</code>"
					},
					"description": "Getter for property <code>text</code>.\nText to be displayed for the action button.\n\nDefault value is <code>''</code>"
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>visible</code>"
					},
					"description": "Getter for property <code>visible</code>.\nInvisible split buttons are not rendered\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "set enabled property for the control"
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false
						}
					],
					"description": "set icon (image) to be displayed in action button"
				},
				{
					"name": "setIconFirst",
					"visibility": "public",
					"parameters": [
						{
							"name": "bIconFirst",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "set if the icon for the action button be displayed before or after text"
				},
				{
					"name": "setLite",
					"visibility": "public",
					"parameters": [
						{
							"name": "bLite",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "set lite property for the control"
				},
				{
					"name": "setMenu",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.SplitButton",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMenu",
							"type": "sap.ui.commons.Menu",
							"optional": false
						},
						{
							"name": "oMenuItem",
							"type": "sap.ui.commons.MenuItem",
							"optional": false
						}
					],
					"description": "Set the menu to the button and set menu item for the action button. The menu item for action button must exist in the menu. If it doesn't exist the first menu item is set by\ndefault."
				},
				{
					"name": "setStyle",
					"visibility": "public",
					"parameters": [
						{
							"name": "oStyle",
							"type": "sap.ui.commons.ButtonStyle",
							"optional": false
						}
					],
					"description": "set style for the control"
				},
				{
					"name": "setStyled",
					"visibility": "public",
					"parameters": [
						{
							"name": "bStyled",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "set if the control is styled or not"
				},
				{
					"name": "setText",
					"visibility": "public",
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false
						}
					],
					"description": "set text for the action button"
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.SplitButton",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>visible</code>"
						}
					],
					"description": "Setter for property <code>visible</code>.\n\nDefault value is <code>true</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.TargetFilter",
			"basename": "TargetFilter",
			"resource": "sap/suite/ui/commons/TargetFilter.js",
			"module": "sap/suite/ui/commons/TargetFilter",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The analytical filter control. The control works only with the OData model connected to the analytical OData service (for example, HANA XS Analytical view exposed as an OData service).",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "entitySet",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the entity set from OData service metadata. The filtering applies to this entity set.",
						"methods": [
							"getEntitySet",
							"setEntitySet"
						]
					}
				],
				"aggregations": [
					{
						"name": "columns",
						"singularName": "column",
						"type": "sap.suite.ui.commons.TargetFilterColumn",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The list of the columns.",
						"methods": [
							"getColumns",
							"destroyColumns",
							"insertColumn",
							"addColumn",
							"removeColumn",
							"indexOfColumn",
							"removeAllColumns"
						]
					},
					{
						"name": "_countDisplay",
						"singularName": "_countDisplay",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the internal control that displays the number of entries in the filtered set.",
						"methods": [
							"get_countDisplay",
							"destroy_countDisplay",
							"set_countDisplay"
						]
					},
					{
						"name": "_quad0",
						"singularName": "_quad0",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the internal control that represents the right top quadrant.",
						"methods": [
							"get_quad0",
							"destroy_quad0",
							"set_quad0"
						]
					},
					{
						"name": "_quad1",
						"singularName": "_quad1",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the internal control that represents the left top quadrant.",
						"methods": [
							"get_quad1",
							"destroy_quad1",
							"set_quad1"
						]
					},
					{
						"name": "_quad2",
						"singularName": "_quad2",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the internal control that represents the left bottom quadrant.",
						"methods": [
							"get_quad2",
							"destroy_quad2",
							"set_quad2"
						]
					},
					{
						"name": "_quad3",
						"singularName": "_quad3",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the internal control that represents the right bottom quadrant.",
						"methods": [
							"get_quad3",
							"destroy_quad3",
							"set_quad3"
						]
					},
					{
						"name": "measureColumn",
						"singularName": "measureColumn",
						"type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The measure column.",
						"methods": [
							"getMeasureColumn",
							"destroyMeasureColumn",
							"setMeasureColumn"
						]
					}
				],
				"associations": [
					{
						"name": "selectedColumns",
						"singularName": "selectedColumn",
						"type": "sap.suite.ui.commons.TargetFilterColumn",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The list of selected columns. The index of the columns in this list corresponds to the quadrant.",
						"methods": [
							"getSelectedColumns",
							"addSelectedColumn",
							"removeSelectedColumn",
							"removeAllSelectedColumns"
						]
					}
				],
				"events": [
					{
						"name": "search",
						"visibility": "public",
						"description": "This event is fired if the user chooses the Show Selected link.",
						"methods": [
							"attachSearch",
							"detachSearch",
							"fireSearch"
						]
					},
					{
						"name": "filterChange",
						"visibility": "public",
						"description": "This event is fired if the user changes a selected filter set.",
						"methods": [
							"attachFilterChange",
							"detachFilterChange",
							"fireFilterChange"
						]
					},
					{
						"name": "cancel",
						"visibility": "public",
						"description": "This event is fired if the user changes a selected filter set to the filter set used for the last search.",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TargetFilter.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.suite.ui.commons.TargetFilterColumn[]</li>\n<li>{@link #getMeasureColumn measureColumn} : sap.suite.ui.commons.TargetFilterMeasureColumn</li></ul>\n</li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedColumns selectedColumns} : string | sap.suite.ui.commons.TargetFilterColumn</li></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.TargetFilter#event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.TargetFilter#event:filterChange filterChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.TargetFilter#event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "cancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired if the user changes a selected filter set to the filter set used for the last search."
				},
				{
					"name": "filterChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired if the user changes a selected filter set."
				},
				{
					"name": "search",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired if the user chooses the Show Selected link."
				}
			],
			"methods": [
				{
					"name": "addColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.commons.TargetFilterColumn",
							"optional": false,
							"description": "the column to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some column <code>oColumn</code> \nto the aggregation named <code>columns</code>."
				},
				{
					"name": "addSelectedColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vSelectedColumn",
							"type": "string|sap.suite.ui.commons.TargetFilterColumn",
							"optional": false,
							"description": "Id of a selectedColumn which becomes an additional target of this <code>selectedColumns</code> association.\n   Alternatively, a selectedColumn instance may be given."
						}
					]
				},
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'cancel' event of this <code>sap.suite.ui.commons.TargetFilter</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TargetFilter</code>.<br/> itself. \n\nThis event is fired if the user changes a selected filter set to the filter set used for the last search."
				},
				{
					"name": "attachFilterChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'filterChange' event of this <code>sap.suite.ui.commons.TargetFilter</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TargetFilter</code>.<br/> itself. \n\nThis event is fired if the user changes a selected filter set."
				},
				{
					"name": "attachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'search' event of this <code>sap.suite.ui.commons.TargetFilter</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TargetFilter</code>.<br/> itself. \n\nThis event is fired if the user chooses the Show Selected link."
				},
				{
					"name": "destroyColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the columns in the aggregation \nnamed <code>columns</code>."
				},
				{
					"name": "destroyMeasureColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the measureColumn in the aggregation \nnamed <code>measureColumn</code>."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'cancel' event of this <code>sap.suite.ui.commons.TargetFilter</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFilterChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'filterChange' event of this <code>sap.suite.ui.commons.TargetFilter</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'search' event of this <code>sap.suite.ui.commons.TargetFilter</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.TargetFilter with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event cancel to attached listeners."
				},
				{
					"name": "fireFilterChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event filterChange to attached listeners."
				},
				{
					"name": "fireSearch",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event search to attached listeners."
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterColumn[]"
					},
					"description": "Getter for aggregation <code>columns</code>.<br/>\nThe list of the columns."
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>entitySet</code>"
					},
					"description": "Getter for property <code>entitySet</code>.\nThe name of the entity set from OData service metadata. The filtering applies to this entity set.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFilters",
					"visibility": "public",
					"returnValue": {
						"type": "any"
					},
					"description": "Returns a selected filter set."
				},
				{
					"name": "getMeasureColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterMeasureColumn"
					},
					"description": "Getter for aggregation <code>measureColumn</code>.<br/>\nThe measure column."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.TargetFilter."
				},
				{
					"name": "getParameters",
					"visibility": "public",
					"returnValue": {
						"type": "any"
					},
					"description": "Returns the binding parameters for the controls that use this control."
				},
				{
					"name": "getSelectedColumns",
					"visibility": "public",
					"returnValue": {
						"type": "string[]"
					},
					"description": "The list of selected columns. The index of the columns in this list corresponds to the quadrant."
				},
				{
					"name": "indexOfColumn",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.commons.TargetFilterColumn",
							"optional": false,
							"description": "the column whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.TargetFilterColumn</code> in the aggregation named <code>columns</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.suite.ui.commons.TargetFilterColumn",
							"optional": false,
							"description": "the column to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the column should be inserted at; for \n            a negative value of <code>iIndex</code>, the column is inserted at position 0; for a value \n            greater than the current size of the aggregation, the column is inserted at \n            the last position"
						}
					],
					"description": "Inserts a column into the aggregation named <code>columns</code>."
				},
				{
					"name": "removeAllColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterColumn[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>columns</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSelectedColumns",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "an array with the ids of the removed elements (might be empty)"
					}
				},
				{
					"name": "removeColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterColumn",
						"description": "the removed column or null"
					},
					"parameters": [
						{
							"name": "vColumn",
							"type": "int|string|sap.suite.ui.commons.TargetFilterColumn",
							"optional": false,
							"description": "the column to remove or its index or id"
						}
					],
					"description": "Removes an column from the aggregation named <code>columns</code>."
				},
				{
					"name": "removeSelectedColumn",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the id of the removed selectedColumn or null"
					},
					"parameters": [
						{
							"name": "vSelectedColumn",
							"type": "int|string|sap.suite.ui.commons.TargetFilterColumn",
							"optional": false,
							"description": "the selectedColumn to remove or its index or id"
						}
					]
				},
				{
					"name": "search",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter"
					},
					"description": "Triggers filtering in the controls that use this control. Returns this control for the method chaining.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
				},
				{
					"name": "setEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>entitySet</code>"
						}
					],
					"description": "Setter for property <code>entitySet</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMeasureColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilter",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMeasureColumn",
							"type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>measureColumn</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.TargetFilterColumn",
			"basename": "TargetFilterColumn",
			"resource": "sap/suite/ui/commons/TargetFilterColumn.js",
			"module": "sap/suite/ui/commons/TargetFilterColumn",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The configuration element for the column in the TargetFilter control.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "path",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The binding path.",
						"methods": [
							"getPath",
							"setPath"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The column title.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "length",
						"type": "int",
						"defaultValue": 10,
						"group": "Misc",
						"visibility": "public",
						"description": "The number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved.\nThe font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.",
						"methods": [
							"getLength",
							"setLength"
						]
					},
					{
						"name": "type",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descedants. By default, sap.ui.model.type.String.\nThis property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'.\nIn other cases, the filter operator is 'EQ'.",
						"methods": [
							"getType",
							"setType"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TargetFilterColumn.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPath path} : string</li>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getLength length} : int (default: 10)</li>\n<li>{@link #getType type} : any</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.TargetFilterColumn with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getLength",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>length</code>"
					},
					"description": "Getter for property <code>length</code>.\nThe number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved.\nThe font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.\n\nDefault value is <code>10</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.TargetFilterColumn."
				},
				{
					"name": "getPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>path</code>"
					},
					"description": "Getter for property <code>path</code>.\nThe binding path.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe column title.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of property <code>type</code>"
					},
					"description": "Getter for property <code>type</code>.\nThe type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descedants. By default, sap.ui.model.type.String.\nThis property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'.\nIn other cases, the filter operator is 'EQ'.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setLength",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterColumn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iLength",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>length</code>"
						}
					],
					"description": "Setter for property <code>length</code>.\n\nDefault value is <code>10</code>"
				},
				{
					"name": "setPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterColumn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>path</code>"
						}
					],
					"description": "Setter for property <code>path</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterColumn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterColumn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oType",
							"type": "any",
							"optional": false,
							"description": "new value for property <code>type</code>"
						}
					],
					"description": "Setter for property <code>type</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.TargetFilterMeasureColumn",
			"basename": "TargetFilterMeasureColumn",
			"resource": "sap/suite/ui/commons/TargetFilterMeasureColumn.js",
			"module": "sap/suite/ui/commons/TargetFilterMeasureColumn",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "The configuration element for the measure column in the TargetFilter control.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "path",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The binding path.",
						"methods": [
							"getPath",
							"setPath"
						]
					},
					{
						"name": "type",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descedants. By default, sap.ui.model.type.Integer with enabled grouping.",
						"methods": [
							"getType",
							"setType"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TargetFilterMeasureColumn.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPath path} : string</li>\n<li>{@link #getType type} : any</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.TargetFilterMeasureColumn with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.TargetFilterMeasureColumn."
				},
				{
					"name": "getPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>path</code>"
					},
					"description": "Getter for property <code>path</code>.\nThe binding path.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of property <code>type</code>"
					},
					"description": "Getter for property <code>type</code>.\nThis property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descedants. By default, sap.ui.model.type.Integer with enabled grouping.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>path</code>"
						}
					],
					"description": "Setter for property <code>path</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TargetFilterMeasureColumn",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oType",
							"type": "any",
							"optional": false,
							"description": "new value for property <code>type</code>"
						}
					],
					"description": "Setter for property <code>type</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ThingCollection",
			"basename": "ThingCollection",
			"resource": "sap/suite/ui/commons/ThingCollection.js",
			"module": "sap/suite/ui/commons/ThingCollection",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control contains a collection of the sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer. It allows you to navigate through them as well as delete them from the collection.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the control.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Misc",
						"visibility": "public",
						"description": "The height of the control.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "minWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The minimal width of the control.",
						"methods": [
							"getMinWidth",
							"setMinWidth"
						]
					},
					{
						"name": "minHeight",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The minimal height of the control.",
						"methods": [
							"getMinHeight",
							"setMinHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.ux3.ThingViewer",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Contains a collection of sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ThingCollection.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: '100%')</li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '100%')</li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize</li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.ux3.ThingViewer[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.ux3.ThingViewer",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content <code>oContent</code> \nto the aggregation named <code>content</code>."
				},
				{
					"name": "addNextContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection"
					},
					"parameters": [
						{
							"name": "oOContent",
							"type": "sap.ui.ux3.ThingViewer",
							"optional": false,
							"description": "An instance of ThingViewer or an instance of its descendant."
						}
					],
					"description": "Inserts an element into the next display position."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ThingCollection with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.ux3.ThingViewer[]"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nContains a collection of sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nThe height of the control.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ThingCollection."
				},
				{
					"name": "getMinHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>minHeight</code>"
					},
					"description": "Getter for property <code>minHeight</code>.\nThe minimal height of the control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>minWidth</code>"
					},
					"description": "Getter for property <code>minWidth</code>.\nThe minimal width of the control.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nThe width of the control.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.ux3.ThingViewer",
							"optional": false,
							"description": "the content whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.ux3.ThingViewer</code> in the aggregation named <code>content</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.ux3.ThingViewer",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for \n            a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value \n            greater than the current size of the aggregation, the content is inserted at \n            the last position"
						}
					],
					"description": "Inserts a content into the aggregation named <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.ux3.ThingViewer[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>content</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.ux3.ThingViewer",
						"description": "the removed content or null"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.ux3.ThingViewer",
							"optional": false,
							"description": "the content to remove or its index or id"
						}
					],
					"description": "Removes an content from the aggregation named <code>content</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "setMinHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>minHeight</code>"
						}
					],
					"description": "Setter for property <code>minHeight</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMinWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>minWidth</code>"
						}
					],
					"description": "Setter for property <code>minWidth</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingCollection",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "shiftNext",
					"visibility": "public",
					"description": "Displays the next item in the collection."
				},
				{
					"name": "shiftPrev",
					"visibility": "public",
					"description": "Displays a previous item in the collection."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ThingGroupDesign",
			"basename": "ThingGroupDesign",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Defines the way how UnifiedThingGroup control is rendered.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"properties": [
				{
					"name": "TopIndent",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "In this design there is indentation between header and content of the group."
				},
				{
					"name": "ZeroIndent",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "In this design there is no indentation between header and content of the group."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ThreePanelThingInspector",
			"basename": "ThreePanelThingInspector",
			"resource": "sap/suite/ui/commons/ThreePanelThingInspector.js",
			"module": "sap/suite/ui/commons/ThreePanelThingInspector",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.ux3.ThingInspector",
			"description": "This control extends the sap.ui.ux3.ThingInspector control. It displays the sap.suite.ui.commons.ThreePanelThingViewer control in the sap.ui.ux3.Overlay control.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "showHeader",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Shows or hides a middle panel of the ThingViewer named Header that contains general information.",
						"methods": [
							"getShowHeader",
							"setShowHeader"
						]
					},
					{
						"name": "logo",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A URL of the source of the ThingViewer's key visual image.",
						"methods": [
							"getLogo",
							"setLogo"
						]
					},
					{
						"name": "sidebarWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "224px",
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the ThingViewer's navigation panel.",
						"methods": [
							"getSidebarWidth",
							"setSidebarWidth"
						]
					}
				],
				"aggregations": [
					{
						"name": "menuContent",
						"singularName": "menuContent",
						"type": "sap.ui.commons.Link",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The items of the ThingViewer's Action Menu.",
						"methods": [
							"getMenuContent",
							"destroyMenuContent",
							"insertMenuContent",
							"addMenuContent",
							"removeMenuContent",
							"indexOfMenuContent",
							"removeAllMenuContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ThreePanelThingInspector.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)</li>\n<li>{@link #getLogo logo} : sap.ui.core.URI</li>\n<li>{@link #getSidebarWidth sidebarWidth} : sap.ui.core.CSSSize (default: '224px')</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenuContent menuContent} : sap.ui.commons.Link[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.ThingInspector#constructor sap.ui.ux3.ThingInspector}\ncan be used as well."
			},
			"methods": [
				{
					"name": "addMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMenuContent",
							"type": "sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some menuContent <code>oMenuContent</code> \nto the aggregation named <code>menuContent</code>."
				},
				{
					"name": "destroyMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the menuContent in the aggregation \nnamed <code>menuContent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingInspector with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getLogo",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>logo</code>"
					},
					"description": "Getter for property <code>logo</code>.\nA URL of the source of the ThingViewer's key visual image.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link[]"
					},
					"description": "Getter for aggregation <code>menuContent</code>.<br/>\nThe items of the ThingViewer's Action Menu."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ThreePanelThingInspector."
				},
				{
					"name": "getShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showHeader</code>"
					},
					"description": "Getter for property <code>showHeader</code>.\nShows or hides a middle panel of the ThingViewer named Header that contains general information.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getSidebarWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>sidebarWidth</code>"
					},
					"description": "Getter for property <code>sidebarWidth</code>.\nThe width of the ThingViewer's navigation panel.\n\nDefault value is <code>224px</code>"
				},
				{
					"name": "indexOfMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oMenuContent",
							"type": "sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.Link</code> in the aggregation named <code>menuContent</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMenuContent",
							"type": "sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the menuContent should be inserted at; for \n            a negative value of <code>iIndex</code>, the menuContent is inserted at position 0; for a value \n            greater than the current size of the aggregation, the menuContent is inserted at \n            the last position"
						}
					],
					"description": "Inserts a menuContent into the aggregation named <code>menuContent</code>."
				},
				{
					"name": "removeAllMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>menuContent</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "the removed menuContent or null"
					},
					"parameters": [
						{
							"name": "vMenuContent",
							"type": "int|string|sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent to remove or its index or id"
						}
					],
					"description": "Removes an menuContent from the aggregation named <code>menuContent</code>."
				},
				{
					"name": "setLogo",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLogo",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>logo</code>"
						}
					],
					"description": "Setter for property <code>logo</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeader",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showHeader</code>"
						}
					],
					"description": "Setter for property <code>showHeader</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setSidebarWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSidebarWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>sidebarWidth</code>"
						}
					],
					"description": "Setter for property <code>sidebarWidth</code>.\n\nDefault value is <code>224px</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ThreePanelThingViewer",
			"basename": "ThreePanelThingViewer",
			"resource": "sap/suite/ui/commons/ThreePanelThingViewer.js",
			"module": "sap/suite/ui/commons/ThreePanelThingViewer",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.ux3.ThingViewer",
			"description": "This control extends the sap.ui.ux3.ThingViewer control. The first panel can display a thing icon, a title, the Action Menu button, up to two rows of text descriptions (the first is wrapped, the second is truncated), vertical navigation bar (sap.suite.ui.commons.VerticalNavigationBar), and an image aka key visual. The second panel displays the header area as a vertical panel containing ThingGroup objects. The third panel is a main content area designed to display ThingGroup objects.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "logo",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A URL of the source of an image known as key visual. This can be a company logo or other essential graphics.",
						"methods": [
							"getLogo",
							"setLogo"
						]
					},
					{
						"name": "showHeader",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Shows or hides a middle panel named Header that contains general information.",
						"methods": [
							"getShowHeader",
							"setShowHeader"
						]
					},
					{
						"name": "sidebarWidth",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "244px",
						"group": "Misc",
						"visibility": "public",
						"description": "The width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".",
						"methods": [
							"getSidebarWidth",
							"setSidebarWidth"
						]
					}
				],
				"aggregations": [
					{
						"name": "menuContent",
						"singularName": "menuContent",
						"type": "sap.ui.commons.Link",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "This aggregation allows you to add sap.ui.commons.Link items to the Action Menu. The menu appears as a popup when a user chooses a button in the top title section of the navigation panel.",
						"methods": [
							"getMenuContent",
							"destroyMenuContent",
							"insertMenuContent",
							"addMenuContent",
							"removeMenuContent",
							"indexOfMenuContent",
							"removeAllMenuContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ThreePanelThingViewer.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLogo logo} : sap.ui.core.URI</li>\n<li>{@link #getShowHeader showHeader} : boolean</li>\n<li>{@link #getSidebarWidth sidebarWidth} : sap.ui.core.CSSSize (default: '244px')</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenuContent menuContent} : sap.ui.commons.Link[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.ThingViewer#constructor sap.ui.ux3.ThingViewer}\ncan be used as well."
			},
			"methods": [
				{
					"name": "addMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingViewer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMenuContent",
							"type": "sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some menuContent <code>oMenuContent</code> \nto the aggregation named <code>menuContent</code>."
				},
				{
					"name": "destroyMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingViewer",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the menuContent in the aggregation \nnamed <code>menuContent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingViewer with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getLogo",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>logo</code>"
					},
					"description": "Getter for property <code>logo</code>.\nA URL of the source of an image known as key visual. This can be a company logo or other essential graphics.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link[]"
					},
					"description": "Getter for aggregation <code>menuContent</code>.<br/>\nThis aggregation allows you to add sap.ui.commons.Link items to the Action Menu. The menu appears as a popup when a user chooses a button in the top title section of the navigation panel."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ThreePanelThingViewer."
				},
				{
					"name": "getShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showHeader</code>"
					},
					"description": "Getter for property <code>showHeader</code>.\nShows or hides a middle panel named Header that contains general information.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getSidebarWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>sidebarWidth</code>"
					},
					"description": "Getter for property <code>sidebarWidth</code>.\nThe width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".\n\nDefault value is <code>244px</code>"
				},
				{
					"name": "indexOfMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oMenuContent",
							"type": "sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.commons.Link</code> in the aggregation named <code>menuContent</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingViewer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMenuContent",
							"type": "sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the menuContent should be inserted at; for \n            a negative value of <code>iIndex</code>, the menuContent is inserted at position 0; for a value \n            greater than the current size of the aggregation, the menuContent is inserted at \n            the last position"
						}
					],
					"description": "Inserts a menuContent into the aggregation named <code>menuContent</code>."
				},
				{
					"name": "removeAllMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>menuContent</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeMenuContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.commons.Link",
						"description": "the removed menuContent or null"
					},
					"parameters": [
						{
							"name": "vMenuContent",
							"type": "int|string|sap.ui.commons.Link",
							"optional": false,
							"description": "the menuContent to remove or its index or id"
						}
					],
					"description": "Removes an menuContent from the aggregation named <code>menuContent</code>."
				},
				{
					"name": "selectDefaultFacet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingViewer"
					},
					"description": "Marks the first facet(navigation item) as selected if no facets selected and fires facetSelected event."
				},
				{
					"name": "setLogo",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingViewer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLogo",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>logo</code>"
						}
					],
					"description": "Setter for property <code>logo</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setShowHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingViewer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeader",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showHeader</code>"
						}
					],
					"description": "Setter for property <code>showHeader</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSidebarWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThreePanelThingViewer",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSidebarWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>sidebarWidth</code>"
						}
					],
					"description": "Setter for property <code>sidebarWidth</code>.\n\nDefault value is <code>244px</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.TileContent",
			"basename": "TileContent",
			"resource": "sap/suite/ui/commons/TileContent.js",
			"module": "sap/suite/ui/commons/TileContent",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control serves a universal container for different types of content and footer.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated. Moved to openui5."
			},
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TileContent.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFooter footer} : string</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: \"Auto\")</li>\n<li>{@link #getUnit unit} : string</li>\n<li>{@link #getDisabled disabled} : boolean (default: false)</li>\n<li>{@link #getFrameType frameType} : sap.suite.ui.commons.FrameType (default: sap.suite.ui.commons.FrameType.Auto)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.TileContent with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nThe switchable view that depends on the tile type."
				},
				{
					"name": "getDisabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>disabled</code>"
					},
					"since": "1.23",
					"description": "Getter for property <code>disabled</code>.\nDisables control if true.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getFooter",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>footer</code>"
					},
					"description": "Getter for property <code>footer</code>.\nThe footer text of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getFrameType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FrameType",
						"description": "the value of property <code>frameType</code>"
					},
					"since": "1.25",
					"description": "Getter for property <code>frameType</code>.\nThe frame type: 1x1 or 2x1.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.TileContent."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>\"Auto\"</code>"
				},
				{
					"name": "getUnit",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>unit</code>"
					},
					"description": "Getter for property <code>unit</code>.\nThe percent sign, the currency symbol, or the unit of measure.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setDisabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.23",
					"parameters": [
						{
							"name": "bDisabled",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>disabled</code>"
						}
					],
					"description": "Setter for property <code>disabled</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFooter",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>footer</code>"
						}
					],
					"description": "Setter for property <code>footer</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setFrameType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "oFrameType",
							"type": "sap.suite.ui.commons.FrameType",
							"optional": false,
							"description": "new value for property <code>frameType</code>"
						}
					],
					"description": "Setter for property <code>frameType</code>.\n\nDefault value is <code>Auto</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>\"Auto\"</code>"
				},
				{
					"name": "setUnit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUnit",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>unit</code>"
						}
					],
					"description": "Setter for property <code>unit</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.TileContent2X2",
			"basename": "TileContent2X2",
			"resource": "sap/suite/ui/commons/TileContent2X2.js",
			"module": "sap/suite/ui/commons/TileContent2X2",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control serves a universal container for different types of content and footer.",
			"deprecated": {
				"since": "1.34",
				"text": "Deprecated."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "footer",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The footer text of the tile.",
						"methods": [
							"getFooter",
							"setFooter"
						]
					},
					{
						"name": "size",
						"type": "sap.suite.ui.commons.InfoTileSize",
						"defaultValue": "Auto",
						"group": "Misc",
						"visibility": "public",
						"description": "Updates the size of the tile. If not set then the default size is applied based on the device tile.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "unit",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The percent sign, the currency symbol, or the unit of measure.",
						"methods": [
							"getUnit",
							"setUnit"
						]
					},
					{
						"name": "disabled",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Disables control if true.",
						"methods": [
							"getDisabled",
							"setDisabled"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The switchable view that depends on the tile type.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TileContent2X2.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFooter footer} : string</li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: \"Auto\")</li>\n<li>{@link #getUnit unit} : string</li>\n<li>{@link #getDisabled disabled} : boolean (default: false)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.TileContent2X2 with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nThe switchable view that depends on the tile type."
				},
				{
					"name": "getDisabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>disabled</code>"
					},
					"description": "Getter for property <code>disabled</code>.\nDisables control if true.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getFooter",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>footer</code>"
					},
					"description": "Getter for property <code>footer</code>.\nThe footer text of the tile.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.TileContent2X2."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.InfoTileSize",
						"description": "the value of property <code>size</code>"
					},
					"description": "Getter for property <code>size</code>.\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>\"Auto\"</code>"
				},
				{
					"name": "getUnit",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>unit</code>"
					},
					"description": "Getter for property <code>unit</code>.\nThe percent sign, the currency symbol, or the unit of measure.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setDisabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisabled",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>disabled</code>"
						}
					],
					"description": "Setter for property <code>disabled</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFooter",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>footer</code>"
						}
					],
					"description": "Setter for property <code>footer</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSize",
							"type": "sap.suite.ui.commons.InfoTileSize",
							"optional": false,
							"description": "new value for property <code>size</code>"
						}
					],
					"description": "Setter for property <code>size</code>.\n\nDefault value is <code>\"Auto\"</code>"
				},
				{
					"name": "setUnit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TileContent2X2",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUnit",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>unit</code>"
						}
					],
					"description": "Setter for property <code>unit</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.Timeline",
			"basename": "Timeline",
			"resource": "sap/suite/ui/commons/Timeline.js",
			"module": "sap/suite/ui/commons/Timeline",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Timeline Control for sFin.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "data",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Data for Timeline Control..",
						"methods": [
							"getData",
							"setData"
						]
					},
					{
						"name": "sortOldestFirst",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether the oldest item will be displayed first.",
						"methods": [
							"getSortOldestFirst",
							"setSortOldestFirst"
						]
					},
					{
						"name": "axisOrientation",
						"type": "sap.suite.ui.commons.TimelineAxisOrientation",
						"defaultValue": "Vertical",
						"group": "Misc",
						"visibility": "public",
						"description": "Timeline axis orientation.",
						"methods": [
							"getAxisOrientation",
							"setAxisOrientation"
						]
					},
					{
						"name": "alignment",
						"type": "sap.suite.ui.commons.TimelineAlignment",
						"defaultValue": "Right",
						"group": "Misc",
						"visibility": "public",
						"description": "Timeline item alignment.",
						"methods": [
							"getAlignment",
							"setAlignment"
						]
					},
					{
						"name": "showIcons",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Show icon on each Timeline item.",
						"methods": [
							"getShowIcons",
							"setShowIcons"
						]
					},
					{
						"name": "noDataText",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "This text is displayed when the control has no data.",
						"methods": [
							"getNoDataText",
							"setNoDataText"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "Sets the width of the Timeline.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "enableBusyIndicator",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "When this property is set to \"true\", Timeline will display a busy indicator when data is being loaded.This BusyIndicator blocks the interaction with the items until data loading is finished.",
						"methods": [
							"getEnableBusyIndicator",
							"setEnableBusyIndicator"
						]
					},
					{
						"name": "showHeaderBar",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Show header tool bar",
						"methods": [
							"getShowHeaderBar",
							"setShowHeaderBar"
						]
					},
					{
						"name": "growing",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Sets the growing(paging) feature of control. This feature only works with model binding for aggregation \"content\".",
						"methods": [
							"getGrowing",
							"setGrowing"
						]
					},
					{
						"name": "growingThreshold",
						"type": "int",
						"defaultValue": 5,
						"group": "Misc",
						"visibility": "public",
						"description": "Number of items requested from the server. To activate this you should set \"growing\" property to \"true\".",
						"methods": [
							"getGrowingThreshold",
							"setGrowingThreshold"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Set Timeline control visibility",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "enableBackendFilter",
						"type": "boolean",
						"defaultValue": false,
						"group": "",
						"visibility": "public",
						"description": "This flag enables to get data from backend instead of deriving filter values from front-end values(displayed list).",
						"methods": [
							"getEnableBackendFilter",
							"setEnableBackendFilter"
						]
					},
					{
						"name": "enableAllInFilterItem",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "This flag enables to add 'All' in the begining of filter list",
						"methods": [
							"getEnableAllInFilterItem",
							"setEnableAllInFilterItem"
						]
					},
					{
						"name": "enableSocial",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "enable Jam Integration",
						"methods": [
							"getEnableSocial",
							"setEnableSocial"
						]
					},
					{
						"name": "showSuggestion",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"since": "1.26.1",
						"description": "If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup.",
						"methods": [
							"getShowSuggestion",
							"setShowSuggestion"
						]
					},
					{
						"name": "enableScroll",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Enable scroll bar display",
						"methods": [
							"getEnableScroll",
							"setEnableScroll"
						]
					},
					{
						"name": "forceGrowing",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, the \"More\" button will always show.",
						"methods": [
							"getForceGrowing",
							"setForceGrowing"
						]
					},
					{
						"name": "sort",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Allow only latest first sort when Sort is checked, otherwise display order in which data is received.",
						"methods": [
							"getSort",
							"setSort"
						]
					},
					{
						"name": "showFilterBar",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Set timeline filterbar visibility",
						"methods": [
							"getShowFilterBar",
							"setShowFilterBar"
						]
					},
					{
						"name": "showSearch",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Set timeline search field visibility",
						"methods": [
							"getShowSearch",
							"setShowSearch"
						]
					},
					{
						"name": "enableDoubleSided",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, timeline items will render on both sides",
						"methods": [
							"getEnableDoubleSided",
							"setEnableDoubleSided"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.suite.ui.commons.TimelineItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "List of Timeline Items.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "filterList",
						"singularName": "filterList",
						"type": "sap.suite.ui.commons.TimelineFilterListItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "sap.suite.ui.commons/TimelineFilterListItem",
						"methods": [
							"getFilterList",
							"destroyFilterList",
							"insertFilterList",
							"addFilterList",
							"removeFilterList",
							"indexOfFilterList",
							"removeAllFilterList"
						]
					},
					{
						"name": "suggestionItems",
						"singularName": "suggestionItem",
						"type": "sap.m.StandardListItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Items for suggestions",
						"methods": [
							"getSuggestionItems",
							"destroySuggestionItems",
							"insertSuggestionItem",
							"addSuggestionItem",
							"removeSuggestionItem",
							"indexOfSuggestionItem",
							"removeAllSuggestionItems"
						]
					},
					{
						"name": "customFilter",
						"singularName": "customFilter",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Provide Custom Filter here",
						"methods": [
							"getCustomFilter",
							"destroyCustomFilter",
							"setCustomFilter"
						]
					}
				],
				"events": [
					{
						"name": "filterSelectionChange",
						"visibility": "public",
						"description": "This event is getting triggered after selecting an item from filter list.",
						"parameters": {
							"selectedItem": {
								"name": "selectedItem",
								"type": "sap.suite.ui.commons.TimelineFilterListItem",
								"description": "filterClose event returns selected key value from filterList"
							}
						},
						"methods": [
							"attachFilterSelectionChange",
							"detachFilterSelectionChange",
							"fireFilterSelectionChange"
						]
					},
					{
						"name": "select",
						"visibility": "public",
						"description": "Select Timeline Item",
						"parameters": {
							"selectedItem": {
								"name": "selectedItem",
								"type": "sap.suite.ui.commons.TimelineItem",
								"description": "Selected TimelineItem"
							}
						},
						"methods": [
							"attachSelect",
							"detachSelect",
							"fireSelect"
						]
					},
					{
						"name": "addPost",
						"visibility": "public",
						"description": "Event fire when user add a new post",
						"parameters": {
							"value": {
								"name": "value",
								"type": "string",
								"description": "post message"
							}
						},
						"methods": [
							"attachAddPost",
							"detachAddPost",
							"fireAddPost"
						]
					},
					{
						"name": "suggest",
						"visibility": "public",
						"since": "1.26.1",
						"description": "This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup.",
						"parameters": {
							"suggestValue": {
								"name": "suggestValue",
								"type": "string",
								"description": "The current value which has been typed in the input."
							}
						},
						"methods": [
							"attachSuggest",
							"detachSuggest",
							"fireSuggest"
						]
					},
					{
						"name": "suggestionItemSelected",
						"visibility": "public",
						"since": "1.26.1",
						"description": "This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup.",
						"parameters": {
							"selectedItem": {
								"name": "selectedItem",
								"type": "sap.ui.core.Item",
								"description": "This is the item selected in the suggestion popup."
							}
						},
						"methods": [
							"attachSuggestionItemSelected",
							"detachSuggestionItemSelected",
							"fireSuggestionItemSelected"
						]
					},
					{
						"name": "grow",
						"visibility": "public",
						"description": "this event is fired when \"More\" button is clicked.",
						"methods": [
							"attachGrow",
							"detachGrow",
							"fireGrow"
						]
					},
					{
						"name": "filterOpen",
						"visibility": "public",
						"description": "event is fired when filter icon is clicked and filter open",
						"methods": [
							"attachFilterOpen",
							"detachFilterOpen",
							"fireFilterOpen"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Timeline.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getData data} : object</li>\n<li>{@link #getSortOldestFirst sortOldestFirst} : boolean (default: false)</li>\n<li>{@link #getAxisOrientation axisOrientation} : sap.suite.ui.commons.TimelineAxisOrientation (default: sap.suite.ui.commons.TimelineAxisOrientation.Vertical)</li>\n<li>{@link #getAlignment alignment} : sap.suite.ui.commons.TimelineAlignment (default: sap.suite.ui.commons.TimelineAlignment.Right)</li>\n<li>{@link #getShowIcons showIcons} : boolean (default: true)</li>\n<li>{@link #getNoDataText noDataText} : string</li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: '100%')</li>\n<li>{@link #getEnableBusyIndicator enableBusyIndicator} : boolean (default: true)</li>\n<li>{@link #getShowHeaderBar showHeaderBar} : boolean (default: true)</li>\n<li>{@link #getGrowing growing} : boolean (default: true)</li>\n<li>{@link #getGrowingThreshold growingThreshold} : int (default: 5)</li>\n<li>{@link #getVisible visible} : boolean (default: true)</li>\n<li>{@link #getEnableBackendFilter enableBackendFilter} : boolean (default: false)</li>\n<li>{@link #getEnableAllInFilterItem enableAllInFilterItem} : boolean (default: true)</li>\n<li>{@link #getEnableSocial enableSocial} : boolean (default: false)</li>\n<li>{@link #getShowSuggestion showSuggestion} : boolean (default: true)</li>\n<li>{@link #getEnableScroll enableScroll} : boolean (default: true)</li>\n<li>{@link #getForceGrowing forceGrowing} : boolean (default: false)</li>\n<li>{@link #getSort sort} : boolean (default: true)</li>\n<li>{@link #getShowFilterBar showFilterBar} : boolean (default: true)</li>\n<li>{@link #getShowSearch showSearch} : boolean (default: true)</li>\n<li>{@link #getEnableDoubleSided enableDoubleSided} : boolean (default: false)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.suite.ui.commons.TimelineItem[]</li>\n<li>{@link #getFilterList filterList} : sap.suite.ui.commons.TimelineFilterListItem[]</li>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.StandardListItem[]</li>\n<li>{@link #getCustomFilter customFilter} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.Timeline#event:filterSelectionChange filterSelectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.Timeline#event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.Timeline#event:addPost addPost} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.Timeline#event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.Timeline#event:suggestionItemSelected suggestionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.Timeline#event:grow grow} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.Timeline#event:filterOpen filterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "addPost",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "string",
											"optional": false,
											"description": "post message"
										}
									}
								}
							}
						}
					],
					"description": "Event fire when user add a new post"
				},
				{
					"name": "filterOpen",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "event is fired when filter icon is clicked and filter open"
				},
				{
					"name": "filterSelectionChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectedItem": {
											"name": "selectedItem",
											"type": "sap.suite.ui.commons.TimelineFilterListItem",
											"optional": false,
											"description": "filterClose event returns selected key value from filterList"
										}
									}
								}
							}
						}
					],
					"description": "This event is getting triggered after selecting an item from filter list."
				},
				{
					"name": "grow",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "this event is fired when \"More\" button is clicked."
				},
				{
					"name": "select",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectedItem": {
											"name": "selectedItem",
											"type": "sap.suite.ui.commons.TimelineItem",
											"optional": false,
											"description": "Selected TimelineItem"
										}
									}
								}
							}
						}
					],
					"description": "Select Timeline Item"
				},
				{
					"name": "suggest",
					"visibility": "public",
					"since": "1.26.1",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"suggestValue": {
											"name": "suggestValue",
											"type": "string",
											"optional": false,
											"description": "The current value which has been typed in the input."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup."
				},
				{
					"name": "suggestionItemSelected",
					"visibility": "public",
					"since": "1.26.1",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectedItem": {
											"name": "selectedItem",
											"type": "sap.ui.core.Item",
											"optional": false,
											"description": "This is the item selected in the suggestion popup."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup."
				}
			],
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.suite.ui.commons.TimelineItem",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content <code>oContent</code> \nto the aggregation named <code>content</code>."
				},
				{
					"name": "addFilterList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilterList",
							"type": "sap.suite.ui.commons.TimelineFilterListItem",
							"optional": false,
							"description": "the filterList to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some filterList <code>oFilterList</code> \nto the aggregation named <code>filterList</code>."
				},
				{
					"name": "addSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSuggestionItem",
							"type": "sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some suggestionItem <code>oSuggestionItem</code> \nto the aggregation named <code>suggestionItems</code>."
				},
				{
					"name": "adjustUI",
					"visibility": "public",
					"description": "to allow for UI layout change (public)"
				},
				{
					"name": "attachAddPost",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'addPost' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself. \n\nEvent fire when user add a new post"
				},
				{
					"name": "attachFilterOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'filterOpen' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself. \n\nevent is fired when filter icon is clicked and filter open"
				},
				{
					"name": "attachFilterSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'filterSelectionChange' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself. \n\nThis event is getting triggered after selecting an item from filter list."
				},
				{
					"name": "attachGrow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'grow' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself. \n\nthis event is fired when \"More\" button is clicked."
				},
				{
					"name": "attachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'select' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself. \n\nSelect Timeline Item"
				},
				{
					"name": "attachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'suggest' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself. \n\nThis event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup."
				},
				{
					"name": "attachSuggestionItemSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'suggestionItemSelected' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.Timeline</code>.<br/> itself. \n\nThis event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "destroyCustomFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the customFilter in the aggregation \nnamed <code>customFilter</code>."
				},
				{
					"name": "destroyFilterList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the filterList in the aggregation \nnamed <code>filterList</code>."
				},
				{
					"name": "destroySuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the suggestionItems in the aggregation \nnamed <code>suggestionItems</code>."
				},
				{
					"name": "detachAddPost",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'addPost' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFilterOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'filterOpen' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachFilterSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'filterSelectionChange' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachGrow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'grow' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelect",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'select' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'suggest' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSuggestionItemSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'suggestionItemSelected' event of this <code>sap.suite.ui.commons.Timeline</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.Timeline with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireAddPost",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event addPost to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>string</code> post message</li>\n</ul>"
				},
				{
					"name": "fireFilterOpen",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event filterOpen to attached listeners."
				},
				{
					"name": "fireFilterSelectionChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event filterSelectionChange to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectedItem' of type <code>sap.suite.ui.commons.TimelineFilterListItem</code> filterClose event returns selected key value from filterList</li>\n</ul>"
				},
				{
					"name": "fireGrow",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event grow to attached listeners."
				},
				{
					"name": "fireSelect",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event select to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectedItem' of type <code>sap.suite.ui.commons.TimelineItem</code> Selected TimelineItem</li>\n</ul>"
				},
				{
					"name": "fireSuggest",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event suggest to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'suggestValue' of type <code>string</code> The current value which has been typed in the input.</li>\n</ul>"
				},
				{
					"name": "fireSuggestionItemSelected",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event suggestionItemSelected to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectedItem' of type <code>sap.ui.core.Item</code> This is the item selected in the suggestion popup.</li>\n</ul>"
				},
				{
					"name": "getAlignment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineAlignment",
						"description": "the value of property <code>alignment</code>"
					},
					"description": "Getter for property <code>alignment</code>.\nTimeline item alignment.\n\nDefault value is <code>Right</code>"
				},
				{
					"name": "getAxisOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineAxisOrientation",
						"description": "the value of property <code>axisOrientation</code>"
					},
					"description": "Getter for property <code>axisOrientation</code>.\nTimeline axis orientation.\n\nDefault value is <code>Vertical</code>"
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem[]"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nList of Timeline Items."
				},
				{
					"name": "getCurrentFilter",
					"visibility": "public",
					"returnValue": {
						"type": "string"
					},
					"description": "Get the current selected filter key"
				},
				{
					"name": "getCustomFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>customFilter</code>.<br/>\nProvide Custom Filter here"
				},
				{
					"name": "getData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of property <code>data</code>"
					},
					"description": "Getter for property <code>data</code>.\nData for Timeline Control..\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getEnableAllInFilterItem",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enableAllInFilterItem</code>"
					},
					"description": "Getter for property <code>enableAllInFilterItem</code>.\nThis flag enables to add 'All' in the begining of filter list\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getEnableBackendFilter",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enableBackendFilter</code>"
					},
					"description": "Getter for property <code>enableBackendFilter</code>.\nThis flag enables to get data from backend instead of deriving filter values from front-end values(displayed list).\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getEnableBusyIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enableBusyIndicator</code>"
					},
					"description": "Getter for property <code>enableBusyIndicator</code>.\nWhen this property is set to \"true\", Timeline will display a busy indicator when data is being loaded.This BusyIndicator blocks the interaction with the items until data loading is finished.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getEnableDoubleSided",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enableDoubleSided</code>"
					},
					"description": "Getter for property <code>enableDoubleSided</code>.\nIf set to true, timeline items will render on both sides\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getEnableScroll",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enableScroll</code>"
					},
					"description": "Getter for property <code>enableScroll</code>.\nEnable scroll bar display\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getEnableSocial",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>enableSocial</code>"
					},
					"description": "Getter for property <code>enableSocial</code>.\nenable Jam Integration\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getFilterList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineFilterListItem[]"
					},
					"description": "Getter for aggregation <code>filterList</code>.<br/>\nsap.suite.ui.commons/TimelineFilterListItem"
				},
				{
					"name": "getForceGrowing",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>forceGrowing</code>"
					},
					"description": "Getter for property <code>forceGrowing</code>.\nIf set to true, the \"More\" button will always show.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getGrowing",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>growing</code>"
					},
					"description": "Getter for property <code>growing</code>.\nSets the growing(paging) feature of control. This feature only works with model binding for aggregation \"content\".\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getGrowingThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>growingThreshold</code>"
					},
					"description": "Getter for property <code>growingThreshold</code>.\nNumber of items requested from the server. To activate this you should set \"growing\" property to \"true\".\n\nDefault value is <code>5</code>"
				},
				{
					"name": "getHeaderBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Toolbar"
					},
					"description": "get the header bar control to customerize"
				},
				{
					"name": "getMessageStrip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.MessageStrip"
					},
					"description": "Get messagestrip"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.Timeline."
				},
				{
					"name": "getNoDataText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>noDataText</code>"
					},
					"description": "Getter for property <code>noDataText</code>.\nThis text is displayed when the control has no data.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getShowFilterBar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showFilterBar</code>"
					},
					"description": "Getter for property <code>showFilterBar</code>.\nSet timeline filterbar visibility\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowHeaderBar",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showHeaderBar</code>"
					},
					"description": "Getter for property <code>showHeaderBar</code>.\nShow header tool bar\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowIcons",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showIcons</code>"
					},
					"description": "Getter for property <code>showIcons</code>.\nShow icon on each Timeline item.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowSearch",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showSearch</code>"
					},
					"description": "Getter for property <code>showSearch</code>.\nSet timeline search field visibility\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowSuggestion",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showSuggestion</code>"
					},
					"since": "1.26.1",
					"description": "Getter for property <code>showSuggestion</code>.\nIf this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getSort",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>sort</code>"
					},
					"description": "Getter for property <code>sort</code>.\nAllow only latest first sort when Sort is checked, otherwise display order in which data is received.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getSortOldestFirst",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>sortOldestFirst</code>"
					},
					"description": "Getter for property <code>sortOldestFirst</code>.\nWhether the oldest item will be displayed first.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getSuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.StandardListItem[]"
					},
					"description": "Getter for aggregation <code>suggestionItems</code>.<br/>\nItems for suggestions"
				},
				{
					"name": "getSuspendSocailFeature",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"description": "get the suspend social feature status"
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>visible</code>"
					},
					"description": "Getter for property <code>visible</code>.\nSet Timeline control visibility\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>width</code>"
					},
					"description": "Getter for property <code>width</code>.\nSets the width of the Timeline.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.suite.ui.commons.TimelineItem",
							"optional": false,
							"description": "the content whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.TimelineItem</code> in the aggregation named <code>content</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfFilterList",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFilterList",
							"type": "sap.suite.ui.commons.TimelineFilterListItem",
							"optional": false,
							"description": "the filterList whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.TimelineFilterListItem</code> in the aggregation named <code>filterList</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSuggestionItem",
							"type": "sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.m.StandardListItem</code> in the aggregation named <code>suggestionItems</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.suite.ui.commons.TimelineItem",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for \n            a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value \n            greater than the current size of the aggregation, the content is inserted at \n            the last position"
						}
					],
					"description": "Inserts a content into the aggregation named <code>content</code>."
				},
				{
					"name": "insertFilterList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFilterList",
							"type": "sap.suite.ui.commons.TimelineFilterListItem",
							"optional": false,
							"description": "the filterList to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the filterList should be inserted at; for \n            a negative value of <code>iIndex</code>, the filterList is inserted at position 0; for a value \n            greater than the current size of the aggregation, the filterList is inserted at \n            the last position"
						}
					],
					"description": "Inserts a filterList into the aggregation named <code>filterList</code>."
				},
				{
					"name": "insertSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSuggestionItem",
							"type": "sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the suggestionItem should be inserted at; for \n            a negative value of <code>iIndex</code>, the suggestionItem is inserted at position 0; for a value \n            greater than the current size of the aggregation, the suggestionItem is inserted at \n            the last position"
						}
					],
					"description": "Inserts a suggestionItem into the aggregation named <code>suggestionItems</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>content</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllFilterList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineFilterListItem[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>filterList</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.StandardListItem[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>suggestionItems</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "the removed content or null"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.suite.ui.commons.TimelineItem",
							"optional": false,
							"description": "the content to remove or its index or id"
						}
					],
					"description": "Removes an content from the aggregation named <code>content</code>."
				},
				{
					"name": "removeFilterList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineFilterListItem",
						"description": "the removed filterList or null"
					},
					"parameters": [
						{
							"name": "vFilterList",
							"type": "int|string|sap.suite.ui.commons.TimelineFilterListItem",
							"optional": false,
							"description": "the filterList to remove or its index or id"
						}
					],
					"description": "Removes an filterList from the aggregation named <code>filterList</code>."
				},
				{
					"name": "removeSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.StandardListItem",
						"description": "the removed suggestionItem or null"
					},
					"parameters": [
						{
							"name": "vSuggestionItem",
							"type": "int|string|sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem to remove or its index or id"
						}
					],
					"description": "Removes an suggestionItem from the aggregation named <code>suggestionItems</code>."
				},
				{
					"name": "setAlignment",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAlignment",
							"type": "sap.suite.ui.commons.TimelineAlignment",
							"optional": false,
							"description": "new value for property <code>alignment</code>"
						}
					],
					"description": "Setter for property <code>alignment</code>.\n\nDefault value is <code>Right</code>"
				},
				{
					"name": "setAxisOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAxisOrientation",
							"type": "sap.suite.ui.commons.TimelineAxisOrientation",
							"optional": false,
							"description": "new value for property <code>axisOrientation</code>"
						}
					],
					"description": "Setter for property <code>axisOrientation</code>.\n\nDefault value is <code>Vertical</code>"
				},
				{
					"name": "setCurrentFilter",
					"visibility": "public",
					"parameters": [
						{
							"name": "sSelectedItemKey",
							"type": "string",
							"optional": false,
							"description": "Returns the TinelineFilterListItem"
						}
					],
					"description": "Set the current selected filter key"
				},
				{
					"name": "setCustomFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomFilter",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>customFilter</code>."
				},
				{
					"name": "setCustomMessage",
					"visibility": "public",
					"parameters": [
						{
							"name": "sMsg",
							"type": "string",
							"optional": false,
							"description": "Message to be set"
						}
					],
					"description": "set custom message"
				},
				{
					"name": "setData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "new value for property <code>data</code>"
						}
					],
					"description": "Setter for property <code>data</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setEnableAllInFilterItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableAllInFilterItem",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>enableAllInFilterItem</code>"
						}
					],
					"description": "Setter for property <code>enableAllInFilterItem</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setEnableBackendFilter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableBackendFilter",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>enableBackendFilter</code>"
						}
					],
					"description": "Setter for property <code>enableBackendFilter</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setEnableBusyIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableBusyIndicator",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>enableBusyIndicator</code>"
						}
					],
					"description": "Setter for property <code>enableBusyIndicator</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setEnableDoubleSided",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableDoubleSided",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>enableDoubleSided</code>"
						}
					],
					"description": "Setter for property <code>enableDoubleSided</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setEnableScroll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableScroll",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>enableScroll</code>"
						}
					],
					"description": "Setter for property <code>enableScroll</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setEnableSocial",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnableSocial",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>enableSocial</code>"
						}
					],
					"description": "Setter for property <code>enableSocial</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setForceGrowing",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bForceGrowing",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>forceGrowing</code>"
						}
					],
					"description": "Setter for property <code>forceGrowing</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setGrowing",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bGrowing",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>growing</code>"
						}
					],
					"description": "Setter for property <code>growing</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setGrowingThreshold",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iGrowingThreshold",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>growingThreshold</code>"
						}
					],
					"description": "Setter for property <code>growingThreshold</code>.\n\nDefault value is <code>5</code>"
				},
				{
					"name": "setNoDataText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sNoDataText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>noDataText</code>"
						}
					],
					"description": "Setter for property <code>noDataText</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setShowFilterBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowFilterBar",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showFilterBar</code>"
						}
					],
					"description": "Setter for property <code>showFilterBar</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowHeaderBar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowHeaderBar",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showHeaderBar</code>"
						}
					],
					"description": "Setter for property <code>showHeaderBar</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowIcons",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowIcons",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showIcons</code>"
						}
					],
					"description": "Setter for property <code>showIcons</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSearch",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showSearch</code>"
						}
					],
					"description": "Setter for property <code>showSearch</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowSuggestion",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "bShowSuggestion",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showSuggestion</code>"
						}
					],
					"description": "Setter for property <code>showSuggestion</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setSort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSort",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>sort</code>"
						}
					],
					"description": "Setter for property <code>sort</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setSortOldestFirst",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSortOldestFirst",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>sortOldestFirst</code>"
						}
					],
					"description": "Setter for property <code>sortOldestFirst</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setSuspendSocialFeature",
					"visibility": "public",
					"parameters": [
						{
							"name": "bBSuspend",
							"type": "boolean",
							"optional": false,
							"description": "boolean value for suspend or not."
						}
					],
					"description": "when set to true, the Add Post and Reply feature will be grayed out ."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>visible</code>"
						}
					],
					"description": "Setter for property <code>visible</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.Timeline",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>width</code>"
						}
					],
					"description": "Setter for property <code>width</code>.\n\nDefault value is <code>100%</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.TimelineAlignment",
			"basename": "TimelineAlignment",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Where to align items with respect to the time line.",
			"properties": [
				{
					"name": "Right",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Right"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.TimelineAxisOrientation",
			"basename": "TimelineAxisOrientation",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Timeline Axis Orientation",
			"properties": [
				{
					"name": "Horizontal",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Horizontal Orientation"
				},
				{
					"name": "Vertical",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Vertical Orientation"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.TimelineFilterListItem",
			"basename": "TimelineFilterListItem",
			"resource": "sap/suite/ui/commons/TimelineFilterListItem.js",
			"module": "sap/suite/ui/commons/TimelineFilterListItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Provides Filter List Item for Timeline Control",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Can be used as input for subsequent actions.",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The text to be displayed for the item.",
						"methods": [
							"getText",
							"setText"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TimelineFilterListItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string</li>\n<li>{@link #getText text} : string</li></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.TimelineFilterListItem with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>key</code>"
					},
					"description": "Getter for property <code>key</code>.\nCan be used as input for subsequent actions.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.TimelineFilterListItem."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>text</code>"
					},
					"description": "Getter for property <code>text</code>.\nThe text to be displayed for the item.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineFilterListItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>key</code>"
						}
					],
					"description": "Setter for property <code>key</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineFilterListItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>text</code>"
						}
					],
					"description": "Setter for property <code>text</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.TimelineItem",
			"basename": "TimelineItem",
			"resource": "sap/suite/ui/commons/TimelineItem.js",
			"module": "sap/suite/ui/commons/TimelineItem",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "TimelineItem",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "dateTime",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Datetime value of Timeline item",
						"methods": [
							"getDateTime",
							"setDateTime"
						]
					},
					{
						"name": "userName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "User name shown in the title",
						"methods": [
							"getUserName",
							"setUserName"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text shown in the title after user name",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text shown inside the item",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Icon for this item",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "filterValue",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text for filter value",
						"methods": [
							"getFilterValue",
							"setFilterValue"
						]
					},
					{
						"name": "userNameClickable",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Make user name as a clickable to raise userNameClicked event",
						"methods": [
							"getUserNameClickable",
							"setUserNameClickable"
						]
					},
					{
						"name": "userPicture",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "User Picture",
						"methods": [
							"getUserPicture",
							"setUserPicture"
						]
					},
					{
						"name": "replyCount",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "count of the replies to the post",
						"methods": [
							"getReplyCount",
							"setReplyCount"
						]
					},
					{
						"name": "maxCharacters",
						"type": "int",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "The expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktops as limits. Based on these values, the text of the timeline utem is collapsed once text reaches these limits. In this case, only the specified number of characters is displayed. By clicking on the text link More, the entire text can be displayed. The text link Less collapses the text. The application is able to set the value to its needs.",
						"methods": [
							"getMaxCharacters",
							"setMaxCharacters"
						]
					},
					{
						"name": "iconTooltip",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Icon Tooltip for Item",
						"methods": [
							"getIconTooltip",
							"setIconTooltip"
						]
					}
				],
				"aggregations": [
					{
						"name": "embeddedControl",
						"singularName": "embeddedControl",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Embed other control in timeline item, such as a button or a check box, etc.",
						"methods": [
							"getEmbeddedControl",
							"destroyEmbeddedControl",
							"setEmbeddedControl"
						]
					},
					{
						"name": "replyList",
						"singularName": "replyList",
						"type": "sap.m.List",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Reply list related to the post",
						"methods": [
							"getReplyList",
							"destroyReplyList",
							"setReplyList"
						]
					},
					{
						"name": "customAction",
						"singularName": "customAction",
						"type": "sap.ui.core.CustomData",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Custom actions to display as links on the social bar",
						"methods": [
							"getCustomAction",
							"destroyCustomAction",
							"insertCustomAction",
							"addCustomAction",
							"removeCustomAction",
							"indexOfCustomAction",
							"removeAllCustomAction"
						]
					},
					{
						"name": "suggestionItems",
						"singularName": "suggestionItem",
						"type": "sap.m.StandardListItem",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Items for suggestions",
						"methods": [
							"getSuggestionItems",
							"destroySuggestionItems",
							"insertSuggestionItem",
							"addSuggestionItem",
							"removeSuggestionItem",
							"indexOfSuggestionItem",
							"removeAllSuggestionItems"
						]
					},
					{
						"name": "customReply",
						"singularName": "customReply",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Customer reply for embedded reply action",
						"methods": [
							"getCustomReply",
							"destroyCustomReply",
							"setCustomReply"
						]
					}
				],
				"events": [
					{
						"name": "userNameClicked",
						"visibility": "public",
						"description": "Fire when user name in the item header is clicked",
						"methods": [
							"attachUserNameClicked",
							"detachUserNameClicked",
							"fireUserNameClicked"
						]
					},
					{
						"name": "replyPost",
						"visibility": "public",
						"description": "fire when Reply button is clicked",
						"parameters": {
							"value": {
								"name": "value",
								"type": "string",
								"description": "content of reply post"
							}
						},
						"methods": [
							"attachReplyPost",
							"detachReplyPost",
							"fireReplyPost"
						]
					},
					{
						"name": "replyListOpen",
						"visibility": "public",
						"description": "fire when the reply link is clicked to open reply popover",
						"methods": [
							"attachReplyListOpen",
							"detachReplyListOpen",
							"fireReplyListOpen"
						]
					},
					{
						"name": "customActionClicked",
						"visibility": "public",
						"description": "fire when custom action link is clicked",
						"parameters": {
							"value": {
								"name": "value",
								"type": "string",
								"description": "Value of the custom action"
							},
							"key": {
								"name": "key",
								"type": "string",
								"description": "Key of the custom action"
							},
							"linkObj": {
								"name": "linkObj",
								"type": "sap.ui.core.Control",
								"description": "Control of the custom action"
							}
						},
						"methods": [
							"attachCustomActionClicked",
							"detachCustomActionClicked",
							"fireCustomActionClicked"
						]
					},
					{
						"name": "suggest",
						"visibility": "public",
						"since": "1.28.1",
						"description": "This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup.",
						"parameters": {
							"suggestValue": {
								"name": "suggestValue",
								"type": "string",
								"description": "The current value which has been typed in the input."
							}
						},
						"methods": [
							"attachSuggest",
							"detachSuggest",
							"fireSuggest"
						]
					},
					{
						"name": "suggestionItemSelected",
						"visibility": "public",
						"since": "1.28.1",
						"description": "This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup.",
						"parameters": {
							"selectedItem": {
								"name": "selectedItem",
								"type": "sap.ui.core.Item",
								"description": "This is the item selected in the suggestion popup."
							}
						},
						"methods": [
							"attachSuggestionItemSelected",
							"detachSuggestionItemSelected",
							"fireSuggestionItemSelected"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TimelineItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDateTime dateTime} : any</li>\n<li>{@link #getUserName userName} : string</li>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getText text} : string</li>\n<li>{@link #getIcon icon} : string</li>\n<li>{@link #getFilterValue filterValue} : string</li>\n<li>{@link #getUserNameClickable userNameClickable} : boolean (default: false)</li>\n<li>{@link #getUserPicture userPicture} : sap.ui.core.URI</li>\n<li>{@link #getReplyCount replyCount} : int</li>\n<li>{@link #getMaxCharacters maxCharacters} : int</li>\n<li>{@link #getIconTooltip iconTooltip} : string</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getEmbeddedControl embeddedControl} : sap.ui.core.Control</li>\n<li>{@link #getReplyList replyList} : sap.m.List</li>\n<li>{@link #getCustomAction customAction} : sap.ui.core.CustomData[]</li>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.StandardListItem[]</li>\n<li>{@link #getCustomReply customReply} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.TimelineItem#event:userNameClicked userNameClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.TimelineItem#event:replyPost replyPost} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.TimelineItem#event:replyListOpen replyListOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.TimelineItem#event:customActionClicked customActionClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.TimelineItem#event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.TimelineItem#event:suggestionItemSelected suggestionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "customActionClicked",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "string",
											"optional": false,
											"description": "Value of the custom action"
										},
										"key": {
											"name": "key",
											"type": "string",
											"optional": false,
											"description": "Key of the custom action"
										},
										"linkObj": {
											"name": "linkObj",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "Control of the custom action"
										}
									}
								}
							}
						}
					],
					"description": "fire when custom action link is clicked"
				},
				{
					"name": "replyListOpen",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "fire when the reply link is clicked to open reply popover"
				},
				{
					"name": "replyPost",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"value": {
											"name": "value",
											"type": "string",
											"optional": false,
											"description": "content of reply post"
										}
									}
								}
							}
						}
					],
					"description": "fire when Reply button is clicked"
				},
				{
					"name": "suggest",
					"visibility": "public",
					"since": "1.28.1",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"suggestValue": {
											"name": "suggestValue",
											"type": "string",
											"optional": false,
											"description": "The current value which has been typed in the input."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup."
				},
				{
					"name": "suggestionItemSelected",
					"visibility": "public",
					"since": "1.28.1",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selectedItem": {
											"name": "selectedItem",
											"type": "sap.ui.core.Item",
											"optional": false,
											"description": "This is the item selected in the suggestion popup."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup."
				},
				{
					"name": "userNameClicked",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fire when user name in the item header is clicked"
				}
			],
			"methods": [
				{
					"name": "addCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomAction",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "the customAction to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some customAction <code>oCustomAction</code> \nto the aggregation named <code>customAction</code>."
				},
				{
					"name": "addSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSuggestionItem",
							"type": "sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some suggestionItem <code>oSuggestionItem</code> \nto the aggregation named <code>suggestionItems</code>."
				},
				{
					"name": "attachCustomActionClicked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'customActionClicked' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself. \n\nfire when custom action link is clicked"
				},
				{
					"name": "attachReplyListOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'replyListOpen' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself. \n\nfire when the reply link is clicked to open reply popover"
				},
				{
					"name": "attachReplyPost",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'replyPost' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself. \n\nfire when Reply button is clicked"
				},
				{
					"name": "attachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'suggest' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself. \n\nThis event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup."
				},
				{
					"name": "attachSuggestionItemSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'suggestionItemSelected' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself. \n\nThis event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup."
				},
				{
					"name": "attachUserNameClicked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'userNameClicked' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.TimelineItem</code>.<br/> itself. \n\nFire when user name in the item header is clicked"
				},
				{
					"name": "destroyCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the customAction in the aggregation \nnamed <code>customAction</code>."
				},
				{
					"name": "destroyCustomReply",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the customReply in the aggregation \nnamed <code>customReply</code>."
				},
				{
					"name": "destroyEmbeddedControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the embeddedControl in the aggregation \nnamed <code>embeddedControl</code>."
				},
				{
					"name": "destroyReplyList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the replyList in the aggregation \nnamed <code>replyList</code>."
				},
				{
					"name": "destroySuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the suggestionItems in the aggregation \nnamed <code>suggestionItems</code>."
				},
				{
					"name": "detachCustomActionClicked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'customActionClicked' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachReplyListOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'replyListOpen' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachReplyPost",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'replyPost' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSuggest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.1",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'suggest' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSuggestionItemSelected",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.1",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'suggestionItemSelected' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachUserNameClicked",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'userNameClicked' event of this <code>sap.suite.ui.commons.TimelineItem</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.TimelineItem with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireCustomActionClicked",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event customActionClicked to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>string</code> Value of the custom action</li>\n<li>'key' of type <code>string</code> Key of the custom action</li>\n<li>'linkObj' of type <code>sap.ui.core.Control</code> Control of the custom action</li>\n</ul>"
				},
				{
					"name": "fireReplyListOpen",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event replyListOpen to attached listeners."
				},
				{
					"name": "fireReplyPost",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event replyPost to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>string</code> content of reply post</li>\n</ul>"
				},
				{
					"name": "fireSuggest",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.1",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event suggest to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'suggestValue' of type <code>string</code> The current value which has been typed in the input.</li>\n</ul>"
				},
				{
					"name": "fireSuggestionItemSelected",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.1",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event suggestionItemSelected to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'selectedItem' of type <code>sap.ui.core.Item</code> This is the item selected in the suggestion popup.</li>\n</ul>"
				},
				{
					"name": "fireUserNameClicked",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event userNameClicked to attached listeners."
				},
				{
					"name": "getCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData[]"
					},
					"description": "Getter for aggregation <code>customAction</code>.<br/>\nCustom actions to display as links on the social bar"
				},
				{
					"name": "getCustomReply",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>customReply</code>.<br/>\nCustomer reply for embedded reply action"
				},
				{
					"name": "getDateTime",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of property <code>dateTime</code>"
					},
					"description": "Getter for property <code>dateTime</code>.\nDatetime value of Timeline item\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getEmbeddedControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>embeddedControl</code>.<br/>\nEmbed other control in timeline item, such as a button or a check box, etc."
				},
				{
					"name": "getFilterValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>filterValue</code>"
					},
					"description": "Getter for property <code>filterValue</code>.\nText for filter value\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>icon</code>"
					},
					"description": "Getter for property <code>icon</code>.\nIcon for this item\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getIconTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>iconTooltip</code>"
					},
					"description": "Getter for property <code>iconTooltip</code>.\nIcon Tooltip for Item\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMaxCharacters",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>maxCharacters</code>"
					},
					"description": "Getter for property <code>maxCharacters</code>.\nThe expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktops as limits. Based on these values, the text of the timeline utem is collapsed once text reaches these limits. In this case, only the specified number of characters is displayed. By clicking on the text link More, the entire text can be displayed. The text link Less collapses the text. The application is able to set the value to its needs.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.TimelineItem."
				},
				{
					"name": "getReplyCount",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>replyCount</code>"
					},
					"description": "Getter for property <code>replyCount</code>.\ncount of the replies to the post\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getReplyList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.List"
					},
					"description": "Getter for aggregation <code>replyList</code>.<br/>\nReply list related to the post"
				},
				{
					"name": "getSuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.StandardListItem[]"
					},
					"description": "Getter for aggregation <code>suggestionItems</code>.<br/>\nItems for suggestions"
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>text</code>"
					},
					"description": "Getter for property <code>text</code>.\nText shown inside the item\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nText shown in the title after user name\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getUserName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>userName</code>"
					},
					"description": "Getter for property <code>userName</code>.\nUser name shown in the title\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getUserNameClickable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>userNameClickable</code>"
					},
					"description": "Getter for property <code>userNameClickable</code>.\nMake user name as a clickable to raise userNameClicked event\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getUserPicture",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>userPicture</code>"
					},
					"description": "Getter for property <code>userPicture</code>.\nUser Picture\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "indexOfCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCustomAction",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "the customAction whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.CustomData</code> in the aggregation named <code>customAction</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSuggestionItem",
							"type": "sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.m.StandardListItem</code> in the aggregation named <code>suggestionItems</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomAction",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "the customAction to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the customAction should be inserted at; for \n            a negative value of <code>iIndex</code>, the customAction is inserted at position 0; for a value \n            greater than the current size of the aggregation, the customAction is inserted at \n            the last position"
						}
					],
					"description": "Inserts a customAction into the aggregation named <code>customAction</code>."
				},
				{
					"name": "insertSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSuggestionItem",
							"type": "sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the suggestionItem should be inserted at; for \n            a negative value of <code>iIndex</code>, the suggestionItem is inserted at position 0; for a value \n            greater than the current size of the aggregation, the suggestionItem is inserted at \n            the last position"
						}
					],
					"description": "Inserts a suggestionItem into the aggregation named <code>suggestionItems</code>."
				},
				{
					"name": "removeAllCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>customAction</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSuggestionItems",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.StandardListItem[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>suggestionItems</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData",
						"description": "the removed customAction or null"
					},
					"parameters": [
						{
							"name": "vCustomAction",
							"type": "int|string|sap.ui.core.CustomData",
							"optional": false,
							"description": "the customAction to remove or its index or id"
						}
					],
					"description": "Removes an customAction from the aggregation named <code>customAction</code>."
				},
				{
					"name": "removeSuggestionItem",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.StandardListItem",
						"description": "the removed suggestionItem or null"
					},
					"parameters": [
						{
							"name": "vSuggestionItem",
							"type": "int|string|sap.m.StandardListItem",
							"optional": false,
							"description": "the suggestionItem to remove or its index or id"
						}
					],
					"description": "Removes an suggestionItem from the aggregation named <code>suggestionItems</code>."
				},
				{
					"name": "setCustomMessage",
					"visibility": "public",
					"parameters": [
						{
							"name": "sMsg",
							"type": "string",
							"optional": false,
							"description": "Message to be set"
						}
					],
					"description": "set custom message"
				},
				{
					"name": "setCustomReply",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomReply",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>customReply</code>."
				},
				{
					"name": "setDateTime",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDateTime",
							"type": "any",
							"optional": false,
							"description": "new value for property <code>dateTime</code>"
						}
					],
					"description": "Setter for property <code>dateTime</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setEmbeddedControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oEmbeddedControl",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>embeddedControl</code>."
				},
				{
					"name": "setFilterValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFilterValue",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>filterValue</code>"
						}
					],
					"description": "Setter for property <code>filterValue</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>icon</code>"
						}
					],
					"description": "Setter for property <code>icon</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setIconTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIconTooltip",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>iconTooltip</code>"
						}
					],
					"description": "Setter for property <code>iconTooltip</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setMaxCharacters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iMaxCharacters",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>maxCharacters</code>"
						}
					],
					"description": "Setter for property <code>maxCharacters</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setReplyCount",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iReplyCount",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>replyCount</code>"
						}
					],
					"description": "Setter for property <code>replyCount</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setReplyList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oReplyList",
							"type": "sap.m.List",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>replyList</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>text</code>"
						}
					],
					"description": "Setter for property <code>text</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setUserName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUserName",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>userName</code>"
						}
					],
					"description": "Setter for property <code>userName</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setUserNameClickable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bUserNameClickable",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>userNameClickable</code>"
						}
					],
					"description": "Setter for property <code>userNameClickable</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setUserPicture",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.TimelineItem",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUserPicture",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>userPicture</code>"
						}
					],
					"description": "Setter for property <code>userPicture</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.TimelineItemPosition",
			"basename": "TimelineItemPosition",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Position of TimelineItem",
			"properties": [
				{
					"name": "Bottom",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "[Enter description for newValue]"
				},
				{
					"name": "Middle",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "[Enter description for newValue]"
				},
				{
					"name": "Top",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "[Enter description for newValue]"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.UnifiedThingGroup",
			"basename": "UnifiedThingGroup",
			"resource": "sap/suite/ui/commons/UnifiedThingGroup.js",
			"module": "sap/suite/ui/commons/UnifiedThingGroup",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control is used in UnifiedThingInspector to display the facet header information.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The title of the group.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "description",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The description of the group.",
						"methods": [
							"getDescription",
							"setDescription"
						]
					},
					{
						"name": "design",
						"type": "sap.suite.ui.commons.ThingGroupDesign",
						"defaultValue": "ZeroIndent",
						"group": "Misc",
						"visibility": "public",
						"description": "Defines how the control is rendered.",
						"methods": [
							"getDesign",
							"setDesign"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The content of the group.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new UnifiedThingGroup.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getDescription description} : string</li>\n<li>{@link #getDesign design} : sap.suite.ui.commons.ThingGroupDesign (default: sap.suite.ui.commons.ThingGroupDesign.ZeroIndent)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul>"
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingGroup",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the content in the aggregation \nnamed <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.UnifiedThingGroup with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Getter for aggregation <code>content</code>.<br/>\nThe content of the group."
				},
				{
					"name": "getDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>description</code>"
					},
					"description": "Getter for property <code>description</code>.\nThe description of the group.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ThingGroupDesign",
						"description": "the value of property <code>design</code>"
					},
					"description": "Getter for property <code>design</code>.\nDefines how the control is rendered.\n\nDefault value is <code>ZeroIndent</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.UnifiedThingGroup."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe title of the group.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingGroup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false
						}
					],
					"description": "Setter for the aggregated <code>content</code>."
				},
				{
					"name": "setDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingGroup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>description</code>"
						}
					],
					"description": "Setter for property <code>description</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDesign",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingGroup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDesign",
							"type": "sap.suite.ui.commons.ThingGroupDesign",
							"optional": false,
							"description": "new value for property <code>design</code>"
						}
					],
					"description": "Setter for property <code>design</code>.\n\nDefault value is <code>ZeroIndent</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingGroup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.UnifiedThingInspector",
			"basename": "UnifiedThingInspector",
			"resource": "sap/suite/ui/commons/UnifiedThingInspector.js",
			"module": "sap/suite/ui/commons/UnifiedThingInspector",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "This control provides an ability to display a thing (for example, object factsheet) on the desktop, tablet, and phone devices in a Fiori style.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Object page should be used instead."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Misc",
						"visibility": "public",
						"description": "The height of the control.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "title",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The title of the thing.",
						"methods": [
							"getTitle",
							"setTitle"
						]
					},
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the thing.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "description",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The description of the thing.",
						"methods": [
							"getDescription",
							"setDescription"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "transactionsVisible",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, the Transaction button appears.",
						"methods": [
							"getTransactionsVisible",
							"setTransactionsVisible"
						]
					},
					{
						"name": "actionsVisible",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, the Actions button appears.",
						"methods": [
							"getActionsVisible",
							"setActionsVisible"
						]
					},
					{
						"name": "destroyPageOnBack",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, destroys a page when the user chooses the Back button to leave this page.",
						"methods": [
							"getDestroyPageOnBack",
							"setDestroyPageOnBack"
						]
					},
					{
						"name": "configurationVisible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "If set to true, the Configuration button appears.",
						"methods": [
							"getConfigurationVisible",
							"setConfigurationVisible"
						]
					}
				],
				"aggregations": [
					{
						"name": "facets",
						"singularName": "facet",
						"type": "sap.suite.ui.commons.FacetOverview",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The list of the sap.suite.ui.commons.FacetOverview objects.",
						"methods": [
							"getFacets",
							"destroyFacets",
							"insertFacet",
							"addFacet",
							"removeFacet",
							"indexOfFacet",
							"removeAllFacets"
						]
					},
					{
						"name": "facetContent",
						"singularName": "facetContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content that appears on the detail page of the UnifiedThingInspector.",
						"methods": [
							"getFacetContent",
							"destroyFacetContent",
							"insertFacetContent",
							"addFacetContent",
							"removeFacetContent",
							"indexOfFacetContent",
							"removeAllFacetContent"
						]
					},
					{
						"name": "navContainer",
						"singularName": "navContainer",
						"type": "sap.m.NavContainer",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the sap.m.NavContainer control.",
						"methods": [
							"getNavContainer",
							"destroyNavContainer",
							"setNavContainer"
						]
					},
					{
						"name": "kpis",
						"singularName": "kpi",
						"type": "sap.suite.ui.commons.KpiTile",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "A set of the KPI tiles to be shown in the header. Currently only 3 tiles from the list are displayed on the desktop and tablet. On the phone, all tiles are displayed in a swipeable container.",
						"methods": [
							"getKpis",
							"destroyKpis",
							"insertKpi",
							"addKpi",
							"removeKpi",
							"indexOfKpi",
							"removeAllKpis"
						]
					},
					{
						"name": "transactions",
						"singularName": "transaction",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Menu items for transaction popup.",
						"deprecated": {
							"since": "1.18.2",
							"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
						},
						"methods": [
							"getTransactions",
							"destroyTransactions",
							"insertTransaction",
							"addTransaction",
							"removeTransaction",
							"indexOfTransaction",
							"removeAllTransactions"
						]
					},
					{
						"name": "actions",
						"singularName": "action",
						"type": "sap.m.Button",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Action sheet controls.",
						"deprecated": {
							"since": "1.18.2",
							"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
						},
						"methods": [
							"getActions",
							"destroyActions",
							"insertAction",
							"addAction",
							"removeAction",
							"indexOfAction",
							"removeAllActions"
						]
					},
					{
						"name": "pages",
						"singularName": "page",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Contains pages except for Master and Detail.",
						"methods": [
							"getPages",
							"destroyPages",
							"insertPage",
							"addPage",
							"removePage",
							"indexOfPage",
							"removeAllPages"
						]
					},
					{
						"name": "objectHeader",
						"singularName": "objectHeader",
						"type": "sap.m.ObjectHeader",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The hidden aggregation for the sap.m.ObjectHeader control.",
						"methods": [
							"getObjectHeader",
							"destroyObjectHeader",
							"setObjectHeader"
						]
					}
				],
				"events": [
					{
						"name": "backAction",
						"visibility": "public",
						"description": "The event is fired when the user chooses the Back button.",
						"methods": [
							"attachBackAction",
							"detachBackAction",
							"fireBackAction"
						]
					},
					{
						"name": "transactionsButtonPress",
						"visibility": "public",
						"description": "The event is fired when the user chooses the Transactions button.",
						"parameters": {
							"caller": {
								"name": "caller",
								"type": "object",
								"description": "The object that initiated the event."
							}
						},
						"methods": [
							"attachTransactionsButtonPress",
							"detachTransactionsButtonPress",
							"fireTransactionsButtonPress"
						]
					},
					{
						"name": "actionsButtonPress",
						"visibility": "public",
						"description": "The event is fired when the user chooses the Actions button.",
						"parameters": {
							"caller": {
								"name": "caller",
								"type": "object",
								"description": "The object that initiated the event."
							}
						},
						"methods": [
							"attachActionsButtonPress",
							"detachActionsButtonPress",
							"fireActionsButtonPress"
						]
					},
					{
						"name": "configurationButtonPress",
						"visibility": "public",
						"description": "The event is fired when the user chooses the Configuration button.",
						"parameters": {
							"caller": {
								"name": "caller",
								"type": "object",
								"description": "The object that initiated the event."
							}
						},
						"methods": [
							"attachConfigurationButtonPress",
							"detachConfigurationButtonPress",
							"fireConfigurationButtonPress"
						]
					},
					{
						"name": "navigate",
						"visibility": "public",
						"description": "The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.\nThis event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page that was shown before the current navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page that was shown before the current navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page that will be shown after the current navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page that will be shown after the current navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Whether the \"to\" page (more precisely: a control with the ID of the page that is currently navigated to) has not been shown/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Whether this is a forward navigation, triggered by \"to()\"."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Whether this is a back navigation, triggered by \"back()\"."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Whether this is a navigation to the root page, triggered by \"backToTop()\"."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"since": "1.7.2",
								"description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachNavigate",
							"detachNavigate",
							"fireNavigate"
						]
					},
					{
						"name": "afterNavigate",
						"visibility": "public",
						"description": "The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event.\nThis event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page that had been shown before navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page that had been shown before navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page that is now shown after navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page that is now shown after navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Whether the \"to\" page (more precisely: a control with the ID of the page that has been navigated to) had not been shown/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Whether was a forward navigation, triggered by \"to()\"."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Whether this was a back navigation, triggered by \"back()\"."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"since": "1.7.2",
								"description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachAfterNavigate",
							"detachAfterNavigate",
							"fireAfterNavigate"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new UnifiedThingInspector.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '100%')</li>\n<li>{@link #getTitle title} : string</li>\n<li>{@link #getName name} : string</li>\n<li>{@link #getDescription description} : string</li>\n<li>{@link #getIcon icon} : sap.ui.core.URI</li>\n<li>{@link #getTransactionsVisible transactionsVisible} : boolean (default: false)</li>\n<li>{@link #getActionsVisible actionsVisible} : boolean (default: false)</li>\n<li>{@link #getDestroyPageOnBack destroyPageOnBack} : boolean (default: true)</li>\n<li>{@link #getConfigurationVisible configurationVisible} : boolean (default: true)</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getFacets facets} : sap.suite.ui.commons.FacetOverview[]</li>\n<li>{@link #getFacetContent facetContent} : sap.ui.core.Control[]</li>\n<li>{@link #getKpis kpis} : sap.suite.ui.commons.KpiTile[]</li>\n<li>{@link #getTransactions transactions} : sap.ui.core.Control[]</li>\n<li>{@link #getActions actions} : sap.m.Button[]</li>\n<li>{@link #getPages pages} : sap.ui.core.Control[]</li></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.UnifiedThingInspector#event:backAction backAction} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.UnifiedThingInspector#event:transactionsButtonPress transactionsButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.UnifiedThingInspector#event:actionsButtonPress actionsButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.UnifiedThingInspector#event:configurationButtonPress configurationButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.UnifiedThingInspector#event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.UnifiedThingInspector#event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul>"
			},
			"events": [
				{
					"name": "actionsButtonPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"caller": {
											"name": "caller",
											"type": "object",
											"optional": false,
											"description": "The object that initiated the event."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the Actions button."
				},
				{
					"name": "afterNavigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page that had been shown before navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page that had been shown before navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page that is now shown after navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page that is now shown after navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Whether the \"to\" page (more precisely: a control with the ID of the page that has been navigated to) had not been shown/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Whether was a forward navigation, triggered by \"to()\"."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Whether this was a back navigation, triggered by \"back()\"."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event.\nThis event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
				},
				{
					"name": "backAction",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the Back button."
				},
				{
					"name": "configurationButtonPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"caller": {
											"name": "caller",
											"type": "object",
											"optional": false,
											"description": "The object that initiated the event."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the Configuration button."
				},
				{
					"name": "navigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page that was shown before the current navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page that was shown before the current navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page that will be shown after the current navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page that will be shown after the current navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Whether the \"to\" page (more precisely: a control with the ID of the page that is currently navigated to) has not been shown/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Whether this is a forward navigation, triggered by \"to()\"."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Whether this is a back navigation, triggered by \"back()\"."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Whether this is a navigation to the root page, triggered by \"backToTop()\"."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Whether this was a navigation to the root page, triggered by \"backToTop()\"."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.\nThis event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
				},
				{
					"name": "transactionsButtonPress",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"caller": {
											"name": "caller",
											"type": "object",
											"optional": false,
											"description": "The object that initiated the event."
										}
									}
								}
							}
						}
					],
					"description": "The event is fired when the user chooses the Transactions button."
				}
			],
			"methods": [
				{
					"name": "addAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the action to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some action <code>oAction</code> \nto the aggregation named <code>actions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
					}
				},
				{
					"name": "addFacet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFacet",
							"type": "sap.suite.ui.commons.FacetOverview",
							"optional": false,
							"description": "the facet to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some facet <code>oFacet</code> \nto the aggregation named <code>facets</code>."
				},
				{
					"name": "addFacetContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFacetContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the facetContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some facetContent <code>oFacetContent</code> \nto the aggregation named <code>facetContent</code>."
				},
				{
					"name": "addKpi",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oKpi",
							"type": "sap.suite.ui.commons.KpiTile",
							"optional": false,
							"description": "the kpi to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some kpi <code>oKpi</code> \nto the aggregation named <code>kpis</code>."
				},
				{
					"name": "addPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the page to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some page <code>oPage</code> \nto the aggregation named <code>pages</code>."
				},
				{
					"name": "addTransaction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTransaction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the transaction to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some transaction <code>oTransaction</code> \nto the aggregation named <code>transactions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
					}
				},
				{
					"name": "attachActionsButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'actionsButtonPress' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself. \n\nThe event is fired when the user chooses the Actions button."
				},
				{
					"name": "attachAfterNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'afterNavigate' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself. \n\nThe event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event.\nThis event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
				},
				{
					"name": "attachBackAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'backAction' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself. \n\nThe event is fired when the user chooses the Back button."
				},
				{
					"name": "attachConfigurationButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'configurationButtonPress' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself. \n\nThe event is fired when the user chooses the Configuration button."
				},
				{
					"name": "attachNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'navigate' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself. \n\nThe event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.\nThis event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages."
				},
				{
					"name": "attachTransactionsButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'transactionsButtonPress' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/> itself. \n\nThe event is fired when the user chooses the Transactions button."
				},
				{
					"name": "destroyActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the actions in the aggregation \nnamed <code>actions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
					}
				},
				{
					"name": "destroyFacetContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the facetContent in the aggregation \nnamed <code>facetContent</code>."
				},
				{
					"name": "destroyFacets",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the facets in the aggregation \nnamed <code>facets</code>."
				},
				{
					"name": "destroyKpis",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the kpis in the aggregation \nnamed <code>kpis</code>."
				},
				{
					"name": "destroyPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the pages in the aggregation \nnamed <code>pages</code>."
				},
				{
					"name": "destroyTransactions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the transactions in the aggregation \nnamed <code>transactions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
					}
				},
				{
					"name": "detachActionsButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'actionsButtonPress' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'afterNavigate' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBackAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'backAction' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachConfigurationButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'configurationButtonPress' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'navigate' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachTransactionsButtonPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'transactionsButtonPress' event of this <code>sap.suite.ui.commons.UnifiedThingInspector</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.UnifiedThingInspector with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireActionsButtonPress",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether to prevent the default action"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event actionsButtonPress to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\nExpects following event parameters:\n<ul>\n<li>'caller' of type <code>object</code> The object that initiated the event.</li>\n</ul>"
				},
				{
					"name": "fireAfterNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event afterNavigate to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'from' of type <code>sap.ui.core.Control</code> The page that had been shown before navigation.</li>\n<li>'fromId' of type <code>string</code> The ID of the page that had been shown before navigation.</li>\n<li>'to' of type <code>sap.ui.core.Control</code> The page that is now shown after navigation.</li>\n<li>'toId' of type <code>string</code> The ID of the page that is now shown after navigation.</li>\n<li>'firstTime' of type <code>boolean</code> Whether the \"to\" page (more precisely: a control with the ID of the page that has been navigated to) had not been shown/navigated to before.</li>\n<li>'isTo' of type <code>boolean</code> Whether was a forward navigation, triggered by \"to()\".</li>\n<li>'isBack' of type <code>boolean</code> Whether this was a back navigation, triggered by \"back()\".</li>\n<li>'isBackToTop' of type <code>boolean</code> Whether this was a navigation to the root page, triggered by \"backToTop()\".</li>\n<li>'isBackToPage' of type <code>boolean</code> Whether this was a navigation to the root page, triggered by \"backToTop()\".</li>\n<li>'direction' of type <code>string</code> How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\".</li>\n</ul>"
				},
				{
					"name": "fireBackAction",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event backAction to attached listeners."
				},
				{
					"name": "fireConfigurationButtonPress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event configurationButtonPress to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'caller' of type <code>object</code> The object that initiated the event.</li>\n</ul>"
				},
				{
					"name": "fireNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether to prevent the default action"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event navigate to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\nExpects following event parameters:\n<ul>\n<li>'from' of type <code>sap.ui.core.Control</code> The page that was shown before the current navigation.</li>\n<li>'fromId' of type <code>string</code> The ID of the page that was shown before the current navigation.</li>\n<li>'to' of type <code>sap.ui.core.Control</code> The page that will be shown after the current navigation.</li>\n<li>'toId' of type <code>string</code> The ID of the page that will be shown after the current navigation.</li>\n<li>'firstTime' of type <code>boolean</code> Whether the \"to\" page (more precisely: a control with the ID of the page that is currently navigated to) has not been shown/navigated to before.</li>\n<li>'isTo' of type <code>boolean</code> Whether this is a forward navigation, triggered by \"to()\".</li>\n<li>'isBack' of type <code>boolean</code> Whether this is a back navigation, triggered by \"back()\".</li>\n<li>'isBackToTop' of type <code>boolean</code> Whether this is a navigation to the root page, triggered by \"backToTop()\".</li>\n<li>'isBackToPage' of type <code>boolean</code> Whether this was a navigation to the root page, triggered by \"backToTop()\".</li>\n<li>'direction' of type <code>string</code> How the navigation was triggered, possible values are: \"to\", \"back\", and \"backToTop\".</li>\n</ul>"
				},
				{
					"name": "fireTransactionsButtonPress",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether to prevent the default action"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event transactionsButtonPress to attached listeners.\n\nListeners may prevent the default action of this event using the preventDefault-method on the event object.\n\nExpects following event parameters:\n<ul>\n<li>'caller' of type <code>object</code> The object that initiated the event.</li>\n</ul>"
				},
				{
					"name": "getActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]"
					},
					"description": "Getter for aggregation <code>actions</code>.<br/>\nAction sheet controls.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
					}
				},
				{
					"name": "getActionsVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>actionsVisible</code>"
					},
					"description": "Getter for property <code>actionsVisible</code>.\nIf set to true, the Actions button appears.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getConfigurationVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>configurationVisible</code>"
					},
					"description": "Getter for property <code>configurationVisible</code>.\nIf set to true, the Configuration button appears.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getDescription",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>description</code>"
					},
					"description": "Getter for property <code>description</code>.\nThe description of the thing.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getDestroyPageOnBack",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>destroyPageOnBack</code>"
					},
					"description": "Getter for property <code>destroyPageOnBack</code>.\nIf set to true, destroys a page when the user chooses the Back button to leave this page.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getFacetContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Getter for aggregation <code>facetContent</code>.<br/>\nThe content that appears on the detail page of the UnifiedThingInspector."
				},
				{
					"name": "getFacets",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview[]"
					},
					"description": "Getter for aggregation <code>facets</code>.<br/>\nThe list of the sap.suite.ui.commons.FacetOverview objects."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nThe height of the control.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "the value of property <code>icon</code>"
					},
					"description": "Getter for property <code>icon</code>.\nThe icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getKpis",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile[]"
					},
					"description": "Getter for aggregation <code>kpis</code>.<br/>\nA set of the KPI tiles to be shown in the header. Currently only 3 tiles from the list are displayed on the desktop and tablet. On the phone, all tiles are displayed in a swipeable container."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.UnifiedThingInspector."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>name</code>"
					},
					"description": "Getter for property <code>name</code>.\nThe name of the thing.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Getter for aggregation <code>pages</code>.<br/>\nContains pages except for Master and Detail."
				},
				{
					"name": "getSelectedFacet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview"
					},
					"description": "Returns a currently selected facet."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>title</code>"
					},
					"description": "Getter for property <code>title</code>.\nThe title of the thing.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getTransactions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Getter for aggregation <code>transactions</code>.<br/>\nMenu items for transaction popup.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
					}
				},
				{
					"name": "getTransactionsVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>transactionsVisible</code>"
					},
					"description": "Getter for property <code>transactionsVisible</code>.\nIf set to true, the Transaction button appears.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "indexOfAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the action whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.m.Button</code> in the aggregation named <code>actions</code> \nand returns its index if found or -1 otherwise.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
					}
				},
				{
					"name": "indexOfFacet",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFacet",
							"type": "sap.suite.ui.commons.FacetOverview",
							"optional": false,
							"description": "the facet whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.FacetOverview</code> in the aggregation named <code>facets</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfFacetContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFacetContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the facetContent whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation named <code>facetContent</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfKpi",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oKpi",
							"type": "sap.suite.ui.commons.KpiTile",
							"optional": false,
							"description": "the kpi whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.KpiTile</code> in the aggregation named <code>kpis</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfPage",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the page whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation named <code>pages</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfTransaction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTransaction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the transaction whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation named <code>transactions</code> \nand returns its index if found or -1 otherwise.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
					}
				},
				{
					"name": "insertAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the action to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the action should be inserted at; for \n            a negative value of <code>iIndex</code>, the action is inserted at position 0; for a value \n            greater than the current size of the aggregation, the action is inserted at \n            the last position"
						}
					],
					"description": "Inserts a action into the aggregation named <code>actions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
					}
				},
				{
					"name": "insertFacet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFacet",
							"type": "sap.suite.ui.commons.FacetOverview",
							"optional": false,
							"description": "the facet to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the facet should be inserted at; for \n            a negative value of <code>iIndex</code>, the facet is inserted at position 0; for a value \n            greater than the current size of the aggregation, the facet is inserted at \n            the last position"
						}
					],
					"description": "Inserts a facet into the aggregation named <code>facets</code>."
				},
				{
					"name": "insertFacetContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFacetContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the facetContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the facetContent should be inserted at; for \n            a negative value of <code>iIndex</code>, the facetContent is inserted at position 0; for a value \n            greater than the current size of the aggregation, the facetContent is inserted at \n            the last position"
						}
					],
					"description": "Inserts a facetContent into the aggregation named <code>facetContent</code>."
				},
				{
					"name": "insertKpi",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oKpi",
							"type": "sap.suite.ui.commons.KpiTile",
							"optional": false,
							"description": "the kpi to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the kpi should be inserted at; for \n            a negative value of <code>iIndex</code>, the kpi is inserted at position 0; for a value \n            greater than the current size of the aggregation, the kpi is inserted at \n            the last position"
						}
					],
					"description": "Inserts a kpi into the aggregation named <code>kpis</code>."
				},
				{
					"name": "insertPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the page to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the page should be inserted at; for \n            a negative value of <code>iIndex</code>, the page is inserted at position 0; for a value \n            greater than the current size of the aggregation, the page is inserted at \n            the last position"
						}
					],
					"description": "Inserts a page into the aggregation named <code>pages</code>."
				},
				{
					"name": "insertTransaction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTransaction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the transaction to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the transaction should be inserted at; for \n            a negative value of <code>iIndex</code>, the transaction is inserted at position 0; for a value \n            greater than the current size of the aggregation, the transaction is inserted at \n            the last position"
						}
					],
					"description": "Inserts a transaction into the aggregation named <code>transactions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
					}
				},
				{
					"name": "navigateToDetail",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector"
					},
					"description": "The control that shows the Detail page that is already set. This method can be used instead of navigateToDetailWithContent when the content is already set by addFacetContent."
				},
				{
					"name": "navigateToDetailWithContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector"
					},
					"parameters": [
						{
							"name": "oAFacetData",
							"type": "object",
							"optional": false,
							"description": "Contains content for the detail page to which the control must navigate."
						}
					],
					"description": "Navigates to the Detail page."
				},
				{
					"name": "navigateToPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector"
					},
					"parameters": [
						{
							"name": "oOPage",
							"type": "sap.m.Page",
							"optional": false,
							"description": "The sap.m.Page instance that is added to NavContainer of UnifiedThingInspector."
						},
						{
							"name": "bAddDefaultFooter",
							"type": "boolean",
							"optional": false,
							"description": "If set to true, the default page footer is added from UnifiedThingInspector."
						}
					],
					"description": "The method that adds any sap.m.Page to the aggregated NavContainer."
				},
				{
					"name": "navigateToPageId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector"
					},
					"parameters": [
						{
							"name": "sSId",
							"type": "string",
							"optional": false,
							"description": "The ID of sap.m.Page instance where the user navigates to."
						}
					],
					"description": "The method that navigates to sap.m.Page."
				},
				{
					"name": "removeAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button",
						"description": "the removed action or null"
					},
					"parameters": [
						{
							"name": "vAction",
							"type": "int|string|sap.m.Button",
							"optional": false,
							"description": "the action to remove or its index or id"
						}
					],
					"description": "Removes an action from the aggregation named <code>actions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
					}
				},
				{
					"name": "removeAllActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>actions</code>.<br/>\nAdditionally unregisters them from the hosting UIArea.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead."
					}
				},
				{
					"name": "removeAllFacetContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>facetContent</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllFacets",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>facets</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllKpis",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>kpis</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>pages</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllTransactions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>transactions</code>.<br/>\nAdditionally unregisters them from the hosting UIArea.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
					}
				},
				{
					"name": "removeFacet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.FacetOverview",
						"description": "the removed facet or null"
					},
					"parameters": [
						{
							"name": "vFacet",
							"type": "int|string|sap.suite.ui.commons.FacetOverview",
							"optional": false,
							"description": "the facet to remove or its index or id"
						}
					],
					"description": "Removes an facet from the aggregation named <code>facets</code>."
				},
				{
					"name": "removeFacetContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed facetContent or null"
					},
					"parameters": [
						{
							"name": "vFacetContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the facetContent to remove or its index or id"
						}
					],
					"description": "Removes an facetContent from the aggregation named <code>facetContent</code>."
				},
				{
					"name": "removeKpi",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.KpiTile",
						"description": "the removed kpi or null"
					},
					"parameters": [
						{
							"name": "vKpi",
							"type": "int|string|sap.suite.ui.commons.KpiTile",
							"optional": false,
							"description": "the kpi to remove or its index or id"
						}
					],
					"description": "Removes an kpi from the aggregation named <code>kpis</code>."
				},
				{
					"name": "removePage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed page or null"
					},
					"parameters": [
						{
							"name": "vPage",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the page to remove or its index or id"
						}
					],
					"description": "Removes an page from the aggregation named <code>pages</code>."
				},
				{
					"name": "removeTransaction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the removed transaction or null"
					},
					"parameters": [
						{
							"name": "vTransaction",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "the transaction to remove or its index or id"
						}
					],
					"description": "Removes an transaction from the aggregation named <code>transactions</code>.",
					"deprecated": {
						"since": "1.18.2",
						"text": "Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead."
					}
				},
				{
					"name": "setActionsVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bActionsVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>actionsVisible</code>"
						}
					],
					"description": "Setter for property <code>actionsVisible</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setConfigurationVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bConfigurationVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>configurationVisible</code>"
						}
					],
					"description": "Setter for property <code>configurationVisible</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setDescription",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDescription",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>description</code>"
						}
					],
					"description": "Setter for property <code>description</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setDestroyPageOnBack",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDestroyPageOnBack",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>destroyPageOnBack</code>"
						}
					],
					"description": "Setter for property <code>destroyPageOnBack</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "new value for property <code>icon</code>"
						}
					],
					"description": "Setter for property <code>icon</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>name</code>"
						}
					],
					"description": "Setter for property <code>name</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTitle",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>title</code>"
						}
					],
					"description": "Setter for property <code>title</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setTransactionsVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.UnifiedThingInspector",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bTransactionsVisible",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>transactionsVisible</code>"
						}
					],
					"description": "Setter for property <code>transactionsVisible</code>.\n\nDefault value is <code>false</code>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.util.DateUtils",
			"basename": "DateUtils",
			"resource": "sap/suite/ui/commons/util/DateUtils.js",
			"module": "sap/suite/ui/commons/util/DateUtils",
			"static": true,
			"visibility": "public",
			"description": "DateUtils is a static class for Date utility functions.",
			"constructor": {
				"visibility": "public",
				"description": "Constructor for DateUtils - must not be used. All functions are static, so it is illegal to call this constructor."
			},
			"methods": [
				{
					"name": "dateDaysEqual",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "true if two dates have same year, month, and day, otherwise false"
					},
					"parameters": [
						{
							"name": "dDate1",
							"type": "Date",
							"optional": false,
							"description": "First date to compare."
						},
						{
							"name": "dDate2",
							"type": "Date",
							"optional": false,
							"description": "Second date to compare."
						}
					],
					"description": "Tests to see if two dates have the same year, month, and day. Time is not included in the equality. Invalid dates, such as null or undefined, are never equal."
				},
				{
					"name": "dateMonthsEqual",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "true if two dates have same year and month, otherwise false"
					},
					"parameters": [
						{
							"name": "dDate1",
							"type": "Date",
							"optional": false,
							"description": "First date to compare."
						},
						{
							"name": "dDate2",
							"type": "Date",
							"optional": false,
							"description": "Second date to compare."
						}
					],
					"description": "Tests to see if two dates have the same year and month. Time is not included in the equality. Invalid dates, such as null or undefined, are never equal."
				},
				{
					"name": "incrementDateByIndex",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Date",
						"description": "date that is iIndex days from the dStartDate if dStartDate and iIndex are valid, otherwise null."
					},
					"parameters": [
						{
							"name": "dStartDate",
							"type": "Date",
							"optional": false,
							"description": "Start date."
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "how many days to move forward or backward from dStartDate."
						}
					],
					"description": "Returns the date that is iIndex days from the dStartDate"
				},
				{
					"name": "incrementMonthByIndex",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Date",
						"description": "date that is iIndex months from the dStartDate if dStartDate and iIndex are valid, otherwise null."
					},
					"parameters": [
						{
							"name": "dStartDate",
							"type": "Date",
							"optional": false,
							"description": "Start date."
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "how many months to move forward or backward from dStartDate."
						}
					],
					"description": "Returns the date that is iIndex months from the dStartDate"
				},
				{
					"name": "isValidDate",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be validated."
						}
					],
					"description": "Test if the given date is a valid date object. If the date is invalid an error message is logged."
				},
				{
					"name": "numberOfDaysApart",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Number",
						"description": "number of days two dates are apart"
					},
					"parameters": [
						{
							"name": "dStartDate",
							"type": "Date",
							"optional": false,
							"description": "Start date."
						},
						{
							"name": "dEndDate",
							"type": "Date",
							"optional": false,
							"description": "End date."
						}
					],
					"description": "Returns the number of days two dates are apart"
				},
				{
					"name": "numberOfMonthsApart",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Number",
						"description": "number of months two dates are apart"
					},
					"parameters": [
						{
							"name": "dStartDate",
							"type": "Date",
							"optional": false,
							"description": "Start date."
						},
						{
							"name": "dEndDate",
							"type": "Date",
							"optional": false,
							"description": "End date."
						}
					],
					"description": "Returns the number of months two dates are apart"
				},
				{
					"name": "resetDateToEndOfDay",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be adjusted."
						}
					],
					"description": "Adjust the given date to the end of the day, with time set to 23 hours, 59 minutes, and 59 seconds."
				},
				{
					"name": "resetDateToEndOfMonth",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be adjusted."
						}
					],
					"description": "Adjust the given date to the last day of the month, end of day."
				},
				{
					"name": "resetDateToEndOfWeek",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "oSettings",
							"type": "Object",
							"optional": false,
							"parameterProperties": {
								"iDuration": {
									"name": "iDuration",
									"type": "undefined",
									"optional": true,
									"defaultValue": 7,
									"description": "The number of days in the week with a minimum of 1 and maximum of 7."
								},
								"iFirstDayOfWeek": {
									"name": "iFirstDayOfWeek",
									"type": "undefined",
									"optional": true,
									"defaultValue": 1,
									"description": "The day considered to be the first day of the week. Valid values are 0-6, with 0=Sunday and 6=Saturday."
								}
							}
						}
					],
					"description": "Adjust the given date to <code>oSettings.iDuration</code> days after the day specified by <code>oSettings.iFirstDayOfWeek</code>. See <code>resetDateToStartOfWeek()</code>\nfor a description of how the date is adjusted to the first day of week."
				},
				{
					"name": "resetDateToEndOfYear",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be adjusted."
						}
					],
					"description": "Adjust the given date to the last day of the year, end of day."
				},
				{
					"name": "resetDateToStartOfDay",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be adjusted."
						}
					],
					"description": "Adjust the given date to the start of the day, with time set to 0 hours, 0 minutes, and 0 seconds."
				},
				{
					"name": "resetDateToStartOfMonth",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be adjusted."
						}
					],
					"description": "Adjust the given date to the first day of the month, start of day."
				},
				{
					"name": "resetDateToStartOfWeek",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be adjusted."
						},
						{
							"name": "iFirstDayOfWeek",
							"type": "undefined",
							"optional": true,
							"defaultValue": 1,
							"description": "The day considered to be the first day of the week. Valid values are 0-6, with 0=Sunday and 6=Saturday."
						}
					],
					"description": "Adjust the given date to the day specified by <code>iFirstDayOfWeek</code>. The date will be set to the previous first day of the week. For example, if the date is Tuesday,\nFebruary 19 and the value of <code>iFirstDayOfWeek</code> is 4 (Thursday), then the date will be adjusted to the previous Thursday, which is February 14."
				},
				{
					"name": "resetDateToStartOfYear",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "The",
							"type": "Date",
							"optional": false,
							"description": "date to be adjusted."
						}
					],
					"description": "Adjust the given date to the first day of the year, start of day."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.suite.ui.commons.ValueStatus",
			"basename": "ValueStatus",
			"resource": "sap/suite/ui/commons/library.js",
			"module": "sap/suite/ui/commons/library",
			"static": true,
			"visibility": "public",
			"description": "Marker for the key value status.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Numeric content or any other standard Fiori control should be used instead."
			},
			"properties": [
				{
					"name": "Bad",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Bad value."
				},
				{
					"name": "Critical",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Critical value."
				},
				{
					"name": "Good",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Good value."
				},
				{
					"name": "Neutral",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Positive value."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.VerticalNavigationBar",
			"basename": "VerticalNavigationBar",
			"resource": "sap/suite/ui/commons/VerticalNavigationBar.js",
			"module": "sap/suite/ui/commons/VerticalNavigationBar",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.ux3.NavigationBar",
			"description": "This control extends the sap.ui.ux3.NavigationBar and\nallows you to display navigation items vertically. The navigation list\ncan contain sap.ui.ux3.NavigationItem or\nsap.suite.ui.commons.CountingNavigationItem controls.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. sap.uxap.ObjectPageLayout should be used instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new VerticalNavigationBar.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul></ul>\n</li>\n<li>Aggregations\n<ul></ul>\n</li>\n<li>Associations\n<ul></ul>\n</li>\n<li>Events\n<ul></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.NavigationBar#constructor sap.ui.ux3.NavigationBar}\ncan be used as well."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.VerticalNavigationBar with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.VerticalNavigationBar."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.suite.ui.commons.ViewRepeater",
			"basename": "ViewRepeater",
			"resource": "sap/suite/ui/commons/ViewRepeater.js",
			"module": "sap/suite/ui/commons/ViewRepeater",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.commons.RowRepeater",
			"description": "This control extends the sap.ui.commons.RowRepeater control providing an ability to change data representation by switching between a number of views. The data can be displayed not only in rows but also in tiles that are adjusted to fill the entire horizontal space in a row.",
			"deprecated": {
				"since": "1.32",
				"text": "Deprecated. Standard Fiori technology should be used."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "itemMinWidth",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true.",
						"methods": [
							"getItemMinWidth",
							"setItemMinWidth"
						]
					},
					{
						"name": "responsive",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "This parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.",
						"methods": [
							"getResponsive",
							"setResponsive"
						]
					},
					{
						"name": "defaultViewIndex",
						"type": "int",
						"defaultValue": 0,
						"group": "Misc",
						"visibility": "public",
						"description": "The index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.",
						"methods": [
							"getDefaultViewIndex",
							"setDefaultViewIndex"
						]
					},
					{
						"name": "showSearchField",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates if the search field panel is shown.",
						"methods": [
							"getShowSearchField",
							"setShowSearchField"
						]
					},
					{
						"name": "showViews",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates if the view selector panel is shown.",
						"methods": [
							"getShowViews",
							"setShowViews"
						]
					},
					{
						"name": "external",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Indicates if the external representation of the current view is rendered.",
						"methods": [
							"getExternal",
							"setExternal"
						]
					},
					{
						"name": "itemHeight",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.",
						"methods": [
							"getItemHeight",
							"setItemHeight"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Misc",
						"visibility": "public",
						"description": "The height of the control. Only applicable if the responsive property is set to true.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				],
				"aggregations": [
					{
						"name": "views",
						"singularName": "view",
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The list of views for the data representation.",
						"methods": [
							"getViews",
							"destroyViews",
							"insertView",
							"addView",
							"removeView",
							"indexOfView",
							"removeAllViews"
						]
					}
				],
				"associations": [
					{
						"name": "externalRepresentation",
						"singularName": "externalRepresentation",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The control to be rendered instead of the repeater's own content.",
						"methods": [
							"getExternalRepresentation",
							"setExternalRepresentation"
						]
					}
				],
				"events": [
					{
						"name": "search",
						"visibility": "public",
						"description": "This event is fired when the user performs a search.",
						"parameters": {
							"query": {
								"name": "query",
								"type": "string",
								"description": "The search query."
							}
						},
						"methods": [
							"attachSearch",
							"detachSearch",
							"fireSearch"
						]
					},
					{
						"name": "changeView",
						"visibility": "public",
						"description": "This event is fired when a user switches between views.",
						"parameters": {
							"oldViewIndex": {
								"name": "oldViewIndex",
								"type": "int",
								"description": "Contains an index of the previous view in the Views aggregation."
							},
							"newViewIndex": {
								"name": "newViewIndex",
								"type": "int",
								"description": "Contains an index of the new view in the Views aggregation."
							},
							"filterId": {
								"name": "filterId",
								"type": "string",
								"description": "Contains an ID of the filter in the Filters aggregation."
							},
							"sorterId": {
								"name": "sorterId",
								"type": "string",
								"description": "Contains an ID of the sorter in the Sorters aggregation."
							},
							"page": {
								"name": "page",
								"type": "int",
								"description": "Contains a page number."
							}
						},
						"methods": [
							"attachChangeView",
							"detachChangeView",
							"fireChangeView"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ViewRepeater.\n\nAccepts an object literal <code>mSettings</code> that defines initial \nproperty values, aggregated and associated objects as well as event handlers. \n\nIf the name of a setting is ambiguous (e.g. a property has the same name as an event), \nthen the framework assumes property, aggregation, association, event in that order. \nTo override this automatic resolution, one of the prefixes \"aggregation:\", \"association:\" \nor \"event:\" can be added to the name of the setting (such a prefixed name must be\nenclosed in single or double quotes).\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getItemMinWidth itemMinWidth} : int</li>\n<li>{@link #getResponsive responsive} : boolean (default: false)</li>\n<li>{@link #getDefaultViewIndex defaultViewIndex} : int (default: 0)</li>\n<li>{@link #getShowSearchField showSearchField} : boolean (default: true)</li>\n<li>{@link #getShowViews showViews} : boolean (default: true)</li>\n<li>{@link #getExternal external} : boolean (default: false)</li>\n<li>{@link #getItemHeight itemHeight} : int</li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '100%')</li></ul>\n</li>\n<li>Aggregations\n<ul>\n<li>{@link #getViews views} : sap.suite.ui.commons.RepeaterViewConfiguration[]</li></ul>\n</li>\n<li>Associations\n<ul>\n<li>{@link #getExternalRepresentation externalRepresentation} : string | sap.ui.core.Control</li></ul>\n</li>\n<li>Events\n<ul>\n<li>{@link sap.suite.ui.commons.ViewRepeater#event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li>\n<li>{@link sap.suite.ui.commons.ViewRepeater#event:changeView changeView} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]</li></ul>\n</li>\n</ul> \n\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.RowRepeater#constructor sap.ui.commons.RowRepeater}\ncan be used as well."
			},
			"events": [
				{
					"name": "changeView",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oldViewIndex": {
											"name": "oldViewIndex",
											"type": "int",
											"optional": false,
											"description": "Contains an index of the previous view in the Views aggregation."
										},
										"newViewIndex": {
											"name": "newViewIndex",
											"type": "int",
											"optional": false,
											"description": "Contains an index of the new view in the Views aggregation."
										},
										"filterId": {
											"name": "filterId",
											"type": "string",
											"optional": false,
											"description": "Contains an ID of the filter in the Filters aggregation."
										},
										"sorterId": {
											"name": "sorterId",
											"type": "string",
											"optional": false,
											"description": "Contains an ID of the sorter in the Sorters aggregation."
										},
										"page": {
											"name": "page",
											"type": "int",
											"optional": false,
											"description": "Contains a page number."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when a user switches between views."
				},
				{
					"name": "search",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"query": {
											"name": "query",
											"type": "string",
											"optional": false,
											"description": "The search query."
										}
									}
								}
							}
						}
					],
					"description": "This event is fired when the user performs a search."
				}
			],
			"methods": [
				{
					"name": "addView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oView",
							"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
							"optional": false,
							"description": "the view to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some view <code>oView</code> \nto the aggregation named <code>views</code>."
				},
				{
					"name": "attachChangeView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'changeView' event of this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/> itself. \n\nThis event is fired when a user switches between views."
				},
				{
					"name": "attachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application specific payload object, that will be passed to the event handler along with the event object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/> itself."
						}
					],
					"description": "Attach event handler <code>fnFunction</code> to the 'search' event of this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/>.\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener<code> if specified\notherwise to this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/> itself. \n\nThis event is fired when the user performs a search."
				},
				{
					"name": "destroyViews",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys all the views in the aggregation \nnamed <code>views</code>."
				},
				{
					"name": "detachChangeView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'changeView' event of this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSearch",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called."
						}
					],
					"description": "Detach event handler <code>fnFunction</code> from the 'search' event of this <code>sap.suite.ui.commons.ViewRepeater</code>.<br/>\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.core.ElementMetadata."
						}
					],
					"description": "Creates a new subclass of class sap.suite.ui.commons.ViewRepeater with name <code>sClassName</code> \nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of informations as described in {@link sap.ui.core.Element.extend Element.extend}."
				},
				{
					"name": "fireChangeView",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event changeView to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'oldViewIndex' of type <code>int</code> Contains an index of the previous view in the Views aggregation.</li>\n<li>'newViewIndex' of type <code>int</code> Contains an index of the new view in the Views aggregation.</li>\n<li>'filterId' of type <code>string</code> Contains an ID of the filter in the Filters aggregation.</li>\n<li>'sorterId' of type <code>string</code> Contains an ID of the sorter in the Sorters aggregation.</li>\n<li>'page' of type <code>int</code> Contains a page number.</li>\n</ul>"
				},
				{
					"name": "fireSearch",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event search to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'query' of type <code>string</code> The search query.</li>\n</ul>"
				},
				{
					"name": "getDefaultViewIndex",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>defaultViewIndex</code>"
					},
					"description": "Getter for property <code>defaultViewIndex</code>.\nThe index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "getExternal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>external</code>"
					},
					"description": "Getter for property <code>external</code>.\nIndicates if the external representation of the current view is rendered.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getExternalRepresentation",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Id of the element which is the current target of the <code>externalRepresentation</code> association, or null"
					},
					"description": "The control to be rendered instead of the repeater's own content."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "the value of property <code>height</code>"
					},
					"description": "Getter for property <code>height</code>.\nThe height of the control. Only applicable if the responsive property is set to true.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "getItemHeight",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>itemHeight</code>"
					},
					"description": "Getter for property <code>itemHeight</code>.\nThe height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getItemMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the value of property <code>itemMinWidth</code>"
					},
					"description": "Getter for property <code>itemMinWidth</code>.\nThe minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.suite.ui.commons.ViewRepeater."
				},
				{
					"name": "getResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>responsive</code>"
					},
					"description": "Getter for property <code>responsive</code>.\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "getShowSearchField",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showSearchField</code>"
					},
					"description": "Getter for property <code>showSearchField</code>.\nIndicates if the search field panel is shown.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getShowViews",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the value of property <code>showViews</code>"
					},
					"description": "Getter for property <code>showViews</code>.\nIndicates if the view selector panel is shown.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "getViews",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration[]"
					},
					"description": "Getter for aggregation <code>views</code>.<br/>\nThe list of views for the data representation."
				},
				{
					"name": "indexOfView",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oView",
							"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
							"optional": false,
							"description": "the view whose index is looked for."
						}
					],
					"description": "Checks for the provided <code>sap.suite.ui.commons.RepeaterViewConfiguration</code> in the aggregation named <code>views</code> \nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oView",
							"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
							"optional": false,
							"description": "the view to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the view should be inserted at; for \n            a negative value of <code>iIndex</code>, the view is inserted at position 0; for a value \n            greater than the current size of the aggregation, the view is inserted at \n            the last position"
						}
					],
					"description": "Inserts a view into the aggregation named <code>views</code>."
				},
				{
					"name": "removeAllViews",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration[]",
						"description": "an array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the aggregation named <code>views</code>.<br/>\nAdditionally unregisters them from the hosting UIArea."
				},
				{
					"name": "removeView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.RepeaterViewConfiguration",
						"description": "the removed view or null"
					},
					"parameters": [
						{
							"name": "vView",
							"type": "int|string|sap.suite.ui.commons.RepeaterViewConfiguration",
							"optional": false,
							"description": "the view to remove or its index or id"
						}
					],
					"description": "Removes an view from the aggregation named <code>views</code>."
				},
				{
					"name": "setDefaultViewIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iDefaultViewIndex",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>defaultViewIndex</code>"
						}
					],
					"description": "Setter for property <code>defaultViewIndex</code>.\n\nDefault value is <code>0</code>"
				},
				{
					"name": "setExternal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bExternal",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>external</code>"
						}
					],
					"description": "Setter for property <code>external</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setExternalRepresentation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vExternalRepresentation",
							"type": "string|sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this <code>externalRepresentation</code> association.\n   Alternatively, an element instance may be given."
						}
					],
					"description": "The control to be rendered instead of the repeater's own content."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "new value for property <code>height</code>"
						}
					],
					"description": "Setter for property <code>height</code>.\n\nDefault value is <code>100%</code>"
				},
				{
					"name": "setItemHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iItemHeight",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>itemHeight</code>"
						}
					],
					"description": "Setter for property <code>itemHeight</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setItemMinWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iItemMinWidth",
							"type": "int",
							"optional": false,
							"description": "new value for property <code>itemMinWidth</code>"
						}
					],
					"description": "Setter for property <code>itemMinWidth</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "setResponsive",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bResponsive",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>responsive</code>"
						}
					],
					"description": "Setter for property <code>responsive</code>.\n\nDefault value is <code>false</code>"
				},
				{
					"name": "setShowSearchField",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSearchField",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showSearchField</code>"
						}
					],
					"description": "Setter for property <code>showSearchField</code>.\n\nDefault value is <code>true</code>"
				},
				{
					"name": "setShowViews",
					"visibility": "public",
					"returnValue": {
						"type": "sap.suite.ui.commons.ViewRepeater",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowViews",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>showViews</code>"
						}
					],
					"description": "Setter for property <code>showViews</code>.\n\nDefault value is <code>true</code>"
				}
			]
		}
	]
}