{"!name":"sap.ndc","!version":"1.17.0","!define":{"sap.ndc.BarcodeScannerButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ndc.BarcodeScannerButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ndc.BarcodeScannerButton"},"sap.ndc":{"!description":"SAPUI5 library with controls with native device capabilities.","visible":{"!description":"The invisible bar code scanner button is not rendered regardless of the availability of the native scan feature.","!category":"enum","!type":"Boolean"},"!module":"sap/ndc/library","BarcodeScannerButton":"sap.ndc.BarcodeScannerButton_obj","!helpDescription":"SAPUI5 library with controls with native device capabilities.","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"BarcodeScanner":"sap.ndc.BarcodeScanner","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"provideFallback":{"!description":"If set to true, the button remains visible if the scanner is not available and triggers a dialog to enter bar code.","!category":"enum","!type":"Boolean"},"width":{"!description":"Defines the width of the scanner button.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!category":"namespace"},"sap":{"sap":"sap","!category":"namespace","ndc":"sap.ndc"},"sap.ndc.BarcodeScanner":{"!description":"TODO: description\n\nAs <code>BarcodeScanner<\/code> is a static class, a <code>jQuery.sap.require(\"sap.ndc.BarcodeScanner\");<\/code>\nstatement must be explicitly executed before the class can be used. Example:\t *\n<pre>\njQuery.sap.require(\"sap.ndc.BarcodeScanner\");\nsap.ndc.BarcodeScanner.scan(\n    function (oResult) { / * process scan result * / },\n    function (oError) { / * handle scan error * / },\n    function (oResult) { / * handle input dialog change * / }\n);\n<\/pre>","!module":"sap/ndc/BarcodeScanner","!helpDescription":"TODO: description\n\nAs <code>BarcodeScanner<\/code> is a static class, a <code>jQuery.sap.require(\"sap.ndc.BarcodeScanner\");<\/code>\nstatement must be explicitly executed before the class can be used. Example:\t *\n<pre>\njQuery.sap.require(\"sap.ndc.BarcodeScanner\");\nsap.ndc.BarcodeScanner.scan(\n    function (oResult) { / * process scan result * / },\n    function (oError) { / * handle scan error * / },\n    function (oResult) { / * handle input dialog change * / }\n);\n<\/pre>","getStatusModel":{"!description":"Returns the status model of the BarcodeScanner. It is a JSON model which contains a single boolean property\n'<code>available<\/code>' indicating whether or not the bar code scanner feature is available. It can be used\nto bind to the <code>visible<\/code> property of UI controls which have to be hidden in case the feature is unavailable.","!static":"true","!category":"function","!type":"fn() -> sap.ui.model.json.JSONModel"},"scan":{"!description":"Starts the bar code scanning process either showing the live input from the camera or displaying a dialog\nto enter the value directly if the bar code scanning feature is not available.\n\n<pre>\nsap.ndc.BarcodeScanner.scan(fnSuccess, fnFail, fnLiveUpdate)\n<\/pre>\n\nThe bar code scanning is done asynchronously. When it is triggered, this function returns without waiting for\nthe scanning process to finish. The applications have to provide callback functions to react to the events of\na successful scanning, an error during scanning, and the live input on the dialog.\n\n<code>fnSuccess<\/code> is passed an object with text, format and cancelled properties. Text is the text representation\nof the bar code data, format is the type of the bar code detected, and cancelled is whether or not the user cancelled\nthe scan. <code>fnError<\/code> is given the error, <code>fnLiveUpdate<\/code> is passed the new value entered in the\ndialog's input field. An example:\n\n<pre>\nsap.ndc.BarcodeScanner.scan(\n   function (mResult) {\n      alert(\"We got a bar code\\n\" + \n            \"Result: \" + mResult.text + \"\\n\" +\n            \"Format: \" + mResult.format + \"\\n\" +\n            \"Cancelled: \" + mResult.cancelled);\n   },\n   function (Error) {\n      alert(\"Scanning failed: \" + Error);\n   },\n   function (mParams) {\n      alert(\"Value entered: \" + mParams.newValue);\n   }\n);\n<\/pre>","!static":"true","!category":"function","!type":"fn(fnSuccess?: fn(), fnFail?: fn(), fnLiveUpdate?: fn())"},"!category":"namespace","closeScanDialog":{"!description":"Closes the bar code input dialog. It can be used to close the dialog before the user presses the OK or the Cancel button\n(e.g. in the fnLiveUpdate callback function of the {@link sap.ndc.BarcodeScanner.scan} method.)","!static":"true","!category":"function","!type":"fn()"}},"sap.ndc.BarcodeScannerButton":{"!description":"A button control (displaying a bar code icon) to start the bar code scanning process. If the native scanning feature is\nnot available, the button is either hidden or it provides a fallback by opening a dialog with an input field where the bar code can\nbe entered manually.","detachScanFail":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>scanFail<\/code> event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getProvideFallback":{"!description":"Gets current value of property <code>provideFallback<\/code>.\n\nIf set to true, the button remains visible if the scanner is not available and triggers a dialog to enter bar code.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nThe invisible bar code scanner button is not rendered regardless of the availability of the native scan feature.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ndc.BarcodeScannerButton","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"attachScanFail":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>scanFail<\/code> event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ndc.BarcodeScannerButton<\/code> itself.\n\nEvent is fired when the native scanning process is failed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ndc.BarcodeScannerButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachInputLiveUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>inputLiveUpdate<\/code> event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ndc.BarcodeScannerButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nThe invisible bar code scanner button is not rendered regardless of the availability of the native scan feature.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInputLiveUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>inputLiveUpdate<\/code> event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ndc.BarcodeScannerButton<\/code> itself.\n\nEvent is fired when the text in the dialog's input field is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ndc.BarcodeScannerButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setProvideFallback":{"!description":"Sets a new value for property <code>provideFallback<\/code>.\n\nIf set to true, the button remains visible if the scanner is not available and triggers a dialog to enter bar code.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bProvideFallback: Boolean) -> sap.ndc.BarcodeScannerButton","parameters":{"bProvideFallback":"type: boolean, description: New value for property <code>provideFallback<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","attachScanSuccess":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>scanSuccess<\/code> event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ndc.BarcodeScannerButton<\/code> itself.\n\nEvent is fired when the scanning is finished or cancelled","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ndc.BarcodeScannerButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the scanner button.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"fireScanSuccess":{"!description":"Fires event <code>scanSuccess<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>text<\/code> of type <code>string<\/code>The the text representation of the bar code data.<\/li>\n<li><code>format<\/code> of type <code>string<\/code>The type of the bar code detected.<\/li>\n<li><code>cancelled<\/code> of type <code>boolean<\/code>Indicates whether or not the user cancelled the scan.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ndc.BarcodeScannerButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the scanner button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ndc.BarcodeScannerButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"detachScanSuccess":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>scanSuccess<\/code> event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ndc.BarcodeScannerButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new BarcodeScannerButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getProvideFallback provideFallback} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:scanSuccess scanSuccess} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:scanFail scanFail} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:inputLiveUpdate inputLiveUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ndc/BarcodeScannerButton","!helpDescription":"A button control (displaying a bar code icon) to start the bar code scanning process. If the native scanning feature is\nnot available, the button is either hidden or it provides a fallback by opening a dialog with an input field where the bar code can\nbe entered manually.","fireScanFail":{"!description":"Fires event <code>scanFail<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ndc.BarcodeScannerButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireInputLiveUpdate":{"!description":"Fires event <code>inputLiveUpdate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>The new value of the input field.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ndc.BarcodeScannerButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}}}}