{"!name":"sap.ui.fl","!version":"1.17.0","!define":{"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory_obj":{"!type":"fn()","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory"},"sap.ui.fl.descriptorRelated.api.Settings":{"!constructorDescription":"DescriptorSettings access","!module":"sap/ui/fl/descriptorRelated/api/Settings","isAtoEnabled":{"!description":"Returns true if ATO is enabled in the backend.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isKeyUser":{"!description":"Returns the key user status of the current user.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isProductiveSystem":{"!description":"Is current back end system defined as productive system which can also transport changes","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.base.Object","!category":"class","getInstance":{"!description":"Returns a settings instance after reading the settings from the backend if not already done. There is only one instance of settings during a\nsession.","!static":true,"!category":"function","!type":"fn() -> Promise"},"isModelS":{"!description":"Returns true if backend is ModelS backend.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.fl.descriptorRelated.api.DescriptorChange_obj":{"!type":"fn(mChangeFile: Object, oInlineChange: sap.ui.fl.descriptorRelated.api.DescriptorInlineChange)","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorChange"},"sap.ui":{"fl":"sap.ui.fl","!category":"namespace"},"sap.ui.fl.descriptorRelated.api.DescriptorVariant_obj":{"!type":"fn(mParameters?: Object, mFileContent?: Object, bDeletion?: Boolean)","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorVariant"},"sap.ui.fl.descriptorRelated.api.DescriptorVariant":{"!constructorDescription":"Descriptor Variant","!module":"sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory","submit":{"!description":"Submits the descriptor variant to the backend","!static":false,"!category":"function","!type":"fn() -> Promise"},"addDescriptorInlineChange":{"!description":"Adds a descriptor inline change to the descriptor variant","!static":false,"!category":"function","!type":"fn(oDescriptorInlineChange: sap.ui.fl.descriptorRelated.api.DescriptorInlineChange) -> Promise","parameters":{"oDescriptorInlineChange":"type: sap.ui.fl.descriptorRelated.api.DescriptorInlineChange, description: the inline change"}},"!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.fl.descriptorRelated.api.DescriptorVariantFactory":{"!description":"Factory for Descriptor Variants","createDeletion":{"!description":"Creates a descriptor variant deletion","!static":"true","!category":"function","!type":"fn(mParameter: Object) -> Promise"},"!module":"sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory","!helpDescription":"Factory for Descriptor Variants","!category":"namespace","createForExisting":{"!description":"Creates a descriptor variant instance for an existing descriptor variant id","!static":"true","!category":"function","!type":"fn(sId: String) -> Promise"},"createNew":{"!description":"Creates a new descriptor variant","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"}},"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange_obj":{"!type":"fn(sChangeType: String, mParameters?: Object, mTexts?: Object)","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange"},"sap.ui.fl.transport.TransportDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.fl.transport.TransportDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.fl.transport.TransportDialog"},"sap.ui.fl.descriptorRelated.api.Settings_obj":{"!type":"fn(oSettings: Object)","prototype":"sap.ui.fl.descriptorRelated.api.Settings"},"sap.ui.fl.descriptorRelated":{"!description":"Descriptor Related","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","!helpDescription":"Descriptor Related","!category":"namespace","api":"sap.ui.fl.descriptorRelated.api"},"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory":{"!constructorDescription":"Factory for Descriptor Changes","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","!proto":"sap.ui.base.Object","!category":"class","createNew":{"!description":"Creates a new descriptor change","!static":false,"!category":"function","!type":"fn(sReference: String, oInlineChange: Object) -> Promise","parameters":{"sReference":"type: string, description: the descriptor id for which the change is created","oInlineChange":"type: object, description: the inline change instance"}}},"sap.ui.fl.transport":{"transports":{"!description":"The set of ABAP transport requests that can be selected by a user.","!category":"enum","!type":"Object"},"hidePackage":{"!description":"Flag indicating whether the selection of an ABAP package is to be hidden or not.","!category":"enum","!type":"Boolean"},"TransportSelection":{"!description":"TransportSelection : String","!module":"sap/ui/fl/transport/TransportSelection","!category":"enum","!type":"String"},"!category":"namespace","lrepObject":{"!description":"The LREP object for which as transport request has to be selected","!category":"enum","!type":"Object"},"pkg":{"!description":"An ABAP package that can be used as default for the ABAP package selection.","!category":"enum","!type":"String"},"TransportDialog":"sap.ui.fl.transport.TransportDialog_obj"},"sap.ui.fl.descriptorRelated.api":{"!description":"Descriptor Related Apis","DescriptorChange":"sap.ui.fl.descriptorRelated.api.DescriptorChange_obj","DescriptorVariant":"sap.ui.fl.descriptorRelated.api.DescriptorVariant_obj","DescriptorVariantFactory":"sap.ui.fl.descriptorRelated.api.DescriptorVariantFactory","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","!helpDescription":"Descriptor Related Apis","DescriptorInlineChangeFactory":"sap.ui.fl.descriptorRelated.api.DescriptorInlineChangeFactory","!category":"namespace","DescriptorChangeFactory":"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory_obj","DescriptorInlineChange":"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange_obj","Settings":"sap.ui.fl.descriptorRelated.api.Settings_obj"},"sap.ui.fl":{"!description":"SAPUI5 library for UI Flexibility and Descriptor Changes and Descriptor Variants.","!module":"sap/ui/fl/library","!helpDescription":"SAPUI5 library for UI Flexibility and Descriptor Changes and Descriptor Variants.","!category":"namespace","transport":"sap.ui.fl.transport","descriptorRelated":"sap.ui.fl.descriptorRelated"},"sap.ui.fl.descriptorRelated.api.DescriptorChange":{"!constructorDescription":"Descriptor Change","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","submit":{"!description":"Submits the descriptor change to the backend","!static":false,"!category":"function","!type":"fn() -> Promise"},"!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange":{"!constructorDescription":"Descriptor Inline Change","!module":"sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.fl.descriptorRelated.api.DescriptorInlineChangeFactory":{"!description":"Factory for Descriptor Inline Changes","create_smb_addNamespace":{"!description":"Creates an inline change of change type appdescr_smb_addNamespace","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_removeDataSource":{"!description":"Creates an inline change of change type appdescr_app_removeDataSource","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_removeInbound":{"!description":"Creates an inline change of change type appdescr_app_removeInbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_ui5_addNewModel":{"!description":"Creates an inline change of change type appdescr_ui5_addNewModel","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_removeOutbound":{"!description":"Creates an inline change of change type appdescr_app_removeOutbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_changeDataSource":{"!description":"Creates an inline change of change type appdescr_app_changeDataSource","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_ovp_addNewCard":{"!description":"Creates an inline change of change type appdescr_ovp_addNewCard","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"},"!category":"namespace","create_app_addNewInbound":{"!description":"Creates an inline change of change type appdescr_app_addNewInbound","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"},"create_ovp_removeCard":{"!description":"Creates an inline change of change type appdescr_ovp_removeCard","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_addNewDataSource":{"!description":"Creates an inline change of change type appdescr_app_addNewDataSource","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"!module":"sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory","!helpDescription":"Factory for Descriptor Inline Changes","create_app_changeOutbound":{"!description":"Creates an inline change of change type appdescr_app_changeOutbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_addNewOutbound":{"!description":"Creates an inline change of change type appdescr_app_addNewOutbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_changeInbound":{"!description":"Creates an inline change of change type appdescr_app_changeInbound","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"}},"sap.ui.fl.transport.TransportDialog":{"!description":"The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.","getHidePackage":{"!description":"Gets current value of property <code>hidePackage<\/code>.\n\nFlag indicating whether the selection of an ABAP package is to be hidden or not.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.fl.transport.TransportDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setLrepObject":{"!description":"The LREP object for which as transport request has to be selected.\nThe property can only be set once and afterwards it cannot be changed.","!static":false,"!category":"function","!type":"fn(oObject: Object)","parameters":{"oObject":"type: object, description: an LREP object for which as transport request has to be selected. The object has the attributes name, namespace and type."}},"!proto":"sap.m.Dialog","setPkg":{"!description":"An ABAP package that can be used as default for the ABAP package selection.\nThe property can only be set once and afterwards it cannot be changed.","!static":false,"!category":"function","!type":"fn(sPackage: String)","parameters":{"sPackage":"type: string, description: an ABAP package that can be used as default for the ABAP package selection."}},"!category":"class","getLrepObject":{"!description":"Gets current value of property <code>lrepObject<\/code>.\n\nThe LREP object for which as transport request has to be selected","!static":false,"!category":"function","!type":"fn() -> Object"},"setTransports":{"!description":"The set of ABAP transport requests that can be selected by a user.","!static":false,"!category":"function","!type":"fn(aSelection: Array)","parameters":{"aSelection":"type: array, description: the set of ABAP transport requests that can be selected by a user."}},"detachOk":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>ok<\/code> event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.fl.transport.TransportDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setHidePackage":{"!description":"Flag indicating whether the selection of an ABAP package is to be hidden or not.","!static":false,"!category":"function","!type":"fn(bHide: Boolean)","parameters":{"bHide":"type: boolean, description: if set to <code>true<\/code>, the package selection is hidden."}},"!constructorDescription":"Constructor for a new transport/TransportDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPkg pkg} : string<\/li>\n<li>{@link #getTransports transports} : any<\/li>\n<li>{@link #getLrepObject lrepObject} : any<\/li>\n<li>{@link #getHidePackage hidePackage} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well.","!module":"sap/ui/fl/transport/TransportDialog","!helpDescription":"The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.","fireOk":{"!description":"Fires event <code>ok<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.fl.transport.TransportDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getTransports":{"!description":"Gets current value of property <code>transports<\/code>.\n\nThe set of ABAP transport requests that can be selected by a user.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachOk":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>ok<\/code> event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself.\n\nThis event will be fired when the user clicks the OK button on the dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself.\n\nThis event will be fired when the user clicks the Cancel button on the dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPkg":{"!description":"Gets current value of property <code>pkg<\/code>.\n\nAn ABAP package that can be used as default for the ABAP package selection.","!static":false,"!category":"function","!type":"fn() -> String"},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.fl.transport.TransportDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}}}}