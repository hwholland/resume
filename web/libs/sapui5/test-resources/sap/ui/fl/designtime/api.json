{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.ui.fl",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.ui.fl",
			"basename": "fl",
			"resource": "sap/ui/fl/library.js",
			"module": "sap/ui/fl/library",
			"static": true,
			"visibility": "restricted",
			"description": "SAPUI5 library for UI Flexibility and Descriptor Changes and Descriptor Variants."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated",
			"basename": "descriptorRelated",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"static": true,
			"visibility": "restricted",
			"description": "Descriptor Related"
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated.api",
			"basename": "api",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"static": true,
			"visibility": "restricted",
			"description": "Descriptor Related Apis"
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorChange",
			"basename": "DescriptorChange",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "mChangeFile",
						"type": "object",
						"optional": false,
						"description": "change file"
					},
					{
						"name": "oInlineChange",
						"type": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChange",
						"optional": false,
						"description": "inline change object"
					}
				],
				"description": "Descriptor Change"
			},
			"methods": [
				{
					"name": "submit",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving after all changes have been saved"
					},
					"description": "Submits the descriptor change to the backend"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory",
			"basename": "DescriptorChangeFactory",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"description": "Factory for Descriptor Changes"
			},
			"methods": [
				{
					"name": "createNew",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving the new Change instance"
					},
					"parameters": [
						{
							"name": "sReference",
							"type": "string",
							"optional": false,
							"description": "the descriptor id for which the change is created"
						},
						{
							"name": "oInlineChange",
							"type": "object",
							"optional": false,
							"description": "the inline change instance"
						}
					],
					"description": "Creates a new descriptor change"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChange",
			"basename": "DescriptorInlineChange",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "sChangeType",
						"type": "string",
						"optional": false,
						"description": "change type"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"description": "parameters of the inline change for the provided change type"
					},
					{
						"name": "mTexts",
						"type": "object",
						"optional": true,
						"description": "texts for the inline change"
					}
				],
				"description": "Descriptor Inline Change"
			}
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChangeFactory",
			"basename": "DescriptorInlineChangeFactory",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory",
			"static": true,
			"visibility": "restricted",
			"description": "Factory for Descriptor Inline Changes",
			"methods": [
				{
					"name": "create_app_addNewDataSource",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"dataSource": {
									"name": "dataSource",
									"type": "object",
									"optional": false,
									"description": "the data source to be created according to descriptor schema (either one data source or one of type OData and one of type ODataAnnotation)"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_addNewDataSource"
				},
				{
					"name": "create_app_addNewInbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"inbound": {
									"name": "inbound",
									"type": "object",
									"optional": false,
									"description": "the inbound to be created according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_addNewInbound"
				},
				{
					"name": "create_app_addNewOutbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"outbound": {
									"name": "outbound",
									"type": "object",
									"optional": false,
									"description": "the outbound to be created according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_addNewOutbound"
				},
				{
					"name": "create_app_changeDataSource",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"dataSourceId": {
									"name": "dataSourceId",
									"type": "string",
									"optional": false,
									"description": "the id of the data source to be changed"
								},
								"entityPropertyChange": {
									"name": "entityPropertyChange",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyPath": {
											"name": "propertyPath",
											"type": "object",
											"optional": false,
											"description": "the property path inside the data source"
										},
										"operation": {
											"name": "operation",
											"type": "object",
											"optional": false,
											"description": "the operation (INSERT, UPDATE, UPSERT, DELETE)"
										},
										"propertyValue": {
											"name": "propertyValue",
											"type": "object",
											"optional": false,
											"description": "the new property value"
										}
									}
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_changeDataSource"
				},
				{
					"name": "create_app_changeInbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"inboundId": {
									"name": "inboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the inbound to be changed"
								},
								"entityPropertyChange": {
									"name": "entityPropertyChange",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyPath": {
											"name": "propertyPath",
											"type": "object",
											"optional": false,
											"description": "the property path inside the inbound"
										},
										"operation": {
											"name": "operation",
											"type": "object",
											"optional": false,
											"description": "the operation (INSERT, UPDATE, UPSERT, DELETE)"
										},
										"propertyValue": {
											"name": "propertyValue",
											"type": "object",
											"optional": false,
											"description": "the new property value"
										}
									}
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_changeInbound"
				},
				{
					"name": "create_app_changeOutbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"outboundId": {
									"name": "outboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the outbound to be changed"
								},
								"entityPropertyChange": {
									"name": "entityPropertyChange",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyPath": {
											"name": "propertyPath",
											"type": "object",
											"optional": false,
											"description": "the property path inside the outbound"
										},
										"operation": {
											"name": "operation",
											"type": "object",
											"optional": false,
											"description": "the operation (INSERT, UPDATE, UPSERT, DELETE)"
										},
										"propertyValue": {
											"name": "propertyValue",
											"type": "object",
											"optional": false,
											"description": "the new property value"
										}
									}
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_changeOutbound"
				},
				{
					"name": "create_app_removeDataSource",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"dataSourceId": {
									"name": "dataSourceId",
									"type": "string",
									"optional": false,
									"description": "the id of the data source to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_removeDataSource"
				},
				{
					"name": "create_app_removeInbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"inboundId": {
									"name": "inboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the inbound to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_removeInbound"
				},
				{
					"name": "create_app_removeOutbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"outboundId": {
									"name": "outboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the outbound to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_removeOutbound"
				},
				{
					"name": "create_ovp_addNewCard",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"card": {
									"name": "card",
									"type": "object",
									"optional": false,
									"description": "the card to be created according to descriptor schema"
								},
								"model": {
									"name": "model",
									"type": "object",
									"optional": true,
									"description": "the ui5 model to be created according to descriptor schema"
								},
								"dataSource": {
									"name": "dataSource",
									"type": "object",
									"optional": true,
									"description": "the data sources to be created according to descriptor schema (either not provided or of type OData or of type OData and ODataAnnotation"
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_ovp_addNewCard"
				},
				{
					"name": "create_ovp_removeCard",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"cardId": {
									"name": "cardId",
									"type": "string",
									"optional": false,
									"description": "the id of the card to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_ovp_removeCard"
				},
				{
					"name": "create_smb_addNamespace",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"smartBusinessApp": {
									"name": "smartBusinessApp",
									"type": "object",
									"optional": false,
									"description": "the smart business app to be created according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_smb_addNamespace"
				},
				{
					"name": "create_ui5_addNewModel",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"model": {
									"name": "model",
									"type": "object",
									"optional": false,
									"description": "the ui5 model to be created according to descriptor schema"
								},
								"dataSource": {
									"name": "dataSource",
									"type": "object",
									"optional": true,
									"description": "the data sources to be created according to descriptor schema (either not provided or of arbitrary type or two provided of type OData and of type OData and ODataAnnotation)"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_ui5_addNewModel"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorVariant",
			"basename": "DescriptorVariant",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"id": {
								"name": "id",
								"type": "string",
								"optional": true,
								"description": "the id of the descriptor variant id to be provided for a new descriptor variant and for deleting a descriptor variant"
							},
							"reference": {
								"name": "reference",
								"type": "string",
								"optional": true,
								"description": "the referenced descriptor or descriptor variant id to be provided when creating a new descriptor variant"
							}
						},
						"description": "parameters"
					},
					{
						"name": "mFileContent",
						"type": "object",
						"optional": true,
						"description": "file content of the existing descriptor variant to be provided if descriptor variant shall be created from an existing"
					},
					{
						"name": "bDeletion",
						"type": "boolean",
						"optional": true,
						"description": "deletion indicator to be provided if descriptor variant shall be deleted"
					}
				],
				"description": "Descriptor Variant"
			},
			"methods": [
				{
					"name": "addDescriptorInlineChange",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when adding the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "oDescriptorInlineChange",
							"type": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChange",
							"optional": false,
							"description": "the inline change"
						}
					],
					"description": "Adds a descriptor inline change to the descriptor variant"
				},
				{
					"name": "submit",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when submitting the descriptor variant was successful"
					},
					"description": "Submits the descriptor variant to the backend"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorVariantFactory",
			"basename": "DescriptorVariantFactory",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory",
			"static": true,
			"visibility": "restricted",
			"description": "Factory for Descriptor Variants",
			"methods": [
				{
					"name": "createDeletion",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving the DescriptorVariant instance"
					},
					"parameters": [
						{
							"name": "mParameter",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"id": {
									"name": "id",
									"type": "string",
									"optional": false,
									"description": "the id for the descriptor variant id"
								}
							}
						}
					],
					"description": "Creates a descriptor variant deletion"
				},
				{
					"name": "createForExisting",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving the DescriptorVariant instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the id of the descriptor variant id"
						}
					],
					"description": "Creates a descriptor variant instance for an existing descriptor variant id"
				},
				{
					"name": "createNew",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving the new DescriptorVariant instance"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"reference": {
									"name": "reference",
									"type": "string",
									"optional": false,
									"description": "the referenced descriptor or descriptor variant id"
								},
								"id": {
									"name": "id",
									"type": "string",
									"optional": false,
									"description": "the id for the descriptor variant id"
								}
							}
						}
					],
					"description": "Creates a new descriptor variant"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.Settings",
			"basename": "Settings",
			"resource": "sap/ui/fl/descriptorRelated/api/Settings.js",
			"module": "sap/ui/fl/descriptorRelated/api/Settings",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "oSettings",
						"type": "object",
						"optional": false,
						"description": "settings as JSON object"
					}
				],
				"description": "DescriptorSettings access"
			},
			"methods": [
				{
					"name": "getInstance",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "with parameter <code>oInstance</code> of type {sap.ui.fl.descriptorRelated.api.Settings}"
					},
					"description": "Returns a settings instance after reading the settings from the backend if not already done. There is only one instance of settings during a\nsession."
				},
				{
					"name": "isAtoEnabled",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if ATO is enabled."
					},
					"description": "Returns true if ATO is enabled in the backend."
				},
				{
					"name": "isKeyUser",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if the user is a flexibility key user, false if not supported."
					},
					"description": "Returns the key user status of the current user."
				},
				{
					"name": "isModelS",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if ATO coding exists in backend."
					},
					"description": "Returns true if backend is ModelS backend."
				},
				{
					"name": "isProductiveSystem",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if system is productive system"
					},
					"description": "Is current back end system defined as productive system which can also transport changes"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.transport.TransportDialog",
			"basename": "TransportDialog",
			"resource": "sap/ui/fl/transport/TransportDialog.js",
			"module": "sap/ui/fl/transport/TransportDialog",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Dialog",
			"description": "The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "pkg",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "An ABAP package that can be used as default for the ABAP package selection.",
						"methods": [
							"getPkg",
							"setPkg"
						]
					},
					{
						"name": "transports",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The set of ABAP transport requests that can be selected by a user.",
						"methods": [
							"getTransports",
							"setTransports"
						]
					},
					{
						"name": "lrepObject",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The LREP object for which as transport request has to be selected",
						"methods": [
							"getLrepObject",
							"setLrepObject"
						]
					},
					{
						"name": "hidePackage",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Flag indicating whether the selection of an ABAP package is to be hidden or not.",
						"methods": [
							"getHidePackage",
							"setHidePackage"
						]
					}
				],
				"events": [
					{
						"name": "ok",
						"visibility": "public",
						"description": "This event will be fired when the user clicks the OK button on the dialog.",
						"methods": [
							"attachOk",
							"detachOk",
							"fireOk"
						]
					},
					{
						"name": "cancel",
						"visibility": "public",
						"description": "This event will be fired when the user clicks the Cancel button on the dialog.",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new transport/TransportDialog.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "cancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event will be fired when the user clicks the Cancel button on the dialog."
				},
				{
					"name": "ok",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event will be fired when the user clicks the OK button on the dialog."
				}
			],
			"methods": [
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>cancel</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog</code> itself.\n\nThis event will be fired when the user clicks the Cancel button on the dialog."
				},
				{
					"name": "attachOk",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>ok</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog</code> itself.\n\nThis event will be fired when the user clicks the OK button on the dialog."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>cancel</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachOk",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>ok</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.fl.transport.TransportDialog with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>cancel</code> to attached listeners."
				},
				{
					"name": "fireOk",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>ok</code> to attached listeners."
				},
				{
					"name": "getHidePackage",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>hidePackage</code>"
					},
					"description": "Gets current value of property <code>hidePackage</code>.\n\nFlag indicating whether the selection of an ABAP package is to be hidden or not."
				},
				{
					"name": "getLrepObject",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>lrepObject</code>"
					},
					"description": "Gets current value of property <code>lrepObject</code>.\n\nThe LREP object for which as transport request has to be selected"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.fl.transport.TransportDialog."
				},
				{
					"name": "getPkg",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>pkg</code>"
					},
					"description": "Gets current value of property <code>pkg</code>.\n\nAn ABAP package that can be used as default for the ABAP package selection."
				},
				{
					"name": "getTransports",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>transports</code>"
					},
					"description": "Gets current value of property <code>transports</code>.\n\nThe set of ABAP transport requests that can be selected by a user."
				},
				{
					"name": "setHidePackage",
					"visibility": "public",
					"parameters": [
						{
							"name": "bHide",
							"type": "boolean",
							"optional": false,
							"description": "if set to <code>true</code>, the package selection is hidden."
						}
					],
					"description": "Flag indicating whether the selection of an ABAP package is to be hidden or not."
				},
				{
					"name": "setLrepObject",
					"visibility": "public",
					"parameters": [
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "an LREP object for which as transport request has to be selected. The object has the attributes name, namespace and type."
						}
					],
					"description": "The LREP object for which as transport request has to be selected.\nThe property can only be set once and afterwards it cannot be changed."
				},
				{
					"name": "setPkg",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPackage",
							"type": "string",
							"optional": false,
							"description": "an ABAP package that can be used as default for the ABAP package selection."
						}
					],
					"description": "An ABAP package that can be used as default for the ABAP package selection.\nThe property can only be set once and afterwards it cannot be changed."
				},
				{
					"name": "setTransports",
					"visibility": "public",
					"parameters": [
						{
							"name": "aSelection",
							"type": "array",
							"optional": false,
							"description": "the set of ABAP transport requests that can be selected by a user."
						}
					],
					"description": "The set of ABAP transport requests that can be selected by a user."
				}
			]
		}
	]
}