{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.ui.rta",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.ui.rta",
			"basename": "rta",
			"resource": "sap/ui/rta/library.js",
			"module": "sap/ui/rta/library",
			"static": true,
			"visibility": "public",
			"description": "SAPUI5 library with RTA controls."
		},
		{
			"kind": "class",
			"name": "sap.ui.rta.RuntimeAuthoring",
			"basename": "RuntimeAuthoring",
			"resource": "sap/ui/rta/RuntimeAuthoring.js",
			"module": "sap/ui/rta/RuntimeAuthoring",
			"static": true,
			"visibility": "public",
			"since": "1.30",
			"extends": "sap.ui.core.ManagedObject",
			"description": "The runtime authoring allows to adapt the fields of a running application.",
			"experimental": {
				"since": "1.30",
				"text": "This class is experimental and provides only limited functionality. Also the API\n              might be changed in future."
			},
			"ui5-metadata": {
				"properties": [
					{
						"name": "customFieldUrl",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The URL which is called when the custom field dialog is opened",
						"methods": [
							"getCustomFieldUrl",
							"setCustomFieldUrl"
						]
					},
					{
						"name": "showCreateCustomField",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether the create custom field button should be shown",
						"methods": [
							"getShowCreateCustomField",
							"setShowCreateCustomField"
						]
					},
					{
						"name": "showToolbars",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether the create custom field button should be shown",
						"methods": [
							"getShowToolbars",
							"setShowToolbars"
						]
					},
					{
						"name": "showSettingsDialog",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Temporary property : whether to show a dialog for changing control's properties#\nshould be removed after DTA will fully switch to a property panel",
						"methods": [
							"getShowSettingsDialog",
							"setShowSettingsDialog"
						]
					},
					{
						"name": "showWindowUnloadDialog",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether the window unload dialog should be shown",
						"methods": [
							"getShowWindowUnloadDialog",
							"setShowWindowUnloadDialog"
						]
					},
					{
						"name": "commandStack",
						"type": "sap.ui.rta.command.Stack",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"methods": [
							"getCommandStack",
							"setCommandStack"
						]
					}
				],
				"associations": [
					{
						"name": "rootControl",
						"singularName": "rootControl",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The root control which the runtime authoring should handle",
						"methods": [
							"getRootControl",
							"setRootControl"
						]
					}
				],
				"events": [
					{
						"name": "start",
						"visibility": "public",
						"description": "Fired when the runtime authoring is started",
						"methods": [
							"attachStart",
							"detachStart",
							"fireStart"
						]
					},
					{
						"name": "stop",
						"visibility": "public",
						"description": "Fired when the runtime authoring is stopped",
						"methods": [
							"attachStop",
							"detachStop",
							"fireStop"
						]
					},
					{
						"name": "selectionChange",
						"visibility": "public",
						"description": "Event fired when a DesignTime selection is changed",
						"parameters": {
							"selection": {
								"name": "selection",
								"type": "sap.ui.dt.Overlay[]"
							}
						},
						"methods": [
							"attachSelectionChange",
							"detachSelectionChange",
							"fireSelectionChange"
						]
					},
					{
						"name": "undoRedoStackModified",
						"visibility": "public",
						"description": "Fired when the undo/redo stack has changed, undo/redo buttons can be updated",
						"methods": [
							"attachUndoRedoStackModified",
							"detachUndoRedoStackModified",
							"fireUndoRedoStackModified"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new sap.ui.rta.RuntimeAuthoring class.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "selectionChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"selection": {
											"name": "selection",
											"type": "sap.ui.dt.Overlay[]",
											"optional": false
										}
									}
								}
							}
						}
					],
					"description": "Event fired when a DesignTime selection is changed"
				},
				{
					"name": "start",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the runtime authoring is started"
				},
				{
					"name": "stop",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the runtime authoring is stopped"
				},
				{
					"name": "undoRedoStackModified",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the undo/redo stack has changed, undo/redo buttons can be updated"
				}
			],
			"methods": [
				{
					"name": "attachSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selectionChange</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring</code> itself.\n\nEvent fired when a DesignTime selection is changed"
				},
				{
					"name": "attachStart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>start</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring</code> itself.\n\nFired when the runtime authoring is started"
				},
				{
					"name": "attachStop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>stop</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring</code> itself.\n\nFired when the runtime authoring is stopped"
				},
				{
					"name": "attachUndoRedoStackModified",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>undoRedoStackModified</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring</code> itself.\n\nFired when the undo/redo stack has changed, undo/redo buttons can be updated"
				},
				{
					"name": "closeToolBars",
					"visibility": "public",
					"description": "Close Toolbars"
				},
				{
					"name": "detachSelectionChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selectionChange</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStart",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>start</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>stop</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachUndoRedoStackModified",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>undoRedoStackModified</code> event of this <code>sap.ui.rta.RuntimeAuthoring</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "exit",
					"visibility": "protected",
					"description": "Exit Runtime Authoring - destroy all controls"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.rta.RuntimeAuthoring with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.ManagedObject.extend}."
				},
				{
					"name": "fireSelectionChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selectionChange</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selection</code> of type <code>sap.ui.dt.Overlay[]</code></li>\n</ul>"
				},
				{
					"name": "fireStart",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>start</code> to attached listeners."
				},
				{
					"name": "fireStop",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>stop</code> to attached listeners."
				},
				{
					"name": "fireUndoRedoStackModified",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>undoRedoStackModified</code> to attached listeners."
				},
				{
					"name": "getCustomFieldUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>customFieldUrl</code>"
					},
					"description": "Gets current value of property <code>customFieldUrl</code>.\n\nThe URL which is called when the custom field dialog is opened"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.rta.RuntimeAuthoring."
				},
				{
					"name": "getRootControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "ID of the element which is the current target of the association <code>rootControl</code>, or <code>null</code>."
				},
				{
					"name": "getSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.dt.Overlay[]",
						"description": "selected overlays"
					},
					"description": "Returns a selection from the DesignTime"
				},
				{
					"name": "getShowCreateCustomField",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showCreateCustomField</code>"
					},
					"description": "Gets current value of property <code>showCreateCustomField</code>.\n\nWhether the create custom field button should be shown"
				},
				{
					"name": "getShowSettingsDialog",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showSettingsDialog</code>"
					},
					"description": "Gets current value of property <code>showSettingsDialog</code>.\n\nTemporary property : whether to show a dialog for changing control's properties#\nshould be removed after DTA will fully switch to a property panel\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowToolbars",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showToolbars</code>"
					},
					"description": "Gets current value of property <code>showToolbars</code>.\n\nWhether the create custom field button should be shown\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getShowWindowUnloadDialog",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showWindowUnloadDialog</code>"
					},
					"description": "Gets current value of property <code>showWindowUnloadDialog</code>.\n\nWhether the window unload dialog should be shown\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setCustomFieldUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sCustomFieldUrl",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>customFieldUrl</code>"
						}
					],
					"description": "Sets a new value for property <code>customFieldUrl</code>.\n\nThe URL which is called when the custom field dialog is opened\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRootControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRootControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Id of an element which becomes the new target of this rootControl association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>rootControl</code>."
				},
				{
					"name": "setShowCreateCustomField",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowCreateCustomField",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showCreateCustomField</code>"
						}
					],
					"description": "Sets a new value for property <code>showCreateCustomField</code>.\n\nWhether the create custom field button should be shown\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setShowSettingsDialog",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowSettingsDialog",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showSettingsDialog</code>"
						}
					],
					"description": "Sets a new value for property <code>showSettingsDialog</code>.\n\nTemporary property : whether to show a dialog for changing control's properties#\nshould be removed after DTA will fully switch to a property panel\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowToolbars",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowToolbars",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showToolbars</code>"
						}
					],
					"description": "Sets a new value for property <code>showToolbars</code>.\n\nWhether the create custom field button should be shown\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setShowWindowUnloadDialog",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.rta.RuntimeAuthoring",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowWindowUnloadDialog",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showWindowUnloadDialog</code>"
						}
					],
					"description": "Sets a new value for property <code>showWindowUnloadDialog</code>.\n\nWhether the window unload dialog should be shown\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "start",
					"visibility": "public",
					"description": "Start Runtime Authoring"
				},
				{
					"name": "stop",
					"visibility": "public",
					"description": "Stop Runtime Authoring"
				}
			]
		}
	]
}