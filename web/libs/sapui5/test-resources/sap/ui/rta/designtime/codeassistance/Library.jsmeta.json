{"!name":"sap.ui.rta","!version":"1.17.0","!define":{"sap.ui.rta":{"!description":"SAPUI5 library with RTA controls.","showCreateCustomField":{"!description":"Whether the create custom field button should be shown","!category":"enum","!type":"Boolean"},"!module":"sap/ui/rta/library","!helpDescription":"SAPUI5 library with RTA controls.","showSettingsDialog":{"!description":"Temporary property : whether to show a dialog for changing control's properties#\nshould be removed after DTA will fully switch to a property panel","!category":"enum","!type":"Boolean"},"RuntimeAuthoring":"sap.ui.rta.RuntimeAuthoring_obj","showWindowUnloadDialog":{"!description":"Whether the window unload dialog should be shown","!category":"enum","!type":"Boolean"},"showToolbars":{"!description":"Whether the create custom field button should be shown","!category":"enum","!type":"Boolean"},"!category":"namespace","customFieldUrl":{"!description":"The URL which is called when the custom field dialog is opened","!category":"enum","!type":"String"},"commandStack":{"!description":"commandStack : sap.ui.rta.command.Stack","!category":"enum","!type":"sap.ui.rta.command.Stack"}},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.rta.RuntimeAuthoring":{"setShowCreateCustomField":{"!description":"Sets a new value for property <code>showCreateCustomField<\/code>.\n\nWhether the create custom field button should be shown\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowCreateCustomField: Boolean) -> sap.ui.rta.RuntimeAuthoring","parameters":{"bShowCreateCustomField":"type: boolean, description: New value for property <code>showCreateCustomField<\/code>"}},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selection<\/code> of type <code>sap.ui.dt.Overlay[]<\/code><\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.rta.RuntimeAuthoring","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.ManagedObject","getShowWindowUnloadDialog":{"!description":"Gets current value of property <code>showWindowUnloadDialog<\/code>.\n\nWhether the window unload dialog should be shown\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","fireStart":{"!description":"Fires event <code>start<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.rta.RuntimeAuthoring","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachStop":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>stop<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself.\n\nFired when the runtime authoring is stopped","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRootControl":{"!description":"ID of the element which is the current target of the association <code>rootControl<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachStart":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>start<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself.\n\nFired when the runtime authoring is started","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new sap.ui.rta.RuntimeAuthoring class.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCustomFieldUrl customFieldUrl} : string<\/li>\n<li>{@link #getShowCreateCustomField showCreateCustomField} : boolean<\/li>\n<li>{@link #getShowToolbars showToolbars} : boolean (default: true)<\/li>\n<li>{@link #getShowSettingsDialog showSettingsDialog} : boolean (default: true)<\/li>\n<li>{@link #getShowWindowUnloadDialog showWindowUnloadDialog} : boolean (default: true)<\/li>\n<li>{@link #getCommandStack commandStack} : sap.ui.rta.command.Stack<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:start start} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:stop stop} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:undoRedoStackModified undoRedoStackModified} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.ManagedObject#constructor sap.ui.core.ManagedObject}\ncan be used as well.","setShowWindowUnloadDialog":{"!description":"Sets a new value for property <code>showWindowUnloadDialog<\/code>.\n\nWhether the window unload dialog should be shown\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowWindowUnloadDialog: Boolean) -> sap.ui.rta.RuntimeAuthoring","parameters":{"bShowWindowUnloadDialog":"type: boolean, description: New value for property <code>showWindowUnloadDialog<\/code>"}},"detachUndoRedoStackModified":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>undoRedoStackModified<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setRootControl":{"!description":"Sets the associated <code>rootControl<\/code>.","!static":false,"!category":"function","!type":"fn(oRootControl: sap.ui.core.Control) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oRootControl":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this rootControl association; alternatively, an element instance may be given"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself.\n\nEvent fired when a DesignTime selection is changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.rta.RuntimeAuthoring.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachStart":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>start<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"closeToolBars":{"!description":"Close Toolbars","!static":false,"!category":"function","!type":"fn()"},"getShowCreateCustomField":{"!description":"Gets current value of property <code>showCreateCustomField<\/code>.\n\nWhether the create custom field button should be shown","!static":false,"!category":"function","!type":"fn() -> Boolean"},"start":{"!description":"Start Runtime Authoring","!static":false,"!category":"function","!type":"fn()"},"setShowToolbars":{"!description":"Sets a new value for property <code>showToolbars<\/code>.\n\nWhether the create custom field button should be shown\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowToolbars: Boolean) -> sap.ui.rta.RuntimeAuthoring","parameters":{"bShowToolbars":"type: boolean, description: New value for property <code>showToolbars<\/code>"}},"detachStop":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>stop<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.rta.RuntimeAuthoring with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Exit Runtime Authoring - destroy all controls","!static":false,"!category":"function","!type":"fn()"},"setCustomFieldUrl":{"!description":"Sets a new value for property <code>customFieldUrl<\/code>.\n\nThe URL which is called when the custom field dialog is opened\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCustomFieldUrl: String) -> sap.ui.rta.RuntimeAuthoring","parameters":{"sCustomFieldUrl":"type: string, description: New value for property <code>customFieldUrl<\/code>"}},"getSelection":{"!description":"Returns a selection from the DesignTime","!static":false,"!category":"function","!type":"fn() -> [sap.ui.dt.Overlay]"},"!module":"sap/ui/rta/RuntimeAuthoring","getShowSettingsDialog":{"!description":"Gets current value of property <code>showSettingsDialog<\/code>.\n\nTemporary property : whether to show a dialog for changing control's properties#\nshould be removed after DTA will fully switch to a property panel\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"stop":{"!description":"Stop Runtime Authoring","!static":false,"!category":"function","!type":"fn()"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","attachUndoRedoStackModified":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>undoRedoStackModified<\/code> event of this <code>sap.ui.rta.RuntimeAuthoring<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself.\n\nFired when the undo/redo stack has changed, undo/redo buttons can be updated","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.rta.RuntimeAuthoring","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.rta.RuntimeAuthoring<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireUndoRedoStackModified":{"!description":"Fires event <code>undoRedoStackModified<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.rta.RuntimeAuthoring","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getShowToolbars":{"!description":"Gets current value of property <code>showToolbars<\/code>.\n\nWhether the create custom field button should be shown\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireStop":{"!description":"Fires event <code>stop<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.rta.RuntimeAuthoring","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getCustomFieldUrl":{"!description":"Gets current value of property <code>customFieldUrl<\/code>.\n\nThe URL which is called when the custom field dialog is opened","!static":false,"!category":"function","!type":"fn() -> String"},"setShowSettingsDialog":{"!description":"Sets a new value for property <code>showSettingsDialog<\/code>.\n\nTemporary property : whether to show a dialog for changing control's properties#\nshould be removed after DTA will fully switch to a property panel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSettingsDialog: Boolean) -> sap.ui.rta.RuntimeAuthoring","parameters":{"bShowSettingsDialog":"type: boolean, description: New value for property <code>showSettingsDialog<\/code>"}}},"sap.ui":{"!category":"namespace","rta":"sap.ui.rta"},"sap.ui.rta.RuntimeAuthoring_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.rta.RuntimeAuthoring with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.rta.RuntimeAuthoring"}}}