{"!name":"sap.ui.comp","!version":"1.17.0","!define":{"sap.ui.comp.smartfield.ControlProposal":{"!description":"Proposes a control to be rendered. The smart field may ignore the proposal.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.ControlProposal.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setObjectStatus":{"!description":"Sets the aggregated <code>objectStatus<\/code>.","!static":false,"!category":"function","!type":"fn(oObjectStatus: sap.ui.comp.smartfield.ObjectStatus) -> sap.ui.comp.smartfield.ControlProposal","parameters":{"oObjectStatus":"type: sap.ui.comp.smartfield.ObjectStatus, description: The objectStatus to set"}},"!proto":"sap.ui.core.Element","!category":"class","setControlType":{"!description":"Sets a new value for property <code>controlType<\/code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some\nextent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sControlType: sap.ui.comp.smartfield.ControlProposalType) -> sap.ui.comp.smartfield.ControlProposal","parameters":{"sControlType":"type: sap.ui.comp.smartfield.ControlProposalType, description: New value for property <code>controlType<\/code>"}},"getObjectStatus":{"!description":"Gets content of aggregation <code>objectStatus<\/code>.\n\nOptional definition to further qualify how an object status control should be rendered.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ObjectStatus"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ControlProposal with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new smartfield/ControlProposal.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getControlType controlType} : sap.ui.comp.smartfield.ControlProposalType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getObjectStatus objectStatus} : sap.ui.comp.smartfield.ObjectStatus<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfield/ControlProposal","!helpDescription":"Proposes a control to be rendered. The smart field may ignore the proposal.","getControlType":{"!description":"Gets current value of property <code>controlType<\/code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some\nextent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposalType"},"destroyObjectStatus":{"!description":"Destroys the objectStatus in the aggregation <code>objectStatus<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposal"}},"sap.ui.comp.smartform.GroupElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.GroupElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.GroupElement"},"sap.ui.comp.smartform.Layout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Layout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.Layout"},"sap.ui.comp.smartmicrochart.SmartBulletMicroChart":{"getChartTitle":{"!description":"ID of the element which is the current target of the association <code>chartTitle<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getEntitySet":{"!description":"Gets current value of property <code>entitySet<\/code>.\n\nThe entity set name from from where the data is fetched and and the internal BulletMicroChart representation is created.\nNote that this is not a dynamic UI5 property.","!static":false,"!category":"function","!type":"fn() -> String"},"getEnableAutoBinding":{"!description":"Gets current value of property <code>enableAutoBinding<\/code>.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists)\nproperty.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","fireInitialize":{"!description":"Fires event <code>initialize<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!category":"class","detachInitialize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialize<\/code> event of this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getUnitOfMeasure":{"!description":"ID of the element which is the current target of the association <code>unitOfMeasure<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width.\n\nDefault value is <code>164px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowLabel":{"!description":"Sets a new value for property <code>showLabel<\/code>.\n\nDetermines if any label is shown or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel: Boolean) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"getChartDescription":{"!description":"ID of the element which is the current target of the association <code>chartDescription<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart/SmartBulletMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getChartType chartType} : string (default: Bullet)<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getChartBindingPath chartBindingPath} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 164px)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialize initialize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this is set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width<\/code> property is ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialize<\/code> event of this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart<\/code> itself.\n\nEvent fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartBulletMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUnitOfMeasure":{"!description":"Sets the associated <code>unitOfMeasure<\/code>.","!static":false,"!category":"function","!type":"fn(oUnitOfMeasure: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"oUnitOfMeasure":"type: sap.m.Label, description: Id of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"}},"!description":"The SmartBulletMicroChart control creates a <code>sap.suite.ui.microchart.BulletMicroChart<\/code>\nbased on OData metadata and the configuration specified by <code>mSettings<\/code>.\nThe entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and\nannotation information from the given default OData model. Based on this, the BulletMicroChart UI\nis created.\n<br>\n<b><i>Note:<\/i><\/b><br>\nMost of the attributes/properties are not dynamic and cannot be changed once the control has been\ninitialized.","setChartDescription":{"!description":"Sets the associated <code>chartDescription<\/code>.","!static":false,"!category":"function","!type":"fn(oChartDescription: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"oChartDescription":"type: sap.m.Label, description: Id of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"}},"setEnableAutoBinding":{"!description":"Sets a new value for property <code>enableAutoBinding<\/code>.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists)\nproperty.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding: Boolean) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"setEntitySet":{"!description":"Sets a new value for property <code>entitySet<\/code>.\n\nThe entity set name from from where the data is fetched and and the internal BulletMicroChart representation is created.\nNote that this is not a dynamic UI5 property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet: String) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartBulletMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowLabel":{"!description":"Gets current value of property <code>showLabel<\/code>.\n\nDetermines if any label is shown or not\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChartBindingPath":{"!description":"Sets a new value for property <code>chartBindingPath<\/code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entity ( not an entitySet) that\nis used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartBindingPath: String) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"sChartBindingPath":"type: string, description: New value for property <code>chartBindingPath<\/code>"}},"setChartTitle":{"!description":"Sets the associated <code>chartTitle<\/code>.","!static":false,"!category":"function","!type":"fn(oChartTitle: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"oChartTitle":"type: sap.m.Label, description: Id of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"}},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this is set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width<\/code> property is ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getChartType":{"!description":"Gets current value of property <code>chartType<\/code>.\n\nSpecifies the chart type. Note that this property is read-only.\n\nDefault value is <code>Bullet<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>164px<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getChartBindingPath":{"!description":"Gets current value of property <code>chartBindingPath<\/code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entity ( not an entitySet) that\nis used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartBulletMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/smartmicrochart/SmartBulletMicroChart","!helpDescription":"The SmartBulletMicroChart control creates a <code>sap.suite.ui.microchart.BulletMicroChart<\/code>\nbased on OData metadata and the configuration specified by <code>mSettings<\/code>.\nThe entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and\nannotation information from the given default OData model. Based on this, the BulletMicroChart UI\nis created.\n<br>\n<b><i>Note:<\/i><\/b><br>\nMost of the attributes/properties are not dynamic and cannot be changed once the control has been\ninitialized."},"sap.ui.comp.smartchart":{"persistencyKey":{"!description":"Key used to access personalization data.","!category":"enum","!type":"String"},"displayInline":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.","!category":"enum","!type":"Boolean"},"showZoomButtons":{"!description":"Controls the visibility of the Zoom In and Zoom Out buttons.","!category":"enum","!type":"Boolean"},"!category":"namespace","showLegendButton":{"!description":"Controls the visibility of the Navigation button","!category":"enum","!type":"Boolean"},"showDrillBreadcrumbs":{"!description":"Controls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true<\/code>,\nthe toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.","!category":"enum","!type":"Boolean"},"alignContent":{"!description":"Determines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10.","!category":"enum","!type":"sap.m.FlexAlignContent"},"ignoredChartTypes":{"!description":"CSV of fields that is not shown in the list of available chart types.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"useVariantManagement":{"!description":"If set to <code>true<\/code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.","!category":"enum","!type":"Boolean"},"useTooltip":{"!description":"Controls the usage either of the tooltip or the popover. If set to <code>true<\/code>, a tooltip will be displayed.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"ignoredFields":{"!description":"CSV of fields that must be ignored in the OData metadata by the SmartChart control.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"ignoreFromPersonalisation":{"!description":"CSV of fields that is not shown in the personalization dialog.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"chartBindingPath":{"!description":"Specifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used\nonly if binding is established internally/automatically - See enableAutoBinding)","!category":"enum","!type":"String"},"renderType":{"!description":"Determines whether the layout is rendered as a series of divs or as an unordered list (ul)","!category":"enum","!type":"sap.m.FlexRendertype"},"height":{"!description":"The height of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"direction":{"!description":"Determines the direction of the layout of child elements.","!category":"enum","!type":"sap.m.FlexDirection"},"showDrillButtons":{"!description":"Controls the visibility of the Drill Up and Drill Down buttons.","!category":"enum","!type":"Boolean"},"showChartTooltip":{"!description":"Controls the visibility of the chart tooltip. If set to <code>true <\/code>, the chart tooltip will be shown when hovering over a\ndata point.","!category":"enum","!type":"Boolean"},"requestAtLeastFields":{"!description":"CSV of fields that must be always requested by the backend system.<br>\nThis property is mainly meant to be used if there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"useListForChartTypeSelection":{"!description":"Controls the visualization for chart type selection. If set to <code>true<\/code>, the list of available chart types will be\ndisplayed. If set to <code>false<\/code> and there are three or fewer available chart types, the chart types will be displayed as\nseparate buttons in the toolbar. If there are more than three chart types, a list will be shown.","!category":"enum","!type":"Boolean"},"alignItems":{"!description":"Determines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10.","!category":"enum","!type":"sap.m.FlexAlignItems"},"entitySet":{"!description":"The entity set name from which to fetch data and generate the columns.<br>\n<b>Note<\/b> This is not a dynamic property.","!category":"enum","!type":"String"},"smartFilterId":{"!description":"ID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the\nclosest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.","!category":"enum","!type":"String"},"showVariantManagement":{"!description":"Controls the visibility of the Variant Management.","!category":"enum","!type":"Boolean"},"legendVisible":{"!description":"Set chart's legend properties.","!category":"enum","!type":"Boolean"},"showFullScreenButton":{"!description":"Controls the visibility of the FullScreen button.","!category":"enum","!type":"Boolean"},"SmartChart":"sap.ui.comp.smartchart.SmartChart_obj","justifyContent":{"!description":"Determines the layout behavior along the main axis.","!category":"enum","!type":"sap.m.FlexJustifyContent"},"enableAutoBinding":{"!description":"If set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty. This happens right after the <code>initialise<\/code> event has been fired.","!category":"enum","!type":"Boolean"},"showSemanticNavigationButton":{"!description":"Controls the visibility of the Navigation button","!category":"enum","!type":"Boolean"},"useChartPersonalisation":{"!description":"If set to <code>true<\/code>, personalized chart settings are defined. If you want to persist the chart personalization, you need\nto specify the persistencyKey property.","!category":"enum","!type":"Boolean"},"width":{"!description":"The width of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"chartType":{"!description":"Specifies the type of chart to be created by the SmartChart control.","!category":"enum","!type":"String"},"header":{"!description":"Specifies header text that is shown in the chart.","!category":"enum","!type":"String"},"currentVariantId":{"!description":"Retrieves or applies the current variant.","!category":"enum","!type":"String"},"wrap":{"!description":"Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.","!category":"enum","!type":"sap.m.FlexWrap"},"backgroundDesign":{"!description":"Defines the background style of the <code>sap.m.FlexBox<\/code>.","!category":"enum","!type":"sap.m.BackgroundDesign"},"showDetailsButton":{"!description":"Controls the visibility of the Details button. If set to <code>true<\/code>, the datapoint tooltip will be disabled as the\ninformation of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.","!category":"enum","!type":"Boolean"},"selectionMode":{"!description":"Chart selection mode. Supported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case\ninsensitive, always return in upper case. Unsupported values will be ignored.","!category":"enum","!type":"sap.chart.SelectionMode"},"fitContainer":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smarttable":{"enableCustomFilter":{"!description":"Can be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When\npressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.","!category":"enum","!type":"Boolean"},"persistencyKey":{"!description":"Key used to access personalization data.","!category":"enum","!type":"String"},"displayInline":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.","!category":"enum","!type":"Boolean"},"showTablePersonalisation":{"!description":"The showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation\nbutton.","!category":"enum","!type":"Boolean"},"useOnlyOneSolidToolbar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 This property has no effect<br>If set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid\nstyle.","!category":"enum","!type":"Boolean"},"!category":"namespace","initiallyVisibleFields":{"!description":"CSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br>\nThis property is mainly meant to be used when no LineItem annotation exists.<br>\nIf you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and\nfinally based on this property.<br>\n<i>Note:<\/i><br>\nIf both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"alignContent":{"!description":"Determines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10.","!category":"enum","!type":"sap.m.FlexAlignContent"},"tableType":{"!description":"Specifies the type of table to be created in the SmartTable control.<br>\n<i>Note:<\/i><br>\nIf you add a table to the content of the SmartTable in the view, this property has no effect.","!category":"enum","!type":"sap.ui.comp.smarttable.TableType"},"useExportToExcel":{"!description":"Can be set to true or false depending on whether you want to export data to MS Excel®.","!category":"enum","!type":"Boolean"},"useVariantManagement":{"!description":"The useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you\nneed to specify the persistencyKey property.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"ignoredFields":{"!description":"CSV of fields that must be ignored in the OData metadata by the SmartTable control.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"ignoreFromPersonalisation":{"!description":"CSV of fields that is not shown in the personalization dialog.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"demandPopin":{"!description":"The demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive\ntable","!category":"enum","!type":"Boolean"},"renderType":{"!description":"Determines whether the layout is rendered as a series of divs or as an unordered list (ul)","!category":"enum","!type":"sap.m.FlexRendertype"},"height":{"!description":"The height of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"direction":{"!description":"Determines the direction of the layout of child elements.","!category":"enum","!type":"sap.m.FlexDirection"},"useTablePersonalisation":{"!description":"The useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table\nsettings. If you want to persist the table personalization, you need to specify the persistencyKey property.","!category":"enum","!type":"Boolean"},"requestAtLeastFields":{"!description":"CSV of fields that must be always requested from the backend<br>\nThis property is mainly meant to be used when there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<i>Note:<\/i><br>\nThis property has no effect when AnalyticalTable is used.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"TableType":"sap.ui.comp.smarttable.TableType","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"alignItems":{"!description":"Determines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10.","!category":"enum","!type":"sap.m.FlexAlignItems"},"entitySet":{"!description":"The entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property","!category":"enum","!type":"String"},"editable":{"!description":"This attribute can be used to specify if the controls created by the SmartTable control are editable.","!category":"enum","!type":"Boolean"},"smartFilterId":{"!description":"ID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest\nparent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.","!category":"enum","!type":"String"},"showVariantManagement":{"!description":"The showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.","!category":"enum","!type":"Boolean"},"editTogglable":{"!description":"Specifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only\nfor the SmartField scenario)","!category":"enum","!type":"Boolean"},"showFullScreenButton":{"!description":"Controls the visibility of the FullScreen button.","!category":"enum","!type":"Boolean"},"justifyContent":{"!description":"Determines the layout behavior along the main axis.","!category":"enum","!type":"sap.m.FlexJustifyContent"},"SmartTable":"sap.ui.comp.smarttable.SmartTable_obj","showRowCount":{"!description":"If the showRowCount attribute is set to true number of rows is shown along with the header text.","!category":"enum","!type":"Boolean"},"enableAutoBinding":{"!description":"When set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This\nhappens just after the <code>initialise<\/code> event has been fired.","!category":"enum","!type":"Boolean"},"width":{"!description":"The width of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"header":{"!description":"Specifies header text that is shown in table","!category":"enum","!type":"String"},"toolbarStyleClass":{"!description":"A style class which is defined for the toolbar of the table.","!category":"enum","!type":"String"},"currentVariantId":{"!description":"Retrieves or sets the current variant.","!category":"enum","!type":"String"},"tableBindingPath":{"!description":"This attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet\nattribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)","!category":"enum","!type":"String"},"wrap":{"!description":"Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.","!category":"enum","!type":"sap.m.FlexWrap"},"backgroundDesign":{"!description":"Defines the background style of the <code>sap.m.FlexBox<\/code>.","!category":"enum","!type":"sap.m.BackgroundDesign"},"fitContainer":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartfilterbar.GroupConfiguration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.GroupConfiguration with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.GroupConfiguration"},"sap.ui.comp":{"!description":"SAPUI5 library with smart controls.","smartfilterbar":"sap.ui.comp.smartfilterbar","smartmicrochart":"sap.ui.comp.smartmicrochart","!category":"namespace","navpopover":"sap.ui.comp.navpopover","smartfield":"sap.ui.comp.smartfield","transport":"sap.ui.comp.transport","variants":"sap.ui.comp.variants","filterbar":"sap.ui.comp.filterbar","personalization":"sap.ui.comp.personalization","odata":"sap.ui.comp.odata","!module":"sap/ui/comp/library","smartvariants":"sap.ui.comp.smartvariants","!helpDescription":"SAPUI5 library with smart controls.","smartform":"sap.ui.comp.smartform","smartchart":"sap.ui.comp.smartchart","valuehelpdialog":"sap.ui.comp.valuehelpdialog","smarttable":"sap.ui.comp.smarttable"},"sap.ui.comp.smarttable.TableType":{"!description":"Provides enumeration sap.ui.comp.smarttable.TableType A subset of table types that fit to a simple API returning one string.","AnalyticalTable":{"!description":"An analytical table (sap.ui.table.AnalyticalTable) control shall be created as the content of the SmartTable, if no table already exists","!category":"enum","!type":"String"},"Table":{"!description":"A table (sap.ui.table.Table) control shall be created as the content of the SmartTable, if no table already exists (default)","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","TreeTable":{"!description":"A tree table (sap.ui.table.TreeTable) control shall be created as the content of the SmartTable, if no table already exists (TODO)","!category":"enum","!type":"String"},"!category":"static class","ResponsiveTable":{"!description":"A responsive table (sap.m.Table) control that can be used on mobile devices shall be created as the content of the SmartTable, if no table\nalready exists","!category":"enum","!type":"String"}},"sap.ui.comp.smartfield.Configuration":{"!description":"The configuration allows to further define the behavior of a SmartField.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.Configuration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","setPreventInitialDataFetchInValueHelpDialog":{"!description":"Sets a new value for property <code>preventInitialDataFetchInValueHelpDialog<\/code>.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for\nthis field will be filled initially. The default value is <code>true<\/code>, which means the table will not be filled as the\ndata fetch is prevented.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bPreventInitialDataFetchInValueHelpDialog: Boolean) -> sap.ui.comp.smartfield.Configuration","parameters":{"bPreventInitialDataFetchInValueHelpDialog":"type: boolean, description: New value for property <code>preventInitialDataFetchInValueHelpDialog<\/code>"}},"!category":"class","setControlType":{"!description":"Sets a new value for property <code>controlType<\/code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the\ndefault behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as\na combo box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sControlType: sap.ui.comp.smartfield.ControlType) -> sap.ui.comp.smartfield.Configuration","parameters":{"sControlType":"type: sap.ui.comp.smartfield.ControlType, description: New value for property <code>controlType<\/code>"}},"getPreventInitialDataFetchInValueHelpDialog":{"!description":"Gets current value of property <code>preventInitialDataFetchInValueHelpDialog<\/code>.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for\nthis field will be filled initially. The default value is <code>true<\/code>, which means the table will not be filled as the\ndata fetch is prevented.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.Configuration with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDisplayBehaviour":{"!description":"Sets a new value for property <code>displayBehaviour<\/code>.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the\ndescriptions of the values shown in the result after a query are displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayBehaviour: sap.ui.comp.smartfield.DisplayBehaviour) -> sap.ui.comp.smartfield.Configuration","parameters":{"sDisplayBehaviour":"type: sap.ui.comp.smartfield.DisplayBehaviour, description: New value for property <code>displayBehaviour<\/code>"}},"!constructorDescription":"Constructor for a new smartfield/Configuration.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getControlType controlType} : sap.ui.comp.smartfield.ControlType<\/li>\n<li>{@link #getDisplayBehaviour displayBehaviour} : sap.ui.comp.smartfield.DisplayBehaviour<\/li>\n<li>{@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfield/Configuration","!helpDescription":"The configuration allows to further define the behavior of a SmartField.","getControlType":{"!description":"Gets current value of property <code>controlType<\/code>.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the\ndefault behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as\na combo box.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlType"},"getDisplayBehaviour":{"!description":"Gets current value of property <code>displayBehaviour<\/code>.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the\ndescriptions of the values shown in the result after a query are displayed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.DisplayBehaviour"}},"sap.ui.comp.smartfilterbar.SmartFilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterBar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.SmartFilterBar"},"sap.ui.comp.smartfilterbar.SelectOption":{"!description":"A Select Option can be used to specify default filter values for a control configuration of the SmartFilterBar.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.SelectOption.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","!category":"class","setHigh":{"!description":"Sets a new value for property <code>high<\/code>.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHigh: String) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sHigh":"type: string, description: New value for property <code>high<\/code>"}},"setSign":{"!description":"Sets a new value for property <code>sign<\/code>.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude. Constants can be found here: sap.ui.comp.smartfilterbar.SelectOption.SIGN\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>I<\/code>.","!static":false,"!category":"function","!type":"fn(sSign: String) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sSign":"type: string, description: New value for property <code>sign<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SelectOption with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setLow":{"!description":"Sets a new value for property <code>low<\/code>.\n\nThe low value for a select option.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLow: String) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sLow":"type: string, description: New value for property <code>low<\/code>"}},"!constructorDescription":"Constructor for a new smartfilterbar/SelectOption.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSign sign} : string (default: I)<\/li>\n<li>{@link #getOperator operator} : string (default: EQ)<\/li>\n<li>{@link #getLow low} : string<\/li>\n<li>{@link #getHigh high} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfilterbar/SelectOption","!helpDescription":"A Select Option can be used to specify default filter values for a control configuration of the SmartFilterBar.","getLow":{"!description":"Gets current value of property <code>low<\/code>.\n\nThe low value for a select option.","!static":false,"!category":"function","!type":"fn() -> String"},"getSign":{"!description":"Gets current value of property <code>sign<\/code>.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude. Constants can be found here: sap.ui.comp.smartfilterbar.SelectOption.SIGN\n\nDefault value is <code>I<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getHigh":{"!description":"Gets current value of property <code>high<\/code>.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between).","!static":false,"!category":"function","!type":"fn() -> String"},"setOperator":{"!description":"Sets a new value for property <code>operator<\/code>.\n\nThe operator for a select option. The default value is EQ \"for equals\". Possible values can be found here: sap.ui.comp.smartfilterbar.SelectOption.OPERATOR.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>EQ<\/code>.","!static":false,"!category":"function","!type":"fn(sOperator: String) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sOperator":"type: string, description: New value for property <code>operator<\/code>"}},"getOperator":{"!description":"Gets current value of property <code>operator<\/code>.\n\nThe operator for a select option. The default value is EQ \"for equals\". Possible values can be found here: sap.ui.comp.smartfilterbar.SelectOption.OPERATOR.\n\nDefault value is <code>EQ<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.variants.EditableVariantItem":{"getLifecyclePackage":{"!description":"Gets current value of property <code>lifecyclePackage<\/code>.\n\nABAP Package the variant is assigned. Used for transport functionality","!static":false,"!category":"function","!type":"fn() -> String"},"getAuthor":{"!description":"Gets current value of property <code>author<\/code>.\n\nAuthor of the variant","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Sets a new value for property <code>accessOptions<\/code>.\n\nFlags for a variant to indicate why it might be read-only\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessOptions: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sAccessOptions":"type: string, description: New value for property <code>accessOptions<\/code>"}},"!proto":"sap.m.ColumnListItem","!category":"class","setLifecyclePackage":{"!description":"Sets a new value for property <code>lifecyclePackage<\/code>.\n\nABAP Package the variant is assigned. Used for transport functionality\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecyclePackage: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sLifecyclePackage":"type: string, description: New value for property <code>lifecyclePackage<\/code>"}},"setGlobal":{"!description":"Sets a new value for property <code>global<\/code>.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bGlobal: Boolean) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"bGlobal":"type: boolean, description: New value for property <code>global<\/code>"}},"!constructorDescription":"Constructor for a new variants/EditableVariantItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getGlobal global} : boolean<\/li>\n<li>{@link #getLifecyclePackage lifecyclePackage} : string<\/li>\n<li>{@link #getLifecycleTransportId lifecycleTransportId} : string<\/li>\n<li>{@link #getNamespace namespace} : string<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<li>{@link #getAccessOptions accessOptions} : string<\/li>\n<li>{@link #getLabelReadOnly labelReadOnly} : boolean (default: false)<\/li>\n<li>{@link #getAuthor author} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ColumnListItem#constructor sap.m.ColumnListItem}\ncan be used as well.","getGlobal":{"!description":"Gets current value of property <code>global<\/code>.\n\nIndicator if a variant is visible for all users.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nKey of the List Item\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"The EditableVariantItem class describes an editable variant list item for the Manage Variants popup.","setLabelReadOnly":{"!description":"Sets a new value for property <code>labelReadOnly<\/code>.\n\nIndicates if the variant label can be changed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLabelReadOnly: Boolean) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"bLabelReadOnly":"type: boolean, description: New value for property <code>labelReadOnly<\/code>"}},"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nKey of the List Item","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.variants.EditableVariantItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Gets current value of property <code>accessOptions<\/code>.\n\nFlags for a variant to indicate why it might be read-only","!static":false,"!category":"function","!type":"fn() -> String"},"setLifecycleTransportId":{"!description":"Sets a new value for property <code>lifecycleTransportId<\/code>.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecycleTransportId: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sLifecycleTransportId":"type: string, description: New value for property <code>lifecycleTransportId<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.EditableVariantItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ColumnListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/variants/EditableVariantItem","getLifecycleTransportId":{"!description":"Gets current value of property <code>lifecycleTransportId<\/code>.\n\nIdentifier of the transport object the variant is assigned to.","!static":false,"!category":"function","!type":"fn() -> String"},"setAuthor":{"!description":"Sets a new value for property <code>author<\/code>.\n\nAuthor of the variant\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAuthor: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sAuthor":"type: string, description: New value for property <code>author<\/code>"}},"!helpDescription":"The EditableVariantItem class describes an editable variant list item for the Manage Variants popup.","getNamespace":{"!description":"Gets current value of property <code>namespace<\/code>.\n\nVariant namespace","!static":false,"!category":"function","!type":"fn() -> String"},"getReadOnly":{"!description":"Gets current value of property <code>readOnly<\/code>.\n\nIndication if variant can be changed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabelReadOnly":{"!description":"Gets current value of property <code>labelReadOnly<\/code>.\n\nIndicates if the variant label can be changed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNamespace":{"!description":"Sets a new value for property <code>namespace<\/code>.\n\nVariant namespace\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNamespace: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sNamespace":"type: string, description: New value for property <code>namespace<\/code>"}},"setReadOnly":{"!description":"Sets a new value for property <code>readOnly<\/code>.\n\nIndication if variant can be changed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadOnly: Boolean) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"bReadOnly":"type: boolean, description: New value for property <code>readOnly<\/code>"}}},"sap.ui.comp.smartvariants.PersonalizableInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.PersonalizableInfo with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.PersonalizableInfo"},"sap.ui.comp.smartvariants":{"initialSelectionKey":{"!description":"Enables the setting of the initially selected variant.","!category":"enum","!type":"String"},"persistencyKey":{"!description":"Key used to access personalization data.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"showCreateTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Indicates that a Create Tile is visible in the Create dialog.","!category":"enum","!type":"Boolean"},"PersonalizableInfo":"sap.ui.comp.smartvariants.PersonalizableInfo_obj","keyName":{"!description":"Defines the property name of the personalization key.","!category":"enum","!type":"String"},"industrySolutionMode":{"!description":"If set to<code>true<\/code>, the scenario is an industry-specific solution. This flag is only used internally in the app variant\nscenarios.","!category":"enum","!type":"Boolean"},"!category":"namespace","type":{"!description":"Describes the type of variant management.","!category":"enum","!type":"String"},"enabled":{"!description":"Can be set to true or false depending on whether you want to enable or disable the control.","!category":"enum","!type":"Boolean"},"lifecycleSupport":{"!description":"Enables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.","!category":"enum","!type":"Boolean"},"SmartVariantManagement":"sap.ui.comp.smartvariants.SmartVariantManagement_obj","defaultVariantKey":{"!description":"Provides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.","!category":"enum","!type":"String"},"standardItemText":{"!description":"Overwrites the default Standard variant title.","!category":"enum","!type":"String"},"SmartVariantManagementUi2":"sap.ui.comp.smartvariants.SmartVariantManagementUi2_obj","selectionKey":{"!description":"The key of the currently selected item. Returns null if the default item list is selected.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"showExecuteOnSelection":{"!description":"Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.","!category":"enum","!type":"Boolean"},"showShare":{"!description":"Indicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other\nusers.","!category":"enum","!type":"Boolean"},"dataSource":{"!description":"Name of the data service","!category":"enum","!type":"String"}},"sap.ui.comp.smartchart.SmartChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartchart.SmartChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartchart.SmartChart"},"sap.ui.comp.smartfield.JSONType":{"!description":"Enumeration of the different data types supported by the SmartField control, if it is using a JSON model.","Integer":{"!description":"Integer type","!category":"enum","!type":"String"},"Float":{"!description":"Float type","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","String":{"!description":"The JavaScript primary type String","!category":"enum","!type":"String"},"Boolean":{"!description":"Boolean Type","!category":"enum","!type":"String"},"Date":{"!description":"The JavaScript Date Object","!category":"enum","!type":"String"},"DateTime":{"!description":"Date Time Type","!category":"enum","!type":"String"}},"sap.ui.comp.smartfield":{"DisplayBehaviour":"sap.ui.comp.smartfield.DisplayBehaviour","criticalityRepresentationType":{"!description":"Optional attribute, which can be set to control how the criticality is visualized.","!category":"enum","!type":"sap.ui.comp.smartfield.CriticalityRepresentationType"},"valueState":{"!description":"Visualizes warnings or errors.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"The text which is shown in the value state message popup.","!category":"enum","!type":"String"},"preventInitialDataFetchInValueHelpDialog":{"!description":"If there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for\rthis field will be filled initially. The default value is <code>true<\/code>, which means the table will not be filled as the\rdata fetch is prevented.","!category":"enum","!type":"Boolean"},"Configuration":"sap.ui.comp.smartfield.Configuration_obj","showSuggestion":{"!description":"If set to <code>true<\/code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.","!category":"enum","!type":"Boolean"},"criticality":{"!description":"Optional attribute, which can be set, if the control type has the value ObjectStatus.","!category":"enum","!type":"Object"},"showLabel":{"!description":"If set to false the label is not displayed.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"SmartField":"sap.ui.comp.smartfield.SmartField_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The name of an entity set for which the control manages values. This is an optional property.","!category":"enum","!type":"String"},"textAlign":{"!description":"Horizontal alignment of the text.","!category":"enum","!type":"sap.ui.core.TextAlign"},"wrapping":{"!description":"Indicates whether the control break lines (in display mode) to prevent overflow.","!category":"enum","!type":"Boolean"},"CriticalityRepresentationType":"sap.ui.comp.smartfield.CriticalityRepresentationType","ControlContextType":"sap.ui.comp.smartfield.ControlContextType","name":{"!description":"To be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').","!category":"enum","!type":"String"},"ControlType":"sap.ui.comp.smartfield.ControlType","JSONType":"sap.ui.comp.smartfield.JSONType","maxLength":{"!description":"Maximum number of characters. Value <code>0<\/code> means the feature is switched off.","!category":"enum","!type":"Number"},"proposedControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Proposes a control to be rendered. The smart field may ignore the proposal.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlProposalType"},"ControlProposalType":"sap.ui.comp.smartfield.ControlProposalType","showValueHelp":{"!description":"If set to true, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.","!category":"enum","!type":"Boolean"},"controlContext":{"!description":"Defines in which context the layout of the smart field has to be interpreted.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlContextType"},"uomEditable":{"!description":"Editable state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its\nassociated currency.","!category":"enum","!type":"Boolean"},"!category":"namespace","uomEnabled":{"!description":"Enabled state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.","!category":"enum","!type":"Boolean"},"mandatory":{"!description":"Mandatory property.","!category":"enum","!type":"Boolean"},"clientSideMandatoryCheck":{"!description":"Determines if the mandatory check happens on the client side <code>true<\/code> or on the server side <code>false<\/code>.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Enables the control.","!category":"enum","!type":"Boolean"},"ObjectStatus":"sap.ui.comp.smartfield.ObjectStatus_obj","ControlProposal":"sap.ui.comp.smartfield.ControlProposal_obj","SmartLabel":"sap.ui.comp.smartfield.SmartLabel_obj","textLabel":{"!description":"This property contains the text of an associated smart label.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Text shown when no value available.","!category":"enum","!type":"String"},"value":{"!description":"The value property keeps the current value of the control. If a binding expression is configured, this is used to determine the\nproperty of an OData entity.","!category":"enum","!type":"Object"},"tooltipLabel":{"!description":"This property contains the tool tip of the associated smart label.","!category":"enum","!type":"String"},"contextEditable":{"!description":"Notifies the control whether controls using the SmartField are editable or not.","!category":"enum","!type":"Boolean"},"editable":{"!description":"Sets the control into an editable mode or a display mode.","!category":"enum","!type":"Boolean"},"displayBehaviour":{"!description":"The property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the\rdescriptions of the values shown in the result after a query are displayed.","!category":"enum","!type":"sap.ui.comp.smartfield.DisplayBehaviour"},"url":{"!description":"Contains a URL which is used to render a link. The link is rendered, if the OData property which the value property of the control\nis bound to is of type <code>Edm.String<\/code> and the Smart Field is in display mode.","!category":"enum","!type":"String"},"showValueStateMessage":{"!description":"The text which is shown in the value state message popup.","!category":"enum","!type":"Boolean"},"controlType":{"!description":"By default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some\rextent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlProposalType"},"jsontype":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31.0 undefined<br>Data types to be used, if the SmartField control is interacting with a JSON model. If the value property of the control is bound to\na property of an OData entity set, this property is not considered.","!category":"enum","!type":"sap.ui.comp.smartfield.JSONType"},"width":{"!description":"The width can be set to an absolute value.","!category":"enum","!type":"sap.ui.core.CSSSize"},"uomVisible":{"!description":"Visible state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.","!category":"enum","!type":"Boolean"},"uomEditState":{"!description":"This property is for internal use only.","!category":"enum","!type":"Number"}},"sap.ui.comp.smartmicrochart.SmartMicroChart":{"getChartTitle":{"!description":"ID of the element which is the current target of the association <code>chartTitle<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getEntitySet":{"!description":"Gets current value of property <code>entitySet<\/code>.\n\nThe entity set name to fetch data and create the internal chart representation from.\nNote that this is not a dynamic UI5 property.","!static":false,"!category":"function","!type":"fn() -> String"},"getEnableAutoBinding":{"!description":"Gets current value of property <code>enableAutoBinding<\/code>.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","fireInitialize":{"!description":"Fires event <code>initialize<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!category":"class","detachInitialize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialize<\/code> event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getUnitOfMeasure":{"!description":"ID of the element which is the current target of the association <code>unitOfMeasure<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width.\n\nDefault value is <code>164px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowLabel":{"!description":"Sets a new value for property <code>showLabel<\/code>.\n\nDetermines if any label is shown or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"getChartDescription":{"!description":"ID of the element which is the current target of the association <code>chartDescription<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the height.\n\nDefault value is <code>74px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart/SmartMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getChartBindingPath chartBindingPath} : string<\/li>\n<li>{@link #getChartType chartType} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 164px)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 74px)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialize initialize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width<\/code> and <code>height<\/code> properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialize<\/code> event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code> itself.\n\nEvent fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUnitOfMeasure":{"!description":"Sets the associated <code>unitOfMeasure<\/code>.","!static":false,"!category":"function","!type":"fn(oUnitOfMeasure: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oUnitOfMeasure":"type: sap.m.Label, description: Id of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"}},"!description":"The SmartMicroChart control creates a chart based on OData metadata and the configuration specified by <code>mSettings<\/code>.\nThe entitySet property must be specified in order to use the control. This property is used to fetch metadata and\nannotation information from the given default OData model. Depending on the UI/ChartType annotation, the control\ncreates a corresponding <code>SmartBulletMicroChart<\/code> or <code>SmartAreaMicroChart<\/code> instance and delegates to the internal control.\n       <br>\n<b><i>Note:<i><\/b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized.","setChartDescription":{"!description":"Sets the associated <code>chartDescription<\/code>.","!static":false,"!category":"function","!type":"fn(oChartDescription: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oChartDescription":"type: sap.m.Label, description: Id of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"}},"setEnableAutoBinding":{"!description":"Sets a new value for property <code>enableAutoBinding<\/code>.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"setEntitySet":{"!description":"Sets a new value for property <code>entitySet<\/code>.\n\nThe entity set name to fetch data and create the internal chart representation from.\nNote that this is not a dynamic UI5 property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet: String) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowLabel":{"!description":"Gets current value of property <code>showLabel<\/code>.\n\nDetermines if any label is shown or not\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChartBindingPath":{"!description":"Sets a new value for property <code>chartBindingPath<\/code>.\n\nThis attribute can be used to specify the path that\nis used during the binding of the chart. If not\nspecified, the entitySet attribute is used instead and also stored in this property.\nCalling <code>bindElement<\/code> binds the control and sets this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartBindingPath: String) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sChartBindingPath":"type: string, description: New value for property <code>chartBindingPath<\/code>"}},"setChartTitle":{"!description":"Sets the associated <code>chartTitle<\/code>.","!static":false,"!category":"function","!type":"fn(oChartTitle: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oChartTitle":"type: sap.m.Label, description: Id of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"}},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width<\/code> and <code>height<\/code> properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getChartType":{"!description":"Gets current value of property <code>chartType<\/code>.\n\nSpecifies the type of chart. Note that this property is read-only.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the height.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>74px<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>164px<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getChartBindingPath":{"!description":"Gets current value of property <code>chartBindingPath<\/code>.\n\nThis attribute can be used to specify the path that\nis used during the binding of the chart. If not\nspecified, the entitySet attribute is used instead and also stored in this property.\nCalling <code>bindElement<\/code> binds the control and sets this property.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/smartmicrochart/SmartMicroChart","!helpDescription":"The SmartMicroChart control creates a chart based on OData metadata and the configuration specified by <code>mSettings<\/code>.\nThe entitySet property must be specified in order to use the control. This property is used to fetch metadata and\nannotation information from the given default OData model. Depending on the UI/ChartType annotation, the control\ncreates a corresponding <code>SmartBulletMicroChart<\/code> or <code>SmartAreaMicroChart<\/code> instance and delegates to the internal control.\n       <br>\n<b><i>Note:<i><\/b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized."},"sap.ui.comp.smartform.flexibility.DialogContent":{"!description":"The content of the personalization dialog of the SmartForm","init":{"!description":"Initialisation","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.flexibility.DialogContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.comp.smartform.flexibility.DialogContent","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent of the control itself","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","!category":"class","initialiseODataFieldSelector":{"!description":"Returns Ids of the assigned changes of the component (correctly sorted)","!static":false,"!category":"function","!type":"fn(oODataModel: sap.ui.model.odata.ODataModel, sEntityType: String, sComponentName: String, aIgnoredFields: Array, mBindingPathToFieldListElement: Object.<bindingPath:string, fieldListElement:Object>, mIdToFieldListElement: Object.<id:string, fieldListElement:Object>, mPropertyBag: map)","parameters":{"sComponentName":"type: string, description: The name of the SAPUI5 component","mPropertyBag":"type: map, description: (optional) contains additional data that are needed for reading of changes\n- appDescriptor that belongs to actual component\n- siteId that belongs to actual component","oODataModel":"type: sap.ui.model.odata.ODataModel, description: The list of fields will be extracetd from the models metadata","mBindingPathToFieldListElement":"type: Object.<bindingPath:string, fieldListElement:Object>, description: Map absolute odata binding paths to the field list elements","sEntityType":"type: string, description: The entity type whose fields could be selected","mIdToFieldListElement":"type: Object.<id:string, fieldListElement:Object>, description: Map field list element ids to the field list elements","aIgnoredFields":"type: array, description: List of fields which should be ignored"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.DialogContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new smartform/flexibility/DialogContent.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/comp/smartform/flexibility/DialogContent","!helpDescription":"The content of the personalization dialog of the SmartForm","setViewId":{"!description":"Sets the first part of new control ids for the view context","!static":false,"!category":"function","!type":"fn(sId: String)","parameters":{"sId":"type: string, description: Control Id"}},"destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.flexibility.DialogContent"}},"sap.ui.comp.variants.VariantItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.variants.VariantItem"},"sap.ui.comp.variants":{"initialSelectionKey":{"!description":"Enables the setting of the initially selected variant.","!category":"enum","!type":"String"},"lifecycleTransportId":{"!description":"Identifier of the transport object the variant is assigned to.","!category":"enum","!type":"String"},"unread":{"!description":"Activates the unread indicator for the list item, if set to <code>true<\/code>.\n<b>Note:<\/b> This flag is ignored when the <code>showUnread<\/code> property of the parent is set to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"showCreateTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Indicates that a Create Tile is visible in the Create dialog.","!category":"enum","!type":"Boolean"},"industrySolutionMode":{"!description":"If set to<code>true<\/code>, the scenario is an industry-specific solution. This flag is only used internally in the app variant\nscenarios.","!category":"enum","!type":"Boolean"},"!category":"namespace","global":{"!description":"Indicator if a variant is visible for all users.","!category":"enum","!type":"Boolean"},"executeOnSelection":{"!description":"Attribute for usage in Smart Filter Bar","!category":"enum","!type":"Boolean"},"type":{"!description":"Defines the visual indication and behavior of the list items, e.g. <code>Active<\/code>, <code>Navigation<\/code>, <code>Detail<\/code>.","!category":"enum","!type":"sap.m.ListType"},"vAlign":{"!description":"Sets the vertical alignment of all the cells within the table row (including selection and navigation).\n<b>Note:<\/b> <code>vAlign<\/code> property of <code>sap.m.Column<\/code> overrides the property for cell vertical alignment if both are set.","!category":"enum","!type":"sap.ui.core.VerticalAlign"},"enabled":{"!description":"Can be set to true or false depending on whether you want to enable or disable the control.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!category":"enum","!type":"sap.ui.core.TextDirection"},"defaultVariantKey":{"!description":"Provides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.","!category":"enum","!type":"String"},"selectionKey":{"!description":"The key of the currently selected item. Returns null if the default item list is selected.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"showExecuteOnSelection":{"!description":"Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.","!category":"enum","!type":"Boolean"},"text":{"!description":"The text to be displayed for the item.","!category":"enum","!type":"String"},"EditableVariantItem":"sap.ui.comp.variants.EditableVariantItem_obj","selected":{"!description":"Defines the selected state of the list items.\n<b>Note:<\/b> Binding the <code>selected<\/code> property in single selection modes may cause unwanted results if you have more than one selected items in your binding.","!category":"enum","!type":"Boolean"},"key":{"!description":"Can be used as input for subsequent actions.","!category":"enum","!type":"String"},"lifecyclePackage":{"!description":"ABAP package the variant is assigned to. Used for transport functionality.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"author":{"!description":"Author of the variant","!category":"enum","!type":"String"},"readOnly":{"!description":"Is the user allowed to change the item's data","!category":"enum","!type":"Boolean"},"VariantItem":"sap.ui.comp.variants.VariantItem_obj","counter":{"!description":"Defines the counter value of the list items.","!category":"enum","!type":"Number"},"labelReadOnly":{"!description":"Indicates if the variant title can be changed.","!category":"enum","!type":"Boolean"},"VariantManagement":"sap.ui.comp.variants.VariantManagement_obj","lifecycleSupport":{"!description":"Enables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.","!category":"enum","!type":"Boolean"},"standardItemText":{"!description":"Overwrites the default Standard variant title.","!category":"enum","!type":"String"},"namespace":{"!description":"Variant namespace","!category":"enum","!type":"String"},"showShare":{"!description":"Indicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other\nusers.","!category":"enum","!type":"Boolean"},"accessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Flags for a variant to indicate why it might be read-only.","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.SmartForm":{"setCheckButton":{"!description":"Sets a new value for property <code>checkButton<\/code>.\n\nSpecifies whether a check button is added to the toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCheckButton: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bCheckButton":"type: boolean, description: New value for property <code>checkButton<\/code>"}},"fireEditToggled":{"!description":"Fires event <code>editToggled<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.SmartForm","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getUseHorizontalLayout":{"!description":"Gets current value of property <code>useHorizontalLayout<\/code>.\n\nSpecifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above\nthe field. Each group is rendered in a new line.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySemanticObjectController":{"!description":"Destroys the semanticObjectController in the aggregation <code>semanticObjectController<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the form is editable.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLayout":{"!description":"Sets the aggregated <code>layout<\/code>.","!static":false,"!category":"function","!type":"fn(oLayout: sap.ui.comp.smartform.Layout) -> sap.ui.comp.smartform.SmartForm","parameters":{"oLayout":"type: sap.ui.comp.smartform.Layout, description: The layout to set"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle of the form.","!static":false,"!category":"function","!type":"fn() -> String"},"setHorizontalLayoutGroupElementMinWidth":{"!description":"Setter for property <code>horizontalLayoutGroupElementMinWidth<\/code>.","!static":false,"!category":"function","!type":"fn(New: Number)","parameters":{"New":"type: int, description: value for property <code>horizontalLayoutGroupElementMinWidth<\/code>."}},"getFlexEnabled":{"!description":"Gets current value of property <code>flexEnabled<\/code>.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireChecked":{"!description":"Fires event <code>checked<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.SmartForm","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getCheckButton":{"!description":"Gets current value of property <code>checkButton<\/code>.\n\nSpecifies whether a check button is added to the toolbar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getExpandable":{"!description":"Gets current value of property <code>expandable<\/code>.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCustomToolbar":{"!description":"Getter for aggregation <code>customToolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"getGroups":{"!description":"Returns the content of aggregation groups.","!static":false,"!category":"function","!type":"fn() -> Array"},"!description":"The SmartForm control renders a form (sap.ui.layout.form.Form) and supports key user personalization, such as adding/hiding fields and\n       groups, changing the order of fields and groups, and changing labels. When used with the SmartField control the label is taken from the\n       metadata annotation <code>sap:label<\/code> if not specified in the XML view.","attachEditToggled":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>editToggled<\/code> event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself.\n\nThis event is fired when the editable property is toggled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfGroup":{"!description":"Checks for the provided <code>sap.ui.comp.smartform.Group<\/code> in the aggregation <code>groups<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroup: sap.ui.comp.smartform.Group) -> Number","parameters":{"oGroup":"type: sap.ui.comp.smartform.Group, description: The group whose index is looked for"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.SmartForm.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachChecked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>checked<\/code> event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself.\n\nThis event is fired after check was performed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEditTogglable":{"!description":"Setter for property <code>editTogglable<\/code>. Default value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(New: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"New":"type: boolean, description: value for property <code>editTogglable<\/code>."}},"getIgnoredFields":{"!description":"Gets current value of property <code>ignoredFields<\/code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartForm control.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitle":{"!description":"Setter for property <code>title<\/code>. Default value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.comp.smartform.SmartForm","parameters":{"sTitle":"type: string, description: new value for property <code>title<\/code>."}},"check":{"!description":"Checks smart fields for client errors.","!static":false,"!category":"function","!type":"fn(Determines: Boolean) -> [String]","parameters":{"Determines":"type: boolean, description: is only visible fields in visible groups should be considered. default: <code>true<\/code>"}},"addAggregation":{"!description":"Adds some entity oObject to the aggregation identified by sAggregationName.","!static":false,"!category":"function","!type":"fn(Name: String, The: Object)","parameters":{"The":"type: object, description: object representing a group","Name":"type: string, description: of the aggregation"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.SmartForm with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Cleans up the resources associated with this element and all its children.","!static":false,"!category":"function","!type":"fn()"},"destroyLayout":{"!description":"Destroys the layout in the aggregation <code>layout<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"_updateClonedElements":{"!description":"Updates controls in the hierarchy of a cloned smart form.","!static":false,"!category":"function","!type":"fn(The: sap.ui.comp.smartform.SmartForm)","parameters":{"The":"type: sap.ui.comp.smartform.SmartForm, description: cloned smart form"}},"!module":"sap/ui/comp/smartform/SmartForm","setFocusOnEditableControl":{"!description":"Sets the focus on the first editable control.","!static":false,"!category":"function","!type":"fn()"},"!helpDescription":"The SmartForm control renders a form (sap.ui.layout.form.Form) and supports key user personalization, such as adding/hiding fields and\n       groups, changing the order of fields and groups, and changing labels. When used with the SmartField control the label is taken from the\n       metadata annotation <code>sap:label<\/code> if not specified in the XML view.","detachChecked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>checked<\/code> event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyGroups":{"!description":"Destroys a <code>group<\/code> from the aggregation named groups.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"removeAllGroups":{"!description":"Removes all the groups in the aggregation named groups.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.Group]"},"getSemanticObjectController":{"!description":"Gets content of aggregation <code>semanticObjectController<\/code>.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"setEntityType":{"!description":"Sets a new value for property <code>entityType<\/code>.\n\nCSV of entity types for which the flexibility features are available.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntityType: String) -> sap.ui.comp.smartform.SmartForm","parameters":{"sEntityType":"type: string, description: New value for property <code>entityType<\/code>"}},"insertGroup":{"!description":"Inserts a <code>group<\/code> into the aggregation named groups.","!static":false,"!category":"function","!type":"fn(The: Number) -> sap.ui.comp.smartform.SmartForm","parameters":{"The":"type: int, description: 0-based index the group should be inserted at"}},"setExpanded":{"!description":"Sets a new value for property <code>expanded<\/code>.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the\ncontent is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"propagateGridDataSpan":{"!description":"Sets default span for GridData layout of group elements when used with horizontal layout.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"!proto":"sap.ui.core.Control","!category":"class","getEditTogglable":{"!description":"Gets current value of property <code>editTogglable<\/code>.\n\nSpecifies whether the editable property is togglable via button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAggregation":{"!description":"Returns the aggregated object(s) for the named aggregation.","!static":false,"!category":"function","!type":"fn(Name: String) -> Array","parameters":{"Name":"type: string, description: of the aggregation"}},"getLayout":{"!description":"Gets content of aggregation <code>layout<\/code>.\n\nLayout settings to adjust ResponsiveGridLayout","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.Layout"},"!constructorDescription":"Constructor for a new smartform/SmartForm.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getUseHorizontalLayout useHorizontalLayout} : boolean<\/li>\n<li>{@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth} : int<\/li>\n<li>{@link #getCheckButton checkButton} : boolean (default: false)<\/li>\n<li>{@link #getEntityType entityType} : string<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<li>{@link #getExpanded expanded} : boolean<\/li>\n<li>{@link #getEditTogglable editTogglable} : boolean (default: false)<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getFlexEnabled flexEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroups groups} : sap.ui.comp.smartform.Group[] (default)<\/li>\n<li>{@link #getLayout layout} : sap.ui.comp.smartform.Layout<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : sap.ui.comp.navpopover.SemanticObjectController<\/li>\n<li>{@link #getCustomToolbar customToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:editToggled editToggled} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:checked checked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSemanticObjectController":{"!description":"Sets the aggregated <code>semanticObjectController<\/code>.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: sap.ui.comp.navpopover.SemanticObjectController) -> sap.ui.comp.smartform.SmartForm","parameters":{"oSemanticObjectController":"type: sap.ui.comp.navpopover.SemanticObjectController, description: The semanticObjectController to set"}},"setIgnoredFields":{"!description":"Sets a new value for property <code>ignoredFields<\/code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartForm control.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields: String) -> sap.ui.comp.smartform.SmartForm","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"destroyCustomToolbar":{"!description":"Destroys the customToolbar in the aggregation <code>customToolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"addGroup":{"!description":"Adds a group to the aggregation named groups.","!static":false,"!category":"function","!type":"fn(Group: Object)","parameters":{"Group":"type: object, description: to be added"}},"getVisibleProperties":{"!description":"Returns the array of properties currently visible on the UI.","!static":false,"!category":"function","!type":"fn() -> [String]"},"detachEditToggled":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>editToggled<\/code> event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setExpandable":{"!description":"Sets a new value for property <code>expandable<\/code>.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandable: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bExpandable":"type: boolean, description: New value for property <code>expandable<\/code>"}},"getSmartFields":{"!description":"Retrieves all the smart fields of the form.","!static":false,"!category":"function","!type":"fn(Determines: Boolean) -> [sap.ui.comp.smartfield.SmartField]","parameters":{"Determines":"type: boolean, description: if only visible groups are considered; default is true"}},"getEntityType":{"!description":"Gets current value of property <code>entityType<\/code>.\n\nCSV of entity types for which the flexibility features are available.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the\ncontent is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFlexEnabled":{"!description":"Sets a new value for property <code>flexEnabled<\/code>.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFlexEnabled: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bFlexEnabled":"type: boolean, description: New value for property <code>flexEnabled<\/code>"}},"setCustomToolbar":{"!description":"Setter for aggregation <code>customToolbar<\/code>. Default value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(New: sap.m.Toolbar) -> sap.ui.comp.smartform.SmartForm","parameters":{"New":"type: sap.m.Toolbar, description: value for aggregation <code>customToolbar<\/code>."}},"getHorizontalLayoutGroupElementMinWidth":{"!description":"Gets current value of property <code>horizontalLayoutGroupElementMinWidth<\/code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setUseHorizontalLayout":{"!description":"Setter for property <code>useHorizontalLayout<\/code>.","!static":false,"!category":"function","!type":"fn(New: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"New":"type: boolean, description: value for property <code>useHorizontalLayout<\/code>."}},"setEditable":{"!description":"Setter for property <code>editable<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>."}},"removeGroup":{"!description":"Removes a <code>group<\/code> from the aggregation named groups.","!static":false,"!category":"function","!type":"fn(The: sap.ui.comp.smartform.Group) -> sap.ui.comp.smartform.SmartForm","parameters":{"The":"type: sap.ui.comp.smartform.Group, description: group to be removed"}},"clone":{"!description":"Clones the SmartForm control.","!static":false,"!category":"function","!type":"fn(sIdSuffix?: String, aLocalIds?: [String]) -> sap.ui.base.ManagedObject","parameters":{"sIdSuffix":"type: string, description: A suffix to be appended to the cloned element id","aLocalIds":"type: string[], description: An array of local IDs within the cloned hierarchy (internally used)"}}},"sap.ui.comp.filterbar.FilterItem":{"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nName of the filter. This is an identifier for the filter and has to be unique.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.comp.filterbar.FilterItem","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"destroyControl":{"!description":"Destroys the control in the aggregation <code>control<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterItem"},"setMandatory":{"!description":"Setter for mandatory flag.","!static":false,"!category":"function","!type":"fn(bValue: String)","parameters":{"bValue":"type: string, description: Mandatory state"}},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nLabel of the filter.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nName of the filter. This is an identifier for the filter and has to be unique.","!static":false,"!category":"function","!type":"fn() -> String"},"getVisibleInFilterBar":{"!description":"Gets current value of property <code>visibleInFilterBar<\/code>.\n\nControls the visibility of a filter item in the filter bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLabelTooltip":{"!description":"Setter for tooltip.","!static":false,"!category":"function","!type":"fn(sText: String)","parameters":{"sText":"type: string, description: Tooltip text"}},"!proto":"sap.ui.core.Element","getLabelTooltip":{"!description":"Gets current value of property <code>labelTooltip<\/code>.\n\nTooltip for the filter.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.comp.filterbar.FilterItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new filterbar/FilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getMandatory mandatory} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getLabelTooltip labelTooltip} : string<\/li>\n<li>{@link #getPartOfCurrentVariant partOfCurrentVariant} : boolean (default: false)<\/li>\n<li>{@link #getVisibleInFilterBar visibleInFilterBar} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControl control} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!description":"Represents a filter belonging to the basic group.","setVisible":{"!description":"Setter for visible property.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: State of visibility"}},"getMandatory":{"!description":"Gets current value of property <code>mandatory<\/code>.\n\nMandatory flag.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"init":{"!description":"Initializes the filter item.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.filterbar.FilterItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"Gets content of aggregation <code>control<\/code>.\n\nThe control of the filter.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nVisibility state of the filter.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPartOfCurrentVariant":{"!description":"Sets a new value for property <code>partOfCurrentVariant<\/code>.\n\nDetermines if a filter is part of the currently selected variant. This property is ONLY used internally and must not be used by the\nfilter bar consumers.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPartOfCurrentVariant: Boolean) -> sap.ui.comp.filterbar.FilterItem","parameters":{"bPartOfCurrentVariant":"type: boolean, description: New value for property <code>partOfCurrentVariant<\/code>"}},"destroy":{"!description":"Destroys this element.","!static":false,"!category":"function","!type":"fn()"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.comp.filterbar.FilterItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterItem<\/code> itself.\n\nThis event is fired when one of the properties is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPartOfCurrentVariant":{"!description":"Gets current value of property <code>partOfCurrentVariant<\/code>.\n\nDetermines if a filter is part of the currently selected variant. This property is ONLY used internally and must not be used by the\nfilter bar consumers.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisibleInFilterBar":{"!description":"Setter for visible in filter bar.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: State of visibility in filter bar"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>propertyName<\/code> of type <code>string<\/code>Name of the changed property<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setControl":{"!description":"Sets the aggregated <code>control<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.comp.filterbar.FilterItem","parameters":{"oControl":"type: sap.ui.core.Control, description: The control to set"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/filterbar/FilterItem","!helpDescription":"Represents a filter belonging to the basic group.","setLabel":{"!description":"Setter for label.","!static":false,"!category":"function","!type":"fn(sValue: String)","parameters":{"sValue":"type: string, description: Label text"}}},"sap.ui.comp.transport.TransportDialog":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.","!constructorDescription":"Constructor for a new transport/TransportDialog.","!module":"sap/ui/comp/transport/TransportDialog","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.","!proto":"sap.ui.fl.transport.FlTransportDialog","!category":"class"},"sap.ui.comp.navpopover.NavigationPopover_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Popover.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.NavigationPopover"},"sap.ui.comp.filterbar.FilterGroupItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterGroupItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.filterbar.FilterGroupItem"},"sap.ui.comp.personalization.ResetType":{"!description":"Provides enumeration sap.ui.comp.personalization.ResetType. A subset of reset types used in table personalization.","ResetFull":{"!description":"Reset back to Restore (i.e. the version of the table with which the controller was instantiated or via setter updated) was triggered\n(either via API or via reset button)","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","ResetPartial":{"!description":"Reset back to the CurrentVariant was triggered","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.GroupElement":{"setElementForLabel":{"!description":"Sets a new value for property <code>elementForLabel<\/code>.\n\nIndex of element to be used for label determination\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iElementForLabel: Number) -> sap.ui.comp.smartform.GroupElement","parameters":{"iElementForLabel":"type: int, description: New value for property <code>elementForLabel<\/code>"}},"getUseHorizontalLayout":{"!description":"Gets current value of property <code>useHorizontalLayout<\/code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEditMode":{"!description":"Setter for property editable of all smart fields in children hierarchy.","!static":false,"!category":"function","!type":"fn(bEditMode: Boolean) -> sap.ui.comp.smartform.GroupElement","parameters":{"bEditMode":"type: boolean, description: new value for editable property of smart fields."}},"!proto":"sap.ui.core.Control","!category":"class","getVisibleBasedOnElements":{"!description":"Determines the visibility of a group element based on elements","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new smartform/GroupElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUseHorizontalLayout useHorizontalLayout} : boolean<\/li>\n<li>{@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth} : int<\/li>\n<li>{@link #getElementForLabel elementForLabel} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getElements elements} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:visibleChanged visibleChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setHorizontalLayoutGroupElementMinWidth":{"!description":"Sets a new value for property <code>horizontalLayoutGroupElementMinWidth<\/code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iHorizontalLayoutGroupElementMinWidth: Number) -> sap.ui.comp.smartform.GroupElement","parameters":{"iHorizontalLayoutGroupElementMinWidth":"type: int, description: New value for property <code>horizontalLayoutGroupElementMinWidth<\/code>"}},"removeAllElements":{"!description":"Removes all the controls in the aggregation named elements.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addCustomData":{"!description":"Adds some customData into the aggregation <code>customData<\/code>. Additionally, customData is also added to the SmartField controls in the\nchildren hierarchy.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.comp.smartform.GroupElement","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to add."}},"!description":"A GroupElement is a combination of one label and different controls associated to this label.","getFormElement":{"!description":"Returns the from element.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.FormElement"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.GroupElement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyElements":{"!description":"Destroys all the elements in the aggregation <code>elements<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.GroupElement"},"insertElement":{"!description":"Inserts a control into the aggregation <code>elements<\/code>","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control, iIndex: Number) -> sap.ui.comp.smartform.GroupElement","parameters":{"oElement":"type: sap.ui.core.Control, description: the control to insert into aggregation named elements.","iIndex":"type: int, description: the 0-based index the control should be inserted at."}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.GroupElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachVisibleChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>visibleChanged<\/code> event of this <code>sap.ui.comp.smartform.GroupElement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.GroupElement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfElement":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>elements<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control) -> Number","parameters":{"oElement":"type: sap.ui.core.Control, description: The element whose index is looked for"}},"getHorizontalLayoutGroupElementMinWidth":{"!description":"Gets current value of property <code>horizontalLayoutGroupElementMinWidth<\/code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setUseHorizontalLayout":{"!description":"Sets a new value for property <code>useHorizontalLayout<\/code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUseHorizontalLayout: Boolean) -> sap.ui.comp.smartform.GroupElement","parameters":{"bUseHorizontalLayout":"type: boolean, description: New value for property <code>useHorizontalLayout<\/code>"}},"!module":"sap/ui/comp/smartform/GroupElement","!helpDescription":"A GroupElement is a combination of one label and different controls associated to this label.","getElements":{"!description":"Getter for aggregation <code>elements<\/code>","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Controls]"},"setProperty":{"!description":"Sets the given value for the given property","!static":false,"!category":"function","!type":"fn(sPropertyName: String, oValue: Object)","parameters":{"oValue":"type: any, description: value to set the property to","sPropertyName":"type: string, description: name of the property to set"}},"fireVisibleChanged":{"!description":"Fires event <code>visibleChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.GroupElement","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"addElement":{"!description":"Adds some control into the aggregation <code>elements<\/code>","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control)","parameters":{"oElement":"type: sap.ui.core.Control, description: the control to add."}},"removeElement":{"!description":"Removes an element from the aggregation named elements.","!static":false,"!category":"function","!type":"fn(The: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"The":"type: int|string|sap.ui.core.Control, description: element to remove or its index or ID"}},"attachVisibleChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>visibleChanged<\/code> event of this <code>sap.ui.comp.smartform.GroupElement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.GroupElement<\/code> itself.\n\nThe event is fired after the visibility of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.GroupElement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.GroupElement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getElementForLabel":{"!description":"Gets current value of property <code>elementForLabel<\/code>.\n\nIndex of element to be used for label determination\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLabelText":{"!description":"Returns the text of the label.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.smartfield.SmartLabel":{"!description":"The SmartLabel control extends {@link sap.m.Label sap.m.Label} and displays the label for\n       {@link sap.ui.comp.smartfield.SmartField SmartField}. It uses the annotations <code>sap:label<\/code> or\n       <code>com.sap.vocabularies.Common.v1.Label<\/code> for the label text and <code>sap:quickinfo<\/code> or\n       <code>com.sap.vocabularies.Common.v1.QuickInfo<\/code> for the tooltip. The mandatory indicator is obtained from the SmartField\n       control. The association with a SmartField control is built using the setLabelFor method.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.SmartLabel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Label.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.SmartLabel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new smartfield/SmartLabel.","!module":"sap/ui/comp/smartfield/SmartLabel","!helpDescription":"The SmartLabel control extends {@link sap.m.Label sap.m.Label} and displays the label for\n       {@link sap.ui.comp.smartfield.SmartField SmartField}. It uses the annotations <code>sap:label<\/code> or\n       <code>com.sap.vocabularies.Common.v1.Label<\/code> for the label text and <code>sap:quickinfo<\/code> or\n       <code>com.sap.vocabularies.Common.v1.QuickInfo<\/code> for the tooltip. The mandatory indicator is obtained from the SmartField\n       control. The association with a SmartField control is built using the setLabelFor method.","!proto":"sap.m.Label","destroy":{"!description":"Cleans up the resources associated with this element and all its children. After an element has been destroyed, it can no longer be used on the\nUI. Applications should call this method if they don't need the element any longer.","!static":false,"!category":"function","!type":"fn(bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: If set to <code>true<\/code>, UI element is not marked for redraw"}},"!category":"class","setLabelFor":{"!description":"Assigns SmartField.","!static":false,"!category":"function","!type":"fn(oSmartField: sap.ui.comp.SmartField)","parameters":{"oSmartField":"type: sap.ui.comp.SmartField, description: The associated SmartField control"}}},"sap.ui.comp.smartfield.ControlType":{"!description":"The available control types to configure the internal control selection of a SmartField control.","input":{"!description":"The SmartField displays an input field.","!category":"enum","!type":"String"},"auto":{"!description":"The SmartField chooses the control.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","dropDownList":{"!description":"The SmartField uses a drop down list box.","!category":"enum","!type":"String"},"selection":{"!description":"The SmartField displays a <code>sap.m.Selection<\/code>.","!category":"enum","!type":"String"},"checkBox":{"!description":"The SmartField displays a check box.","!category":"enum","!type":"String"},"datePicker":{"!description":"The SmartField displays a date picker.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.comp.navpopover.NavigationPopoverHandler":{"fireNavigationTargetsObtained":{"!description":"Fires event <code>navigationTargetsObtained<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>mainNavigation<\/code> of type <code>sap.ui.comp.navpopover.LinkData<\/code>The main navigation object.<\/li>\n<li><code>actions<\/code> of type <code>sap.ui.comp.navpopover.LinkData[]<\/code>Array of available navigation target objects.<\/li>\n<li><code>ownNavigation<\/code> of type <code>sap.ui.comp.navpopover.LinkData<\/code>The navigation object for the own application. This navigation option is by default not visible on the popover.<\/li>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object for which the navigation targets have been retrieved.<\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the NavigationPopoverHandler.<\/li>\n<li><code>show<\/code> of type <code>function<\/code>This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained<\/code> has been\nregistered, the <code>show<\/code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()<\/code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)<\/code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)<\/code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example NavigationPopoverHandler).<\/li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation<\/code> will be used.<\/li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions<\/code> will be used.<\/li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.<\/li>\n<\/ul><\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMapFieldToSemanticObject":{"!description":"Gets current value of property <code>mapFieldToSemanticObject<\/code>.\n\nIf set to <code>false<\/code>, the NavigationPopoverHandler control will not replace its field name with the according\n<code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several\nNavigationPopoverHandler on the same semantic object.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMapFieldToSemanticObject":{"!description":"Sets a new value for property <code>mapFieldToSemanticObject<\/code>.\n\nIf set to <code>false<\/code>, the NavigationPopoverHandler control will not replace its field name with the according\n<code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several\nNavigationPopoverHandler on the same semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bMapFieldToSemanticObject: Boolean) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"bMapFieldToSemanticObject":"type: boolean, description: New value for property <code>mapFieldToSemanticObject<\/code>"}},"setFieldName":{"!description":"Sets a new value for property <code>fieldName<\/code>.\n\nThe metadata field name for this NavigationPopoverHandler control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFieldName: String) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sFieldName":"type: string, description: New value for property <code>fieldName<\/code>"}},"detachBeforePopoverOpens":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforePopoverOpens<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.base.ManagedObject","!category":"class","getSemanticObject":{"!description":"Gets current value of property <code>semanticObject<\/code>.\n\nName of semantic object which is used to fill the navigation popover.","!static":false,"!category":"function","!type":"fn() -> String"},"getSemanticObjectValue":{"!description":"Gets the current value assigned to the field with the NavigationPopoverHandler's semantic object name.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachInnerNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>innerNavigate<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachNavigationTargetsObtained":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigationTargetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new navpopover/NavigationPopoverHandler.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSemanticObject semanticObject} : string<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : any<\/li>\n<li>{@link #getFieldName fieldName} : string<\/li>\n<li>{@link #getSemanticObjectLabel semanticObjectLabel} : string<\/li>\n<li>{@link #getMapFieldToSemanticObject mapFieldToSemanticObject} : boolean (default: true)<\/li>\n<li>{@link #getSemanticAttributes semanticAttributes} : object<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforePopoverOpens beforePopoverOpens} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigationTargetsObtained navigationTargetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerNavigate innerNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","getSemanticObjectLabel":{"!description":"Gets current value of property <code>semanticObjectLabel<\/code>.\n\nShown label of semantic object.","!static":false,"!category":"function","!type":"fn() -> String"},"setSemanticObjectController":{"!description":"Sets a new value for property <code>semanticObjectController<\/code>.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set\nmanually, it tries to find a SemanticObjectController in its parent hierarchy.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oSemanticObjectController":"type: any, description: New value for property <code>semanticObjectController<\/code>"}},"setSemanticObjectLabel":{"!description":"Sets a new value for property <code>semanticObjectLabel<\/code>.\n\nShown label of semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObjectLabel: String) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sSemanticObjectLabel":"type: string, description: New value for property <code>semanticObjectLabel<\/code>"}},"attachNavigationTargetsObtained":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigationTargetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained<\/code> is fired and provides the possibility to\nchange the targets.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireInnerNavigate":{"!description":"Fires event <code>innerNavigate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>text<\/code> of type <code>string<\/code>The UI text shown in the clicked link.<\/li>\n<li><code>href<\/code> of type <code>string<\/code>The navigation target of the clicked link.<\/li>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object used to retrieve this target.<\/li>\n<li><code>semanticAttributes<\/code> of type <code>object<\/code>Map containing the semantic attributes used to retrieve this target.<\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the NavigationPopoverHandler.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The NavigationPopoverHandler control uses a semantic object to display\n       {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further navigation steps.","setSemanticObject":{"!description":"Sets a new value for property <code>semanticObject<\/code>.\n\nName of semantic object which is used to fill the navigation popover.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sSemanticObject":"type: string, description: New value for property <code>semanticObject<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopoverHandler.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"ID of the element which is the current target of the association <code>control<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"fireBeforePopoverOpens":{"!description":"Fires event <code>beforePopoverOpens<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object for which the navigation targets will be retrieved.<\/li>\n<li><code>semanticAttributes<\/code> of type <code>object<\/code>Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.<\/li>\n<li><code>setSemanticAttributes<\/code> of type <code>function<\/code>This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)<\/code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.<\/li>\n<\/ul><\/li>\n<li><code>setAppStateKey<\/code> of type <code>function<\/code>This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)<\/code> Parameter:\n<ul>\n<li>{string} sAppStateKey<\/li>\n<\/ul><\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the NavigationPopoverHandler.<\/li>\n<li><code>open<\/code> of type <code>function<\/code>This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()<\/code> If the <code>beforePopoverOpens<\/code> has been registered, the <code>open<\/code>\nfunction has to be called manually in order to open the navigation popover.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setControl":{"!description":"Sets the associated <code>control<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oControl":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this control association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopoverHandler with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/navpopover/NavigationPopoverHandler","!helpDescription":"The NavigationPopoverHandler control uses a semantic object to display\n       {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further navigation steps.","detachInnerNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>innerNavigate<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachBeforePopoverOpens":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforePopoverOpens<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the\n<code>beforePopoverOpens<\/code> is fired after the link has been clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFieldName":{"!description":"Gets current value of property <code>fieldName<\/code>.\n\nThe metadata field name for this NavigationPopoverHandler control.","!static":false,"!category":"function","!type":"fn() -> String"},"openPopover":{"!description":"Opens the navigation popover.","!static":false,"!category":"function","!type":"fn()"},"getSemanticObjectController":{"!description":"Gets current value of property <code>semanticObjectController<\/code>.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set\nmanually, it tries to find a SemanticObjectController in its parent hierarchy.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.comp.odata":{"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"!category":"namespace","FieldSelector":"sap.ui.comp.odata.FieldSelector_obj","showSearchBar":{"!description":"Indicates to show a search bar for property names inside a selected entity set.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartfield.ObjectStatus_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ObjectStatus with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.ObjectStatus"},"sap.ui.comp.smartfield.ControlContextType":{"!description":"Enumeration of the different contexts supported by the SmartField, if it is using an OData model.","Table":{"!description":"If this is selected the UoM layout is influenced.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","Form":{"!description":"Behaves currently exactly like <code>sap.ui.comp.smartfield.ControlContextType.None<\/code>.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"No special context is selected. The Smart Field applies its internal defaults.","!category":"enum","!type":"String"},"ResponsiveTable":{"!description":"Also the UoM layout is influenced.","!category":"enum","!type":"String"},"SmartFormGrid":{"!description":"If this is selected the UoM layout is influenced.","!category":"enum","!type":"String"}},"sap.ui.comp.smartvariants.SmartVariantManagementUi2":{"!proto":"sap.ui.comp.variants.VariantManagement","!category":"class","destroyPersonalizableControl":{"!description":"Destroys the personalizableControl in the aggregation <code>personalizableControl<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.SmartVariantManagementUi2"},"!constructorDescription":"Constructor for a new SmartVariantManagementUi2.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getPersonalizableControl personalizableControl} : sap.ui.comp.smartvariants.PersonalizableInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterSave afterSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.variants.VariantManagement#constructor sap.ui.comp.variants.VariantManagement}\ncan be used as well.","setPersonalizableControl":{"!description":"Sets the aggregated <code>personalizableControl<\/code>.","!static":false,"!category":"function","!type":"fn(oPersonalizableControl: sap.ui.comp.smartvariants.PersonalizableInfo) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oPersonalizableControl":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: The personalizableControl to set"}},"setCurrentVariantId":{"!description":"Sets the current variant ID.","!static":false,"!category":"function","!type":"fn(sVariantId: String, bDoNotApplyVariant: Boolean)","parameters":{"sVariantId":"type: string, description: ID of the variant","bDoNotApplyVariant":"type: boolean, description: If set to <code>true<\/code>, the <code>applyVariant<\/code> method is not executed yet. Relevant during\n       navigation, when called before the initialise event has been executed"}},"initialise":{"!description":"Initializes the UI2 personalization layer by retrieving the list of variants. Once the initialization has been completed, the control for\npersonalization is informed via the initialise event.","!static":false,"!category":"function","!type":"fn()"},"!description":"The SmartVariantManagementUi2 control is a specialization of the {@link \"sap.ui.comp.variants.VariantManagement VariantManagement}\n       control and communicates with the Ui2 personalization layer to manage the variants.","init":{"!description":"Control initialization.","!static":false,"!category":"function","!type":"fn()"},"fireInitialise":{"!description":"Fires event <code>initialise<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementUi2.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialise<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"isPageVariant":{"!description":"Determines if the SmartVariantManagement instance is a page variant.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentVariantId":{"!description":"Retrieves the current variant ID. For a standard variant, an empty string is returned.","!static":false,"!category":"function","!type":"fn() -> String"},"addPersonalizableControl":{"!description":"Registers all controls interested and relying on variant handling.","!static":false,"!category":"function","!type":"fn(oCurrentControlInfo: sap.ui.comp/smartvariants/PersonalizableInfo)","parameters":{"oCurrentControlInfo":"type: sap.ui.comp/smartvariants/PersonalizableInfo, description: control providing the required aggregation for flex-layer"}},"getPersonalizableControl":{"!description":"Gets content of aggregation <code>personalizableControl<\/code>.\n\nAll controls that rely on variant handling have to be added to this aggregation. The only consumer currently known is the FilterBar\ncontrol.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.PersonalizableInfo"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementUi2 with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Destroys the control.","!static":false,"!category":"function","!type":"fn()"},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialise<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself.\n\nOnce the SmartVariantManagement control has been initialized, and especially after retrieving the variants via the UI2\npersonalization service, the registered consumer will be notified that this phase has completed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/comp/smartvariants/SmartVariantManagementUi2","!helpDescription":"The SmartVariantManagementUi2 control is a specialization of the {@link \"sap.ui.comp.variants.VariantManagement VariantManagement}\n       control and communicates with the Ui2 personalization layer to manage the variants.","fireAfterSave":{"!description":"Fires event <code>afterSave<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachAfterSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterSave<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachAfterSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterSave<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself.\n\nFired after a variant is saved. This event can be used to retrieve the id of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getVariantContent":{"!description":"Retrieves the variant content.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, sKey: String) -> Object","parameters":{"sKey":"type: string, description: the variant key","oControl":"type: sap.ui.core.Control, description: current control"}}},"sap.ui.comp.smarttable.SmartTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smarttable.SmartTable with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smarttable.SmartTable"},"sap.ui.comp.navpopover.NavigationPopoverHandler_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopoverHandler with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.NavigationPopoverHandler"},"sap.ui.comp.variants.VariantItem":{"setExecuteOnSelection":{"!description":"Sets a new value for property <code>executeOnSelection<\/code>.\n\nAttribute for usage in Smart Filter Bar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExecuteOnSelection: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bExecuteOnSelection":"type: boolean, description: New value for property <code>executeOnSelection<\/code>"}},"getLifecyclePackage":{"!description":"Gets current value of property <code>lifecyclePackage<\/code>.\n\nABAP package the variant is assigned to. Used for transport functionality.","!static":false,"!category":"function","!type":"fn() -> String"},"getAuthor":{"!description":"Gets current value of property <code>author<\/code>.\n\nAuthor of the variant","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Sets a new value for property <code>accessOptions<\/code>.\n\nFlags for a variant to indicate why it might be read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessOptions: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sAccessOptions":"type: string, description: New value for property <code>accessOptions<\/code>"}},"!proto":"sap.ui.core.Item","!category":"class","setLifecyclePackage":{"!description":"Sets a new value for property <code>lifecyclePackage<\/code>.\n\nABAP package the variant is assigned to. Used for transport functionality.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecyclePackage: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sLifecyclePackage":"type: string, description: New value for property <code>lifecyclePackage<\/code>"}},"setGlobal":{"!description":"Sets a new value for property <code>global<\/code>.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bGlobal: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bGlobal":"type: boolean, description: New value for property <code>global<\/code>"}},"!constructorDescription":"Constructor for a new variants/VariantItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExecuteOnSelection executeOnSelection} : boolean (default: false)<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<li>{@link #getLifecycleTransportId lifecycleTransportId} : string<\/li>\n<li>{@link #getGlobal global} : boolean<\/li>\n<li>{@link #getLifecyclePackage lifecyclePackage} : string<\/li>\n<li>{@link #getNamespace namespace} : string<\/li>\n<li>{@link #getAccessOptions accessOptions} : string<\/li>\n<li>{@link #getLabelReadOnly labelReadOnly} : boolean (default: false)<\/li>\n<li>{@link #getAuthor author} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","getGlobal":{"!description":"Gets current value of property <code>global<\/code>.\n\nIndicator if a variant is visible for all users.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The VariantItem class describes a variant item.","setLabelReadOnly":{"!description":"Sets a new value for property <code>labelReadOnly<\/code>.\n\nIndicates if the variant title can be changed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLabelReadOnly: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bLabelReadOnly":"type: boolean, description: New value for property <code>labelReadOnly<\/code>"}},"getExecuteOnSelection":{"!description":"Gets current value of property <code>executeOnSelection<\/code>.\n\nAttribute for usage in Smart Filter Bar\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.variants.VariantItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Gets current value of property <code>accessOptions<\/code>.\n\nFlags for a variant to indicate why it might be read-only.","!static":false,"!category":"function","!type":"fn() -> String"},"setLifecycleTransportId":{"!description":"Sets a new value for property <code>lifecycleTransportId<\/code>.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecycleTransportId: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sLifecycleTransportId":"type: string, description: New value for property <code>lifecycleTransportId<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/variants/VariantItem","getLifecycleTransportId":{"!description":"Gets current value of property <code>lifecycleTransportId<\/code>.\n\nIdentifier of the transport object the variant is assigned to.","!static":false,"!category":"function","!type":"fn() -> String"},"setAuthor":{"!description":"Sets a new value for property <code>author<\/code>.\n\nAuthor of the variant\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAuthor: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sAuthor":"type: string, description: New value for property <code>author<\/code>"}},"!helpDescription":"The VariantItem class describes a variant item.","getNamespace":{"!description":"Gets current value of property <code>namespace<\/code>.\n\nVariant namespace","!static":false,"!category":"function","!type":"fn() -> String"},"getReadOnly":{"!description":"Gets current value of property <code>readOnly<\/code>.\n\nIs the user allowed to change the item's data\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabelReadOnly":{"!description":"Gets current value of property <code>labelReadOnly<\/code>.\n\nIndicates if the variant title can be changed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNamespace":{"!description":"Sets a new value for property <code>namespace<\/code>.\n\nVariant namespace\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNamespace: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sNamespace":"type: string, description: New value for property <code>namespace<\/code>"}},"setReadOnly":{"!description":"Sets a new value for property <code>readOnly<\/code>.\n\nIs the user allowed to change the item's data\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadOnly: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bReadOnly":"type: boolean, description: New value for property <code>readOnly<\/code>"}}},"sap.ui.comp.navpopover.SemanticObjectController_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SemanticObjectController with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.SemanticObjectController"},"sap.ui.comp.personalization.AggregationRole":{"!description":"Provides enumeration sap.ui.comp.personalization.AggregationRole. A subset of aggregation roles used in table personalization.","NotDimeasure":{"!description":"Role which is neither dimension nor measure.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","Measure":{"!description":"Measure role.","!category":"enum","!type":"String"},"!category":"static class","Dimension":{"!description":"Dimension role.","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.flexibility.Input":{"!description":"Input field with special focus handling","detachSelectedByKeyboard":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectedByKeyboard<\/code> event of this <code>sap.ui.comp.smartform.flexibility.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.flexibility.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.Input with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"attachSelectedByKeyboard":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectedByKeyboard<\/code> event of this <code>sap.ui.comp.smartform.flexibility.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.Input<\/code> itself.\n\nFired when the field is readonly, focused and user pressed Space","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.flexibility.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.Input<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.flexibility.Input.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new smartform/flexibility/Input.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:selectedByKeyboard selectedByKeyboard} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Input#constructor sap.m.Input}\ncan be used as well.","!module":"sap/ui/comp/smartform/flexibility/Input","!helpDescription":"Input field with special focus handling","!proto":"sap.m.Input","!category":"class","fireSelectedByKeyboard":{"!description":"Fires event <code>selectedByKeyboard<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.flexibility.Input","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.ui.comp.smartform":{"Group":"sap.ui.comp.smartform.Group_obj","breakpointL":{"!description":"Breakpoint (in pixel) between Medium size and Large size.","!category":"enum","!type":"Number"},"columnsXL":{"!description":"Number of columns for extra large size.<br>\rThe number of columns for extra large size must not be smaller than the number of columns for large size.","!category":"enum","!type":"Number"},"emptySpanM":{"!description":"Number of grid cells that are empty at the end of each line on medium size.","!category":"enum","!type":"Number"},"breakpointM":{"!description":"reakpoint (in pixel) between Small size and Medium size.","!category":"enum","!type":"Number"},"expandable":{"!description":"Specifies whether the control is expandable. Per default the control is not rendered as expanded.","!category":"enum","!type":"Boolean"},"emptySpanL":{"!description":"Number of grid cells that are empty at the end of each line on large size.","!category":"enum","!type":"Number"},"GroupElement":"sap.ui.comp.smartform.GroupElement_obj","columnsM":{"!description":"Number of columns for medium size.","!category":"enum","!type":"Number"},"checkButton":{"!description":"Specifies whether a check button is added to the toolbar.","!category":"enum","!type":"Boolean"},"!category":"namespace","elementForLabel":{"!description":"Index of element to be used for label determination","!category":"enum","!type":"Number"},"singleGroupFullSize":{"!description":"If the SmartForm contains only one single Group and this property is set, the Group is displayed using the full size of the\rSmartForm. In this case the properties columnsL and columnsM are ignored.<br>\rIn all other cases the Group is displayed in the size of one column.","!category":"enum","!type":"Boolean"},"title":{"!description":"Title of the form.","!category":"enum","!type":"String"},"emptySpanS":{"!description":"Number of grid cells that are empty at the end of each line on small size.","!category":"enum","!type":"Number"},"flexibility":"sap.ui.comp.smartform.flexibility","gridDataSpan":{"!description":"A string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters\rL, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4\rm4\". Note that the parameters has to be provided in the order large medium small.<br>\rThe value set here will be set to all group elements when used with horizontal layout (smart form property useHorizontalLayout)","!category":"enum","!type":"sap.ui.layout.GridSpan"},"expanded":{"!description":"If expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the\ncontent is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.","!category":"enum","!type":"Boolean"},"SmartForm":"sap.ui.comp.smartform.SmartForm_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"ignoredFields":{"!description":"CSV of fields that must be ignored in the OData metadata by the SmartForm control.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"horizontalLayoutGroupElementMinWidth":{"!description":"Specifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.","!category":"enum","!type":"Number"},"columnsL":{"!description":"Number of columns for large size.<br>\rThe number of columns for large size must not be smaller than the number of columns for medium size.","!category":"enum","!type":"Number"},"breakpointXL":{"!description":"Breakpoint (in pixel) between large size and extra large (XL) size.","!category":"enum","!type":"Number"},"labelSpanXL":{"!description":"Default span for labels in extra large size.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"entityType":{"!description":"CSV of entity types for which the flexibility features are available.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"editable":{"!description":"Specifies whether the form is editable.","!category":"enum","!type":"Boolean"},"editTogglable":{"!description":"Specifies whether the editable property is togglable via button.","!category":"enum","!type":"Boolean"},"flexEnabled":{"!description":"Specifies whether the form enables flexibility features, such as adding new fields.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.","!category":"enum","!type":"Boolean"},"label":{"!description":"Label for the group.","!category":"enum","!type":"String"},"labelSpanM":{"!description":"Default span for labels in medium size. This property is used for full size containers. If more than one Container is in one line,\rlabelSpanL is used.","!category":"enum","!type":"Number"},"labelSpanL":{"!description":"Default span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in\rthe line the labelSpanM value is used.","!category":"enum","!type":"Number"},"emptySpanXL":{"!description":"Number of grid cells that are empty at the end of each line on extra large size.","!category":"enum","!type":"Number"},"Layout":"sap.ui.comp.smartform.Layout_obj","labelSpanS":{"!description":"Default span for labels in small size.","!category":"enum","!type":"Number"},"useHorizontalLayout":{"!description":"Specifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above\nthe field. Each group is rendered in a new line.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.valuehelpdialog":{"horizontalScrolling":{"!description":"Indicates if user can scroll horizontally inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"keys":{"!description":"Defines the list of additional keys of the column used for the internal key handling.","!category":"enum","!type":"[String]"},"maxIncludeRanges":{"!description":"Defines the maximum number of include ranges.","!category":"enum","!type":"String"},"icon":{"!description":"Icon displayed in the dialog's header. This icon is invisible on the iOS platform and it's density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen.","!category":"enum","!type":"sap.ui.core.URI"},"ValueHelpDialog":"sap.ui.comp.valuehelpdialog.ValueHelpDialog_obj","!category":"namespace","ValueHelpRangeOperation":"sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation","title":{"!description":"Title text appears in the dialog header.","!category":"enum","!type":"String"},"type":{"!description":"The type of the dialog. In theme sap_bluecrystal, the type \"message\" will limit the dialog's width within 480px on tablet and desktop.","!category":"enum","!type":"sap.m.DialogType"},"supportMultiselect":{"!description":"Enables multi-selection in the table used.","!category":"enum","!type":"Boolean"},"maxExcludeRanges":{"!description":"Defines the maximum number of exclude ranges.","!category":"enum","!type":"String"},"tokenDisplayBehaviour":{"!description":"Represents how the item token text should be displayed in ValueHelpDialog.\rUse one of the valid sap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR values.","!category":"enum","!type":"String"},"stretch":{"!description":"Determines  if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property.","!category":"enum","!type":"Boolean"},"filterMode":{"!description":"Sets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.","!category":"enum","!type":"Boolean"},"contentWidth":{"!description":"Preferred width of content in Dialog. This property affects the width of dialog on phone in landscape mode, tablet or desktop, because the dialog has a fixed width on phone in portrait mode. If the preferred width is less than the minimum width of dilaog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of dialog width on tablet is 400px.","!category":"enum","!type":"sap.ui.core.CSSSize"},"draggable":{"!description":"Indicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"state":{"!description":"The state affects the icon and the title color. If other than \"None\" is set, a predefined icon will be added to the dialog. Setting icon property will overwrite the predefined icon. The default value is \"None\" which doesn't add any icon to the Dialog control. This property is by now only supported by blue crystal theme.","!category":"enum","!type":"sap.ui.core.ValueState"},"key":{"!description":"Defines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.","!category":"enum","!type":"String"},"stretchOnPhone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.1 Please use the new stretch property instead. This enables a stretched dialog even on tablet and desktop. If you want to achieve the same effect as stretchOnPhone, please set the stretch with jQuery.device.is.phone, then dialog is only stretched when runs on phone.<br>Determines whether the dialog will displayed on full screen on a phone.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"verticalScrolling":{"!description":"Indicates if user can scroll vertically inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"resizable":{"!description":"Indicates whether the dialog is resizable. the dialog is resizable. If this property is set to true, the dialog will have a resize handler in it's bottom right corner. This property has a default value false. The Dialog can be resizable only in desktop mode.","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"Determines whether the header is shown inside the dialog. If this property is set to true, the text and icon property are ignored. This property has a default value true.","!category":"enum","!type":"Boolean"},"supportRangesOnly":{"!description":"If this property is set to true, the value help dialog only supports the ranges (conditions) feature.","!category":"enum","!type":"Boolean"},"descriptionKey":{"!description":"Defines the key of the column used for the token text.","!category":"enum","!type":"String"},"basicSearchText":{"!description":"Defines the value for the basic search field.\rThe value is set into the basic search field of the filter bar used.","!category":"enum","!type":"String"},"displayFormat":{"!description":"Represents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.","!category":"enum","!type":"String"},"contentHeight":{"!description":"Preferred height of content in Dialog. If the preferred height is bigger than the available space on screen, it will be overwritten by the maximum available height on screen in order to make sure that dialog isn't cut off.","!category":"enum","!type":"sap.ui.core.CSSSize"},"supportRanges":{"!description":"Enables the ranges (conditions) feature in the dialog.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartvariants.SmartVariantManagement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.SmartVariantManagement"},"sap.ui.comp.smartmicrochart.SmartAreaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartAreaMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartAreaMicroChart"},"sap.ui.comp.smartvariants.PersonalizableInfo":{"!description":"The PersonalizableInfo class describes the personalizable control associated with the SmartVariantManagement control.","getDataSource":{"!description":"Gets current value of property <code>dataSource<\/code>.\n\nName of the data service","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.PersonalizableInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"ID of the element which is the current target of the association <code>control<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Element","setKeyName":{"!description":"Sets a new value for property <code>keyName<\/code>.\n\nDefines the property name of the personalization key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKeyName: String) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"sKeyName":"type: string, description: New value for property <code>keyName<\/code>"}},"!category":"class","setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nDescribes the type of variant management.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"setControl":{"!description":"Sets the associated <code>control<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"oControl":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this control association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.PersonalizableInfo with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new smartvariants/PersonalizableInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getDataSource dataSource} : string<\/li>\n<li>{@link #getKeyName keyName} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartvariants/PersonalizableInfo","!helpDescription":"The PersonalizableInfo class describes the personalizable control associated with the SmartVariantManagement control.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDescribes the type of variant management.","!static":false,"!category":"function","!type":"fn() -> String"},"setDataSource":{"!description":"Sets a new value for property <code>dataSource<\/code>.\n\nName of the data service\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDataSource: String) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"sDataSource":"type: string, description: New value for property <code>dataSource<\/code>"}},"getKeyName":{"!description":"Gets current value of property <code>keyName<\/code>.\n\nDefines the property name of the personalization key.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.transport":{"!category":"namespace","TransportDialog":"sap.ui.comp.transport.TransportDialog_obj"},"sap.ui.comp.valuehelpdialog.ValueHelpDialog":{"getBasicSearchText":{"!description":"Gets current value of property <code>basicSearchText<\/code>.\n\nDefines the value for the basic search field.\nThe value is set into the basic search field of the filter bar used.","!static":false,"!category":"function","!type":"fn() -> String"},"setFilterBar":{"!description":"Sets the aggregated <code>filterBar<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterBar: sap.ui.comp.filterbar.FilterBar) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oFilterBar":"type: sap.ui.comp.filterbar.FilterBar, description: The filterBar to set"}},"fireTokenRemove":{"!description":"Fires event <code>tokenRemove<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tokenKeys<\/code> of type <code>string[]<\/code>The array of token keys that has been removed.<\/li>\n<li><code>useDefault<\/code> of type <code>boolean<\/code>Can be set to true to execute the default behaviour of ValueHelpDialog.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachOk":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>ok<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSupportRangesOnly":{"!description":"Sets a new value for property <code>supportRangesOnly<\/code>.\n\nIf this property is set to true, the value help dialog only supports the ranges (conditions) feature.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportRangesOnly: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bSupportRangesOnly":"type: boolean, description: New value for property <code>supportRangesOnly<\/code>"}},"setTokens":{"!description":"Sets the array of tokens. The sap.m.Tokens are added to the dialog tokenizer Selected Items or Excluded Items.\nNormal tokens are added to the Selected Items tokenizer only and are selected in the table.\n\n<code>\nnew sap.m.Token({key: \"0001\", text:\"SAP A.G. (0001)\"});\n<\/code>\n\nTokens with the extra data with value 'range' are handled as range tokens or exclude range tokens.\n\n<code>\nnew sap.m.Token({key: \"i1\", text: \"ID: a..z\"}).data(\"range\", { \"exclude\": false, \"operation\": sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation.BT, \"keyField\": \"CompanyCode\", \"value1\": \"a\", \"value2\": \"z\"});\n<\/code>\n\nThe selected items or range tokens are returned in the event parameters of the Ok event.","!static":false,"!category":"function","!type":"fn(aTokens: [sap.m.Token])","parameters":{"aTokens":"type: sap.m.Token[], description: An array of token controls"}},"getSupportMultiselect":{"!description":"Gets current value of property <code>supportMultiselect<\/code>.\n\nEnables multi-selection in the table used.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSupportRanges":{"!description":"Gets current value of property <code>supportRanges<\/code>.\n\nEnables the ranges (conditions) feature in the dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the user selects an item in the items table.\nThe event will only be raised when the dialog gets a table instance from outside via setTable.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFilterMode":{"!description":"Gets current value of property <code>filterMode<\/code>.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSupportMultiselect":{"!description":"Sets a new value for property <code>supportMultiselect<\/code>.\n\nEnables multi-selection in the table used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportMultiselect: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bSupportMultiselect":"type: boolean, description: New value for property <code>supportMultiselect<\/code>"}},"attachOk":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>ok<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the OK button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachUpdateSelection":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>updateSelection<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"The ValueHelpDialog control can be used to implement a value help for an input field.","getFilterBar":{"!description":"Gets content of aggregation <code>filterBar<\/code>.\n\nAllows you to add a {@link sap.ui.comp.filterbar.FilterBar FilterBar} or {@link sap.ui.comp.smartfilterbar.SmartFilterBar SmartFilterBar} control to the value help dialog.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar"},"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.","!static":false,"!category":"function","!type":"fn() -> String"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireUpdateSelection":{"!description":"Fires event <code>updateSelection<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tokenKeys<\/code> of type <code>string[]<\/code>The array of existing token keys for which the selection in the table has to be updated.<\/li>\n<li><code>useDefault<\/code> of type <code>boolean<\/code>Can be set to true to execute the default behavior of ValueHelpDialog.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.valuehelpdialog.ValueHelpDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMaxIncludeRanges":{"!description":"Gets current value of property <code>maxIncludeRanges<\/code>.\n\nDefines the maximum number of include ranges.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setExcludeRangeOperations":{"!description":"Sets the array for the supported exclude range operations.","!static":false,"!category":"function","!type":"fn(aOperation: [sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation], sType: String)","parameters":{"sType":"type: string, description: the type for which the operations are defined","aOperation":"type: sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[], description: An array of range operations"}},"setMaxIncludeRanges":{"!description":"Sets a new value for property <code>maxIncludeRanges<\/code>.\n\nDefines the maximum number of include ranges.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxIncludeRanges: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sMaxIncludeRanges":"type: string, description: New value for property <code>maxIncludeRanges<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.valuehelpdialog.ValueHelpDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getDisplayFormat":{"!description":"Gets current value of property <code>displayFormat<\/code>.\n\nRepresents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/comp/valuehelpdialog/ValueHelpDialog","!helpDescription":"The ValueHelpDialog control can be used to implement a value help for an input field.","getTable":{"!description":"Gives access to the internal table instance.","!static":false,"!category":"function","!type":"fn() -> Object"},"setTable":{"!description":"Sets the table used in the value help dialog. If not used, the dialog creates a sap.ui.table.Table or sap.m.Table instance internally.","!static":false,"!category":"function","!type":"fn(aTable: Object)","parameters":{"aTable":"type: object, description: The used table control instance"}},"fireOk":{"!description":"Fires event <code>ok<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tokens<\/code> of type <code>sap.m.Token[]<\/code>The array of tokens created or modified on the ValueHelpDialog.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setKeys":{"!description":"Sets a new value for property <code>keys<\/code>.\n\nDefines the list of additional keys of the column used for the internal key handling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKeys: [String]) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sKeys":"type: string[], description: New value for property <code>keys<\/code>"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the Cancel button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setTokenDisplayBehaviour":{"!description":"Sets a new value for property <code>tokenDisplayBehaviour<\/code>.\n\nRepresents how the item token text should be displayed in ValueHelpDialog.\nUse one of the valid sap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTokenDisplayBehaviour: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sTokenDisplayBehaviour":"type: string, description: New value for property <code>tokenDisplayBehaviour<\/code>"}},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tableSelectionParams<\/code> of type <code>object<\/code>The RowSelectionChange event parameter from the hosted table that contains the selected items.<\/li>\n<li><code>updateTokens<\/code> of type <code>object[]<\/code>Returns an array of objects which represents all selected row tokens.\n The object contains the token key, the row object data from the model, and the information if the token is selected.\n <code>\n [{sKey, oRow, bSelect}, ...]\n <\/code><\/li>\n<li><code>useDefault<\/code> of type <code>boolean<\/code>Can be set to true to execute the default behaviour of the ValueHelpDialog.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.m.Dialog","update":{"!description":"Updates the selection of rows in the table. This function must be called after a first binding or binding update of the table.\nIt will set a table row as selected if a token for this row exists.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","setIncludeRangeOperations":{"!description":"Sets the array for the supported include range operations.","!static":false,"!category":"function","!type":"fn(aOperation: [sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation], sType: String)","parameters":{"sType":"type: string, description: the type for which the operations are defined","aOperation":"type: sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[], description: An array of range operations"}},"destroyFilterBar":{"!description":"Destroys the filterBar in the aggregation <code>filterBar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.valuehelpdialog.ValueHelpDialog"},"!constructorDescription":"Constructor for a new valuehelpdialog/ValueHelpDialog.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBasicSearchText basicSearchText} : string<\/li>\n<li>{@link #getSupportMultiselect supportMultiselect} : boolean (default: true)<\/li>\n<li>{@link #getSupportRanges supportRanges} : boolean (default: false)<\/li>\n<li>{@link #getSupportRangesOnly supportRangesOnly} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getKeys keys} : string[]<\/li>\n<li>{@link #getDescriptionKey descriptionKey} : string<\/li>\n<li>{@link #getMaxIncludeRanges maxIncludeRanges} : string (default: -1)<\/li>\n<li>{@link #getMaxExcludeRanges maxExcludeRanges} : string (default: -1)<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getTokenDisplayBehaviour tokenDisplayBehaviour} : string<\/li>\n<li>{@link #getFilterMode filterMode} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterBar filterBar} : sap.ui.comp.filterbar.FilterBar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenRemove tokenRemove} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateSelection updateSelection} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well.","setRangeKeyFields":{"!description":"Sets a RangeKeyFields array.\nThis method allows you to specify the KeyFields for the ranges. You can set an array of objects with Key and Label properties to define the key fields.","!static":false,"!category":"function","!type":"fn(aRangeKeyFields: [Object])","parameters":{"aRangeKeyFields":"type: object[], description: An array of range KeyFields <code>[{key: \"CompanyCode\", label: \"ID\"}, {key:\"CompanyName\", label : \"Name\"}]<\/code>"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMaxExcludeRanges":{"!description":"Gets current value of property <code>maxExcludeRanges<\/code>.\n\nDefines the maximum number of exclude ranges.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxExcludeRanges":{"!description":"Sets a new value for property <code>maxExcludeRanges<\/code>.\n\nDefines the maximum number of exclude ranges.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxExcludeRanges: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sMaxExcludeRanges":"type: string, description: New value for property <code>maxExcludeRanges<\/code>"}},"getTokenDisplayBehaviour":{"!description":"Gets current value of property <code>tokenDisplayBehaviour<\/code>.\n\nRepresents how the item token text should be displayed in ValueHelpDialog.\nUse one of the valid sap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR values.","!static":false,"!category":"function","!type":"fn() -> String"},"attachUpdateSelection":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>updateSelection<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the table gets an update and all existing tokens must be selected in the table.\nThe event will only be raised when the dialog gets a table instance from outside via setTable.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setBasicSearchText":{"!description":"Sets a new value for property <code>basicSearchText<\/code>.\n\nDefines the value for the basic search field.\nThe value is set into the basic search field of the filter bar used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBasicSearchText: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sBasicSearchText":"type: string, description: New value for property <code>basicSearchText<\/code>"}},"attachTokenRemove":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tokenRemove<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the user removes one or multiple existing token(s) from the dialog.\nThe event will only be raised when the dialog gets a table instance from outside via setTable.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getKeys":{"!description":"Gets current value of property <code>keys<\/code>.\n\nDefines the list of additional keys of the column used for the internal key handling.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setSupportRanges":{"!description":"Sets a new value for property <code>supportRanges<\/code>.\n\nEnables the ranges (conditions) feature in the dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportRanges: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bSupportRanges":"type: boolean, description: New value for property <code>supportRanges<\/code>"}},"setFilterMode":{"!description":"Sets a new value for property <code>filterMode<\/code>.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterMode: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bFilterMode":"type: boolean, description: New value for property <code>filterMode<\/code>"}},"detachTokenRemove":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tokenRemove<\/code> event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSupportRangesOnly":{"!description":"Gets current value of property <code>supportRangesOnly<\/code>.\n\nIf this property is set to true, the value help dialog only supports the ranges (conditions) feature.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDisplayFormat":{"!description":"Sets a new value for property <code>displayFormat<\/code>.\n\nRepresents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayFormat: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sDisplayFormat":"type: string, description: New value for property <code>displayFormat<\/code>"}},"getDescriptionKey":{"!description":"Gets current value of property <code>descriptionKey<\/code>.\n\nDefines the key of the column used for the token text.","!static":false,"!category":"function","!type":"fn() -> String"},"setDescriptionKey":{"!description":"Sets a new value for property <code>descriptionKey<\/code>.\n\nDefines the key of the column used for the token text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescriptionKey: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sDescriptionKey":"type: string, description: New value for property <code>descriptionKey<\/code>"}}},"sap.ui.comp.smartfield.SmartField":{"getUomEnabled":{"!description":"Gets current value of property <code>uomEnabled<\/code>.\n\nEnabled state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDataType":{"!description":"Returns the EDM data type of the OData property to which the value property of the control is bound to. If no model or no OData property is\navailable <code>null<\/code> is returned.","!static":false,"!category":"function","!type":"fn() -> String"},"getUnitOfMeasure":{"!description":"If the OData property to which the control's value property is bound semantically represents a unit of measure, the value of the current unit\nof measure is returned. Otherwise <code>null<\/code> is returned.","!static":false,"!category":"function","!type":"fn() -> Object"},"setValueStateText":{"!description":"Setter for property <code>valueStateText<\/code>. Default value is empty/<code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sText":"type: string, description: The new value for property <code>valueStateText<\/code>"}},"fireContextEditableChanged":{"!description":"Fires event <code>contextEditableChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setShowSuggestion":{"!description":"Sets a new value for property <code>showSuggestion<\/code>.\n\nIf set to <code>true<\/code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSuggestion: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowSuggestion":"type: boolean, description: New value for property <code>showSuggestion<\/code>"}},"detachValueListChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>valueListChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!description":"The SmartField control is a wrapper for other controls. It interprets OData metadata to determine the control that has to be\n       instantiated. The OData entity is derived from the control's binding context. The OData entity's property that is changed or displayed\n       with the control is derived from the control's value property.","getMandatory":{"!description":"Gets current value of property <code>mandatory<\/code>.\n\nMandatory property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValueState":{"!description":"Setter for property <code>valueState<\/code>. Default value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.comp.smartfield.SmartField","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: The new value for property <code>valueState<\/code>"}},"getShowSuggestion":{"!description":"Gets current value of property <code>showSuggestion<\/code>.\n\nIf set to <code>true<\/code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachContextEditableChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>contextEditableChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the context editable property of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.SmartField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireEntitySetFound":{"!description":"Fires event <code>entitySetFound<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachVisibleChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>visibleChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireEditableChanged":{"!description":"Fires event <code>editableChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Setter for property <code>enabled<\/code>. Default value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bValue":"type: boolean, description: The new value for property <code>enabled<\/code>."}},"!module":"sap/ui/comp/smartfield/SmartField","detachContextEditableChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>contextEditableChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachInnerControlsCreated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>innerControlsCreated<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the inner controls have been created.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUomEditState":{"!description":"Sets a new value for property <code>uomEditState<\/code>.\n\nThis property is for internal use only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iUomEditState: Number) -> sap.ui.comp.smartfield.SmartField","parameters":{"iUomEditState":"type: int, description: New value for property <code>uomEditState<\/code>"}},"getFocusDomRef":{"!description":"Returns the DOM element that gets the focus.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Element"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nText shown when no value available.","!static":false,"!category":"function","!type":"fn() -> String"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width can be set to an absolute value.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"checkClientError":{"!description":"Returns whether a client error has been detected. Additionally the error message is shown, if this is not the case already.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setJsontype":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31.0 undefined<br>Sets a new value for property <code>jsontype<\/code>.\n\nData types to be used, if the SmartField control is interacting with a JSON model. If the value property of the control is bound to\na property of an OData entity set, this property is not considered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sJsontype: sap.ui.comp.smartfield.JSONType) -> sap.ui.comp.smartfield.SmartField","parameters":{"sJsontype":"type: sap.ui.comp.smartfield.JSONType, description: New value for property <code>jsontype<\/code>"}},"fireValueListChanged":{"!description":"Fires event <code>valueListChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getInnerControls":{"!description":"Resolves the controls hosted currently by this SmartField.","!static":false,"!category":"function","!type":"fn() -> Array"},"setTextLabel":{"!description":"Sets a new value for property <code>textLabel<\/code>.\n\nThis property contains the text of an associated smart label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTextLabel: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTextLabel":"type: string, description: New value for property <code>textLabel<\/code>"}},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.comp.smartfield.SmartField","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getControlProposal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 undefined<br>Gets content of aggregation <code>controlProposal<\/code>.\n\nProposes a control to be rendered. The smart field may ignore the proposal.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposal"},"detachEditableChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>editableChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nText shown when no value available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getProposedControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Gets current value of property <code>proposedControl<\/code>.\n\nProposes a control to be rendered. The smart field may ignore the proposal.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposalType"},"setUnitOfMeasure":{"!description":"If the OData property the control's value property is bound to semantically represents a unit of measure, the value of the current unit of\nmeasure can be changed.","!static":false,"!category":"function","!type":"fn(sUnit: String)","parameters":{"sUnit":"type: string, description: The new unit of measure to be set."}},"getShowValueHelp":{"!description":"Gets current value of property <code>showValueHelp<\/code>.\n\nIf set to true, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTooltipLabel":{"!description":"Gets current value of property <code>tooltipLabel<\/code>.\n\nThis property contains the tool tip of the associated smart label.","!static":false,"!category":"function","!type":"fn() -> String"},"getUomEditState":{"!description":"Gets current value of property <code>uomEditState<\/code>.\n\nThis property is for internal use only.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setShowValueStateMessage":{"!description":"Sets a new value for property <code>showValueStateMessage<\/code>.\n\nThe text which is shown in the value state message popup.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueStateMessage: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowValueStateMessage":"type: boolean, description: New value for property <code>showValueStateMessage<\/code>"}},"attachValueListChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>valueListChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUomVisible":{"!description":"Sets a new value for property <code>uomVisible<\/code>.\n\nVisible state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUomVisible: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bUomVisible":"type: boolean, description: New value for property <code>uomVisible<\/code>"}},"setWidth":{"!description":"Setter for property <code>width<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sWidth":"type: string, description: The new value for property <code>width<\/code>"}},"setUomEnabled":{"!description":"Sets a new value for property <code>uomEnabled<\/code>.\n\nEnabled state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUomEnabled: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bUomEnabled":"type: boolean, description: New value for property <code>uomEnabled<\/code>"}},"setContextEditable":{"!description":"Setter for property <code>contextEditable<\/code>. Default value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bValue":"type: boolean, description: New value for property <code>editable<\/code>"}},"getEntitySet":{"!description":"Gets current value of property <code>entitySet<\/code>.\n\nThe name of an entity set for which the control manages values. This is an optional property.","!static":false,"!category":"function","!type":"fn() -> String"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').","!static":false,"!category":"function","!type":"fn() -> String"},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSets the control into an editable mode or a display mode.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachEntitySetFound":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>entitySetFound<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it\nis specified. In both cases this event is fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowLabel":{"!description":"Sets a new value for property <code>showLabel<\/code>.\n\nIf set to false the label is not displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"getTextLabel":{"!description":"Gets current value of property <code>textLabel<\/code>.\n\nThis property contains the text of an associated smart label.","!static":false,"!category":"function","!type":"fn() -> String"},"setWrapping":{"!description":"Setter for property <code>wrapping<\/code>. The wrapping is only relevant for the table control context.","!static":false,"!category":"function","!type":"fn(bWrapping: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bWrapping":"type: boolean, description: The new value for property <code>wrapping<\/code>"}},"_getEmbeddedSmartField":{"!description":"Resolves the controls hosted currently by this SmartField.","!static":false,"!category":"function","!type":"fn() -> Array"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nFires when the user triggers the link control or taps/clicks on an active title of the object identifier control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setVisible":{"!description":"Setter for property <code>visible<\/code>. Default value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValue: Boolean, bSuppressInvalidate: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bSuppressInvalidate":"type: boolean, description: If <code>true<\/code>, the managed object is not marked as changed","bValue":"type: boolean, description: New value for property <code>editable<\/code>"}},"setEntitySet":{"!description":"Setter for property <code>entitySet<\/code>. Default value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sValue":"type: string, description: The new value for property <code>entitySet<\/code>"}},"fireInitialise":{"!description":"Fires event <code>initialise<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.SmartField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialise<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSupportedAnnotationPaths":{"!description":"Calculates the paths to the annotations used by the SmartField.","!static":true,"!category":"function","!type":"fn(oMetaModel: sap.ui.model.odata.ODataMetaModel, oEntitySet: Object, sValueBinding: String, bNavigationPathsOnly: Boolean) -> Array","parameters":{"oEntitySet":"type: object, description: The given entity set","bNavigationPathsOnly":"type: boolean, description: If set to <code>true<\/code>, no properties are returned","sValueBinding":"type: string, description: The path identifying the OData property the value property of the SmartField is bound to","oMetaModel":"type: sap.ui.model.odata.ODataMetaModel, description: The given OData meta model"}},"setClientSideMandatoryCheck":{"!description":"Sets a new value for property <code>clientSideMandatoryCheck<\/code>.\n\nDetermines if the mandatory check happens on the client side <code>true<\/code> or on the server side <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bClientSideMandatoryCheck: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bClientSideMandatoryCheck":"type: boolean, description: New value for property <code>clientSideMandatoryCheck<\/code>"}},"getShowLabel":{"!description":"Gets current value of property <code>showLabel<\/code>.\n\nIf set to false the label is not displayed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nHorizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"getJsontype":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31.0 undefined<br>Gets current value of property <code>jsontype<\/code>.\n\nData types to be used, if the SmartField control is interacting with a JSON model. If the value property of the control is bound to\na property of an OData entity set, this property is not considered.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.JSONType"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the text in the field has changed and the focus leaves the TextField or Enter is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyConfiguration":{"!description":"Destroys the configuration in the aggregation <code>configuration<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.SmartField"},"setUrl":{"!description":"Setter for property <code>url<\/code>. Default value is <code>null<\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sValue":"type: string, description: The new value for property <code>url<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getUrl":{"!description":"Gets current value of property <code>url<\/code>.\n\nContains a URL which is used to render a link. The link is rendered, if the OData property which the value property of the control\nis bound to is of type <code>Edm.String<\/code> and the Smart Field is in display mode.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The SmartField control is a wrapper for other controls. It interprets OData metadata to determine the control that has to be\n       instantiated. The OData entity is derived from the control's binding context. The OData entity's property that is changed or displayed\n       with the control is derived from the control's value property.","getUomVisible":{"!description":"Gets current value of property <code>uomVisible<\/code>.\n\nVisible state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its associated\ncurrency.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value <code>0<\/code> means the feature is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.ui.comp.smartfield.SmartField","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"destroyControlProposal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 undefined<br>Destroys the controlProposal in the aggregation <code>controlProposal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.SmartField"},"detachInnerControlsCreated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>innerControlsCreated<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTooltipLabel":{"!description":"Sets a new value for property <code>tooltipLabel<\/code>.\n\nThis property contains the tool tip of the associated smart label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTooltipLabel: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTooltipLabel":"type: string, description: New value for property <code>tooltipLabel<\/code>"}},"setShowValueHelp":{"!description":"Sets a new value for property <code>showValueHelp<\/code>.\n\nIf set to true, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueHelp: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowValueHelp":"type: boolean, description: New value for property <code>showValueHelp<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setMandatory":{"!description":"Sets a new value for property <code>mandatory<\/code>.\n\nMandatory property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMandatory: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bMandatory":"type: boolean, description: New value for property <code>mandatory<\/code>"}},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nIndicates whether the control break lines (in display mode) to prevent overflow.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContextEditable":{"!description":"Gets current value of property <code>contextEditable<\/code>.\n\nNotifies the control whether controls using the SmartField are editable or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowValueStateMessage":{"!description":"Gets current value of property <code>showValueStateMessage<\/code>.\n\nThe text which is shown in the value state message popup.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getDataProperty":{"!description":"Returns the OData property to which the <code>value<\/code> property of the control is bound.","!static":false,"!category":"function","!type":"fn() -> Object"},"getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nHorizontal alignment of the text.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","setUomEditable":{"!description":"Sets a new value for property <code>uomEditable<\/code>.\n\nEditable state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its\nassociated currency.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUomEditable: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bUomEditable":"type: boolean, description: New value for property <code>uomEditable<\/code>"}},"attachEditableChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>editableChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the value of editable property of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new smartfield/SmartField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getContextEditable contextEditable} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getJsontype jsontype} : sap.ui.comp.smartfield.JSONType<\/li>\n<li>{@link #getMandatory mandatory} : boolean (default: false)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getShowSuggestion showSuggestion} : boolean (default: true)<\/li>\n<li>{@link #getShowValueHelp showValueHelp} : boolean (default: true)<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getTextLabel textLabel} : string<\/li>\n<li>{@link #getTooltipLabel tooltipLabel} : string<\/li>\n<li>{@link #getUomVisible uomVisible} : boolean (default: true)<\/li>\n<li>{@link #getUomEditable uomEditable} : boolean (default: true)<\/li>\n<li>{@link #getUomEnabled uomEnabled} : boolean (default: true)<\/li>\n<li>{@link #getUrl url} : string<\/li>\n<li>{@link #getUomEditState uomEditState} : int (default: -1)<\/li>\n<li>{@link #getControlContext controlContext} : sap.ui.comp.smartfield.ControlContextType (default: None)<\/li>\n<li>{@link #getProposedControl proposedControl} : sap.ui.comp.smartfield.ControlProposalType (default: None)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getClientSideMandatoryCheck clientSideMandatoryCheck} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getConfiguration configuration} : sap.ui.comp.smartfield.Configuration<\/li>\n<li>{@link #getControlProposal controlProposal} : sap.ui.comp.smartfield.ControlProposal<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:entitySetFound entitySetFound} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visibleChanged visibleChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editableChanged editableChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:contextEditableChanged contextEditableChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerControlsCreated innerControlsCreated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueListChanged valueListChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getConfiguration":{"!description":"Gets content of aggregation <code>configuration<\/code>.\n\nOptional configuration for SmartField.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.Configuration"},"getUomEditable":{"!description":"Gets current value of property <code>uomEditable<\/code>.\n\nEditable state of the unit, if the SmartField control addresses unit of measure use cases, for example, an amount and its\nassociated currency.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nEnables the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setProposedControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Sets a new value for property <code>proposedControl<\/code>.\n\nProposes a control to be rendered. The smart field may ignore the proposal.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sProposedControl: sap.ui.comp.smartfield.ControlProposalType) -> sap.ui.comp.smartfield.SmartField","parameters":{"sProposedControl":"type: sap.ui.comp.smartfield.ControlProposalType, description: New value for property <code>proposedControl<\/code>"}},"setConfiguration":{"!description":"Sets the aggregated <code>configuration<\/code>.","!static":false,"!category":"function","!type":"fn(oConfiguration: sap.ui.comp.smartfield.Configuration) -> sap.ui.comp.smartfield.SmartField","parameters":{"oConfiguration":"type: sap.ui.comp.smartfield.Configuration, description: The configuration to set"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getValueStateText":{"!description":"Getter for property <code>valueStateText<\/code>. Default value is empty/<code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setControlProposal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 undefined<br>Sets the aggregated <code>controlProposal<\/code>.","!static":false,"!category":"function","!type":"fn(oControlProposal: sap.ui.comp.smartfield.ControlProposal) -> sap.ui.comp.smartfield.SmartField","parameters":{"oControlProposal":"type: sap.ui.comp.smartfield.ControlProposal, description: The controlProposal to set"}},"addAssociation":{"!description":"Adds some object with the ID <code>sId<\/code> to the association identified by <code>sAssociationName<\/code> and marks this ManagedObject\nas changed. This method does not avoid duplicates. <b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the\nclass documentation<\/a>. Applications or frameworks must not use this method to generically add an object to an association. Use the concrete\nmethod add<i>XYZ<\/i> for association 'XYZ' or the generic {@link #applySettings} instead.","!static":false,"!category":"function","!type":"fn(sAssociationName: String, sId: String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","parameters":{"sAssociationName":"type: string, description: the string identifying the association the object should be added to.","bSuppressInvalidate":"type: boolean, description: if true, this managed object as well as the newly associated object are not marked as changed","sId":"type: string|sap.ui.base.ManagedObject, description: the ID of the ManagedObject object to add; if empty, nothing is added; if a\n       <code>sap.ui.base.ManagedObject<\/code> is given, its ID is added"}},"getClientSideMandatoryCheck":{"!description":"Gets current value of property <code>clientSideMandatoryCheck<\/code>.\n\nDetermines if the mandatory check happens on the client side <code>true<\/code> or on the server side <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Returns the value of the <code>value<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialise<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the smart field has calculated its metadata.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireInnerControlsCreated":{"!description":"Fires event <code>innerControlsCreated<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEditable":{"!description":"Setter for property <code>editable<\/code>. Default value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bValue":"type: boolean, description: New value for property <code>editable<\/code>"}},"getValueState":{"!description":"Getter for property <code>valueState<\/code>. Default value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nMaximum number of characters. Value <code>0<\/code> means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setValue":{"!description":"Setter for property <code>value<\/code>. Default value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(oValue: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oValue":"type: object, description: The new value for property <code>value<\/code>"}},"getControlContext":{"!description":"Gets current value of property <code>controlContext<\/code>.\n\nDefines in which context the layout of the smart field has to be interpreted.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlContextType"},"fireVisibleChanged":{"!description":"Fires event <code>visibleChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfield.SmartField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setControlContext":{"!description":"Sets a new value for property <code>controlContext<\/code>.\n\nDefines in which context the layout of the smart field has to be interpreted.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sControlContext: sap.ui.comp.smartfield.ControlContextType) -> sap.ui.comp.smartfield.SmartField","parameters":{"sControlContext":"type: sap.ui.comp.smartfield.ControlContextType, description: New value for property <code>controlContext<\/code>"}},"attachVisibleChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>visibleChanged<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the visibility of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachEntitySetFound":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>entitySetFound<\/code> event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.comp.smartfilterbar.SelectOption_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SelectOption with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.SelectOption"},"sap.ui.comp.navpopover.LinkData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.LinkData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.LinkData"},"sap.ui.comp.filterbar.FilterGroupItem":{"!description":"Represents a filter belonging to a group other than basic.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.filterbar.FilterGroupItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.comp.filterbar.FilterItem","destroy":{"!description":"Destroys this element.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","setGroupTitle":{"!description":"Setter for group title.","!static":false,"!category":"function","!type":"fn(sValue: String)","parameters":{"sValue":"type: string, description: Group title"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterGroupItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getGroupName":{"!description":"Gets current value of property <code>groupName<\/code>.\n\nName of the group.","!static":false,"!category":"function","!type":"fn() -> String"},"setGroupName":{"!description":"Sets a new value for property <code>groupName<\/code>.\n\nName of the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupName: String) -> sap.ui.comp.filterbar.FilterGroupItem","parameters":{"sGroupName":"type: string, description: New value for property <code>groupName<\/code>"}},"!constructorDescription":"Constructor for a new filterbar/FilterGroupItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupTitle groupTitle} : string<\/li>\n<li>{@link #getGroupName groupName} : string<\/li>\n<li>{@link #getVisibleInAdvancedArea visibleInAdvancedArea} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.filterbar.FilterItem#constructor sap.ui.comp.filterbar.FilterItem}\ncan be used as well.","!module":"sap/ui/comp/filterbar/FilterGroupItem","!helpDescription":"Represents a filter belonging to a group other than basic.","getGroupTitle":{"!description":"Gets current value of property <code>groupTitle<\/code>.\n\nTitle of the group.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.variants.VariantManagement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantManagement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.variants.VariantManagement"},"sap.ui.comp.smartfield.ObjectStatus":{"!description":"Defines a possible object status control to be rendered. The smart field may ignore the proposal.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ObjectStatus with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.ObjectStatus.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new smartfield/ObjectStatus.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCriticality criticality} : any<\/li>\n<li>{@link #getCriticalityRepresentationType criticalityRepresentationType} : sap.ui.comp.smartfield.CriticalityRepresentationType (default: WithIcon)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfield/ObjectStatus","getCriticality":{"!description":"Gets current value of property <code>criticality<\/code>.\n\nOptional attribute, which can be set, if the control type has the value ObjectStatus.","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"Defines a possible object status control to be rendered. The smart field may ignore the proposal.","!proto":"sap.ui.core.Element","getCriticalityRepresentationType":{"!description":"Gets current value of property <code>criticalityRepresentationType<\/code>.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nDefault value is <code>WithIcon<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.CriticalityRepresentationType"},"!category":"class","setCriticality":{"!description":"Sets a new value for property <code>criticality<\/code>.\n\nOptional attribute, which can be set, if the control type has the value ObjectStatus.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oCriticality: Object) -> sap.ui.comp.smartfield.ObjectStatus","parameters":{"oCriticality":"type: any, description: New value for property <code>criticality<\/code>"}},"setCriticalityRepresentationType":{"!description":"Sets a new value for property <code>criticalityRepresentationType<\/code>.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>WithIcon<\/code>.","!static":false,"!category":"function","!type":"fn(sCriticalityRepresentationType: sap.ui.comp.smartfield.CriticalityRepresentationType) -> sap.ui.comp.smartfield.ObjectStatus","parameters":{"sCriticalityRepresentationType":"type: sap.ui.comp.smartfield.CriticalityRepresentationType, description: New value for property <code>criticalityRepresentationType<\/code>"}}},"sap.ui.comp.smartform.flexibility.Input_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.Input with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.flexibility.Input"},"sap.ui.comp.smartfilterbar.SmartFilterBar":{"indexOfGroupConfiguration":{"!description":"Checks for the provided <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code> in the aggregation <code>groupConfiguration<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroupConfiguration: sap.ui.comp.smartfilterbar.GroupConfiguration) -> Number","parameters":{"oGroupConfiguration":"type: sap.ui.comp.smartfilterbar.GroupConfiguration, description: The groupConfiguration whose index is looked for"}},"setFilterDataAsString":{"!description":"Sets the data in the filter data model as string.","!static":false,"!category":"function","!type":"fn(sJson: String, bReplace: Boolean)","parameters":{"bReplace":"type: boolean, description: Replace existing filter data","sJson":"type: string, description: The JSON data in the filter bar"}},"addFieldToAdvancedArea":{"!description":"Searches for the filter field having the specified OData key and adds this filter field to the advanced area. If there is no corresponding\nfield in the OData metadata, this method has no effect.","!static":false,"!category":"function","!type":"fn(sKey: String)","parameters":{"sKey":"type: string, description: The key like specified in the OData metadata"}},"!proto":"sap.ui.comp.filterbar.FilterBar","removeGroupConfiguration":{"!description":"Removes a groupConfiguration from the aggregation <code>groupConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn(vGroupConfiguration: Number | String | sap.ui.comp.smartfilterbar.GroupConfiguration) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"vGroupConfiguration":"type: int|string|sap.ui.comp.smartfilterbar.GroupConfiguration, description: The groupConfigurationto remove or its index or id"}},"!category":"class","isPending":{"!description":"Checks the pending state of the FilterBar control","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addGroupConfiguration":{"!description":"Adds some groupConfiguration to the aggregation <code>groupConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn(oGroupConfiguration: sap.ui.comp.smartfilterbar.GroupConfiguration) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oGroupConfiguration":"type: sap.ui.comp.smartfilterbar.GroupConfiguration, description: the groupConfiguration to add; if empty, nothing is inserted"}},"setFilterData":{"!description":"Sets the data in the filter data model. The follow-on filterChange event is only triggered when none _CUSTOM data is set.","!static":false,"!category":"function","!type":"fn(oJson: Object, bReplace: Boolean)","parameters":{"oJson":"type: object, description: The JSON data in the filter bar","bReplace":"type: boolean, description: Replace existing filter data"}},"insertControlConfiguration":{"!description":"Inserts a controlConfiguration into the aggregation <code>controlConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn(oControlConfiguration: sap.ui.comp.smartfilterbar.ControlConfiguration, iIndex: Number) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oControlConfiguration":"type: sap.ui.comp.smartfilterbar.ControlConfiguration, description: the controlConfiguration to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the controlConfiguration should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the controlConfiguration is inserted at position 0; for a value\n             greater than the current size of the aggregation, the controlConfiguration is inserted at\n             the last position"}},"!constructorDescription":"Constructor for a new smartfilterbar/SmartFilterBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntityType entityType} : string<\/li>\n<li>{@link #getResourceUri resourceUri} : string<\/li>\n<li>{@link #getBasicSearchFieldName basicSearchFieldName} : string<\/li>\n<li>{@link #getEnableBasicSearch enableBasicSearch} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControlConfiguration controlConfiguration} : sap.ui.comp.smartfilterbar.ControlConfiguration[]<\/li>\n<li>{@link #getGroupConfiguration groupConfiguration} : sap.ui.comp.smartfilterbar.GroupConfiguration[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:pendingChange pendingChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.filterbar.FilterBar#constructor sap.ui.comp.filterbar.FilterBar}\ncan be used as well.","applyVariant":{"!description":"Applies the current variant as opposed to fetchVariant. The variant is retrieved via the flex layer.","!static":false,"!category":"function","!type":"fn(oVariant: Object)","parameters":{"oVariant":"type: object, description: The variant that must be applied. oVariant must contain a valid JSON object."}},"setBasicSearchFieldName":{"!description":"Sets a new value for property <code>basicSearchFieldName<\/code>.\n\nName of the field that has to be the focus of basic search. This is only relevant for SmartFilterBar in combination with\nValueHelpDialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBasicSearchFieldName: String) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"sBasicSearchFieldName":"type: string, description: New value for property <code>basicSearchFieldName<\/code>"}},"getBasicSearchControl":{"!description":"Returns an instance of the control for the basic search.","!static":false,"!category":"function","!type":"fn() -> Object"},"getFilters":{"!description":"Returns an array of filters (sap.ui.model.Filter instances), for visible fields, that can be used to restrict the query result from OData.<br>\nThe result of this method can directly be used during aggregation binding or OData read.","!static":false,"!category":"function","!type":"fn(aFieldNames?: [String]) -> [sap.ui.model.Filter]","parameters":{"aFieldNames":"type: string[], description: optional array of field names that filters should be returned, if not given all visible filters are returned"}},"setEnableBasicSearch":{"!description":"Sets a new value for property <code>enableBasicSearch<\/code>.\n\nEnables basic search field in the SmartFilterBar control. This must only be enabled for entities that support such search behavior.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableBasicSearch: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bEnableBasicSearch":"type: boolean, description: New value for property <code>enableBasicSearch<\/code>"}},"getFilterData":{"!description":"Returns the data currently set in the filter data model.","!static":false,"!category":"function","!type":"fn(bAllFilterData: Boolean) -> Object","parameters":{"bAllFilterData":"type: boolean, description: Also include empty/invisible fields filter data"}},"!description":"The SmartFilterBar control uses the OData metadata of an entity in order to create a filter bar.<br>\n       Whether a field is visible on the filter bar, supports type-ahead and value help, for example, is automatically determined. When you use\n       control configurations and group configurations it is possible to configure the filter bar and adapt it according to your needs.<br>\n       <b><i>Note:<\/i><\/b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","removeControlConfiguration":{"!description":"Removes a controlConfiguration from the aggregation <code>controlConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn(vControlConfiguration: Number | String | sap.ui.comp.smartfilterbar.ControlConfiguration) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"vControlConfiguration":"type: int|string|sap.ui.comp.smartfilterbar.ControlConfiguration, description: The controlConfigurationto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.SmartFilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllControlConfiguration":{"!description":"Removes all the controls from the aggregation <code>controlConfiguration<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.ControlConfiguration]"},"getFilterDataAsString":{"!description":"Returns the data currently set in the filter data model as string.","!static":false,"!category":"function","!type":"fn(bAllFilterData: Boolean) -> String","parameters":{"bAllFilterData":"type: boolean, description: Also include empty/invisible fields filter data"}},"getResourceUri":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 Set an ODataModel as the main model on your control/view instead<br>Gets current value of property <code>resourceUri<\/code>.\n\nOptional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. Note:\nChanging this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> String"},"getEnableBasicSearch":{"!description":"Gets current value of property <code>enableBasicSearch<\/code>.\n\nEnables basic search field in the SmartFilterBar control. This must only be enabled for entities that support such search behavior.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEntityType":{"!description":"Gets current value of property <code>entityType<\/code>.\n\nThe OData entity type whose metadata is used to create the SmartFilterBar. Note: Changing this value after the SmartFilterBar is\ninitialized (initialise event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> String"},"destroy":{"!description":"Destroys the control.","!static":false,"!category":"function","!type":"fn()"},"getControlConfiguration":{"!description":"Gets content of aggregation <code>controlConfiguration<\/code>.\n\nUsing control configurations you can add additional configuration to filter fields, for example set custom labels, change the order\nof fields, or change the filter field control type. Note: Changing the values here after the SmartFilter is initialized (initialise\nevent was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.ControlConfiguration]"},"setSmartVariant":{"!description":"Sets the associated <code>smartVariant<\/code>.","!static":false,"!category":"function","!type":"fn(oSmartVariant: sap.ui.comp.smartvariants.SmartVariantManagement) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oSmartVariant":"type: sap.ui.comp.smartvariants.SmartVariantManagement, description: Id of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"}},"attachPendingChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pendingChange<\/code> event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code> itself.\n\nThis event is fired after the pending state of the FilterBar control changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setResourceUri":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 Set an ODataModel as the main model on your control/view instead<br>Uses the provided resource URI to fetch the OData metadata instead of using the default ODataModel (getModel()). You should only set this if\nyou intend to get the metadata for the filter bar from elsewhere!","!static":false,"!category":"function","!type":"fn(sResourceUri: String)","parameters":{"sResourceUri":"type: string, description: The URI of the oData service from which the metadata would be read"}},"detachPendingChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pendingChange<\/code> event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterBar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"indexOfControlConfiguration":{"!description":"Checks for the provided <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code> in the aggregation <code>controlConfiguration<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oControlConfiguration: sap.ui.comp.smartfilterbar.ControlConfiguration) -> Number","parameters":{"oControlConfiguration":"type: sap.ui.comp.smartfilterbar.ControlConfiguration, description: The controlConfiguration whose index is looked for"}},"insertGroupConfiguration":{"!description":"Inserts a groupConfiguration into the aggregation <code>groupConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn(oGroupConfiguration: sap.ui.comp.smartfilterbar.GroupConfiguration, iIndex: Number) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oGroupConfiguration":"type: sap.ui.comp.smartfilterbar.GroupConfiguration, description: the groupConfiguration to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the groupConfiguration should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the groupConfiguration is inserted at position 0; for a value\n             greater than the current size of the aggregation, the groupConfiguration is inserted at\n             the last position"}},"!module":"sap/ui/comp/smartfilterbar/SmartFilterBar","getBasicSearchFieldName":{"!description":"Gets current value of property <code>basicSearchFieldName<\/code>.\n\nName of the field that has to be the focus of basic search. This is only relevant for SmartFilterBar in combination with\nValueHelpDialog.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The SmartFilterBar control uses the OData metadata of an entity in order to create a filter bar.<br>\n       Whether a field is visible on the filter bar, supports type-ahead and value help, for example, is automatically determined. When you use\n       control configurations and group configurations it is possible to configure the filter bar and adapt it according to your needs.<br>\n       <b><i>Note:<\/i><\/b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","firePendingChange":{"!description":"Fires event <code>pendingChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroyGroupConfiguration":{"!description":"Destroys all the groupConfiguration in the aggregation <code>groupConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.SmartFilterBar"},"getParameters":{"!description":"Returns a parameter object that can be used to restrict the query result from OData in case of basic search.","!static":false,"!category":"function","!type":"fn() -> Object"},"getGroupConfiguration":{"!description":"Gets content of aggregation <code>groupConfiguration<\/code>.\n\nProvides the possibility to add additional configuration to groups. Groups are used to show fields in the advanced area of the\nSmartFilterBar. With additional configuration, you can for example set custom labels or change the order of groups. Note: Changing\nthe values here after the SmartFilter is initialized (initialise event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.GroupConfiguration]"},"getSmartVariant":{"!description":"ID of the element which is the current target of the association <code>smartVariant<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.SmartVariantManagement"},"removeAllGroupConfiguration":{"!description":"Removes all the controls from the aggregation <code>groupConfiguration<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.GroupConfiguration]"},"fetchVariant":{"!description":"Retrieves the currently visible filters and the values for storing them as variants. The result will be passed on as a JSON object to the\ncallee smart variant control.","!static":false,"!category":"function","!type":"fn() -> Object"},"addControlConfiguration":{"!description":"Adds some controlConfiguration to the aggregation <code>controlConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn(oControlConfiguration: sap.ui.comp.smartfilterbar.ControlConfiguration) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oControlConfiguration":"type: sap.ui.comp.smartfilterbar.ControlConfiguration, description: the controlConfiguration to add; if empty, nothing is inserted"}},"getControlByKey":{"!description":"Returns the control (if any) with the specified key (Property name in OData entity). Use just the property name as the key when getting a\ncontrol from the basic area. Example: \"CompanyCode\" & Use \"EntityName/GroupName.FieldName\" format to get controls from groups.\nExample:\"Account.CompanyCode\"","!static":false,"!category":"function","!type":"fn(sKey: String) -> Object | sap.ui.Control","parameters":{"sKey":"type: string, description: The key as present in the OData property name/control configuration"}},"destroyControlConfiguration":{"!description":"Destroys all the controlConfiguration in the aggregation <code>controlConfiguration<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.SmartFilterBar"},"setEntityType":{"!description":"The entity type name from OData metadata, for which the filter bar is created.","!static":false,"!category":"function","!type":"fn(sEntityTypeName: String)","parameters":{"sEntityTypeName":"type: string, description: type name"}}},"sap.ui.comp.smartform.Layout":{"setSingleGroupFullSize":{"!description":"Sets a new value for property <code>singleGroupFullSize<\/code>.\n\nIf the SmartForm contains only one single Group and this property is set, the Group is displayed using the full size of the\nSmartForm. In this case the properties columnsL and columnsM are ignored.<br>\nIn all other cases the Group is displayed in the size of one column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleGroupFullSize: Boolean) -> sap.ui.comp.smartform.Layout","parameters":{"bSingleGroupFullSize":"type: boolean, description: New value for property <code>singleGroupFullSize<\/code>"}},"getEmptySpanS":{"!description":"Gets current value of property <code>emptySpanS<\/code>.\n\nNumber of grid cells that are empty at the end of each line on small size.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Element","!category":"class","setBreakpointL":{"!description":"Sets a new value for property <code>breakpointL<\/code>.\n\nBreakpoint (in pixel) between Medium size and Large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBreakpointL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iBreakpointL":"type: int, description: New value for property <code>breakpointL<\/code>"}},"setBreakpointM":{"!description":"Sets a new value for property <code>breakpointM<\/code>.\n\nreakpoint (in pixel) between Small size and Medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBreakpointM: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iBreakpointM":"type: int, description: New value for property <code>breakpointM<\/code>"}},"!constructorDescription":"Constructor for a new smartform/Layout.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabelSpanXL labelSpanXL} : int<\/li>\n<li>{@link #getLabelSpanL labelSpanL} : int<\/li>\n<li>{@link #getLabelSpanM labelSpanM} : int<\/li>\n<li>{@link #getLabelSpanS labelSpanS} : int<\/li>\n<li>{@link #getEmptySpanXL emptySpanXL} : int<\/li>\n<li>{@link #getEmptySpanL emptySpanL} : int<\/li>\n<li>{@link #getEmptySpanM emptySpanM} : int<\/li>\n<li>{@link #getEmptySpanS emptySpanS} : int<\/li>\n<li>{@link #getColumnsXL columnsXL} : int<\/li>\n<li>{@link #getColumnsL columnsL} : int<\/li>\n<li>{@link #getColumnsM columnsM} : int<\/li>\n<li>{@link #getSingleGroupFullSize singleGroupFullSize} : boolean (default: true)<\/li>\n<li>{@link #getBreakpointXL breakpointXL} : int<\/li>\n<li>{@link #getBreakpointL breakpointL} : int<\/li>\n<li>{@link #getBreakpointM breakpointM} : int<\/li>\n<li>{@link #getGridDataSpan gridDataSpan} : sap.ui.layout.GridSpan (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getBreakpointL":{"!description":"Gets current value of property <code>breakpointL<\/code>.\n\nBreakpoint (in pixel) between Medium size and Large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getBreakpointM":{"!description":"Gets current value of property <code>breakpointM<\/code>.\n\nreakpoint (in pixel) between Small size and Medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLabelSpanXL":{"!description":"Gets current value of property <code>labelSpanXL<\/code>.\n\nDefault span for labels in extra large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getEmptySpanM":{"!description":"Gets current value of property <code>emptySpanM<\/code>.\n\nNumber of grid cells that are empty at the end of each line on medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setGridDataSpan":{"!description":"Sets a new value for property <code>gridDataSpan<\/code>.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters\nL, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4\nm4\". Note that the parameters has to be provided in the order large medium small.<br>\nThe value set here will be set to all group elements when used with horizontal layout (smart form property useHorizontalLayout)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sGridDataSpan: sap.ui.layout.GridSpan) -> sap.ui.comp.smartform.Layout","parameters":{"sGridDataSpan":"type: sap.ui.layout.GridSpan, description: New value for property <code>gridDataSpan<\/code>"}},"setLabelSpanL":{"!description":"Sets a new value for property <code>labelSpanL<\/code>.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in\nthe line the labelSpanM value is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanL":"type: int, description: New value for property <code>labelSpanL<\/code>"}},"getColumnsXL":{"!description":"Gets current value of property <code>columnsXL<\/code>.\n\nNumber of columns for extra large size.<br>\nThe number of columns for extra large size must not be smaller than the number of columns for large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setColumnsXL":{"!description":"Sets a new value for property <code>columnsXL<\/code>.\n\nNumber of columns for extra large size.<br>\nThe number of columns for extra large size must not be smaller than the number of columns for large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumnsXL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iColumnsXL":"type: int, description: New value for property <code>columnsXL<\/code>"}},"setLabelSpanM":{"!description":"Sets a new value for property <code>labelSpanM<\/code>.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line,\nlabelSpanL is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanM: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanM":"type: int, description: New value for property <code>labelSpanM<\/code>"}},"setBreakpointXL":{"!description":"Sets a new value for property <code>breakpointXL<\/code>.\n\nBreakpoint (in pixel) between large size and extra large (XL) size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBreakpointXL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iBreakpointXL":"type: int, description: New value for property <code>breakpointXL<\/code>"}},"getEmptySpanL":{"!description":"Gets current value of property <code>emptySpanL<\/code>.\n\nNumber of grid cells that are empty at the end of each line on large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setLabelSpanS":{"!description":"Sets a new value for property <code>labelSpanS<\/code>.\n\nDefault span for labels in small size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanS: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanS":"type: int, description: New value for property <code>labelSpanS<\/code>"}},"!description":"Layout settings to adjust ResponsiveGridLayout.","getLabelSpanL":{"!description":"Gets current value of property <code>labelSpanL<\/code>.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in\nthe line the labelSpanM value is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEmptySpanM":{"!description":"Sets a new value for property <code>emptySpanM<\/code>.\n\nNumber of grid cells that are empty at the end of each line on medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanM: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanM":"type: int, description: New value for property <code>emptySpanM<\/code>"}},"getLabelSpanM":{"!description":"Gets current value of property <code>labelSpanM<\/code>.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line,\nlabelSpanL is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.Layout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setEmptySpanS":{"!description":"Sets a new value for property <code>emptySpanS<\/code>.\n\nNumber of grid cells that are empty at the end of each line on small size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanS: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanS":"type: int, description: New value for property <code>emptySpanS<\/code>"}},"setEmptySpanXL":{"!description":"Sets a new value for property <code>emptySpanXL<\/code>.\n\nNumber of grid cells that are empty at the end of each line on extra large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanXL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanXL":"type: int, description: New value for property <code>emptySpanXL<\/code>"}},"getSingleGroupFullSize":{"!description":"Gets current value of property <code>singleGroupFullSize<\/code>.\n\nIf the SmartForm contains only one single Group and this property is set, the Group is displayed using the full size of the\nSmartForm. In this case the properties columnsL and columnsM are ignored.<br>\nIn all other cases the Group is displayed in the size of one column.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getBreakpointXL":{"!description":"Gets current value of property <code>breakpointXL<\/code>.\n\nBreakpoint (in pixel) between large size and extra large (XL) size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getGridDataSpan":{"!description":"Gets current value of property <code>gridDataSpan<\/code>.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters\nL, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4\nm4\". Note that the parameters has to be provided in the order large medium small.<br>\nThe value set here will be set to all group elements when used with horizontal layout (smart form property useHorizontalLayout)\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.GridSpan"},"getEmptySpanXL":{"!description":"Gets current value of property <code>emptySpanXL<\/code>.\n\nNumber of grid cells that are empty at the end of each line on extra large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLabelSpanS":{"!description":"Gets current value of property <code>labelSpanS<\/code>.\n\nDefault span for labels in small size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEmptySpanL":{"!description":"Sets a new value for property <code>emptySpanL<\/code>.\n\nNumber of grid cells that are empty at the end of each line on large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanL":"type: int, description: New value for property <code>emptySpanL<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Layout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/smartform/Layout","getColumnsL":{"!description":"Gets current value of property <code>columnsL<\/code>.\n\nNumber of columns for large size.<br>\nThe number of columns for large size must not be smaller than the number of columns for medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"!helpDescription":"Layout settings to adjust ResponsiveGridLayout.","getColumnsM":{"!description":"Gets current value of property <code>columnsM<\/code>.\n\nNumber of columns for medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setColumnsM":{"!description":"Sets a new value for property <code>columnsM<\/code>.\n\nNumber of columns for medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumnsM: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iColumnsM":"type: int, description: New value for property <code>columnsM<\/code>"}},"setColumnsL":{"!description":"Sets a new value for property <code>columnsL<\/code>.\n\nNumber of columns for large size.<br>\nThe number of columns for large size must not be smaller than the number of columns for medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumnsL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iColumnsL":"type: int, description: New value for property <code>columnsL<\/code>"}},"setLabelSpanXL":{"!description":"Sets a new value for property <code>labelSpanXL<\/code>.\n\nDefault span for labels in extra large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanXL: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanXL":"type: int, description: New value for property <code>labelSpanXL<\/code>"}}},"sap.ui.comp.smartfilterbar.GroupConfiguration":{"!description":"A GroupConfiguration can be used to add additional configurations for groups in the SmartFilterBar. A group in the SmartFilterBar is a group of filter fields in the advanced search.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nThe key property shall correspond to the name EntityTypeName from the OData service $metadata document.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.GroupConfiguration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getIndex":{"!description":"Gets current value of property <code>index<\/code>.\n\nZero based integer index.\nThe index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.core.Element","!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code> itself.\n\nFired when the value of a property, for example label, has changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>propertyName<\/code> of type <code>string<\/code>Name of the changed property<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.GroupConfiguration with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new smartfilterbar/GroupConfiguration.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getIndex index} : any (default: undefined)<\/li>\n<li>{@link #getLabel label} : any (default: undefined)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfilterbar/GroupConfiguration","!helpDescription":"A GroupConfiguration can be used to add additional configurations for groups in the SmartFilterBar. A group in the SmartFilterBar is a group of filter fields in the advanced search.","setIndex":{"!description":"Sets a new value for property <code>index<\/code>.\n\nZero based integer index.\nThe index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(oIndex: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oIndex":"type: any, description: New value for property <code>index<\/code>"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(oLabel: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oLabel":"type: any, description: New value for property <code>label<\/code>"}},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nThe key property shall correspond to the name EntityTypeName from the OData service $metadata document.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}}},"sap.ui.comp.smartfield.DisplayBehaviour":{"!description":"The different options to define display behavior for the value help of a SmartField control.","TrueFalse":{"!description":"Shows Boolean value as True/False","!category":"enum","!type":"String"},"auto":{"!description":"The SmartField chooses the display behavior.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","idOnly":{"!description":"Shows the ID only.","!category":"enum","!type":"String"},"descriptionAndId":{"!description":"Description and ID are displayed for available values.","!category":"enum","!type":"String"},"descriptionOnly":{"!description":"Only the description of the available values is displayed.","!category":"enum","!type":"String"},"!category":"static class","idAndDescription":{"!description":"ID and description are displayed for available values.","!category":"enum","!type":"String"},"OnOff":{"!description":"Shows Boolean value as On/Off","!category":"enum","!type":"String"},"YesNo":{"!description":"Shows Boolean value as Yes/No","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.flexibility.FieldList":{"!description":"Contains list of forms, groups and fields which can could be modified by the SAPUI5 flexibility services","indexOfNode":{"!description":"Checks for the provided <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> in the aggregation <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.comp.smartform.flexibility.FieldListNode) -> Number","parameters":{"oNode":"type: sap.ui.comp.smartform.flexibility.FieldListNode, description: The node whose index is looked for"}},"removeAllNodes":{"!description":"Removes all the controls from the aggregation <code>nodes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.flexibility.FieldListNode]"},"fireLabelChanged":{"!description":"Fires event <code>labelChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"init":{"!description":"init","!static":false,"!category":"function","!type":"fn()"},"fireSelectionChanged":{"!description":"Fires event <code>selectionChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.flexibility.FieldList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChanged<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code> itself.\n\nEvent is fired when the selected node has changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getNodes":{"!description":"Gets content of aggregation <code>nodes<\/code>.\n\nNodes representing either a Form, a Group or a field","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.flexibility.FieldListNode]"},"!proto":"sap.ui.core.Control","detachNodeHidden":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>nodeHidden<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertNode":{"!description":"Inserts a node into the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.comp.smartform.flexibility.FieldListNode, iIndex: Number) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"oNode":"type: sap.ui.comp.smartform.flexibility.FieldListNode, description: the node to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"}},"!category":"class","attachNodeHidden":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>nodeHidden<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code> itself.\n\nEvent is fired when a node was hidden","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSelectedNode":{"!description":"Returns the currently selected field list node","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.flexibility.FieldListNode"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.FieldList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachLabelChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>labelChanged<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChanged<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new smartform/flexibility/FieldList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.ui.comp.smartform.flexibility.FieldListNode[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:labelChanged labelChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:nodeHidden nodeHidden} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/comp/smartform/flexibility/FieldList","!helpDescription":"Contains list of forms, groups and fields which can could be modified by the SAPUI5 flexibility services","attachLabelChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>labelChanged<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code> itself.\n\nEvent is fired when the label of the node has changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireNodeHidden":{"!description":"Fires event <code>nodeHidden<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.flexibility.FieldList","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.ui.comp.navpopover.SemanticObjectController":{"getEntitySet":{"!description":"Gets current value of property <code>entitySet<\/code>.\n\nThe name of the entity set used. If <code>entitySet<\/code> has not been defined, the SemanticObjectController tries to retrieve\nthe name from its parents. <b>Note:<\/b> This is not a dynamic UI5 property.","!static":false,"!category":"function","!type":"fn() -> String"},"fireNavigationTargetsObtained":{"!description":"Fires event <code>navigationTargetsObtained<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>mainNavigation<\/code> of type <code>sap.ui.comp.navpopover.LinkData<\/code>The main navigation object.<\/li>\n<li><code>actions<\/code> of type <code>sap.ui.comp.navpopover.LinkData[]<\/code>Array of available navigation target objects.<\/li>\n<li><code>ownNavigation<\/code> of type <code>sap.ui.comp.navpopover.LinkData<\/code>The navigation object for the own application. This navigation option is by default not visible on the popover.<\/li>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object for which the navigation targets have been retrieved.<\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the control that fires this event. If <code>navigationTargetsObtained<\/code> is registered on the SmartLink,\n<code>originalId<\/code> is the same as the event's source ID which is also the SmartLink's ID. If\n<code>navigationTargetsObtained<\/code> is registered on the SemanticObjectController, <code>originalId<\/code> helps to\nidentify the original SmartLink control which triggered the event.<\/li>\n<li><code>show<\/code> of type <code>function<\/code>This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained<\/code> has been\nregistered, the <code>show<\/code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()<\/code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)<\/code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)<\/code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (such as SmartLink).<\/li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation<\/code> will be used.<\/li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross-application navigation links. If\nempty, property <code>actions<\/code> will be used.<\/li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.<\/li>\n<\/ul><\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachPrefetchDone":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>prefetchDone<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getPrefetchNavigationTargets":{"!description":"Gets current value of property <code>prefetchNavigationTargets<\/code>.\n\nIf set to <code>true<\/code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for\nwhich no targets were found. Setting this value to <code>true<\/code> will trigger an additional roundtrip.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachBeforePopoverOpens":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforePopoverOpens<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Element","!category":"class","hasSemanticObjectLinks":{"!description":"Checks if the given semantic object name has a navigation link. <b>Note<\/b>: this method returns a valid value only after the event\n<code>prefetchDone<\/code> has been raised. The event <code>prefetchDone<\/code> is raised if the property\n<code>prefetchNavigationTargets<\/code> is set to <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String) -> Boolean","parameters":{"sSemanticObject":"type: string, description: undefined"}},"detachNavigationTargetsObtained":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigationTargetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"unregisterControl":{"!description":"Removes the given control from the SemanticObjectController and unregisters all relevant events.","!static":false,"!category":"function","!type":"fn(oSmartLink: sap.ui.comp.navpopover.SmartLink)","parameters":{"oSmartLink":"type: sap.ui.comp.navpopover.SmartLink, description: undefined"}},"!constructorDescription":"Constructor for a new navpopover/SemanticObjectController.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getPrefetchNavigationTargets prefetchNavigationTargets} : boolean (default: false)<\/li>\n<li>{@link #getFieldSemanticObjectMap fieldSemanticObjectMap} : object<\/li>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigationTargetsObtained navigationTargetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforePopoverOpens beforePopoverOpens} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:prefetchDone prefetchDone} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setFieldSemanticObjectMap":{"!description":"Sets a new value for property <code>fieldSemanticObjectMap<\/code>.\n\nMaps the field names to the related semantic objects. When accessing this property for the first time, the mapping will be\ncalculated from the metadata within the provided model.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFieldSemanticObjectMap: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oFieldSemanticObjectMap":"type: object, description: New value for property <code>fieldSemanticObjectMap<\/code>"}},"setIgnoredFields":{"!description":"Sets a new value for property <code>ignoredFields<\/code>.\n\nComma-separated list of field names that must not be displayed as links.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields: String) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"getFieldSemanticObjectMap":{"!description":"Gets current value of property <code>fieldSemanticObjectMap<\/code>.\n\nMaps the field names to the related semantic objects. When accessing this property for the first time, the mapping will be\ncalculated from the metadata within the provided model.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachNavigationTargetsObtained":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigationTargetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nAfter the navigation targets have been retrieved, <code>navigationTargetsObtained<\/code> is fired and makes it possible you to\nchange the targets.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"The SemanticObjectController allows the user to register against semantic object navigation events as well as define semantic objects\n       which should be ignored.","setEntitySet":{"!description":"Sets a new value for property <code>entitySet<\/code>.\n\nThe name of the entity set used. If <code>entitySet<\/code> has not been defined, the SemanticObjectController tries to retrieve\nthe name from its parents. <b>Note:<\/b> This is not a dynamic UI5 property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet: String) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.SemanticObjectController.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setPrefetchNavigationTargets":{"!description":"Sets a new value for property <code>prefetchNavigationTargets<\/code>.\n\nIf set to <code>true<\/code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for\nwhich no targets were found. Setting this value to <code>true<\/code> will trigger an additional roundtrip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPrefetchNavigationTargets: Boolean) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"bPrefetchNavigationTargets":"type: boolean, description: New value for property <code>prefetchNavigationTargets<\/code>"}},"getIgnoredFields":{"!description":"Gets current value of property <code>ignoredFields<\/code>.\n\nComma-separated list of field names that must not be displayed as links.","!static":false,"!category":"function","!type":"fn() -> String"},"fireBeforePopoverOpens":{"!description":"Fires event <code>beforePopoverOpens<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object for which the navigation targets will be retrieved.<\/li>\n<li><code>semanticAttributes<\/code> of type <code>object<\/code>Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.<\/li>\n<li><code>setSemanticAttributes<\/code> of type <code>function<\/code>This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)<\/code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.<\/li>\n<\/ul><\/li>\n<li><code>setAppStateKey<\/code> of type <code>function<\/code>This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)<\/code> Parameter:\n<ul>\n<li>{string} sAppStateKey<\/li>\n<\/ul><\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the control that fires this event. If <code>beforePopoverOpens<\/code> is registered on the SmartLink,\n<code>originalId<\/code> is the same as the event's source ID which is also the SmartLink's ID. If the\n<code>beforePopoverOpens<\/code> is registered on the SemanticObjectController, <code>originalId<\/code> helps to\nidentify the original SmartLink control which triggered the event.<\/li>\n<li><code>open<\/code> of type <code>function<\/code>This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()<\/code> If <code>beforePopoverOpens<\/code> has been registered, <code>open<\/code> function\nhas to be called manually in order to open the navigation popover.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SemanticObjectController with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"firePrefetchDone":{"!description":"Fires event <code>prefetchDone<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObjects<\/code> of type <code>object<\/code>A map containing all semantic objects as keys for which at least one navigation target has been found. The value for each\nsemantic object key is an array containing the available actions found for this semantic object.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireNavigate":{"!description":"Fires event <code>navigate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>text<\/code> of type <code>string<\/code>The UI text shown in the clicked link.<\/li>\n<li><code>href<\/code> of type <code>string<\/code>The navigation target of the clicked link.<\/li>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object used to retrieve this target.<\/li>\n<li><code>semanticAttributes<\/code> of type <code>object<\/code>Map containing the semantic attributes used to retrieve this target.<\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the control that fires this event. If <code>navigate<\/code> is registered on the SmartLink,\n<code>originalId<\/code> is the same as the event's source ID which is the SmartLink's ID. If <code>navigate<\/code> is\nregistered on the SemanticObjectController, <code>originalId<\/code> helps to identify the original SmartLink control\nwhich triggered the event.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!module":"sap/ui/comp/navpopover/SemanticObjectController","!helpDescription":"The SemanticObjectController allows the user to register against semantic object navigation events as well as define semantic objects\n       which should be ignored.","attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigate<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachPrefetchDone":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>prefetchDone<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nIf the property <code>prefetchNavigationTargets<\/code> is set to <code>true<\/code>, event <code>prefetchDone<\/code> is fired\nafter all navigation targets have been retrieved.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"registerControl":{"!description":"Adds the given control to the SemanticObjectController and registers all relevant events.","!static":false,"!category":"function","!type":"fn(oSmartLink: sap.ui.comp.navpopover.SmartLink)","parameters":{"oSmartLink":"type: sap.ui.comp.navpopover.SmartLink, description: undefined"}},"attachBeforePopoverOpens":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforePopoverOpens<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change\nthe parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens<\/code> is fired after the\nlink has been clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigate<\/code> event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setIgnoredState":{"!description":"Checks if the given SmartLink has to be enabled or disabled and sets the state.","!static":false,"!category":"function","!type":"fn(oSmartLink: sap.ui.comp.navpopover.SmartLink)","parameters":{"oSmartLink":"type: sap.ui.comp.navpopover.SmartLink, description: the SmartLink which should be enabled or disabled."}}},"sap.ui.comp.variants.VariantManagement":{"setShowShare":{"!description":"Sets a new value for property <code>showShare<\/code>.\n\nIndicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other\nusers.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowShare: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bShowShare":"type: boolean, description: New value for property <code>showShare<\/code>"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>key<\/code> of type <code>string<\/code>The variant key<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.variants.VariantManagement","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself.\n\nThis event is fired when a new variant is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowCreateTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Sets a new value for property <code>showCreateTile<\/code>.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCreateTile: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bShowCreateTile":"type: boolean, description: New value for property <code>showCreateTile<\/code>"}},"destroyItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 Replaced by association <code>variantItems<\/code><br>Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.variants.VariantManagement"},"setShowExecuteOnSelection":{"!description":"Sets a new value for property <code>showExecuteOnSelection<\/code>.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowExecuteOnSelection: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bShowExecuteOnSelection":"type: boolean, description: New value for property <code>showExecuteOnSelection<\/code>"}},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>save<\/code> event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself.\n\nThis event is fired when the Save Variant dialog is closed with OK for a variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertVariantItem":{"!description":"Inserts a variantItem into the aggregation <code>variantItems<\/code>.","!static":false,"!category":"function","!type":"fn(oVariantItem: sap.ui.comp.variants.VariantItem, iIndex: Number) -> sap.ui.comp.variants.VariantManagement","parameters":{"oVariantItem":"type: sap.ui.comp.variants.VariantItem, description: the variantItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the variantItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the variantItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the variantItem is inserted at\n             the last position"}},"destroyVariantItems":{"!description":"Destroys all the variantItems in the aggregation <code>variantItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.variants.VariantManagement"},"getIndustrySolutionMode":{"!description":"Gets current value of property <code>industrySolutionMode<\/code>.\n\nIf set to<code>true<\/code>, the scenario is an industry-specific solution. This flag is only used internally in the app variant\nscenarios.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 Replaced by association <code>variantItems<\/code><br>Gets content of aggregation <code>items<\/code>.\n\nItems displayed by the VariantManagement control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getStandardItemText":{"!description":"Gets current value of property <code>standardItemText<\/code>.\n\nOverwrites the default Standard variant title.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 Replaced by association <code>variantItems<\/code><br>Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"setSelectionKey":{"!description":"Sets a new value for property <code>selectionKey<\/code>.\n\nThe key of the currently selected item. Returns null if the default item list is selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectionKey: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sSelectionKey":"type: string, description: New value for property <code>selectionKey<\/code>"}},"getDefaultVariantKey":{"!description":"Gets current value of property <code>defaultVariantKey<\/code>.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"setStandardItemText":{"!description":"Sets a new value for property <code>standardItemText<\/code>.\n\nOverwrites the default Standard variant title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStandardItemText: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sStandardItemText":"type: string, description: New value for property <code>standardItemText<\/code>"}},"getVariantItems":{"!description":"Gets content of aggregation <code>variantItems<\/code>.\n\nVariant items displayed by the VariantManagement control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.variants.VariantItem]"},"setInitialSelectionKey":{"!description":"Sets a new value for property <code>initialSelectionKey<\/code>.\n\nEnables the setting of the initially selected variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitialSelectionKey: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sInitialSelectionKey":"type: string, description: New value for property <code>initialSelectionKey<\/code>"}},"!description":"The VariantManagement control can be used to manage variants, such as filter bar variants or table variants.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.variants.VariantManagement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeVariantItem":{"!description":"Removes a variantItem from the aggregation <code>variantItems<\/code>.","!static":false,"!category":"function","!type":"fn(vVariantItem: Number | String | sap.ui.comp.variants.VariantItem) -> sap.ui.comp.variants.VariantItem","parameters":{"vVariantItem":"type: int|string|sap.ui.comp.variants.VariantItem, description: The variantItemto remove or its index or id"}},"getShowCreateTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Gets current value of property <code>showCreateTile<\/code>.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 Replaced by association <code>variantItems<\/code><br>Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"setIndustrySolutionMode":{"!description":"Sets a new value for property <code>industrySolutionMode<\/code>.\n\nIf set to<code>true<\/code>, the scenario is an industry-specific solution. This flag is only used internally in the app variant\nscenarios.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIndustrySolutionMode: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bIndustrySolutionMode":"type: boolean, description: New value for property <code>industrySolutionMode<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantManagement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/comp/variants/VariantManagement","!helpDescription":"The VariantManagement control can be used to manage variants, such as filter bar variants or table variants.","fireSave":{"!description":"Fires event <code>save<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>name<\/code> of type <code>string<\/code>The variant title<\/li>\n<li><code>overwrite<\/code> of type <code>boolean<\/code>Indicates if an existing variant is overwritten or if a new variant is created<\/li>\n<li><code>key<\/code> of type <code>string<\/code>The variant key<\/li>\n<li><code>exe<\/code> of type <code>boolean<\/code>The Execute on Selection indicator<\/li>\n<li><code>def<\/code> of type <code>boolean<\/code>The default variant indicator<\/li>\n<li><code>global<\/code> of type <code>boolean<\/code>The shared variant indicator<\/li>\n<li><code>lifecyclePackage<\/code> of type <code>string<\/code>The package name<\/li>\n<li><code>lifecycleTransportId<\/code> of type <code>string<\/code>The transport ID<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.variants.VariantManagement","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachManage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>manage<\/code> event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachManage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>manage<\/code> event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself.\n\nThis event is fired when users apply changes to variants in the Manage Variants dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 Replaced by association <code>variantItems<\/code><br>Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The itemto remove or its index or id"}},"addVariantItem":{"!description":"Adds some variantItem to the aggregation <code>variantItems<\/code>.","!static":false,"!category":"function","!type":"fn(oVariantItem: sap.ui.comp.variants.VariantItem) -> sap.ui.comp.variants.VariantManagement","parameters":{"oVariantItem":"type: sap.ui.comp.variants.VariantItem, description: the variantItem to add; if empty, nothing is inserted"}},"!proto":"sap.ui.core.Control","clearVariantSelection":{"!description":"Removes the current variant selection and resets to default value.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","setDefaultVariantKey":{"!description":"Sets a new value for property <code>defaultVariantKey<\/code>.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultVariantKey: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sDefaultVariantKey":"type: string, description: New value for property <code>defaultVariantKey<\/code>"}},"getShowExecuteOnSelection":{"!description":"Gets current value of property <code>showExecuteOnSelection<\/code>.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfVariantItem":{"!description":"Checks for the provided <code>sap.ui.comp.variants.VariantItem<\/code> in the aggregation <code>variantItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oVariantItem: sap.ui.comp.variants.VariantItem) -> Number","parameters":{"oVariantItem":"type: sap.ui.comp.variants.VariantItem, description: The variantItem whose index is looked for"}},"addItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 Replaced by association <code>variantItems<\/code><br>Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.comp.variants.VariantManagement","parameters":{"oItem":"type: sap.ui.core.Item, description: the item to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new VariantManagement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInitialSelectionKey initialSelectionKey} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getDefaultVariantKey defaultVariantKey} : string<\/li>\n<li>{@link #getSelectionKey selectionKey} : string<\/li>\n<li>{@link #getShowCreateTile showCreateTile} : boolean (default: false)<\/li>\n<li>{@link #getShowExecuteOnSelection showExecuteOnSelection} : boolean (default: false)<\/li>\n<li>{@link #getShowShare showShare} : boolean (default: false)<\/li>\n<li>{@link #getLifecycleSupport lifecycleSupport} : boolean (default: false)<\/li>\n<li>{@link #getStandardItemText standardItemText} : string<\/li>\n<li>{@link #getIndustrySolutionMode industrySolutionMode} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<li>{@link #getVariantItems variantItems} : sap.ui.comp.variants.VariantItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:manage manage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowShare":{"!description":"Gets current value of property <code>showShare<\/code>.\n\nIndicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other\nusers.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireManage":{"!description":"Fires event <code>manage<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>renamed<\/code> of type <code>string[]<\/code>List of changed variant keys<\/li>\n<li><code>deleted<\/code> of type <code>string[]<\/code>List of deleted variant keys<\/li>\n<li><code>exe<\/code> of type <code>object[]<\/code>List of variant keys and the associated Execute on Selection indicator<\/li>\n<li><code>def<\/code> of type <code>boolean<\/code>The default variant key<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.variants.VariantManagement","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getInitialSelectionKey":{"!description":"Gets current value of property <code>initialSelectionKey<\/code>.\n\nEnables the setting of the initially selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllVariantItems":{"!description":"Removes all the controls from the aggregation <code>variantItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.variants.VariantItem]"},"getSelectionKey":{"!description":"Gets current value of property <code>selectionKey<\/code>.\n\nThe key of the currently selected item. Returns null if the default item list is selected.","!static":false,"!category":"function","!type":"fn() -> String"},"detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>save<\/code> event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getLifecycleSupport":{"!description":"Gets current value of property <code>lifecycleSupport<\/code>.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLifecycleSupport":{"!description":"Sets a new value for property <code>lifecycleSupport<\/code>.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLifecycleSupport: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bLifecycleSupport":"type: boolean, description: New value for property <code>lifecycleSupport<\/code>"}},"insertItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 Replaced by association <code>variantItems<\/code><br>Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.comp.variants.VariantManagement","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.core.Item, description: the item to insert; if empty, nothing is inserted"}}},"sap.ui.comp.filterbar":{"persistencyKey":{"!description":"Key used to access personalization data.","!category":"enum","!type":"String"},"showClearOnFB":{"!description":"Handles visibility of the Clear button on the filter bar.","!category":"enum","!type":"Boolean"},"groupTitle":{"!description":"Title of the group.","!category":"enum","!type":"String"},"!category":"namespace","partOfCurrentVariant":{"!description":"Determines if a filter is part of the currently selected variant. This property is ONLY used internally and must not be used by the\nfilter bar consumers.","!category":"enum","!type":"Boolean"},"mandatory":{"!description":"Mandatory flag.","!category":"enum","!type":"Boolean"},"visibleInAdvancedArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.1 Replaced by property <code>visibleInFilterBar<\/code><br>If set to true, this filter is visible on the filter bar by default.\nMapped against the <code>visibleInFilterBar<\/code> property.","!category":"enum","!type":"Boolean"},"FilterGroupItem":"sap.ui.comp.filterbar.FilterGroupItem_obj","showRestoreButton":{"!description":"Handles visibility of the Restore button on the Filters dialog.","!category":"enum","!type":"Boolean"},"defaultIndent":{"!description":"Optional. Defines default for the whole Grid numbers of empty columns before the current span begins. It can be defined for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 0 to 11 that the container has to take, for example: \"L2 M4 S6\", \"M11\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.","!category":"enum","!type":"sap.ui.layout.GridIndent"},"advancedMode":{"!description":"The advanced mode overwrites the standard behavior and is used in the value help scenario.","!category":"enum","!type":"Boolean"},"expandAdvancedArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30.0 Replaced by property <code>filterBarExpanded<\/code> This property is mapped to the\r            filterBarExpanded property.<br>Collapses/expands the advanced area.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"labelTooltip":{"!description":"Tooltip for the filter.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"showGoOnFB":{"!description":"Handles visibility of the Go button on the filter bar.","!category":"enum","!type":"Boolean"},"useToolbar":{"!description":"Determines what design should be used. Default is the design with the toolbar. In mobile scenarios this property is ignored - the\rdesign with the toolbar will be used.","!category":"enum","!type":"Boolean"},"defaultSpan":{"!description":"Optional. A string type that represents Grid's default span values for large, medium and small screens for the whole Grid. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.","!category":"enum","!type":"sap.ui.layout.GridSpan"},"showFilterConfiguration":{"!description":"Handles visibility of the Filters button on the filter bar.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Visibility state of the filter.","!category":"enum","!type":"Boolean"},"showClearButton":{"!description":"Handles visibility of the Clear button on the Filters dialog.","!category":"enum","!type":"Boolean"},"visibleInFilterBar":{"!description":"Controls the visibility of a filter item in the filter bar.","!category":"enum","!type":"Boolean"},"filterContainerWidth":{"!description":"Sets the width of the filters container.","!category":"enum","!type":"String"},"label":{"!description":"Label of the filter.","!category":"enum","!type":"String"},"showRestoreOnFB":{"!description":"Handles visibility of the Restore button on the filter bar.","!category":"enum","!type":"Boolean"},"FilterItem":"sap.ui.comp.filterbar.FilterItem_obj","deltaVariantMode":{"!description":"Stores the delta as compared to the standard variant.","!category":"enum","!type":"Boolean"},"FilterBar":"sap.ui.comp.filterbar.FilterBar_obj","groupName":{"!description":"Name of the group.","!category":"enum","!type":"String"},"considerGroupTitle":{"!description":"If this property is set, then the label for filters will be prefixed with the group title.","!category":"enum","!type":"Boolean"},"width":{"!description":"Optional. Width of the Grid. If not specified, then 100%.","!category":"enum","!type":"sap.ui.core.CSSSize"},"hSpacing":{"!description":"Optional. Horizontal spacing between the content in the Grid. In rem, allowed values are 0, 0.5 , 1 or 2.","!category":"enum","!type":"Number"},"name":{"!description":"Name of the filter. This is an identifier for the filter and has to be unique.","!category":"enum","!type":"String"},"vSpacing":{"!description":"Optional. Vertical spacing between the rows in the Grid. In rem, allowed values are 0, 0.5, 1 and 2.","!category":"enum","!type":"Number"},"header":{"!description":"Specifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code>\ris set to <code>false<\/code>.","!category":"enum","!type":"String"},"position":{"!description":"Optional. Position of the Grid in the window or surrounding container. Possible values are \"Center\", \"Left\" and \"Right\".","!category":"enum","!type":"sap.ui.layout.GridPosition"},"containerQuery":{"!description":"If true then not the media Query ( device screen size), but the size of the container surrounding the grid defines the current range (large, medium or small).","!category":"enum","!type":"Boolean"},"showGoButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>showGoOnFB<\/code><br>Handles visibility of the Go button on the filter bar.","!category":"enum","!type":"Boolean"},"filterBarExpanded":{"!description":"Shows/hides the filter row.","!category":"enum","!type":"Boolean"},"searchEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Enables/disables the Search button.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.navpopover.NavigationPopover":{"getExtraContent":{"!description":"ID of the element which is the current target of the association <code>extraContent<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getSemanticObjectName":{"!description":"Gets current value of property <code>semanticObjectName<\/code>.\n\nthe name of the semantic object","!static":false,"!category":"function","!type":"fn() -> String"},"removeAvailableAction":{"!description":"Removes a availableAction from the aggregation <code>availableActions<\/code>.","!static":false,"!category":"function","!type":"fn(vAvailableAction: Number | String | sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.LinkData","parameters":{"vAvailableAction":"type: int|string|sap.ui.comp.navpopover.LinkData, description: The availableActionto remove or its index or id"}},"setSource":{"!description":"Sets the associated <code>source<\/code>.","!static":false,"!category":"function","!type":"fn(oSource: sap.ui.core.Control) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oSource":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this source association; alternatively, an element instance may be given"}},"setExtraContent":{"!description":"Sets the associated <code>extraContent<\/code>.","!static":false,"!category":"function","!type":"fn(oExtraContent: sap.ui.core.Control) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oExtraContent":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this extraContent association; alternatively, an element instance may be given"}},"getAvailableActions":{"!description":"Gets content of aggregation <code>availableActions<\/code>.\n\nA list of available actions shown to the user.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.navpopover.LinkData]"},"getMainNavigation":{"!description":"Gets content of aggregation <code>mainNavigation<\/code>.\n\nThe main navigation displayed first on the popover.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.LinkData"},"addAvailableAction":{"!description":"Adds some availableAction to the aggregation <code>availableActions<\/code>.","!static":false,"!category":"function","!type":"fn(oAvailableAction: sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oAvailableAction":"type: sap.ui.comp.navpopover.LinkData, description: the availableAction to add; if empty, nothing is inserted"}},"!proto":"sap.m.Popover","show":{"!description":"displays the popover. This method should be called, once all navigation targets are adapted by the application","!static":false,"!category":"function","!type":"fn()"},"!category":"class","retrieveNavTargets":{"!description":"determines the potential navigation targets for the semantical object and visualize the popover","!static":false,"!category":"function","!type":"fn(sSemanticObject: String)","parameters":{"sSemanticObject":"type: string, description: name of the semantical object"}},"getMainNavigationId":{"!description":"Gets current value of property <code>mainNavigationId<\/code>.\n\nSets the visible text for the main navigation. If empty, the navigationPopover will try to get the Id from the given sourceObject.","!static":false,"!category":"function","!type":"fn() -> String"},"attachTargetsObtained":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>targetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself.\n\nThe navigation targets that are shown.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireTargetsObtained":{"!description":"Fires event <code>targetsObtained<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setOwnNavigation":{"!description":"Sets the aggregated <code>ownNavigation<\/code>.","!static":false,"!category":"function","!type":"fn(oOwnNavigation: sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oOwnNavigation":"type: sap.ui.comp.navpopover.LinkData, description: The ownNavigation to set"}},"getSemanticAttributes":{"!description":"Gets current value of property <code>semanticAttributes<\/code>.\n\ndescribes the semantic attributes. The attribute has to be a map","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"Constructor for a new navpopover/NavigationPopover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSemanticObjectName semanticObjectName} : string<\/li>\n<li>{@link #getSemanticAttributes semanticAttributes} : object<\/li>\n<li>{@link #getAppStateKey appStateKey} : string<\/li>\n<li>{@link #getMainNavigationId mainNavigationId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAvailableActions availableActions} : sap.ui.comp.navpopover.LinkData[]<\/li>\n<li>{@link #getMainNavigation mainNavigation} : sap.ui.comp.navpopover.LinkData<\/li>\n<li>{@link #getOwnNavigation ownNavigation} : sap.ui.comp.navpopover.LinkData<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:targetsObtained targetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Popover#constructor sap.m.Popover}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\npopover title","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfAvailableAction":{"!description":"Checks for the provided <code>sap.ui.comp.navpopover.LinkData<\/code> in the aggregation <code>availableActions<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAvailableAction: sap.ui.comp.navpopover.LinkData) -> Number","parameters":{"oAvailableAction":"type: sap.ui.comp.navpopover.LinkData, description: The availableAction whose index is looked for"}},"insertAvailableAction":{"!description":"Inserts a availableAction into the aggregation <code>availableActions<\/code>.","!static":false,"!category":"function","!type":"fn(oAvailableAction: sap.ui.comp.navpopover.LinkData, iIndex: Number) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oAvailableAction":"type: sap.ui.comp.navpopover.LinkData, description: the availableAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the availableAction should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the availableAction is inserted at position 0; for a value\n             greater than the current size of the aggregation, the availableAction is inserted at\n             the last position"}},"destroyOwnNavigation":{"!description":"Destroys the ownNavigation in the aggregation <code>ownNavigation<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.NavigationPopover"},"!description":"The NavigationPopover allows navigating to different destinations by providing links on a popover.<br>\n       The links are fetched using the {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} service of the unified\n       shell.<br>\n       This class gets instantiated by {@link sap.ui.comp.navpopover.SmartLink SmartLink}. It is recommended to use\n       {@link sap.ui.comp.navpopover.SmartLink SmartLink} instead of creating NavigationPopover manually.","setSemanticObjectName":{"!description":"Sets a new value for property <code>semanticObjectName<\/code>.\n\nthe name of the semantic object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObjectName: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sSemanticObjectName":"type: string, description: New value for property <code>semanticObjectName<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getOwnNavigation":{"!description":"Gets content of aggregation <code>ownNavigation<\/code>.\n\nThe navigation taking the user back to the source application.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.LinkData"},"getAppStateKey":{"!description":"Gets current value of property <code>appStateKey<\/code>.\n\nThe application state key passed to retrieve the navigation targets.","!static":false,"!category":"function","!type":"fn() -> String"},"setMainNavigationId":{"!description":"Sets a new value for property <code>mainNavigationId<\/code>.\n\nSets the visible text for the main navigation. If empty, the navigationPopover will try to get the Id from the given sourceObject.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMainNavigationId: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sMainNavigationId":"type: string, description: New value for property <code>mainNavigationId<\/code>"}},"detachTargetsObtained":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>targetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\npopover title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setComponent":{"!description":"Sets the associated <code>component<\/code>.","!static":false,"!category":"function","!type":"fn(oComponent: sap.ui.core.Element) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oComponent":"type: sap.ui.core.Element, description: Id of an element which becomes the new target of this component association; alternatively, an element instance may be given"}},"destroyMainNavigation":{"!description":"Destroys the mainNavigation in the aggregation <code>mainNavigation<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.NavigationPopover"},"setAppStateKey":{"!description":"Sets a new value for property <code>appStateKey<\/code>.\n\nThe application state key passed to retrieve the navigation targets.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAppStateKey: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sAppStateKey":"type: string, description: New value for property <code>appStateKey<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Popover.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event <code>navigate<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setMainNavigation":{"!description":"Sets the aggregated <code>mainNavigation<\/code>.","!static":false,"!category":"function","!type":"fn(oMainNavigation: sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oMainNavigation":"type: sap.ui.comp.navpopover.LinkData, description: The mainNavigation to set"}},"setSemanticAttributes":{"!description":"Sets a new value for property <code>semanticAttributes<\/code>.\n\ndescribes the semantic attributes. The attribute has to be a map\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticAttributes: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oSemanticAttributes":"type: object, description: New value for property <code>semanticAttributes<\/code>"}},"!module":"sap/ui/comp/navpopover/NavigationPopover","removeAllAvailableActions":{"!description":"Removes all the controls from the aggregation <code>availableActions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.navpopover.LinkData]"},"!helpDescription":"The NavigationPopover allows navigating to different destinations by providing links on a popover.<br>\n       The links are fetched using the {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} service of the unified\n       shell.<br>\n       This class gets instantiated by {@link sap.ui.comp.navpopover.SmartLink SmartLink}. It is recommended to use\n       {@link sap.ui.comp.navpopover.SmartLink SmartLink} instead of creating NavigationPopover manually.","getSource":{"!description":"ID of the element which is the current target of the association <code>source<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigate<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself.\n\nEvent is triggered when a link is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getComponent":{"!description":"ID of the element which is the current target of the association <code>component<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Element"},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigate<\/code> event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyAvailableActions":{"!description":"Destroys all the availableActions in the aggregation <code>availableActions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.NavigationPopover"}},"sap.ui.comp.navpopover.SmartLink_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SmartLink with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Link.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.SmartLink"},"sap.ui.comp.smartmicrochart.SmartAreaMicroChart":{"getChartTitle":{"!description":"ID of the element which is the current target of the association <code>chartTitle<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getEntitySet":{"!description":"Gets current value of property <code>entitySet<\/code>.\n\nThe entity set name from where the data is fetched and the internal AreaMicroChart representation is created. Note that this is not a dynamic UI5\nproperty","!static":false,"!category":"function","!type":"fn() -> String"},"getEnableAutoBinding":{"!description":"Gets current value of property <code>enableAutoBinding<\/code>.\n\nOnly <code>true<\/code> value is supported: the chart will be bound to the chartBindingPath or to the entitySet\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","fireInitialize":{"!description":"Fires event <code>initialize<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!category":"class","detachInitialize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialize<\/code> event of this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getUnitOfMeasure":{"!description":"ID of the element which is the current target of the association <code>unitOfMeasure<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width.\n\nDefault value is <code>164px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowLabel":{"!description":"Sets a new value for property <code>showLabel<\/code>.\n\nDetermines if the target value and actual value\nare displayed or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel: Boolean) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"getChartDescription":{"!description":"ID of the element which is the current target of the association <code>chartDescription<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the height.\n\nDefault value is <code>74px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart/SmartAreaMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getChartType chartType} : string<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: true)<\/li>\n<li>{@link #getChartBindingPath chartBindingPath} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 164px)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 74px)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialize initialize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getIsResponsive":{"!description":"Gets current value of property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialize<\/code> event of this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart<\/code> itself.\n\nEvent fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartAreaMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUnitOfMeasure":{"!description":"Sets the associated <code>unitOfMeasure<\/code>.","!static":false,"!category":"function","!type":"fn(oUnitOfMeasure: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"oUnitOfMeasure":"type: sap.m.Label, description: Id of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"}},"!description":"The SmartAreaMicroChart control creates a AreaMicroChart based on OData metadata and the configuration\n       specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch\n       fields from OData metadata, from which Micro Area Chart UI will be generated; it can also be used to fetch\n       the actual chart data.<br>\n       <b><i>Note:<\/i><\/b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been\n       initialised.","setChartDescription":{"!description":"Sets the associated <code>chartDescription<\/code>.","!static":false,"!category":"function","!type":"fn(oChartDescription: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"oChartDescription":"type: sap.m.Label, description: Id of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"}},"setEntitySet":{"!description":"Sets a new value for property <code>entitySet<\/code>.\n\nThe entity set name from where the data is fetched and the internal AreaMicroChart representation is created. Note that this is not a dynamic UI5\nproperty\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet: String) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartAreaMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowLabel":{"!description":"Gets current value of property <code>showLabel<\/code>.\n\nDetermines if the target value and actual value\nare displayed or not\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChartBindingPath":{"!description":"Sets a new value for property <code>chartBindingPath<\/code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entitySet ( not a single entity)\nthat is used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path.\nIf not specified, the entitySet attribute is used instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartBindingPath: String) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"sChartBindingPath":"type: string, description: New value for property <code>chartBindingPath<\/code>"}},"setChartTitle":{"!description":"Sets the associated <code>chartTitle<\/code>.","!static":false,"!category":"function","!type":"fn(oChartTitle: sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"oChartTitle":"type: sap.m.Label, description: Id of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"}},"setIsResponsive":{"!description":"Sets a new value for property <code>isResponsive<\/code>.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getChartType":{"!description":"Gets current value of property <code>chartType<\/code>.\n\nSpecifies the type of Chart.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the height.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>74px<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>164px<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartAreaMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getChartBindingPath":{"!description":"Gets current value of property <code>chartBindingPath<\/code>.\n\nThis attribute can be used to specify the relative path ( without '/') to an entitySet ( not a single entity)\nthat is used during the binding of the chart. It can be e.g. a navigation property which will be added to the context path.\nIf not specified, the entitySet attribute is used instead.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartAreaMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/smartmicrochart/SmartAreaMicroChart","!helpDescription":"The SmartAreaMicroChart control creates a AreaMicroChart based on OData metadata and the configuration\n       specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch\n       fields from OData metadata, from which Micro Area Chart UI will be generated; it can also be used to fetch\n       the actual chart data.<br>\n       <b><i>Note:<\/i><\/b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been\n       initialised."},"sap.ui.comp.smartfilterbar":{"persistencyKey":{"!description":"Key used to access personalization data.","!category":"enum","!type":"String"},"preventInitialDataFetchInValueHelpDialog":{"!description":"In case there are value help annotations for this filter field, it is possible to specify whether the table in the value help\ndialog for this field will be filled initially. The default value is flase, which menas the table will be filled as the data fetch\nis not being prevented.","!category":"enum","!type":"Boolean"},"groupId":{"!description":"The groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData\nmetadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.","!category":"enum","!type":"String"},"sign":{"!description":"The sign for a Select Option. Possible values are I for include or E for exclude. Constants can be found here: sap.ui.comp.smartfilterbar.SelectOption.SIGN","!category":"enum","!type":"String"},"operator":{"!description":"The operator for a select option. The default value is EQ \"for equals\". Possible values can be found here: sap.ui.comp.smartfilterbar.SelectOption.OPERATOR.","!category":"enum","!type":"String"},"showRestoreButton":{"!description":"Handles visibility of the Restore button on the Filters dialog.","!category":"enum","!type":"Boolean"},"high":{"!description":"The high value for a select option. The high value is only required for a few operators, e.g. BT (between).","!category":"enum","!type":"String"},"expandAdvancedArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30.0 Replaced by property <code>filterBarExpanded<\/code> This property is mapped to the\r            filterBarExpanded property.<br>Collapses/expands the advanced area.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"enableBasicSearch":{"!description":"Enables basic search field in the SmartFilterBar control. This must only be enabled for entities that support such search behavior.","!category":"enum","!type":"Boolean"},"showGoOnFB":{"!description":"Handles visibility of the Go button on the filter bar.","!category":"enum","!type":"Boolean"},"useToolbar":{"!description":"Determines what design should be used. Default is the design with the toolbar. In mobile scenarios this property is ignored - the\rdesign with the toolbar will be used.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"hasTypeAhead":{"!description":"Property can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for\nDrodDownListbox","!category":"enum","!type":"Boolean"},"showClearButton":{"!description":"Handles visibility of the Clear button on the Filters dialog.","!category":"enum","!type":"Boolean"},"entityType":{"!description":"The OData entity type whose metadata is used to create the SmartFilterBar. Note: Changing this value after the SmartFilterBar is\ninitialized (initialise event was fired) has no effect.","!category":"enum","!type":"String"},"index":{"!description":"Zero based integer index.\rThe index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.","!category":"enum","!type":"Object"},"filterContainerWidth":{"!description":"Sets the width of the filters container.","!category":"enum","!type":"String"},"GroupConfiguration":"sap.ui.comp.smartfilterbar.GroupConfiguration_obj","deltaVariantMode":{"!description":"Stores the delta as compared to the standard variant.","!category":"enum","!type":"Boolean"},"considerGroupTitle":{"!description":"If this property is set, then the label for filters will be prefixed with the group title.","!category":"enum","!type":"Boolean"},"hasValueHelpDialog":{"!description":"Specifies whether a value help dialog is available or not.","!category":"enum","!type":"Boolean"},"header":{"!description":"Specifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code>\ris set to <code>false<\/code>.","!category":"enum","!type":"String"},"conditionType":{"!description":"The condition Type class name to use for this filter item\nImplemantation should derive from sap.ui.comp.config.condition.Type","!category":"enum","!type":"Object"},"position":{"!description":"Optional. Position of the Grid in the window or surrounding container. Possible values are \"Center\", \"Left\" and \"Right\".","!category":"enum","!type":"sap.ui.layout.GridPosition"},"filterType":{"!description":"The filter type specifies whether the filter fields is e.g. type single value, multi-value,or interval. The filter type is being\ncalculated by the martFilterBar based on the OData metadata. Using this property the filter type can be configured manually.\nPossible value scan be found here: sap.ui.comp.smartfilterbar.ControlConfiguration.FILTERTYPE","!category":"enum","!type":"String"},"showGoButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>showGoOnFB<\/code><br>Handles visibility of the Go button on the filter bar.","!category":"enum","!type":"Boolean"},"filterBarExpanded":{"!description":"Shows/hides the filter row.","!category":"enum","!type":"Boolean"},"showClearOnFB":{"!description":"Handles visibility of the Clear button on the filter bar.","!category":"enum","!type":"Boolean"},"!category":"namespace","mandatory":{"!description":"Property can be used to overwrite the mandatory state of a filter field. Possible values:\nsap.ui.comp.smartfilterbar.ControlConfiguration.MANDATORY Property can only be set during initialisation. Changes at runtime will\nbe ignored.","!category":"enum","!type":"String"},"visibleInAdvancedArea":{"!description":"If set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.","!category":"enum","!type":"Boolean"},"defaultIndent":{"!description":"Optional. Defines default for the whole Grid numbers of empty columns before the current span begins. It can be defined for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 0 to 11 that the container has to take, for example: \"L2 M4 S6\", \"M11\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.","!category":"enum","!type":"sap.ui.layout.GridIndent"},"advancedMode":{"!description":"The advanced mode overwrites the standard behavior and is used in the value help scenario.","!category":"enum","!type":"Boolean"},"SelectOption":"sap.ui.comp.smartfilterbar.SelectOption_obj","low":{"!description":"The low value for a select option.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"SmartFilterBar":"sap.ui.comp.smartfilterbar.SmartFilterBar_obj","key":{"!description":"The key property shall correspond to the name EntityTypeName from the OData service $metadata document.","!category":"enum","!type":"String"},"defaultSpan":{"!description":"Optional. A string type that represents Grid's default span values for large, medium and small screens for the whole Grid. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.","!category":"enum","!type":"sap.ui.layout.GridSpan"},"showFilterConfiguration":{"!description":"Handles visibility of the Filters button on the filter bar.","!category":"enum","!type":"Boolean"},"ControlConfiguration":"sap.ui.comp.smartfilterbar.ControlConfiguration_obj","basicSearchFieldName":{"!description":"Name of the field that has to be the focus of basic search. This is only relevant for SmartFilterBar in combination with\nValueHelpDialog.","!category":"enum","!type":"String"},"label":{"!description":"Using this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.","!category":"enum","!type":"Object"},"resourceUri":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 Set an ODataModel as the main model on your control/view instead<br>Optional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. Note:\nChanging this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.","!category":"enum","!type":"String"},"displayBehaviour":{"!description":"The displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown\ntext) , Description and ID for MultiInput (token text) Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR","!category":"enum","!type":"String"},"showRestoreOnFB":{"!description":"Handles visibility of the Restore button on the filter bar.","!category":"enum","!type":"Boolean"},"controlType":{"!description":"The SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and\nannotations. Using this property it is possible to overwrite the OData metadata. Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.CONTROLTYPE","!category":"enum","!type":"String"},"width":{"!description":"Optional. Width of the Grid. If not specified, then 100%.","!category":"enum","!type":"sap.ui.core.CSSSize"},"hSpacing":{"!description":"Optional. Horizontal spacing between the content in the Grid. In rem, allowed values are 0, 0.5 , 1 or 2.","!category":"enum","!type":"Number"},"vSpacing":{"!description":"Optional. Vertical spacing between the rows in the Grid. In rem, allowed values are 0, 0.5, 1 and 2.","!category":"enum","!type":"Number"},"containerQuery":{"!description":"If true then not the media Query ( device screen size), but the size of the container surrounding the grid defines the current range (large, medium or small).","!category":"enum","!type":"Boolean"},"searchEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Enables/disables the Search button.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartfilterbar.ControlConfiguration":{"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar.","!static":false,"!category":"function","!type":"fn() -> String"},"setGroupId":{"!description":"Sets a new value for property <code>groupId<\/code>.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData\nmetadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupId: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sGroupId":"type: string, description: New value for property <code>groupId<\/code>"}},"getIndex":{"!description":"Gets current value of property <code>index<\/code>.\n\nThe zero based index can be used to specify the initial order of fields (without any variants).\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setFilterType":{"!description":"Sets a new value for property <code>filterType<\/code>.\n\nThe filter type specifies whether the filter fields is e.g. type single value, multi-value,or interval. The filter type is being\ncalculated by the martFilterBar based on the OData metadata. Using this property the filter type can be configured manually.\nPossible value scan be found here: sap.ui.comp.smartfilterbar.ControlConfiguration.FILTERTYPE\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterType: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sFilterType":"type: string, description: New value for property <code>filterType<\/code>"}},"destroyCustomControl":{"!description":"Destroys the customControl in the aggregation <code>customControl<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.ControlConfiguration"},"setControlType":{"!description":"Sets a new value for property <code>controlType<\/code>.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and\nannotations. Using this property it is possible to overwrite the OData metadata. Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.CONTROLTYPE\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sControlType: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sControlType":"type: string, description: New value for property <code>controlType<\/code>"}},"getGroupId":{"!description":"Gets current value of property <code>groupId<\/code>.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData\nmetadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.","!static":false,"!category":"function","!type":"fn() -> String"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getConditionType":{"!description":"Gets current value of property <code>conditionType<\/code>.\n\nThe condition Type class name to use for this filter item\nImplemantation should derive from sap.ui.comp.config.condition.Type","!static":false,"!category":"function","!type":"fn() -> Object"},"getControlType":{"!description":"Gets current value of property <code>controlType<\/code>.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and\nannotations. Using this property it is possible to overwrite the OData metadata. Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.CONTROLTYPE\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getDefaultFilterValues":{"!description":"Gets content of aggregation <code>defaultFilterValues<\/code>.\n\nDefault value for a filter field.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.SelectOption]"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nThe key property corresponds to the field name from the OData service $metadata document.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"ControlConfiguration can be used to add additional configuration for filter fields in the SmartFilterBar control, in order to overwrite\n       the default settings from the OData metadata. For instance, it is possible to change the label, index or control type of a filter field.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nThe key property corresponds to the field name from the OData service $metadata document.","!static":false,"!category":"function","!type":"fn() -> String"},"getMandatory":{"!description":"Gets current value of property <code>mandatory<\/code>.\n\nProperty can be used to overwrite the mandatory state of a filter field. Possible values:\nsap.ui.comp.smartfilterbar.ControlConfiguration.MANDATORY Property can only be set during initialisation. Changes at runtime will\nbe ignored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.ControlConfiguration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfDefaultFilterValue":{"!description":"Checks for the provided <code>sap.ui.comp.smartfilterbar.SelectOption<\/code> in the aggregation <code>defaultFilterValues<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDefaultFilterValue: sap.ui.comp.smartfilterbar.SelectOption) -> Number","parameters":{"oDefaultFilterValue":"type: sap.ui.comp.smartfilterbar.SelectOption, description: The defaultFilterValue whose index is looked for"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code> itself.\n\nFired when the value of a property, for example isVisible, has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeDefaultFilterValue":{"!description":"Removes a defaultFilterValue from the aggregation <code>defaultFilterValues<\/code>.","!static":false,"!category":"function","!type":"fn(vDefaultFilterValue: Number | String | sap.ui.comp.smartfilterbar.SelectOption) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"vDefaultFilterValue":"type: int|string|sap.ui.comp.smartfilterbar.SelectOption, description: The defaultFilterValueto remove or its index or id"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>propertyName<\/code> of type <code>string<\/code>Name of the changed property<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.ControlConfiguration with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/smartfilterbar/ControlConfiguration","!helpDescription":"ControlConfiguration can be used to add additional configuration for filter fields in the SmartFilterBar control, in order to overwrite\n       the default settings from the OData metadata. For instance, it is possible to change the label, index or control type of a filter field.","setConditionType":{"!description":"Sets a new value for property <code>conditionType<\/code>.\n\nThe condition Type class name to use for this filter item\nImplemantation should derive from sap.ui.comp.config.condition.Type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oConditionType: Object) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oConditionType":"type: any, description: New value for property <code>conditionType<\/code>"}},"setIndex":{"!description":"Sets a new value for property <code>index<\/code>.\n\nThe zero based index can be used to specify the initial order of fields (without any variants).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"iIndex":"type: int, description: New value for property <code>index<\/code>"}},"setHasValueHelpDialog":{"!description":"Sets a new value for property <code>hasValueHelpDialog<\/code>.\n\nSpecifies whether a value help dialog is available or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHasValueHelpDialog: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bHasValueHelpDialog":"type: boolean, description: New value for property <code>hasValueHelpDialog<\/code>"}},"destroyDefaultFilterValues":{"!description":"Destroys all the defaultFilterValues in the aggregation <code>defaultFilterValues<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.ControlConfiguration"},"setMandatory":{"!description":"Sets a new value for property <code>mandatory<\/code>.\n\nProperty can be used to overwrite the mandatory state of a filter field. Possible values:\nsap.ui.comp.smartfilterbar.ControlConfiguration.MANDATORY Property can only be set during initialisation. Changes at runtime will\nbe ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sMandatory: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sMandatory":"type: string, description: New value for property <code>mandatory<\/code>"}},"!proto":"sap.ui.core.Element","removeAllDefaultFilterValues":{"!description":"Removes all the controls from the aggregation <code>defaultFilterValues<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.SelectOption]"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialisation. Changes at runtime\nwill not be reflected. The width will not be applied to custom controls.","!static":false,"!category":"function","!type":"fn() -> String"},"getCustomControl":{"!description":"Gets content of aggregation <code>customControl<\/code>.\n\nIf a custom control is specified, the Smart Filter Bar will not create a control but use the custom control. Additional services\nlike TypeAhead have to implemented manually.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setVisibleInAdvancedArea":{"!description":"Sets a new value for property <code>visibleInAdvancedArea<\/code>.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleInAdvancedArea: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bVisibleInAdvancedArea":"type: boolean, description: New value for property <code>visibleInAdvancedArea<\/code>"}},"setDisplayBehaviour":{"!description":"Sets a new value for property <code>displayBehaviour<\/code>.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown\ntext) , Description and ID for MultiInput (token text) Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayBehaviour: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sDisplayBehaviour":"type: string, description: New value for property <code>displayBehaviour<\/code>"}},"!constructorDescription":"Constructor for a new smartfilterbar/ControlConfiguration.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getGroupId groupId} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getHasValueHelpDialog hasValueHelpDialog} : boolean (default: true)<\/li>\n<li>{@link #getControlType controlType} : string (default: auto)<\/li>\n<li>{@link #getFilterType filterType} : string (default: auto)<\/li>\n<li>{@link #getIndex index} : int (default: -1)<\/li>\n<li>{@link #getHasTypeAhead hasTypeAhead} : boolean (default: true)<\/li>\n<li>{@link #getMandatory mandatory} : string (default: auto)<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getVisibleInAdvancedArea visibleInAdvancedArea} : boolean (default: false)<\/li>\n<li>{@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog} : boolean (default: true)<\/li>\n<li>{@link #getDisplayBehaviour displayBehaviour} : string (default: auto)<\/li>\n<li>{@link #getConditionType conditionType} : any<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDefaultFilterValues defaultFilterValues} : sap.ui.comp.smartfilterbar.SelectOption[]<\/li>\n<li>{@link #getCustomControl customControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","insertDefaultFilterValue":{"!description":"Inserts a defaultFilterValue into the aggregation <code>defaultFilterValues<\/code>.","!static":false,"!category":"function","!type":"fn(oDefaultFilterValue: sap.ui.comp.smartfilterbar.SelectOption, iIndex: Number) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oDefaultFilterValue":"type: sap.ui.comp.smartfilterbar.SelectOption, description: the defaultFilterValue to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the defaultFilterValue should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the defaultFilterValue is inserted at position 0; for a value\n             greater than the current size of the aggregation, the defaultFilterValue is inserted at\n             the last position"}},"getHasTypeAhead":{"!description":"Gets current value of property <code>hasTypeAhead<\/code>.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for\nDrodDownListbox\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDisplayBehaviour":{"!description":"Gets current value of property <code>displayBehaviour<\/code>.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown\ntext) , Description and ID for MultiInput (token text) Possible values can be found here:\nsap.ui.comp.smartfilterbar.ControlConfiguration.DISPLAYBEHAVIOUR\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getHasValueHelpDialog":{"!description":"Gets current value of property <code>hasValueHelpDialog<\/code>.\n\nSpecifies whether a value help dialog is available or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addDefaultFilterValue":{"!description":"Adds some defaultFilterValue to the aggregation <code>defaultFilterValues<\/code>.","!static":false,"!category":"function","!type":"fn(oDefaultFilterValue: sap.ui.comp.smartfilterbar.SelectOption) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oDefaultFilterValue":"type: sap.ui.comp.smartfilterbar.SelectOption, description: the defaultFilterValue to add; if empty, nothing is inserted"}},"getFilterType":{"!description":"Gets current value of property <code>filterType<\/code>.\n\nThe filter type specifies whether the filter fields is e.g. type single value, multi-value,or interval. The filter type is being\ncalculated by the martFilterBar based on the OData metadata. Using this property the filter type can be configured manually.\nPossible value scan be found here: sap.ui.comp.smartfilterbar.ControlConfiguration.FILTERTYPE\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getVisibleInAdvancedArea":{"!description":"Gets current value of property <code>visibleInAdvancedArea<\/code>.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHasTypeAhead":{"!description":"Sets a new value for property <code>hasTypeAhead<\/code>.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for\nDrodDownListbox\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHasTypeAhead: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bHasTypeAhead":"type: boolean, description: New value for property <code>hasTypeAhead<\/code>"}},"setPreventInitialDataFetchInValueHelpDialog":{"!description":"Sets a new value for property <code>preventInitialDataFetchInValueHelpDialog<\/code>.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help\ndialog for this field will be filled initially. The default value is flase, which menas the table will be filled as the data fetch\nis not being prevented.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bPreventInitialDataFetchInValueHelpDialog: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bPreventInitialDataFetchInValueHelpDialog":"type: boolean, description: New value for property <code>preventInitialDataFetchInValueHelpDialog<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialisation. Changes at runtime\nwill not be reflected. The width will not be applied to custom controls.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sWidth":"type: string, description: New value for property <code>width<\/code>"}},"getPreventInitialDataFetchInValueHelpDialog":{"!description":"Gets current value of property <code>preventInitialDataFetchInValueHelpDialog<\/code>.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help\ndialog for this field will be filled initially. The default value is flase, which menas the table will be filled as the data fetch\nis not being prevented.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCustomControl":{"!description":"Sets the aggregated <code>customControl<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomControl: sap.ui.core.Control) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oCustomControl":"type: sap.ui.core.Control, description: The customControl to set"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.ui.comp.smartvariants.SmartVariantManagementUi2_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementUi2 with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.SmartVariantManagementUi2"},"sap.ui.comp.smartfield.Configuration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.Configuration with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.Configuration"},"sap.ui.comp.filterbar.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.Grid.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.filterbar.FilterBar"},"sap.ui.comp.navpopover.SmartLink":{"getCreateControlCallback":{"!description":"Gets current value of property <code>createControlCallback<\/code>.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are\navailable. The function has no parameters and has to return an instance of sap.ui.core.Control.","!static":false,"!category":"function","!type":"fn() -> Object"},"fireNavigationTargetsObtained":{"!description":"Fires event <code>navigationTargetsObtained<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>mainNavigation<\/code> of type <code>sap.ui.comp.navpopover.LinkData<\/code>The main navigation object.<\/li>\n<li><code>actions<\/code> of type <code>sap.ui.comp.navpopover.LinkData[]<\/code>Array of available navigation target objects.<\/li>\n<li><code>ownNavigation<\/code> of type <code>sap.ui.comp.navpopover.LinkData<\/code>The navigation object for the own application. This navigation option is by default not visible on the popover.<\/li>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object for which the navigation targets have been retrieved.<\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the SmartLink.<\/li>\n<li><code>show<\/code> of type <code>function<\/code>This callback function shows the actual navigation popover. If the <code>navigationTargetsObtained<\/code> has been\nregistered, the <code>show<\/code> function has to be called manually in order to open the navigation popover. Signatures:\n<code>show()<\/code>\n <code>show(oMainNavigation, aAvailableActions, oExtraContent)<\/code>\n <code>show(sMainNavigationId, oMainNavigation, aAvailableActions, oExtraContent)<\/code>\nParameters:\n<ul>\n<li>{string} sMainNavigationId The visible text for the main navigation section. If empty, the main navigation ID is\ncalculated using binding context of given source object (for example SmartLink).<\/li>\n<li>{sap.ui.comp.navpopover.LinkData} oMainNavigation The main navigation object. If empty, property\n<code>mainNavigation<\/code> will be used.<\/li>\n<li>{sap.ui.comp.navpopover.LinkData[]} aAvailableActions Array containing the cross application navigation links. If\nempty, property <code>actions<\/code> will be used.<\/li>\n<li>{sap.ui.core.Control} oExtraContent Control that will be displayed in extra content section on the popover.<\/li>\n<\/ul><\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.SmartLink","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMapFieldToSemanticObject":{"!description":"Gets current value of property <code>mapFieldToSemanticObject<\/code>.\n\nIf set to <code>false<\/code>, the SmartLink control will not replace its field name with the according\n<code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several\nSmartLinks on the same semantic object.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMapFieldToSemanticObject":{"!description":"Sets a new value for property <code>mapFieldToSemanticObject<\/code>.\n\nIf set to <code>false<\/code>, the SmartLink control will not replace its field name with the according\n<code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several\nSmartLinks on the same semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bMapFieldToSemanticObject: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bMapFieldToSemanticObject":"type: boolean, description: New value for property <code>mapFieldToSemanticObject<\/code>"}},"destroyInnerControl":{"!description":"Destroys the innerControl in the aggregation <code>innerControl<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SmartLink"},"getIgnoreLinkRendering":{"!description":"Gets current value of property <code>ignoreLinkRendering<\/code>.\n\nIf set to <code>true<\/code>, the SmartLink control will render the <code>innerControl<\/code> or the control provided by\n<code>createControlCallback<\/code> instead of the actual link. This is used for example by the SemanticObjectController if this\nSmartLink is listed in its <code>ignoredFields<\/code> or no navigation targets were found during prefetch. <b>Note<\/b>: Setting\na value triggers an asynchronous determination, so the effect can be delayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFieldName":{"!description":"Sets a new value for property <code>fieldName<\/code>.\n\nThe metadata field name for this SmartLink control. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so the\neffect can be delayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFieldName: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sFieldName":"type: string, description: New value for property <code>fieldName<\/code>"}},"getInnerControl":{"!description":"Gets content of aggregation <code>innerControl<\/code>.\n\nControl that is displayed instead of SmartLink, if the SmartLink is disabled (for example, if no navigation targets are available).\nIf <code>innerControl<\/code> is not provided, the SmartLink control tries to create one with property\n<code>createControlCallback<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachBeforePopoverOpens":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforePopoverOpens<\/code> event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.m.Link","setInnerControl":{"!description":"Sets the aggregated <code>innerControl<\/code>.","!static":false,"!category":"function","!type":"fn(oInnerControl: sap.ui.core.Control) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oInnerControl":"type: sap.ui.core.Control, description: The innerControl to set"}},"!category":"class","getSemanticObject":{"!description":"Gets current value of property <code>semanticObject<\/code>.\n\nName of semantic object which is used to fill the navigation popover. <b>Note<\/b>: Setting a value triggers an asynchronous\ndetermination, so the effect can be delayed.","!static":false,"!category":"function","!type":"fn() -> String"},"getSemanticObjectValue":{"!description":"Gets the current value assigned to the field with the SmartLink's semantic object name.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachInnerNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>innerNavigate<\/code> event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user\nleft-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachNavigationTargetsObtained":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigationTargetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSemanticAttributes":{"!description":"Gets the semantic object calculated at the last Link press event","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"Constructor for a new navpopover/SmartLink.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSemanticObject semanticObject} : string<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : any<\/li>\n<li>{@link #getFieldName fieldName} : string<\/li>\n<li>{@link #getSemanticObjectLabel semanticObjectLabel} : string<\/li>\n<li>{@link #getCreateControlCallback createControlCallback} : object<\/li>\n<li>{@link #getMapFieldToSemanticObject mapFieldToSemanticObject} : boolean (default: true)<\/li>\n<li>{@link #getIgnoreLinkRendering ignoreLinkRendering} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getInnerControl innerControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforePopoverOpens beforePopoverOpens} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigationTargetsObtained navigationTargetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerNavigate innerNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Link#constructor sap.m.Link}\ncan be used as well.","getSemanticObjectLabel":{"!description":"Gets current value of property <code>semanticObjectLabel<\/code>.\n\nShown label of semantic object.","!static":false,"!category":"function","!type":"fn() -> String"},"setSemanticObjectController":{"!description":"Sets a new value for property <code>semanticObjectController<\/code>.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to\nfind a SemanticObjectController in its parent hierarchy. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so\nthe effect can be delayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oSemanticObjectController":"type: any, description: New value for property <code>semanticObjectController<\/code>"}},"setSemanticObjectLabel":{"!description":"Sets a new value for property <code>semanticObjectLabel<\/code>.\n\nShown label of semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObjectLabel: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sSemanticObjectLabel":"type: string, description: New value for property <code>semanticObjectLabel<\/code>"}},"attachNavigationTargetsObtained":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigationTargetsObtained<\/code> event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained<\/code> is fired and provides the possibility to\nchange the targets.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireInnerNavigate":{"!description":"Fires event <code>innerNavigate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>text<\/code> of type <code>string<\/code>The UI text shown in the clicked link.<\/li>\n<li><code>href<\/code> of type <code>string<\/code>The navigation target of the clicked link.<\/li>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object used to retrieve this target.<\/li>\n<li><code>semanticAttributes<\/code> of type <code>object<\/code>Map containing the semantic attributes used to retrieve this target.<\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the SmartLink.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.SmartLink","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The SmartLink control uses a semantic object to display {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further\n       navigation steps.","setSemanticObject":{"!description":"Sets a new value for property <code>semanticObject<\/code>.\n\nName of semantic object which is used to fill the navigation popover. <b>Note<\/b>: Setting a value triggers an asynchronous\ndetermination, so the effect can be delayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sSemanticObject":"type: string, description: New value for property <code>semanticObject<\/code>"}},"getInnerControlValue":{"!description":"Gets the inner control's value, if no inner control is available, the SmartLink's text will be returned","!static":false,"!category":"function","!type":"fn() -> Object"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.SmartLink.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setCreateControlCallback":{"!description":"Sets a new value for property <code>createControlCallback<\/code>.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are\navailable. The function has no parameters and has to return an instance of sap.ui.core.Control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oCreateControlCallback: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oCreateControlCallback":"type: object, description: New value for property <code>createControlCallback<\/code>"}},"fireBeforePopoverOpens":{"!description":"Fires event <code>beforePopoverOpens<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>semanticObject<\/code> of type <code>string<\/code>The semantic object for which the navigation targets will be retrieved.<\/li>\n<li><code>semanticAttributes<\/code> of type <code>object<\/code>Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.\ntargets.<\/li>\n<li><code>setSemanticAttributes<\/code> of type <code>function<\/code>This callback function enables you to define a changed semantic attributes map. Signatures:\n<code>setSemanticAttributes(oSemanticAttributesMap)<\/code> Parameter:\n<ul>\n<li>{object} oSemanticAttributesMap New map containing the semantic attributes to be used.<\/li>\n<\/ul><\/li>\n<li><code>setAppStateKey<\/code> of type <code>function<\/code>This callback function sets an application state key that is used over the cross-application navigation. Signatures:\n<code>setAppStateKey(sAppStateKey)<\/code> Parameter:\n<ul>\n<li>{string} sAppStateKey<\/li>\n<\/ul><\/li>\n<li><code>originalId<\/code> of type <code>string<\/code>The ID of the SmartLink.<\/li>\n<li><code>open<\/code> of type <code>function<\/code>This callback function triggers the retrieval of navigation targets and leads to the opening of the navigation popover.\nSignatures: <code>open()<\/code> If the <code>beforePopoverOpens<\/code> has been registered, the <code>open<\/code>\nfunction has to be called manually in order to open the navigation popover.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.navpopover.SmartLink","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SmartLink with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Link.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIgnoreLinkRendering":{"!description":"Sets a new value for property <code>ignoreLinkRendering<\/code>.\n\nIf set to <code>true<\/code>, the SmartLink control will render the <code>innerControl<\/code> or the control provided by\n<code>createControlCallback<\/code> instead of the actual link. This is used for example by the SemanticObjectController if this\nSmartLink is listed in its <code>ignoredFields<\/code> or no navigation targets were found during prefetch. <b>Note<\/b>: Setting\na value triggers an asynchronous determination, so the effect can be delayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIgnoreLinkRendering: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bIgnoreLinkRendering":"type: boolean, description: New value for property <code>ignoreLinkRendering<\/code>"}},"!module":"sap/ui/comp/navpopover/SmartLink","!helpDescription":"The SmartLink control uses a semantic object to display {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further\n       navigation steps.","detachInnerNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>innerNavigate<\/code> event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachBeforePopoverOpens":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforePopoverOpens<\/code> event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to\nchange the parameters used to retrieve the navigation targets. In case of SmartLink, the <code>beforePopoverOpens<\/code> is fired\nafter the link has been clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFieldName":{"!description":"Gets current value of property <code>fieldName<\/code>.\n\nThe metadata field name for this SmartLink control. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so the\neffect can be delayed.","!static":false,"!category":"function","!type":"fn() -> String"},"getSemanticObjectController":{"!description":"Gets current value of property <code>semanticObjectController<\/code>.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to\nfind a SemanticObjectController in its parent hierarchy. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so\nthe effect can be delayed.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.comp.smartform.flexibility.FieldListNode":{"indexOfNode":{"!description":"Checks for the provided <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> in the aggregation <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.comp.smartform.flexibility.FieldListNode) -> Number","parameters":{"oNode":"type: sap.ui.comp.smartform.flexibility.FieldListNode, description: The node whose index is looked for"}},"removeAllNodes":{"!description":"Removes all the controls from the aggregation <code>nodes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.flexibility.FieldListNode]"},"detachSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selected<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getIsVisible":{"!description":"Gets current value of property <code>isVisible<\/code>.\n\nis visible flag","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nThe label","!static":false,"!category":"function","!type":"fn() -> String"},"addNode":{"!description":"Adds some node to the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.comp.smartform.flexibility.FieldListNode) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oNode":"type: sap.ui.comp.smartform.flexibility.FieldListNode, description: the node to add; if empty, nothing is inserted"}},"setIsSelected":{"!description":"Overwritten - Sets the isSelected property","!static":false,"!category":"function","!type":"fn(bIsSelected: Boolean)","parameters":{"bIsSelected":"type: boolean, description: field list node selected"}},"!proto":"sap.ui.core.Control","detachNodeHidden":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>nodeHidden<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertNode":{"!description":"Inserts a node into the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(oNode: sap.ui.comp.smartform.flexibility.FieldListNode, iIndex: Number) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oNode":"type: sap.ui.comp.smartform.flexibility.FieldListNode, description: the node to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the node should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the node is inserted at position 0; for a value\n             greater than the current size of the aggregation, the node is inserted at\n             the last position"}},"!category":"class","setLayout":{"!description":"Sets the aggregated <code>layout<\/code>.","!static":false,"!category":"function","!type":"fn(oLayout: sap.ui.core.Control) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oLayout":"type: sap.ui.core.Control, description: The layout to set"}},"detachLabelChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>labelChanged<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getLayout":{"!description":"Gets content of aggregation <code>layout<\/code>.\n\nprivate aggregation","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!constructorDescription":"Constructor for a new smartform/flexibility/FieldListNode.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getIsVisible isVisible} : boolean<\/li>\n<li>{@link #getIsSelected isSelected} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.ui.comp.smartform.flexibility.FieldListNode[]<\/li>\n<li>{@link #getLayout layout} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selected selected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:labelChanged labelChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:nodeHidden nodeHidden} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","_onLabelChanged":{"!description":"Event handler - called when the user changes the label","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: Event"}},"fireSelected":{"!description":"Fires event <code>selected<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>target<\/code> of type <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>The inner node which was clicked<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"_onLabelSelectedByKeyboard":{"!description":"Event handler - called when the user has selected the label using the keyboard","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: Event"}},"removeNode":{"!description":"Removes a node from the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn(vNode: Number | String | sap.ui.comp.smartform.flexibility.FieldListNode) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"vNode":"type: int|string|sap.ui.comp.smartform.flexibility.FieldListNode, description: The nodeto remove or its index or id"}},"!description":"A node within the field list control","fireLabelChanged":{"!description":"Fires event <code>labelChanged<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>target<\/code> of type <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>The inner node which was clicked<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.flexibility.FieldListNode.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setIsVisible":{"!description":"Overwritten - Sets the isVisible property","!static":false,"!category":"function","!type":"fn(bIsVisible: Boolean)","parameters":{"bIsVisible":"type: boolean, description: isVisible"}},"attachSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selected<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> itself.\n\nnode was selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getNodes":{"!description":"Gets content of aggregation <code>nodes<\/code>.\n\nNodes representing either a Form, a Group or a field","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.flexibility.FieldListNode]"},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation <code>nodes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.flexibility.FieldListNode"},"getIsSelected":{"!description":"Gets current value of property <code>isSelected<\/code>.\n\nis node selected","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachNodeHidden":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>nodeHidden<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> itself.\n\nnode was hidden","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.FieldListNode with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"destroyLayout":{"!description":"Destroys the layout in the aggregation <code>layout<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.flexibility.FieldListNode"},"!module":"sap/ui/comp/smartform/flexibility/FieldListNode","!helpDescription":"A node within the field list control","setLabel":{"!description":"Overwritten - Sets the label property","!static":false,"!category":"function","!type":"fn(sLabel: String)","parameters":{"sLabel":"type: string, description: Label"}},"attachLabelChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>labelChanged<\/code> event of this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> itself.\n\nlabel of node was changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireNodeHidden":{"!description":"Fires event <code>nodeHidden<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>target<\/code> of type <code>sap.ui.comp.smartform.flexibility.FieldListNode<\/code>The inner node which was hidden<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartform.flexibility.FieldListNode","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.ui.comp.smartfield.SmartField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.SmartField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.SmartField"},"sap.ui.comp.smartfield.CriticalityRepresentationType":{"!description":"The different options to visualize the ObjectStatus control.","!module":"sap/ui/comp/library","WithoutIcon":{"!description":"If this is selected, the sap.m.ObjectStatus control does not visualize the criticality using an icon.","!category":"enum","!type":"String"},"!category":"static class","WithIcon":{"!description":"If this is selected, the sap.m.ObjectStatus control visualizes the criticality using an icon.","!category":"enum","!type":"String"}},"sap.ui.comp.smartmicrochart.SmartBulletMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartBulletMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartBulletMicroChart"},"sap.ui.comp.navpopover.LinkData":{"!description":"Stores display text together with a navigation target hyperlink.<br>\n       The LinkData class is used by {@link sap.ui.comp.navpopover.SmartLink SmartLink} and\n       {@link sap.ui.comp.navpopover.SemanticObjectController SemanticObjectController} to define the visible links on\n       {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover}.","getHref":{"!description":"Gets current value of property <code>href<\/code>.\n\nDestination link for a navigation operation in internal format. <b>Note<\/b>: The link will be encoded before it is shown in external\nformat using the <code>hrefForExternal<\/code> method of the CrossApplicationNavigation service.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.LinkData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nText which can be displayed on the UI","!static":false,"!category":"function","!type":"fn() -> String"},"setHref":{"!description":"Sets a new value for property <code>href<\/code>.\n\nDestination link for a navigation operation in internal format. <b>Note<\/b>: The link will be encoded before it is shown in external\nformat using the <code>hrefForExternal<\/code> method of the CrossApplicationNavigation service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHref: String) -> sap.ui.comp.navpopover.LinkData","parameters":{"sHref":"type: string, description: New value for property <code>href<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.LinkData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getTarget":{"!description":"Gets current value of property <code>target<\/code>.\n\nThe standard values for the <code>target<\/code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name\ncan be entered. This property is only used if the <code>href<\/code> property is set.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new navpopover/LinkData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getHref href} : string<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/navpopover/LinkData","!helpDescription":"Stores display text together with a navigation target hyperlink.<br>\n       The LinkData class is used by {@link sap.ui.comp.navpopover.SmartLink SmartLink} and\n       {@link sap.ui.comp.navpopover.SemanticObjectController SemanticObjectController} to define the visible links on\n       {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover}.","setTarget":{"!description":"Sets a new value for property <code>target<\/code>.\n\nThe standard values for the <code>target<\/code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name\ncan be entered. This property is only used if the <code>href<\/code> property is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTarget: String) -> sap.ui.comp.navpopover.LinkData","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nText which can be displayed on the UI\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.comp.navpopover.LinkData","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.comp.variants.EditableVariantItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.EditableVariantItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ColumnListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.variants.EditableVariantItem"},"sap.ui.comp.smartform.flexibility.FieldListNode_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.FieldListNode with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.flexibility.FieldListNode"},"sap.ui.comp.smartform.flexibility":{"fieldWidth":{"!description":"This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.","!category":"enum","!type":"sap.ui.core.CSSSize"},"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!category":"enum","!type":"String"},"dateFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicher<\/code> or <code>sap.m.DateTimePicker<\/code> should be used for date/time inputs and formating.<br>Only used if type=date and no datepicker is available.\nThe data is displayed and the user input is parsed according to this format.\nNOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd).","!category":"enum","!type":"String"},"showSuggestion":{"!description":"If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.","!category":"enum","!type":"Boolean"},"showValueHelp":{"!description":"If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.","!category":"enum","!type":"Boolean"},"description":{"!description":"The description is a text after the input field, e.g. units of measurement, currencies.","!category":"enum","!type":"String"},"!category":"namespace","type":{"!description":"HTML type of the internal <code>input<\/code> tag (e.g. Text, Number, Email, Phone).\nThe particular effect of this property differs depending on the browser and the current language settings,\nespecially for the type Number.<br>\nThis parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br>\nOnly the default value <code>sap.m.InputType.Text<\/code> may be used in combination with data model formats.\n<code>sap.ui.model<\/code> defines extended formats that are mostly incompatible with normal HTML\nrepresentations for numbers and dates.","!category":"enum","!type":"sap.m.InputType"},"enabled":{"!description":"Indicates whether the user can interact with the control or not.\n<b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab-chain.","!category":"enum","!type":"Boolean"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established\n(e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"FieldList":"sap.ui.comp.smartform.flexibility.FieldList_obj","textDirection":{"!description":"Defines the text directionality of the input field, e.g. <code>RTL<\/code>, <code>LTR<\/code>","!category":"enum","!type":"sap.ui.core.TextDirection"},"Input":"sap.ui.comp.smartform.flexibility.Input_obj","FieldListNode":"sap.ui.comp.smartform.flexibility.FieldListNode_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"isSelected":{"!description":"is node selected","!category":"enum","!type":"Boolean"},"placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value.","!category":"enum","!type":"String"},"valueHelpOnly":{"!description":"If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect","!category":"enum","!type":"Boolean"},"showTableSuggestionValueHelp":{"!description":"For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\nNOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.","!category":"enum","!type":"Boolean"},"value":{"!description":"Defines the value of the control.","!category":"enum","!type":"String"},"startSuggestion":{"!description":"Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"valueLiveUpdate":{"!description":"Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.","!category":"enum","!type":"sap.ui.core.TextAlign"},"editable":{"!description":"Defines whether the control can be modified by the user or not.\n<b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.","!category":"enum","!type":"Boolean"},"label":{"!description":"The label","!category":"enum","!type":"String"},"isVisible":{"!description":"is visible flag","!category":"enum","!type":"Boolean"},"showValueStateMessage":{"!description":"Indicates whether the value state message should be shown or not.","!category":"enum","!type":"Boolean"},"DialogContent":"sap.ui.comp.smartform.flexibility.DialogContent_obj","width":{"!description":"Defines the width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"name":{"!description":"Defines the name of the control for the purposes of form submission.","!category":"enum","!type":"String"},"maxSuggestionWidth":{"!description":"If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\nNote: The value will be ignored if the actual width of the input field is larger than the specified parameter value.","!category":"enum","!type":"sap.ui.core.CSSSize"},"filterSuggests":{"!description":"Defines whether to filter the provided suggestions before showing them to the user.","!category":"enum","!type":"Boolean"},"maxLength":{"!description":"Maximum number of characters. Value '0' means the feature is switched off.\nThis parameter is not compatible with the input type <code>sap.m.InputType.Number<\/code>.\nIf the input type is set to <code>Number<\/code>, the <code>maxLength<\/code> value is ignored.","!category":"enum","!type":"Number"}},"sap.ui.comp.odata.FieldSelector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.odata.FieldSelector with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.odata.FieldSelector"},"sap.ui.comp.smartfield.ControlProposalType":{"!description":"Enumeration of the different control proposals supported by the Smart Field, if it is using an OData model.","!module":"sap/ui/comp/library","ObjectNumber":{"!description":"If this is selected, the sap.m.ObjectNumber control is used to display units of measure. If the value property of the Smart Field is not\nbound to a unit of measure, the property is ignored.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"No special context is selected. The Smart Field applies its internal defaults.","!category":"enum","!type":"String"},"ObjectIdentifier":{"!description":"If this is selected, the sap.m.ObjectIdentifier control is used to display IDs, if they are not editable. The current OData property is\nassumed to have a text annotation. Otherwise the configuration is ignored.","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.flexibility.DialogContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.DialogContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.flexibility.DialogContent"},"sap.ui.comp.smartfield.SmartLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.SmartLabel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Label.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.SmartLabel"},"sap.ui.comp.smartvariants.SmartVariantManagement":{"fireSelect":{"!description":"Eventhandler for the select event of the VariantManagement control.","!static":false,"!category":"function","!type":"fn(oVariantInfo: Object)","parameters":{"oVariantInfo":"type: object, description: Describes the selected variant"}},"!proto":"sap.ui.comp.variants.VariantManagement","getStandardVariant":{"!description":"Returns the standard variant.","!static":false,"!category":"function","!type":"fn(oCurrentControl: sap.ui.core.Control) -> Object","parameters":{"oCurrentControl":"type: sap.ui.core.Control, description: Current personalizable control"}},"!category":"class","insertPersonalizableControl":{"!description":"Inserts a personalizableControl into the aggregation <code>personalizableControls<\/code>.","!static":false,"!category":"function","!type":"fn(oPersonalizableControl: sap.ui.comp.smartvariants.PersonalizableInfo, iIndex: Number) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oPersonalizableControl":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: the personalizableControl to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the personalizableControl should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the personalizableControl is inserted at position 0; for a value\n             greater than the current size of the aggregation, the personalizableControl is inserted at\n             the last position"}},"!constructorDescription":"Constructor for a new SmartVariantManagement.<br>\nThe call sequence is as follows:<br>\nA control for which personalization is used has to be registered first via the <code>personalizableControls<\/code> association. Then it has\nto call the <code>initialise<\/code> method with the arguments <code>fCallback<\/code> function which will be called once the personalization\ndata has been retrieved and <code>oPersoControl<\/code>, the control itself.<BR>\n<b>Note:<\/b> the function callback has to be defined in the personalizable control.<BR>\nThe old behavior, where the control has to register to the <code>initialise<\/code> event, before the <code>initialise<\/code> method call,\nshould not be used any longer and is not supported at all for the page variant scenarios.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPersistencyKey persistencyKey} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersonalizableControls personalizableControls} : sap.ui.comp.smartvariants.PersonalizableInfo[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterSave afterSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.variants.VariantManagement#constructor sap.ui.comp.variants.VariantManagement}\ncan be used as well.","setPersistencyKey":{"!description":"Sets a new value for property <code>persistencyKey<\/code>.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPersistencyKey: String) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"sPersistencyKey":"type: string, description: New value for property <code>persistencyKey<\/code>"}},"setCurrentVariantId":{"!description":"Sets the current variant ID.","!static":false,"!category":"function","!type":"fn(sVariantKey: String, bDoNotApplyVariant: Boolean)","parameters":{"sVariantKey":"type: string, description: The variant key","bDoNotApplyVariant":"type: boolean, description: If set to <code>true<\/code>, the <code>applyVariant<\/code> method is not executed yet. Relevant during\n       navigation, when called before the initialise event has been executed."}},"initialise":{"!description":"Initializes the SAPUI5 layer with the flexibility services by retrieving the list of variants. Once the initialization has been completed, the\ncontrol for personalization is informed via the initialise event.","!static":false,"!category":"function","!type":"fn(fCallback: fn(), oPersoControl: sap.ui.core.Control)","parameters":{"fCallback":"type: function, description: Function will be called whenever the data for the personalizable control is received","oPersoControl":"type: sap.ui.core.Control, description: Current control that can be personalized"}},"!description":"The SmartVariantManagement control is a specialization of the {@link sap.ui.comp.variants.VariantManagement VariantManagement} control\n       and communicates with the layer that offers SAPUI5 flexibility services to manage the variants.<br>\n       For more information about SAPUI5 flexibility, refer to the Developer Guide.","init":{"!description":"control initialization","!static":false,"!category":"function","!type":"fn()"},"fireInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 Replaced by providing the personalizable control and the callback via the <code>initialise<\/code>-method.<br>Fires event <code>initialise<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 Replaced by providing the personalizable control and the callback via the <code>initialise<\/code>-method.<br>Detaches event handler <code>fnFunction<\/code> from the <code>initialise<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireManage":{"!description":"Eventhandler for the manage event of the VariantManagement control. Raises the base class event for spacial handlings like save tile.","!static":false,"!category":"function","!type":"fn(oVariantInfo: Object)","parameters":{"oVariantInfo":"type: object, description: Describes the variants that will be deleted/renamed"}},"getPersistencyKey":{"!description":"Gets current value of property <code>persistencyKey<\/code>.\n\nKey used to access personalization data.","!static":false,"!category":"function","!type":"fn() -> String"},"isPageVariant":{"!description":"Determines if the SmartVariantManagement instance is a page variant.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentVariantId":{"!description":"Retrieves the current variant ID. For a standard variant, an empty string is returned.","!static":false,"!category":"function","!type":"fn() -> String"},"addPersonalizableControl":{"!description":"Registers all controls interested and relying on variant handling.","!static":false,"!category":"function","!type":"fn(oCurrentControlInfo: sap.ui.comp.smartvariants.PersonalizableInfo)","parameters":{"oCurrentControlInfo":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: Provides information about the personalizable control."}},"destroyPersonalizableControls":{"!description":"Destroys all the personalizableControls in the aggregation <code>personalizableControls<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.SmartVariantManagement"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.variants.VariantManagement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Destroys the control.","!static":false,"!category":"function","!type":"fn()"},"removePersonalizableControl":{"!description":"Removes a personalizableControl from the aggregation <code>personalizableControls<\/code>.","!static":false,"!category":"function","!type":"fn(vPersonalizableControl: Number | String | sap.ui.comp.smartvariants.PersonalizableInfo) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"vPersonalizableControl":"type: int|string|sap.ui.comp.smartvariants.PersonalizableInfo, description: The personalizableControlto remove or its index or id"}},"attachInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 Replaced by providing the personalizable control and the callback via the <code>initialise<\/code>-method.<br>Attaches event handler <code>fnFunction<\/code> to the <code>initialise<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself.\n\nThis event is fired when the SmartVariantManagement control is initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/comp/smartvariants/SmartVariantManagement","!helpDescription":"The SmartVariantManagement control is a specialization of the {@link sap.ui.comp.variants.VariantManagement VariantManagement} control\n       and communicates with the layer that offers SAPUI5 flexibility services to manage the variants.<br>\n       For more information about SAPUI5 flexibility, refer to the Developer Guide.","fireSave":{"!description":"Eventhandler for the save event of the VariantManagement control.","!static":false,"!category":"function","!type":"fn(oVariantInfo: Object)","parameters":{"oVariantInfo":"type: object, description: Describes the variant to be saved"}},"fireAfterSave":{"!description":"Fires event <code>afterSave<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfPersonalizableControl":{"!description":"Checks for the provided <code>sap.ui.comp.smartvariants.PersonalizableInfo<\/code> in the aggregation <code>personalizableControls<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPersonalizableControl: sap.ui.comp.smartvariants.PersonalizableInfo) -> Number","parameters":{"oPersonalizableControl":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: The personalizableControl whose index is looked for"}},"removeAllPersonalizableControls":{"!description":"Removes all the controls from the aggregation <code>personalizableControls<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartvariants.PersonalizableInfo]"},"detachAfterSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterSave<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachAfterSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterSave<\/code> event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getVariantContent":{"!description":"Retrieves the variant content.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, sKey: String) -> Object","parameters":{"sKey":"type: string, description: The variant key","oControl":"type: sap.ui.core.Control, description: Current personalizable control"}},"getPersonalizableControls":{"!description":"Gets content of aggregation <code>personalizableControls<\/code>.\n\nAll controls that rely on variant handling have to be added to this aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartvariants.PersonalizableInfo]"}},"sap.ui.comp.odata.FieldSelector":{"!description":"Reuse control which displays the properties of OData entity sets.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.odata.FieldSelector.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSelectedField":{"!description":"Returns a map with the name of the entity set and the key of the selected field.","!static":false,"!category":"function","!type":"fn() -> Object"},"setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.comp.odata.FieldSelector","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent of the control itself","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","destroy":{"!description":"Destroys the inner references","!static":false,"!category":"function","!type":"fn()"},"!category":"class","updateFieldLabel":{"!description":"Based on the renamed label contained in the field list,\nthe label contained in the field selector will be updated.","!static":false,"!category":"function","!type":"fn(oFieldListElement: Object)","parameters":{"oFieldListElement":"type: Object, description: Field list element containing all relevant properties needed for the update"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.odata.FieldSelector with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Cleans up the control","!static":false,"!category":"function","!type":"fn()"},"!constructorDescription":"Constructor for a new odata/FieldSelector.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSearchBar showSearchBar} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:fieldSelectionChanged fieldSelectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/comp/odata/FieldSelector","!helpDescription":"Reuse control which displays the properties of OData entity sets.","detachFieldSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>fieldSelectionChanged<\/code> event of this <code>sap.ui.comp.odata.FieldSelector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.odata.FieldSelector","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowSearchBar":{"!description":"Sets a new value for property <code>showSearchBar<\/code>.\n\nIndicates to show a search bar for property names inside a selected entity set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSearchBar: Boolean) -> sap.ui.comp.odata.FieldSelector","parameters":{"bShowSearchBar":"type: boolean, description: New value for property <code>showSearchBar<\/code>"}},"setModel":{"!description":"Set the model for the entity and fields of an odata service","!static":false,"!category":"function","!type":"fn(oModel: sap.ui.model.odata.ODataModel, sEntityTypes: String, bShowExtFieldButton: Boolean, aIgnoredFields: Array, mBindingPathToFieldListElement: Object.<bindingPath:string, fieldListElement:Object>, mIdToFieldListElement: Object.<id:string, fieldListElement:Object>)","parameters":{"oModel":"type: sap.ui.model.odata.ODataModel, description: odata model","sEntityTypes":"type: string, description: entity type name(s) separated by comma character or array","mBindingPathToFieldListElement":"type: Object.<bindingPath:string, fieldListElement:Object>, description: Map absolute odata binding paths to the field list elements","mIdToFieldListElement":"type: Object.<id:string, fieldListElement:Object>, description: Map field list element ids to the field list elements","aIgnoredFields":"type: Array, description: List of fields which should be ignored","bShowExtFieldButton":"type: boolean, description: indicates if the create new field button will be displayed or not"}},"getShowSearchBar":{"!description":"Gets current value of property <code>showSearchBar<\/code>.\n\nIndicates to show a search bar for property names inside a selected entity set.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireFieldSelectionChanged":{"!description":"Fires event <code>fieldSelectionChanged<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.odata.FieldSelector","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachFieldSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>fieldSelectionChanged<\/code> event of this <code>sap.ui.comp.odata.FieldSelector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.odata.FieldSelector<\/code> itself.\n\nUser selected a different field.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.odata.FieldSelector","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.odata.FieldSelector<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.odata.FieldSelector"}},"sap.ui.comp.filterbar.FilterBar":{"setShowGoOnFB":{"!description":"Handles the visibility of the Go button on filter bar.","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: State of visibility"}},"getShowClearButton":{"!description":"Gets current value of property <code>showClearButton<\/code>.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeader":{"!description":"Sets a new value for property <code>header<\/code>.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code>\nis set to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader: String) -> sap.ui.comp.filterbar.FilterBar","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"detachBeforeVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeVariantSave<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFilterContainerWidth":{"!description":"Gets current value of property <code>filterContainerWidth<\/code>.\n\nSets the width of the filters container.\n\nDefault value is <code>12rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllFilters":{"!description":"Removes all entries in the aggregations filterItems, filterGroupItems, basicSearch","!static":false,"!category":"function","!type":"fn()"},"applyVariant":{"!description":"Applies the variant. This method is executed from the {@link sap.ui.comp.smartvariants.SmartVariantManagement SmartVariantManagement} control.","!static":false,"!category":"function","!type":"fn(oVariant: Object, sContext: String, bInitial: Boolean)","parameters":{"sContext":"type: string, description: Describes in which context the variant is applied. The context is passed on to the application via the\n       afterVariantLoad event","oVariant":"type: object, description: JSON object","bInitial":"type: boolean, description: indicates if the apply was executed during the initialization phase."}},"setAdvancedMode":{"!description":"The advanced mode is only relevant for the value help scenario. UI representation is different from the standard filter bar.","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: Sets the advanced mode"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The control displays filters in a user-friendly manner to populate values for a query. The FilterBar consists of a row containing the\n       {@link sap.ui.comp.variants.VariantManagement VariantManagement} control, the related buttons, and an area underneath displaying the\n       filters. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The\n       area containing the filters can be hidden or shown using the Hide Filter Bar / Show Filter Bar button. The Go button triggers the search\n       event, and the Filters button shows the filter dialog.<br>\n       In this dialog, the consumer has full control over the filter bar. The filters in this dialog are displayed in one column and organized\n       in groups. The filter items of the <code>filterItems<\/code> aggregation are grouped in the Basic group . Each filter can be marked as\n       visible in the filter bar by selecting Add to Filter Bar. In addition, the items in the <code>filterGroupItems<\/code> aggregation can\n       be marked as part of the current variant. The FilterBar also supports a different UI layout when used inside a value help dialog. In\n       this case the FilterBar consists of two logical areas, one containing the general search button and in the Advanced Search area. The\n       Advanced Search is a collapsible area displaying the advanced filters in two columns.","insertFilterItem":{"!description":"Inserts a filterItem into the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem, iIndex: Number) -> sap.ui.comp.filterbar.FilterBar","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the filterItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the filterItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filterItem is inserted at\n             the last position","oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: the filterItem to insert; if empty, nothing is inserted"}},"getSearchEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 undefined<br>Gets current value of property <code>searchEnabled<\/code>.\n\nEnables/disables the Search button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"registerGetFiltersWithValues":{"!description":"Registration of a callback function. The provided callback function is executed to obtain the filters with values.","!static":false,"!category":"function","!type":"fn(fCallBack: fn())","parameters":{"fCallBack":"type: function, description: Called when a variant must be applied"}},"removeFilterGroupItem":{"!description":"Removes a filterGroupItem from the aggregation <code>filterGroupItems<\/code>.","!static":false,"!category":"function","!type":"fn(vFilterGroupItem: Number | String | sap.ui.comp.filterbar.FilterGroupItem) -> sap.ui.comp.filterbar.FilterGroupItem","parameters":{"vFilterGroupItem":"type: int|string|sap.ui.comp.filterbar.FilterGroupItem, description: The filterGroupItemto remove or its index or id"}},"retrieveFiltersWithValuesAsText":{"!description":"Retrieves the labels of all visible filters that belongs to the current variant and have an assigned value.","!static":false,"!category":"function","!type":"fn() -> Array"},"destroy":{"!description":"Destroys the control.","!static":false,"!category":"function","!type":"fn()"},"getShowGoOnFB":{"!description":"Gets current value of property <code>showGoOnFB<\/code>.\n\nHandles visibility of the Go button on the filter bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.Grid.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setShowClearOnFB":{"!description":"Handles the visibility for the Clear button in the filter bar. On phone devices, the value is always treated as false.","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: State of visibility"}},"attachFiltersDialogClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filtersDialogClosed<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after the filters dialog is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/comp/filterbar/FilterBar","detachAssignedFiltersChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>assignedFiltersChanged<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachAssignedFiltersChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>assignedFiltersChanged<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be\nchanged. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText<\/code> method.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireFiltersDialogClosed":{"!description":"Fires event <code>filtersDialogClosed<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setUseToolbar":{"!description":"Sets a new value for property <code>useToolbar<\/code>.\n\nDetermines what design should be used. Default is the design with the toolbar. In mobile scenarios this property is ignored - the\ndesign with the toolbar will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseToolbar: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bUseToolbar":"type: boolean, description: New value for property <code>useToolbar<\/code>"}},"setConsiderGroupTitle":{"!description":"Sets a new value for property <code>considerGroupTitle<\/code>.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bConsiderGroupTitle: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bConsiderGroupTitle":"type: boolean, description: New value for property <code>considerGroupTitle<\/code>"}},"determineControlByName":{"!description":"Retrieves the control based on the name and group name.","!static":false,"!category":"function","!type":"fn(sName: String, sGroupName: String) -> sap.ui.core.Control","parameters":{"sName":"type: string, description: Name of the filter.","sGroupName":"type: string, description: Group name of the filter; <code>null<\/code> for filter that belongs to basic group."}},"getUseToolbar":{"!description":"Gets current value of property <code>useToolbar<\/code>.\n\nDetermines what design should be used. Default is the design with the toolbar. In mobile scenarios this property is ignored - the\ndesign with the toolbar will be used.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"registerFetchData":{"!description":"Registration of a callback function. The provided callback function is executed when saving a variant is triggered and must provide all\nrelevant fields and values in JSON.","!static":false,"!category":"function","!type":"fn(fCallBack: fn())","parameters":{"fCallBack":"type: function, description: Called when a variant must be fetched"}},"detachFilterChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filterChange<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeFilterItem":{"!description":"Removes a filterItem from the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(vFilterItem: Number | String | sap.ui.comp.filterbar.FilterItem) -> sap.ui.comp.filterbar.FilterItem","parameters":{"vFilterItem":"type: int|string|sap.ui.comp.filterbar.FilterItem, description: The filterItemto remove or its index or id"}},"setDataSuiteFormat":{"!description":"Sets the selection variant for UI navigation to FilterBar.","!static":false,"!category":"function","!type":"fn(sSuiteData: String, bReplace: Boolean)","parameters":{"sSuiteData":"type: string, description: Represents the selection variants for UI navigation","bReplace":"type: boolean, description: Replaces existing filter data"}},"destroyFilterGroupItems":{"!description":"Destroys all the filterGroupItems in the aggregation <code>filterGroupItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar"},"setCurrentVariantId":{"!description":"Sets the current variant ID.","!static":false,"!category":"function","!type":"fn(sVariantId: String, bDoNotApplyVariant: Boolean)","parameters":{"sVariantId":"type: string, description: ID of the variant","bDoNotApplyVariant":"type: boolean, description: If set to <code>true<\/code>, the <code>applyVariant<\/code> method is not executed yet. Relevant during\n       navigation, when called before the initialise event has been executed."}},"attachBeforeVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeVariantSave<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved\nas variant later.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachFilterChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filterChange<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when a filter has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachBeforeVariantFetch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeVariantFetch<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired before a variant is fetched.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFilterItems":{"!description":"Gets content of aggregation <code>filterItems<\/code>.\n\nFilters belonging to the basic group.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.filterbar.FilterItem]"},"destroyFilterItems":{"!description":"Destroys all the filterItems in the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar"},"detachInitialized":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialized<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>search<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Go button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllFilterGroupItems":{"!description":"Removes all entries in the aggregation filterGroupItems.","!static":false,"!category":"function","!type":"fn()"},"fireAfterVariantSave":{"!description":"Fires event <code>afterVariantSave<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getFilterGroupItems":{"!description":"Gets content of aggregation <code>filterGroupItems<\/code>.\n\nFilters belonging to groups other than the basic group.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.filterbar.FilterGroupItem]"},"detachBeforeVariantFetch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeVariantFetch<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertFilterGroupItem":{"!description":"Inserts a filterGroupItem into the aggregation <code>filterGroupItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterGroupItem: sap.ui.comp.filterbar.FilterGroupItem, iIndex: Number) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oFilterGroupItem":"type: sap.ui.comp.filterbar.FilterGroupItem, description: the filterGroupItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the filterGroupItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the filterGroupItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filterGroupItem is inserted at\n             the last position"}},"getAdvancedMode":{"!description":"Gets current value of property <code>advancedMode<\/code>.\n\nThe advanced mode overwrites the standard behavior and is used in the value help scenario.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireInitialized":{"!description":"This method will be called by the smart variant mangement and it indicates, that the standard variant was obtained.","!static":false,"!category":"function","!type":"fn()"},"detachAfterVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantSave<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachReset":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>reset<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Restore button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachClear":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>clear<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFilterBarExpanded":{"!description":"Gets current value of property <code>filterBarExpanded<\/code>.\n\nShows/hides the filter row.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachFiltersDialogClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filtersDialogClosed<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireReset":{"!description":"Fires event <code>reset<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionSet<\/code> of type <code>sap.ui.core.Control[]<\/code>Visible controls<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getShowRestoreButton":{"!description":"Gets current value of property <code>showRestoreButton<\/code>.\n\nHandles visibility of the Restore button on the Filters dialog.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantSave<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after a variant has been saved. ID of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"determineControlByFilterItem":{"!description":"Retrieves the control associated to the filter.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem) -> sap.ui.core.Control","parameters":{"oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: From the aggregations"}},"determineMandatoryFilterItems":{"!description":"Retrieves the mandatory filters.","!static":false,"!category":"function","!type":"fn() -> Array"},"retrieveFiltersWithValues":{"!description":"Retrieves the labels of all visible filters that belongs to the current variant and have an assigned value.","!static":false,"!category":"function","!type":"fn() -> Array"},"getShowFilterConfiguration":{"!description":"Gets current value of property <code>showFilterConfiguration<\/code>.\n\nHandles visibility of the Filters button on the filter bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowRestoreOnFB":{"!description":"Gets current value of property <code>showRestoreOnFB<\/code>.\n\nHandles visibility of the Restore button on the filter bar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPersistencyKey":{"!description":"Sets the persistency key.","!static":false,"!category":"function","!type":"fn(sPersistenceKey: String)","parameters":{"sPersistenceKey":"type: string, description: ID for persistency"}},"setShowRestoreButton":{"!description":"Sets a new value for property <code>showRestoreButton<\/code>.\n\nHandles visibility of the Restore button on the Filters dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRestoreButton: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowRestoreButton":"type: boolean, description: New value for property <code>showRestoreButton<\/code>"}},"setFilterBarExpanded":{"!description":"Sets filterbar in collapsed/expanded mode.","!static":false,"!category":"function","!type":"fn(bShowExpanded: Boolean)","parameters":{"bShowExpanded":"type: boolean, description: Mode"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireInitialise":{"!description":"This method has to be called by the consumer to indicate that the data model is available.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.filterbar.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialise<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getCurrentVariantId":{"!description":"Retrieves the current variant ID.","!static":false,"!category":"function","!type":"fn() -> String"},"setBasicSearch":{"!description":"Adds a basic search field to the toolbar.","!static":false,"!category":"function","!type":"fn(oBasicSearchField: sap.m.SearchField)","parameters":{"oBasicSearchField":"type: sap.m.SearchField, description: Control"}},"_getFilterInformation":{"!description":"Provides filter information for lazy instantiation","!static":false,"!category":"function","!type":"fn() -> Array"},"detachReset":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>reset<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachClear":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>clear<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Clear button is pressed. The consumer has to clear all filters.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSearch":{"!description":"Fires event <code>search<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionSet<\/code> of type <code>sap.ui.core.Control[]<\/code>Visible controls<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfFilterGroupItem":{"!description":"Checks for the provided <code>sap.ui.comp.filterbar.FilterGroupItem<\/code> in the aggregation <code>filterGroupItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterGroupItem: sap.ui.comp.filterbar.FilterGroupItem) -> Number","parameters":{"oFilterGroupItem":"type: sap.ui.comp.filterbar.FilterGroupItem, description: The filterGroupItem whose index is looked for"}},"!helpDescription":"The control displays filters in a user-friendly manner to populate values for a query. The FilterBar consists of a row containing the\n       {@link sap.ui.comp.variants.VariantManagement VariantManagement} control, the related buttons, and an area underneath displaying the\n       filters. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The\n       area containing the filters can be hidden or shown using the Hide Filter Bar / Show Filter Bar button. The Go button triggers the search\n       event, and the Filters button shows the filter dialog.<br>\n       In this dialog, the consumer has full control over the filter bar. The filters in this dialog are displayed in one column and organized\n       in groups. The filter items of the <code>filterItems<\/code> aggregation are grouped in the Basic group . Each filter can be marked as\n       visible in the filter bar by selecting Add to Filter Bar. In addition, the items in the <code>filterGroupItems<\/code> aggregation can\n       be marked as part of the current variant. The FilterBar also supports a different UI layout when used inside a value help dialog. In\n       this case the FilterBar consists of two logical areas, one containing the general search button and in the Advanced Search area. The\n       Advanced Search is a collapsible area displaying the advanced filters in two columns.","addFilterItem":{"!description":"Adds a <code>FilterItem<\/code> element to the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem)","parameters":{"oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: Belongs to the basic group"}},"registerApplyData":{"!description":"Registration of a callback function. The provided callback function is executed when a variant must be applied. The callback function will\nreceive the corresponding data set containing all relevant data in JSON, as initially provided by the callback for fetchData.","!static":false,"!category":"function","!type":"fn(fCallBack: fn())","parameters":{"fCallBack":"type: function, description: Called when a variant must be applied"}},"getAllFilterItems":{"!description":"Retrieves filters belonging to the current variant.","!static":false,"!category":"function","!type":"fn(bConsiderOnlyVisibleFields: Boolean) -> Array","parameters":{"bConsiderOnlyVisibleFields":"type: boolean, description: Indicates that only visible filters are retrieved"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.layout.Grid","clearVariantSelection":{"!description":"Resets the current selection in the variant management control to standard.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>search<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getConsiderGroupTitle":{"!description":"Gets current value of property <code>considerGroupTitle<\/code>.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFilterContainerWidth":{"!description":"Sets a new value for property <code>filterContainerWidth<\/code>.\n\nSets the width of the filters container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12rem<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterContainerWidth: String) -> sap.ui.comp.filterbar.FilterBar","parameters":{"sFilterContainerWidth":"type: string, description: New value for property <code>filterContainerWidth<\/code>"}},"getHeader":{"!description":"Gets current value of property <code>header<\/code>.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code>\nis set to <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireAssignedFiltersChanged":{"!description":"Notifies about a filter change. Is the indicator that the text of filters with values may be changed.","!static":false,"!category":"function","!type":"fn()"},"setShowRestoreOnFB":{"!description":"Handles the visibility of the Restore button in the filter bar. On phone devices, the value is always treated as false.","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: State of visibility"}},"!constructorDescription":"Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPersistencyKey persistencyKey} : string<\/li>\n<li>{@link #getAdvancedMode advancedMode} : boolean (default: false)<\/li>\n<li>{@link #getExpandAdvancedArea expandAdvancedArea} : boolean (default: false)<\/li>\n<li>{@link #getSearchEnabled searchEnabled} : boolean (default: true)<\/li>\n<li>{@link #getFilterBarExpanded filterBarExpanded} : boolean (default: true)<\/li>\n<li>{@link #getConsiderGroupTitle considerGroupTitle} : boolean (default: false)<\/li>\n<li>{@link #getShowClearButton showClearButton} : boolean (default: false)<\/li>\n<li>{@link #getShowRestoreButton showRestoreButton} : boolean (default: true)<\/li>\n<li>{@link #getShowGoOnFB showGoOnFB} : boolean (default: true)<\/li>\n<li>{@link #getShowRestoreOnFB showRestoreOnFB} : boolean (default: false)<\/li>\n<li>{@link #getShowClearOnFB showClearOnFB} : boolean (default: false)<\/li>\n<li>{@link #getShowGoButton showGoButton} : boolean<\/li>\n<li>{@link #getDeltaVariantMode deltaVariantMode} : boolean (default: true)<\/li>\n<li>{@link #getFilterContainerWidth filterContainerWidth} : string (default: 12rem)<\/li>\n<li>{@link #getUseToolbar useToolbar} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getShowFilterConfiguration showFilterConfiguration} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.ui.comp.filterbar.FilterItem[]<\/li>\n<li>{@link #getFilterGroupItems filterGroupItems} : sap.ui.comp.filterbar.FilterGroupItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeVariantSave beforeVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeVariantFetch beforeVariantFetch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantLoad afterVariantLoad} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterChange filterChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:clear clear} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantSave afterVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersDialogClosed filtersDialogClosed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:assignedFiltersChanged assignedFiltersChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.layout.Grid#constructor sap.ui.layout.Grid}\ncan be used as well.","fireClear":{"!description":"Fires event <code>clear<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionSet<\/code> of type <code>sap.ui.core.Control[]<\/code>Visible controls<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireBeforeVariantFetch":{"!description":"Fires event <code>beforeVariantFetch<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeBasicSearch":{"!description":"Removes the association basicSearch.","!static":false,"!category":"function","!type":"fn()"},"setShowClearButton":{"!description":"Sets a new value for property <code>showClearButton<\/code>.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowClearButton: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowClearButton":"type: boolean, description: New value for property <code>showClearButton<\/code>"}},"detachAfterVariantLoad":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantLoad<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getPersistencyKey":{"!description":"Gets current value of property <code>persistencyKey<\/code>.\n\nKey used to access personalization data.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllFilterItems":{"!description":"Removes all entries in the aggregation filterItems.","!static":false,"!category":"function","!type":"fn()"},"setDeltaVariantMode":{"!description":"Sets a new value for property <code>deltaVariantMode<\/code>.\n\nStores the delta as compared to the standard variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDeltaVariantMode: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bDeltaVariantMode":"type: boolean, description: New value for property <code>deltaVariantMode<\/code>"}},"addFilterGroupItem":{"!description":"Adds a <code>FilterGroupItem<\/code> element to the aggregation <code>filterGroupItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterGroupItem: sap.ui.comp.filterbar.FilterGroupItem)","parameters":{"oFilterGroupItem":"type: sap.ui.comp.filterbar.FilterGroupItem, description: Belongs to any group other than basic"}},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.ui.comp.filterbar.FilterItem<\/code> in the aggregation <code>filterItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem) -> Number","parameters":{"oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: The filterItem whose index is looked for"}},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialise<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the filter bar is initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDataSuiteFormat":{"!description":"Retrieves the current variant as selection variant for UI navigation","!static":false,"!category":"function","!type":"fn(bConsiderAllFilters: Boolean) -> String","parameters":{"bConsiderAllFilters":"type: boolean, description: also include empty/invisible fields filter data"}},"attachInitialized":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialized<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after the filter bar was initialized and the standard variant was obtained. Eventual navigation related actions\nshould be triggered by this event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowClearOnFB":{"!description":"Gets current value of property <code>showClearOnFB<\/code>.\n\nHandles visibility of the Clear button on the filter bar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterVariantLoad":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantLoad<\/code> event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters\nwith data from the variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getBasicSearch":{"!description":"ID of the element which is the current target of the association <code>basicSearch<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SearchField"},"fetchVariant":{"!description":"Creates and returns the variant representation. This method is executed from the SmartVariantManagement control.","!static":false,"!category":"function","!type":"fn(bConsiderInvisibleFilters: Boolean) -> Object","parameters":{"bConsiderInvisibleFilters":"type: boolean, description: Indicates if invisible filters should be considered"}},"getDeltaVariantMode":{"!description":"Gets current value of property <code>deltaVariantMode<\/code>.\n\nStores the delta as compared to the standard variant.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation":{"!description":"The range operations supported by the ValueHelpDialog control.","BT":{"!description":"The Between operation for the ranges.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/valuehelpdialog/ValueHelpDialog","Contains":{"!description":"The Contains operation for the ranges.","!category":"enum","!type":"String"},"LT":{"!description":"The Less operation for the ranges.","!category":"enum","!type":"String"},"LE":{"!description":"The Less or equals operation for the ranges.","!category":"enum","!type":"String"},"!category":"static class","EQ":{"!description":"The Equals operation for the ranges.","!category":"enum","!type":"String"},"GT":{"!description":"The Greater operation for the ranges.","!category":"enum","!type":"String"},"StartsWith":{"!description":"The StartsWith operation for the ranges.","!category":"enum","!type":"String"},"EndsWith":{"!description":"The EndsWith operation for the ranges.","!category":"enum","!type":"String"},"GE":{"!description":"The Between or equals operation for the ranges.","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.SmartForm_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.SmartForm with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.SmartForm"},"sap.ui.comp.filterbar.FilterItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.filterbar.FilterItem"},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.comp.smartfield.ControlProposal_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ControlProposal with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.ControlProposal"},"sap.ui.comp.smartform.Group_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Group with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.Group"},"sap.ui":{"comp":"sap.ui.comp","!category":"namespace"},"sap.ui.comp.smartform.flexibility.FieldList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.flexibility.FieldList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.flexibility.FieldList"},"sap.ui.comp.valuehelpdialog.ValueHelpDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.valuehelpdialog.ValueHelpDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.valuehelpdialog.ValueHelpDialog"},"sap.ui.comp.personalization":{"ChangeType":"sap.ui.comp.personalization.ChangeType","AggregationRole":"sap.ui.comp.personalization.AggregationRole","!category":"namespace","ResetType":"sap.ui.comp.personalization.ResetType"},"sap.ui.comp.smartform.Group":{"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nLabel for the group.","!static":false,"!category":"function","!type":"fn() -> String"},"getUseHorizontalLayout":{"!description":"Gets current value of property <code>useHorizontalLayout<\/code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEditMode":{"!description":"Setter for property editable of all smart fields in children hierarchy.","!static":false,"!category":"function","!type":"fn(bEditMode: Boolean) -> sap.ui.comp.smartform.Group","parameters":{"bEditMode":"type: boolean, description: new value for editable property of smart fields."}},"setAggregation":{"!description":"Sets a new object in the named 0..1 aggregation.","!static":false,"!category":"function","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject) -> sap.ui.comp.smartform.Group","parameters":{"oObject":"type: sap.ui.base.ManagedObject, description: the managed object that is set as aggregated object.","sAggregationName":"type: string, description: name of an 0..1 aggregation."}},"!proto":"sap.ui.core.Control","!category":"class","setLayout":{"!description":"Sets the aggregated <code>layout<\/code>.","!static":false,"!category":"function","!type":"fn(oLayout: sap.ui.layout.GridData) -> sap.ui.comp.smartform.Group","parameters":{"oLayout":"type: sap.ui.layout.GridData, description: The layout to set"}},"removeAllGroupElements":{"!description":"Removes all group elements from the aggregation <code>groupElements<\/code>","!static":false,"!category":"function","!type":"fn(the: Number | String | sap.ui.comp.smartform.GroupElement) -> [sap.ui.comp.smartform.GroupElement]","parameters":{"the":"type: int|string|sap.ui.comp.smartform.GroupElement, description: GroupElement to remove or its index or id."}},"getLayout":{"!description":"Gets content of aggregation <code>layout<\/code>.\n\nLayout to specify how the group shall be rendered (e.g. span and line-break)","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.GridData"},"!constructorDescription":"Constructor for a new smartform/Group.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUseHorizontalLayout useHorizontalLayout} : boolean<\/li>\n<li>{@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth} : int<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroupElements groupElements} : sap.ui.comp.smartform.GroupElement[] (default)<\/li>\n<li>{@link #getLayout layout} : sap.ui.layout.GridData<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setHorizontalLayoutGroupElementMinWidth":{"!description":"Sets a new value for property <code>horizontalLayoutGroupElementMinWidth<\/code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iHorizontalLayoutGroupElementMinWidth: Number) -> sap.ui.comp.smartform.Group","parameters":{"iHorizontalLayoutGroupElementMinWidth":"type: int, description: New value for property <code>horizontalLayoutGroupElementMinWidth<\/code>"}},"getGroupElements":{"!description":"Gets content of aggregation <code>groupElements<\/code>.\n\nA GroupElement is a combination of one label and different controls associated to this label.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.GroupElement]"},"addCustomData":{"!description":"Adds some CustomeData into the aggregation <code>customData<\/code>. Additionally the customData is also added to the SmartFields in the\nchildren hierarchy","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.comp.smartform.Group","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to add."}},"!description":"Groups are used to group group elements.","setVisible":{"!description":"Sets a new value for property visible. Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead\nof the real control When called with a value of null or undefined, the default value of the property will be restored. Default value is true.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.comp.smartform.Group","parameters":{"bVisible":"type: boolean, description: New value for property visible"}},"removeGroupElement":{"!description":"Removes a GroupElement from the aggregation <code>groupElements<\/code>","!static":false,"!category":"function","!type":"fn(vGroupElement: Number | String | sap.ui.comp.smartform.GroupElement) -> sap.ui.comp.smartform.GroupElement","parameters":{"vGroupElement":"type: int|string|sap.ui.comp.smartform.GroupElement, description: the GroupElement to remove or its index or id."}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.Group.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyGroupElements":{"!description":"Destroys all the group elements in the aggregation <code>groupElements<\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.Group"},"addAggregation":{"!description":"Adds some entity to the given aggregation.","!static":false,"!category":"function","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject) -> sap.ui.comp.smartform.Group","parameters":{"oObject":"type: sap.ui.base.ManagedObject, description: the object to add.","sAggregationName":"type: string, description: the strung identifying the aggregation that oObject should be added to."}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Group with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"addGroupElement":{"!description":"Adds some GroupElement into the aggregation <code>groupElements<\/code>","!static":false,"!category":"function","!type":"fn(oGroupElement: sap.ui.comp.smartform.GroupElement) -> sap.ui.comp.smartform.Group","parameters":{"oGroupElement":"type: sap.ui.comp.smartform.GroupElement, description: group element to add to aggregation named groupElements."}},"destroyLayout":{"!description":"Destroys the layout in the aggregation <code>layout<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.Group"},"getHorizontalLayoutGroupElementMinWidth":{"!description":"Gets current value of property <code>horizontalLayoutGroupElementMinWidth<\/code>.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setUseHorizontalLayout":{"!description":"Sets a new value for property <code>useHorizontalLayout<\/code>.\n\nSpecifies whether the groups shall be rendered in a ResponsiveLayout with label on top of the group element. Each group will be\nrendered in a new line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUseHorizontalLayout: Boolean) -> sap.ui.comp.smartform.Group","parameters":{"bUseHorizontalLayout":"type: boolean, description: New value for property <code>useHorizontalLayout<\/code>"}},"!module":"sap/ui/comp/smartform/Group","indexOfGroupElement":{"!description":"Checks for the provided <code>sap.ui.comp.smartform.GroupElement<\/code> in the aggregation <code>groupElements<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroupElement: sap.ui.comp.smartform.GroupElement) -> Number","parameters":{"oGroupElement":"type: sap.ui.comp.smartform.GroupElement, description: The groupElement whose index is looked for"}},"!helpDescription":"Groups are used to group group elements.","setProperty":{"!description":"Sets the given value for the given property","!static":false,"!category":"function","!type":"fn(sPropertyName: String, oValue: Object)","parameters":{"oValue":"type: any, description: value to set the property to","sPropertyName":"type: string, description: name of the property to set"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nLabel for the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.comp.smartform.Group","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"insertGroupElement":{"!description":"Inserts a GroupElement into the aggregation <code>groupElements<\/code>","!static":false,"!category":"function","!type":"fn(oGroupElement: sap.ui.comp.smartform.GroupElement, iIndex: Number) -> sap.ui.comp.smartform.Group","parameters":{"oGroupElement":"type: sap.ui.comp.smartform.GroupElement, description: group element to insert into aggregation named groupElements.","iIndex":"type: int, description: the 0-based index the GroupElement should be inserted at."}}},"sap.ui.comp.smartfilterbar.ControlConfiguration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.ControlConfiguration with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.ControlConfiguration"},"sap.ui.comp.navpopover":{"bounce":{"!description":"Whether bouncing is enabled.","!category":"enum","!type":"Boolean"},"offsetX":{"!description":"The offset for the popover placement in the x axis. It's with unit pixel.","!category":"enum","!type":"Number"},"offsetY":{"!description":"The offset for the popover placement in the y axis. It's with unit pixel.","!category":"enum","!type":"Number"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"mapFieldToSemanticObject":{"!description":"If set to <code>false<\/code>, the SmartLink control will not replace its field name with the according\n<code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several\nSmartLinks on the same semantic object.","!category":"enum","!type":"Boolean"},"SmartLink":"sap.ui.comp.navpopover.SmartLink_obj","text":{"!description":"Link text to be displayed.","!category":"enum","!type":"String"},"href":{"!description":"The link target URI. Supports standard hyperlink behavior. If a JavaScript action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!category":"enum","!type":"sap.ui.core.URI"},"modal":{"!description":"If the popover will not be closed when tapping outside the popover. It also blocks any interaction with the background. The default value is false.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The name of the entity set used. If <code>entitySet<\/code> has not been defined, the SemanticObjectController tries to retrieve\rthe name from its parents. <b>Note:<\/b> This is not a dynamic UI5 property.","!category":"enum","!type":"String"},"textAlign":{"!description":"Sets the horizontal alignment of the text.","!category":"enum","!type":"sap.ui.core.TextAlign"},"SemanticObjectController":"sap.ui.comp.navpopover.SemanticObjectController_obj","wrapping":{"!description":"Determines whether the link text is allowed to wrap when there is not sufficient space.","!category":"enum","!type":"Boolean"},"placement":{"!description":"This is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferredLeft, sap.m.PlacementType.HorizontalPreferredRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferredTop, sap.m.PlacementType.VerticalPreferredBottom, sap.m.PlacementType.Auto. The default value is sap.m.PlacementType.Right. Setting this property while popover is open won't cause any rerendering of the popover, but it will take effect when it's opened again.","!category":"enum","!type":"sap.m.PlacementType"},"semanticObjectController":{"!description":"The semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to\nfind a SemanticObjectController in its parent hierarchy. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so\nthe effect can be delayed.","!category":"enum","!type":"Object"},"NavigationPopover":"sap.ui.comp.navpopover.NavigationPopover_obj","fieldName":{"!description":"The metadata field name for this SmartLink control. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so the\neffect can be delayed.","!category":"enum","!type":"String"},"horizontalScrolling":{"!description":"This property indicates if user can scroll horizontally inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"!category":"namespace","title":{"!description":"popover title","!category":"enum","!type":"String"},"enabled":{"!description":"Determines whether the link can be triggered by the user.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the parent DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"mainNavigationId":{"!description":"Sets the visible text for the main navigation. If empty, the navigationPopover will try to get the Id from the given sourceObject.","!category":"enum","!type":"String"},"semanticObjectLabel":{"!description":"Shown label of semantic object.","!category":"enum","!type":"String"},"contentWidth":{"!description":"Set the width of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"ignoredFields":{"!description":"Comma-separated list of field names that must not be displayed as links.","!category":"enum","!type":"String"},"emphasized":{"!description":"Emphasized links look visually more important than regular links.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"contentMinWidth":{"!description":"Sets the minimum width of the content area inside popover.","!category":"enum","!type":"sap.ui.core.CSSSize"},"ignoreLinkRendering":{"!description":"If set to <code>true<\/code>, the SmartLink control will render the <code>innerControl<\/code> or the control provided by\n<code>createControlCallback<\/code> instead of the actual link. This is used for example by the SemanticObjectController if this\nSmartLink is listed in its <code>ignoredFields<\/code> or no navigation targets were found during prefetch. <b>Note<\/b>: Setting\na value triggers an asynchronous determination, so the effect can be delayed.","!category":"enum","!type":"Boolean"},"semanticObject":{"!description":"Name of semantic object which is used to fill the navigation popover. <b>Note<\/b>: Setting a value triggers an asynchronous\ndetermination, so the effect can be delayed.","!category":"enum","!type":"String"},"enableScrolling":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.<br>This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.","!category":"enum","!type":"Boolean"},"createControlCallback":{"!description":"Function that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are\navailable. The function has no parameters and has to return an instance of sap.ui.core.Control.","!category":"enum","!type":"Object"},"LinkData":"sap.ui.comp.navpopover.LinkData_obj","fieldSemanticObjectMap":{"!description":"Maps the field names to the related semantic objects. When accessing this property for the first time, the mapping will be\rcalculated from the metadata within the provided model.","!category":"enum","!type":"Object"},"verticalScrolling":{"!description":"This property indicates if user can scroll vertically inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"resizable":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"If a header should be shown at the top of the popover.","!category":"enum","!type":"Boolean"},"showArrow":{"!description":"Whether Popover arrow should be visible","!category":"enum","!type":"Boolean"},"appStateKey":{"!description":"The application state key passed to retrieve the navigation targets.","!category":"enum","!type":"String"},"target":{"!description":"Options are the standard values for window.open() supported by browsers: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used when the href property is set.","!category":"enum","!type":"String"},"contentHeight":{"!description":"Set the height of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"subtle":{"!description":"Subtle links look more like standard text than like links. They should only be used to help with visual hierarchy between large data lists of important and less important links. Subtle links should not be used in any other use case.","!category":"enum","!type":"Boolean"},"prefetchNavigationTargets":{"!description":"If set to <code>true<\/code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for\rwhich no targets were found. Setting this value to <code>true<\/code> will trigger an additional roundtrip.","!category":"enum","!type":"Boolean"},"width":{"!description":"Width of the link (CSS-size such as % or px). When it is set, this is the exact size. When left blank, the text defines the size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"semanticAttributes":{"!description":"Map containing the semantic attributes calculated from the binding that will be used to retrieve the navigation targets.","!category":"enum","!type":"Object"},"NavigationPopoverHandler":"sap.ui.comp.navpopover.NavigationPopoverHandler_obj","semanticObjectName":{"!description":"the name of the semantic object","!category":"enum","!type":"String"}},"sap.ui.comp.smartmicrochart":{"SmartMicroChart":"sap.ui.comp.smartmicrochart.SmartMicroChart_obj","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The entity set name to fetch data and create the internal chart representation from.\nNote that this is not a dynamic UI5 property.","!category":"enum","!type":"String"},"!category":"namespace","showLabel":{"!description":"Determines if any label is shown or not","!category":"enum","!type":"Boolean"},"isResponsive":{"!description":"If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed.\n<code>width<\/code> and <code>height<\/code> properties are ignored in such case.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"enableAutoBinding":{"!description":"If set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"chartType":{"!description":"Specifies the type of chart. Note that this property is read-only.","!category":"enum","!type":"String"},"chartBindingPath":{"!description":"This attribute can be used to specify the path that\nis used during the binding of the chart. If not\nspecified, the entitySet attribute is used instead and also stored in this property.\nCalling <code>bindElement<\/code> binds the control and sets this property.","!category":"enum","!type":"String"},"width":{"!description":"Defines the width.","!category":"enum","!type":"sap.ui.core.CSSSize"},"SmartBulletMicroChart":"sap.ui.comp.smartmicrochart.SmartBulletMicroChart_obj","SmartAreaMicroChart":"sap.ui.comp.smartmicrochart.SmartAreaMicroChart_obj","height":{"!description":"Defines the height.","!category":"enum","!type":"sap.ui.core.CSSSize"}},"sap.ui.comp.smartmicrochart.SmartMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartMicroChart"},"sap.ui.comp.smarttable.SmartTable":{"rebindTable":{"!description":"This can be used to trigger binding on the table used in the SmartTable","!static":false,"!category":"function","!type":"fn(bForceRebind: Boolean)","parameters":{"bForceRebind":"type: boolean, description: force bind call to be triggered on the inner table"}},"fireEditToggled":{"!description":"Fires event <code>editToggled<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setRequestAtLeastFields":{"!description":"Sets a new value for property <code>requestAtLeastFields<\/code>.\n\nCSV of fields that must be always requested from the backend<br>\nThis property is mainly meant to be used when there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<i>Note:<\/i><br>\nThis property has no effect when AnalyticalTable is used.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRequestAtLeastFields: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sRequestAtLeastFields":"type: string, description: New value for property <code>requestAtLeastFields<\/code>"}},"fireAfterVariantInitialise":{"!description":"Fires event <code>afterVariantInitialise<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getNoData":{"!description":"Gets content of aggregation <code>noData<\/code>.\n\nThe value for the noData aggregation can be either a string value or a control instance.<br>\nThe control is shown, in case there is no data for the Table available. In case of a string value this will simply replace the no\ndata text.<br>\nCurrently the Responsive Table only supports string values.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control | String"},"setHeader":{"!description":"Sets a new value for property <code>header<\/code>.\n\nSpecifies header text that is shown in table\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"detachAfterVariantApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantApply<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireAfterVariantApply":{"!description":"Fires event <code>afterVariantApply<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"applyVariant":{"!description":"Interface function for SmartVariantManagment control, sets the current variant","!static":false,"!category":"function","!type":"fn(oVariantJSON: Object, sContext: String)","parameters":{"oVariantJSON":"type: Object, description: the variants json","sContext":"type: string, description: describes the context in which the apply was executed"}},"getCustomToolbar":{"!description":"Gets content of aggregation <code>customToolbar<\/code>.\n\nA toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartTable\ncontrol does not create an additional toolbar, but makes use of this one.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"getSemanticKeyAdditionalControl":{"!description":"Gets content of aggregation <code>semanticKeyAdditionalControl<\/code>.\n\nAllows users to specify an additional control that will be added to a VBox for the first semantic key field.<br>\n<i>Note:<\/i><br>\nThis property is not meant for public use.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachBeforeRebindTable":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeRebindTable<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!description":"The SmartTable control creates a table based on OData metadata and the configuration specified. The entitySet attribute must be\n       specified to use the control. This attribute is used to fetch fields from OData metadata, from which columns will be generated; it can\n       also be used to fetch the actual table data.<br>\n       Based on the tableType property, this control will render a standard, analytical, or responsive table.<br>\n       <b><i>Note:<\/i><\/b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","setEditTogglable":{"!description":"Sets a new value for property <code>editTogglable<\/code>.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only\nfor the SmartField scenario)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditTogglable: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEditTogglable":"type: boolean, description: New value for property <code>editTogglable<\/code>"}},"setIgnoreFromPersonalisation":{"!description":"Sets a new value for property <code>ignoreFromPersonalisation<\/code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoreFromPersonalisation: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sIgnoreFromPersonalisation":"type: string, description: New value for property <code>ignoreFromPersonalisation<\/code>"}},"getIgnoredFields":{"!description":"Gets current value of property <code>ignoredFields<\/code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartTable control.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyNoData":{"!description":"Destroys the noData in the aggregation <code>noData<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"fireShowOverlay":{"!description":"Fires event <code>showOverlay<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setSemanticKeyAdditionalControl":{"!description":"Sets the aggregated <code>semanticKeyAdditionalControl<\/code>.","!static":false,"!category":"function","!type":"fn(oSemanticKeyAdditionalControl: sap.ui.core.Control) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oSemanticKeyAdditionalControl":"type: sap.ui.core.Control, description: The semanticKeyAdditionalControl to set"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smarttable.SmartTable with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachDataReceived":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>dataReceived<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"exit":{"!description":"Cleans up the control","!static":false,"!category":"function","!type":"fn()"},"setNoData":{"!description":"Sets the aggregated <code>noData<\/code>.","!static":false,"!category":"function","!type":"fn(vNoData: sap.ui.core.Control | String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"vNoData":"type: sap.ui.core.Control|string, description: The noData to set"}},"!module":"sap/ui/comp/smarttable/SmartTable","getTable":{"!description":"returns the internally used table object","!static":false,"!category":"function","!type":"fn() -> Object"},"getInitiallyVisibleFields":{"!description":"Gets current value of property <code>initiallyVisibleFields<\/code>.\n\nCSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br>\nThis property is mainly meant to be used when no LineItem annotation exists.<br>\nIf you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and\nfinally based on this property.<br>\n<i>Note:<\/i><br>\nIf both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"setUseVariantManagement":{"!description":"Sets a new value for property <code>useVariantManagement<\/code>.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you\nneed to specify the persistencyKey property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseVariantManagement: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseVariantManagement":"type: boolean, description: New value for property <code>useVariantManagement<\/code>"}},"getShowFullScreenButton":{"!description":"Gets current value of property <code>showFullScreenButton<\/code>.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSmartVariant":{"!description":"ID of the element which is the current target of the association <code>smartVariant<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setToolbarStyleClass":{"!description":"Sets a new value for property <code>toolbarStyleClass<\/code>.\n\nA style class which is defined for the toolbar of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sToolbarStyleClass: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sToolbarStyleClass":"type: string, description: New value for property <code>toolbarStyleClass<\/code>"}},"fireDataReceived":{"!description":"Fires event <code>dataReceived<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getIgnoreFromPersonalisation":{"!description":"Gets current value of property <code>ignoreFromPersonalisation<\/code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"attachBeforeRebindTable":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeRebindTable<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired just before the binding is being done.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachShowOverlay":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>showOverlay<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired just before the overlay is being shown.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditTogglable":{"!description":"Gets current value of property <code>editTogglable<\/code>.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only\nfor the SmartField scenario)\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachFieldChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>fieldChange<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired when an editable field, created internally by the SmartTable control, is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getUseVariantManagement":{"!description":"Gets current value of property <code>useVariantManagement<\/code>.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you\nneed to specify the persistencyKey property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSemanticObjectController":{"!description":"Sets the aggregated <code>semanticObjectController<\/code>.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: sap.ui.comp.navpopover.SemanticObjectController) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oSemanticObjectController":"type: sap.ui.comp.navpopover.SemanticObjectController, description: The semanticObjectController to set"}},"getRequestAtLeastFields":{"!description":"Gets current value of property <code>requestAtLeastFields<\/code>.\n\nCSV of fields that must be always requested from the backend<br>\nThis property is mainly meant to be used when there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<i>Note:<\/i><br>\nThis property has no effect when AnalyticalTable is used.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"setCurrentVariantId":{"!description":"Set the current variant according to the sVariantId. In case an empty string or null or undefined was passed the STANDARD will be set. STANDARD\nwill also be set, in case the passed sVariantId could not be found. In case neither a flexibility variant, nor the content for the standard\nvariant could not be obtained, nor the personalisable control obtained nothing will be executed/changed","!static":false,"!category":"function","!type":"fn(sVariantId: String)","parameters":{"sVariantId":"type: string, description: id of the currently selected variant"}},"getUseExportToExcel":{"!description":"Gets current value of property <code>useExportToExcel<\/code>.\n\nCan be set to true or false depending on whether you want to export data to MS Excel®.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getToolbarStyleClass":{"!description":"Gets current value of property <code>toolbarStyleClass<\/code>.\n\nA style class which is defined for the toolbar of the table.","!static":false,"!category":"function","!type":"fn() -> String"},"getUseOnlyOneSolidToolbar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 This property has no effect<br>Gets current value of property <code>useOnlyOneSolidToolbar<\/code>.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid\nstyle.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUseExportToExcel":{"!description":"Sets a new value for property <code>useExportToExcel<\/code>.\n\nCan be set to true or false depending on whether you want to export data to MS Excel®.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseExportToExcel: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseExportToExcel":"type: boolean, description: New value for property <code>useExportToExcel<\/code>"}},"setCustomToolbar":{"!description":"Sets the aggregated <code>customToolbar<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomToolbar: sap.m.Toolbar) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oCustomToolbar":"type: sap.m.Toolbar, description: The customToolbar to set"}},"fireAfterVariantSave":{"!description":"Fires event <code>afterVariantSave<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireBeforeRebindTable":{"!description":"Fires event <code>beforeRebindTable<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setShowRowCount":{"!description":"Sets a new value for property <code>showRowCount<\/code>.\n\nIf the showRowCount attribute is set to true number of rows is shown along with the header text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRowCount: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowRowCount":"type: boolean, description: New value for property <code>showRowCount<\/code>"}},"attachAfterVariantInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantInitialise<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired after variant management in the SmartTable has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantSave<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getEntitySet":{"!description":"Gets current value of property <code>entitySet<\/code>.\n\nThe entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property","!static":false,"!category":"function","!type":"fn() -> String"},"setShowFullScreenButton":{"!description":"Sets a new value for property <code>showFullScreenButton<\/code>.\n\nControls the visibility of the FullScreen button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFullScreenButton: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowFullScreenButton":"type: boolean, description: New value for property <code>showFullScreenButton<\/code>"}},"destroySemanticObjectController":{"!description":"Destroys the semanticObjectController in the aggregation <code>semanticObjectController<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantSave<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowVariantManagement":{"!description":"Gets current value of property <code>showVariantManagement<\/code>.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireFieldChange":{"!description":"Fires event <code>fieldChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getTableType":{"!description":"Gets current value of property <code>tableType<\/code>.\n\nSpecifies the type of table to be created in the SmartTable control.<br>\n<i>Note:<\/i><br>\nIf you add a table to the content of the SmartTable in the view, this property has no effect.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.TableType"},"setPersistencyKey":{"!description":"Sets a new value for property <code>persistencyKey<\/code>.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPersistencyKey: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sPersistencyKey":"type: string, description: New value for property <code>persistencyKey<\/code>"}},"setUseTablePersonalisation":{"!description":"Sets a new value for property <code>useTablePersonalisation<\/code>.\n\nThe useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table\nsettings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseTablePersonalisation: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseTablePersonalisation":"type: boolean, description: New value for property <code>useTablePersonalisation<\/code>"}},"attachEditToggled":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>editToggled<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired when display/edit button is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEntitySet":{"!description":"The entity set name from OData metadata, with which the table should be bound to","!static":false,"!category":"function","!type":"fn(sEntitySetName: String)","parameters":{"sEntitySetName":"type: string, description: The entity set"}},"fireInitialise":{"!description":"Fires event <code>initialise<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smarttable.SmartTable.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTableBindingPath":{"!description":"Sets a new value for property <code>tableBindingPath<\/code>.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet\nattribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTableBindingPath: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sTableBindingPath":"type: string, description: New value for property <code>tableBindingPath<\/code>"}},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialise<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroySemanticKeyAdditionalControl":{"!description":"Destroys the semanticKeyAdditionalControl in the aggregation <code>semanticKeyAdditionalControl<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"setSmartFilterId":{"!description":"Sets a new value for property <code>smartFilterId<\/code>.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest\nparent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSmartFilterId: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sSmartFilterId":"type: string, description: New value for property <code>smartFilterId<\/code>"}},"getCurrentVariantId":{"!description":"returns the id of the currently selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowTablePersonalisation":{"!description":"Sets a new value for property <code>showTablePersonalisation<\/code>.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation\nbutton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTablePersonalisation: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowTablePersonalisation":"type: boolean, description: New value for property <code>showTablePersonalisation<\/code>"}},"getTableBindingPath":{"!description":"Gets current value of property <code>tableBindingPath<\/code>.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet\nattribute is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)","!static":false,"!category":"function","!type":"fn() -> String"},"detachFieldChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>fieldChange<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachShowOverlay":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>showOverlay<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"The SmartTable control creates a table based on OData metadata and the configuration specified. The entitySet attribute must be\n       specified to use the control. This attribute is used to fetch fields from OData metadata, from which columns will be generated; it can\n       also be used to fetch the actual table data.<br>\n       Based on the tableType property, this control will render a standard, analytical, or responsive table.<br>\n       <b><i>Note:<\/i><\/b><br>\n       Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","updateTableHeaderState":{"!description":"This can be called once data is received to update table header (count) and toolbar buttons(e.g. Excel Export) enabled state","!static":false,"!category":"function","!type":"fn()"},"attachDataReceived":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>dataReceived<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDemandPopin":{"!description":"Gets current value of property <code>demandPopin<\/code>.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive\ntable\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSemanticObjectController":{"!description":"Gets content of aggregation <code>semanticObjectController<\/code>.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"getEnableAutoBinding":{"!description":"Gets current value of property <code>enableAutoBinding<\/code>.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This\nhappens just after the <code>initialise<\/code> event has been fired.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDemandPopin":{"!description":"Sets a new value for property <code>demandPopin<\/code>.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive\ntable\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDemandPopin: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bDemandPopin":"type: boolean, description: New value for property <code>demandPopin<\/code>"}},"!proto":"sap.m.VBox","!category":"class","getHeader":{"!description":"Gets current value of property <code>header<\/code>.\n\nSpecifies header text that is shown in table","!static":false,"!category":"function","!type":"fn() -> String"},"getShowRowCount":{"!description":"Gets current value of property <code>showRowCount<\/code>.\n\nIf the showRowCount attribute is set to true number of rows is shown along with the header text.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new smarttable/SmartTable.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getSmartFilterId smartFilterId} : string<\/li>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getInitiallyVisibleFields initiallyVisibleFields} : string<\/li>\n<li>{@link #getRequestAtLeastFields requestAtLeastFields} : string<\/li>\n<li>{@link #getIgnoreFromPersonalisation ignoreFromPersonalisation} : string<\/li>\n<li>{@link #getTableType tableType} : sap.ui.comp.smarttable.TableType<\/li>\n<li>{@link #getUseVariantManagement useVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getShowVariantManagement showVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getUseExportToExcel useExportToExcel} : boolean (default: true)<\/li>\n<li>{@link #getUseTablePersonalisation useTablePersonalisation} : boolean (default: true)<\/li>\n<li>{@link #getShowTablePersonalisation showTablePersonalisation} : boolean (default: true)<\/li>\n<li>{@link #getShowRowCount showRowCount} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getToolbarStyleClass toolbarStyleClass} : string<\/li>\n<li>{@link #getEnableCustomFilter enableCustomFilter} : boolean (default: true)<\/li>\n<li>{@link #getPersistencyKey persistencyKey} : string<\/li>\n<li>{@link #getUseOnlyOneSolidToolbar useOnlyOneSolidToolbar} : boolean (default: false)<\/li>\n<li>{@link #getCurrentVariantId currentVariantId} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getTableBindingPath tableBindingPath} : string<\/li>\n<li>{@link #getEditTogglable editTogglable} : boolean (default: false)<\/li>\n<li>{@link #getDemandPopin demandPopin} : boolean (default: false)<\/li>\n<li>{@link #getShowFullScreenButton showFullScreenButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomToolbar customToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : sap.ui.comp.navpopover.SemanticObjectController<\/li>\n<li>{@link #getNoData noData} : sap.ui.core.Control|string<\/li>\n<li>{@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRebindTable beforeRebindTable} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editToggled editToggled} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataReceived dataReceived} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantInitialise afterVariantInitialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantSave afterVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantApply afterVariantApply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:showOverlay showOverlay} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fieldChange fieldChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.VBox#constructor sap.m.VBox}\ncan be used as well.","setUseOnlyOneSolidToolbar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 This property has no effect<br>Sets a new value for property <code>useOnlyOneSolidToolbar<\/code>.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid\nstyle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseOnlyOneSolidToolbar: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseOnlyOneSolidToolbar":"type: boolean, description: New value for property <code>useOnlyOneSolidToolbar<\/code>"}},"setIgnoredFields":{"!description":"Sets a new value for property <code>ignoredFields<\/code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartTable control.<br>\n<i>Note:<\/i><br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"setEnableCustomFilter":{"!description":"Sets a new value for property <code>enableCustomFilter<\/code>.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When\npressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableCustomFilter: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEnableCustomFilter":"type: boolean, description: New value for property <code>enableCustomFilter<\/code>"}},"destroyCustomToolbar":{"!description":"Destroys the customToolbar in the aggregation <code>customToolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"setTableType":{"!description":"Sets a new value for property <code>tableType<\/code>.\n\nSpecifies the type of table to be created in the SmartTable control.<br>\n<i>Note:<\/i><br>\nIf you add a table to the content of the SmartTable in the view, this property has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTableType: sap.ui.comp.smarttable.TableType) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sTableType":"type: sap.ui.comp.smarttable.TableType, description: New value for property <code>tableType<\/code>"}},"detachEditToggled":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>editToggled<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setEnableAutoBinding":{"!description":"Sets a new value for property <code>enableAutoBinding<\/code>.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This\nhappens just after the <code>initialise<\/code> event has been fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"detachAfterVariantInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantInitialise<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowVariantManagement":{"!description":"Sets a new value for property <code>showVariantManagement<\/code>.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowVariantManagement: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowVariantManagement":"type: boolean, description: New value for property <code>showVariantManagement<\/code>"}},"getPersistencyKey":{"!description":"Gets current value of property <code>persistencyKey<\/code>.\n\nKey used to access personalization data.","!static":false,"!category":"function","!type":"fn() -> String"},"attachAfterVariantApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantApply<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired after a variant has been applied.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSmartVariant":{"!description":"Sets the associated <code>smartVariant<\/code>.","!static":false,"!category":"function","!type":"fn(oSmartVariant: sap.ui.core.Control) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oSmartVariant":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"}},"getEnableCustomFilter":{"!description":"Gets current value of property <code>enableCustomFilter<\/code>.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When\npressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseTablePersonalisation":{"!description":"Gets current value of property <code>useTablePersonalisation<\/code>.\n\nThe useTablePersonalisation attribute can be set to true or false depending on whether you want to define personalized table\nsettings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialise<\/code> event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nEvent fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"setInitiallyVisibleFields":{"!description":"Sets a new value for property <code>initiallyVisibleFields<\/code>.\n\nCSV of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br>\nThis property is mainly meant to be used when no LineItem annotation exists.<br>\nIf you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and\nfinally based on this property.<br>\n<i>Note:<\/i><br>\nIf both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<br>\nNo validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitiallyVisibleFields: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sInitiallyVisibleFields":"type: string, description: New value for property <code>initiallyVisibleFields<\/code>"}},"getShowTablePersonalisation":{"!description":"Gets current value of property <code>showTablePersonalisation<\/code>.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation\nbutton.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fetchVariant":{"!description":"Interface function for SmartVariantManagment control, returns the current used variant data","!static":false,"!category":"function","!type":"fn() -> json"},"getSmartFilterId":{"!description":"Gets current value of property <code>smartFilterId<\/code>.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest\nparent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.personalization.ChangeType":{"!description":"Provides enumeration sap.ui.comp.personalization.ChangeType. A subset of changes done during table personalization.","ModelChanged":{"!description":"Change is applied to model but not applied to table","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","TableChanged":{"!description":"Change is applied to model and to table","!category":"enum","!type":"String"},"Unchanged":{"!description":"Not changed","!category":"enum","!type":"String"}},"sap.ui.comp.transport.TransportDialog_obj":{"!type":"fn()","prototype":"sap.ui.comp.transport.TransportDialog"},"sap.ui.comp.smartchart.SmartChart":{"getEntitySet":{"!description":"Gets current value of property <code>entitySet<\/code>.\n\nThe entity set name from which to fetch data and generate the columns.<br>\n<b>Note<\/b> This is not a dynamic property.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowFullScreenButton":{"!description":"Sets a new value for property <code>showFullScreenButton<\/code>.\n\nControls the visibility of the FullScreen button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFullScreenButton: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowFullScreenButton":"type: boolean, description: New value for property <code>showFullScreenButton<\/code>"}},"setUseChartPersonalisation":{"!description":"Sets a new value for property <code>useChartPersonalisation<\/code>.\n\nIf set to <code>true<\/code>, personalized chart settings are defined. If you want to persist the chart personalization, you need\nto specify the persistencyKey property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseChartPersonalisation: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseChartPersonalisation":"type: boolean, description: New value for property <code>useChartPersonalisation<\/code>"}},"setRequestAtLeastFields":{"!description":"Sets a new value for property <code>requestAtLeastFields<\/code>.\n\nCSV of fields that must be always requested by the backend system.<br>\nThis property is mainly meant to be used if there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRequestAtLeastFields: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sRequestAtLeastFields":"type: string, description: New value for property <code>requestAtLeastFields<\/code>"}},"fireAfterVariantInitialise":{"!description":"Fires event <code>afterVariantInitialise<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroySemanticObjectController":{"!description":"Destroys the semanticObjectController in the aggregation <code>semanticObjectController<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SmartChart"},"getIgnoredChartTypes":{"!description":"Gets current value of property <code>ignoredChartTypes<\/code>.\n\nCSV of fields that is not shown in the list of available chart types.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"attachAfterVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantSave<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowDrillButtons":{"!description":"Gets current value of property <code>showDrillButtons<\/code>.\n\nControls the visibility of the Drill Up and Drill Down buttons.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowVariantManagement":{"!description":"Gets current value of property <code>showVariantManagement<\/code>.\n\nControls the visibility of the Variant Management.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeader":{"!description":"Sets a new value for property <code>header<\/code>.\n\nSpecifies header text that is shown in the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"detachAfterVariantApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantApply<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireAfterVariantApply":{"!description":"Fires event <code>afterVariantApply<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"applyVariant":{"!description":"Interface function for SmartVariantManagement control that applies the current variant.","!static":false,"!category":"function","!type":"fn(oVariantJSON: Object, sContext: String)","parameters":{"oVariantJSON":"type: Object, description: The variant JSON","sContext":"type: string, description: Describes the context in which the variant has been applied"}},"setPersistencyKey":{"!description":"Sets a new value for property <code>persistencyKey<\/code>.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPersistencyKey: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sPersistencyKey":"type: string, description: New value for property <code>persistencyKey<\/code>"}},"getUseListForChartTypeSelection":{"!description":"Gets current value of property <code>useListForChartTypeSelection<\/code>.\n\nControls the visualization for chart type selection. If set to <code>true<\/code>, the list of available chart types will be\ndisplayed. If set to <code>false<\/code> and there are three or fewer available chart types, the chart types will be displayed as\nseparate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUseListForChartTypeSelection":{"!description":"Sets a new value for property <code>useListForChartTypeSelection<\/code>.\n\nControls the visualization for chart type selection. If set to <code>true<\/code>, the list of available chart types will be\ndisplayed. If set to <code>false<\/code> and there are three or fewer available chart types, the chart types will be displayed as\nseparate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseListForChartTypeSelection: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseListForChartTypeSelection":"type: boolean, description: New value for property <code>useListForChartTypeSelection<\/code>"}},"rebindChart":{"!description":"This can be used to trigger binding on the chart used in the SmartChart","!static":false,"!category":"function","!type":"fn()"},"getToolbar":{"!description":"Gets content of aggregation <code>toolbar<\/code>.\n\nA toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartChart\ncontrol does not create an additional toolbar, but uses this one.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"!description":"The SmartChart control creates a chart based on OData metadata and the configuration specified. The entitySet property must be specified\n       to use the control. This property is used to fetch fields from OData metadata, from which the chart UI will be generated. It can also be\n       used to fetch the actual chart data.<br>\n       Based on the chartType property, this control will render the corresponding chart.<br>\n       <b>Note:<\/b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized.","setEntitySet":{"!description":"The entity set name in the OData metadata against which the chart must be bound.","!static":false,"!category":"function","!type":"fn(sEntitySetName: String)","parameters":{"sEntitySetName":"type: string, description: The entity set"}},"fireInitialise":{"!description":"Fires event <code>initialise<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartchart.SmartChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowLegendButton":{"!description":"Gets current value of property <code>showLegendButton<\/code>.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>initialise<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowSemanticNavigationButton":{"!description":"Gets current value of property <code>showSemanticNavigationButton<\/code>.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChartBindingPath":{"!description":"Sets a new value for property <code>chartBindingPath<\/code>.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used\nonly if binding is established internally/automatically - See enableAutoBinding)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartBindingPath: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sChartBindingPath":"type: string, description: New value for property <code>chartBindingPath<\/code>"}},"setIgnoreFromPersonalisation":{"!description":"Sets a new value for property <code>ignoreFromPersonalisation<\/code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoreFromPersonalisation: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sIgnoreFromPersonalisation":"type: string, description: New value for property <code>ignoreFromPersonalisation<\/code>"}},"getIgnoredFields":{"!description":"Gets current value of property <code>ignoredFields<\/code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"setSmartFilterId":{"!description":"Sets a new value for property <code>smartFilterId<\/code>.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the\nclosest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSmartFilterId: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sSmartFilterId":"type: string, description: New value for property <code>smartFilterId<\/code>"}},"getCurrentVariantId":{"!description":"Returns the ID of the currently selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelectionMode":{"!description":"Sets a new value for property <code>selectionMode<\/code>.\n\nChart selection mode. Supported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case\ninsensitive, always return in upper case. Unsupported values will be ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Multi<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode: sap.chart.SelectionMode) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sSelectionMode":"type: sap.chart.SelectionMode, description: New value for property <code>selectionMode<\/code>"}},"setShowDrillBreadcrumbs":{"!description":"Sets a new value for property <code>showDrillBreadcrumbs<\/code>.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true<\/code>,\nthe toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDrillBreadcrumbs: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowDrillBreadcrumbs":"type: boolean, description: New value for property <code>showDrillBreadcrumbs<\/code>"}},"getChartType":{"!description":"Gets current value of property <code>chartType<\/code>.\n\nSpecifies the type of chart to be created by the SmartChart control.","!static":false,"!category":"function","!type":"fn() -> String"},"fireShowOverlay":{"!description":"Fires event <code>showOverlay<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getChartBindingPath":{"!description":"Gets current value of property <code>chartBindingPath<\/code>.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used\nonly if binding is established internally/automatically - See enableAutoBinding)","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartchart.SmartChart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setUseTooltip":{"!description":"Sets a new value for property <code>useTooltip<\/code>.\n\nControls the usage either of the tooltip or the popover. If set to <code>true<\/code>, a tooltip will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseTooltip: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseTooltip":"type: boolean, description: New value for property <code>useTooltip<\/code>"}},"detachDataReceived":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>dataReceived<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"exit":{"!description":"Cleans up the control.","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/comp/smartchart/SmartChart","detachShowOverlay":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>showOverlay<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"The SmartChart control creates a chart based on OData metadata and the configuration specified. The entitySet property must be specified\n       to use the control. This property is used to fetch fields from OData metadata, from which the chart UI will be generated. It can also be\n       used to fetch the actual chart data.<br>\n       Based on the chartType property, this control will render the corresponding chart.<br>\n       <b>Note:<\/b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized.","setUseVariantManagement":{"!description":"Sets a new value for property <code>useVariantManagement<\/code>.\n\nIf set to <code>true<\/code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseVariantManagement: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseVariantManagement":"type: boolean, description: New value for property <code>useVariantManagement<\/code>"}},"getShowFullScreenButton":{"!description":"Gets current value of property <code>showFullScreenButton<\/code>.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSmartVariant":{"!description":"ID of the element which is the current target of the association <code>smartVariant<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachDataReceived":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>dataReceived<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart\ncontrol itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getUseChartPersonalisation":{"!description":"Gets current value of property <code>useChartPersonalisation<\/code>.\n\nIf set to <code>true<\/code>, personalized chart settings are defined. If you want to persist the chart personalization, you need\nto specify the persistencyKey property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSemanticObjectController":{"!description":"Gets content of aggregation <code>semanticObjectController<\/code>.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"fireDataReceived":{"!description":"Fires event <code>dataReceived<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getEnableAutoBinding":{"!description":"Gets current value of property <code>enableAutoBinding<\/code>.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty. This happens right after the <code>initialise<\/code> event has been fired.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIgnoreFromPersonalisation":{"!description":"Gets current value of property <code>ignoreFromPersonalisation<\/code>.\n\nCSV of fields that is not shown in the personalization dialog.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.VBox","getSelectionMode":{"!description":"Gets current value of property <code>selectionMode<\/code>.\n\nChart selection mode. Supported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case\ninsensitive, always return in upper case. Unsupported values will be ignored.\n\nDefault value is <code>Multi<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.chart.SelectionMode"},"!category":"class","attachBeforeRebindChart":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeRebindChart<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired right before the binding is done.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachShowOverlay":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>showOverlay<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired right before the overlay is shown.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getLegendVisible":{"!description":"Gets current value of property <code>legendVisible<\/code>.\n\nSet chart's legend properties.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowChartTooltip":{"!description":"Gets current value of property <code>showChartTooltip<\/code>.\n\nControls the visibility of the chart tooltip. If set to <code>true <\/code>, the chart tooltip will be shown when hovering over a\ndata point.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeader":{"!description":"Gets current value of property <code>header<\/code>.\n\nSpecifies header text that is shown in the chart.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new smartchart/SmartChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getSmartFilterId smartFilterId} : string<\/li>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getRequestAtLeastFields requestAtLeastFields} : string<\/li>\n<li>{@link #getIgnoreFromPersonalisation ignoreFromPersonalisation} : string<\/li>\n<li>{@link #getChartType chartType} : string<\/li>\n<li>{@link #getIgnoredChartTypes ignoredChartTypes} : string<\/li>\n<li>{@link #getUseVariantManagement useVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getUseChartPersonalisation useChartPersonalisation} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getPersistencyKey persistencyKey} : string<\/li>\n<li>{@link #getCurrentVariantId currentVariantId} : string<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getChartBindingPath chartBindingPath} : string<\/li>\n<li>{@link #getShowDrillButtons showDrillButtons} : boolean (default: true)<\/li>\n<li>{@link #getShowZoomButtons showZoomButtons} : boolean (default: true)<\/li>\n<li>{@link #getShowSemanticNavigationButton showSemanticNavigationButton} : boolean (default: true)<\/li>\n<li>{@link #getShowVariantManagement showVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getShowDetailsButton showDetailsButton} : boolean (default: false)<\/li>\n<li>{@link #getShowDrillBreadcrumbs showDrillBreadcrumbs} : boolean (default: false)<\/li>\n<li>{@link #getShowChartTooltip showChartTooltip} : boolean (default: true)<\/li>\n<li>{@link #getShowLegendButton showLegendButton} : boolean (default: true)<\/li>\n<li>{@link #getLegendVisible legendVisible} : boolean (default: true)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.chart.SelectionMode (default: Multi)<\/li>\n<li>{@link #getShowFullScreenButton showFullScreenButton} : boolean (default: true)<\/li>\n<li>{@link #getUseTooltip useTooltip} : boolean (default: true)<\/li>\n<li>{@link #getUseListForChartTypeSelection useListForChartTypeSelection} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getToolbar toolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : sap.ui.comp.navpopover.SemanticObjectController<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRebindChart beforeRebindChart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataReceived dataReceived} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantInitialise afterVariantInitialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantSave afterVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantApply afterVariantApply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:showOverlay showOverlay} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.VBox#constructor sap.m.VBox}\ncan be used as well.","getUseVariantManagement":{"!description":"Gets current value of property <code>useVariantManagement<\/code>.\n\nIf set to <code>true<\/code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSemanticObjectController":{"!description":"Sets the aggregated <code>semanticObjectController<\/code>.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: sap.ui.comp.navpopover.SemanticObjectController) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSemanticObjectController":"type: sap.ui.comp.navpopover.SemanticObjectController, description: The semanticObjectController to set"}},"getRequestAtLeastFields":{"!description":"Gets current value of property <code>requestAtLeastFields<\/code>.\n\nCSV of fields that must be always requested by the backend system.<br>\nThis property is mainly meant to be used if there is no PresentationVariant annotation.<br>\nIf both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination\nof both.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"getUseTooltip":{"!description":"Gets current value of property <code>useTooltip<\/code>.\n\nControls the usage either of the tooltip or the popover. If set to <code>true<\/code>, a tooltip will be displayed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCurrentVariantId":{"!description":"Applies the current variant based on the sVariantId parameter. If an empty string or null or undefined have been passed, the standard variant\nwill be used. The standard variant will also be used if the passed sVariantId cannot be found. If the flexibility variant, the content for the\nstandard variant, or the personalizable control cannot be obtained, no changes will be made.","!static":false,"!category":"function","!type":"fn(sVariantId: String)","parameters":{"sVariantId":"type: string, description: ID of the currently selected variant"}},"setIgnoredFields":{"!description":"Sets a new value for property <code>ignoredFields<\/code>.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"fireBeforeRebindChart":{"!description":"Fires event <code>beforeRebindChart<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnableAutoBinding":{"!description":"Sets a new value for property <code>enableAutoBinding<\/code>.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet\nproperty. This happens right after the <code>initialise<\/code> event has been fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"setShowDetailsButton":{"!description":"Sets a new value for property <code>showDetailsButton<\/code>.\n\nControls the visibility of the Details button. If set to <code>true<\/code>, the datapoint tooltip will be disabled as the\ninformation of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDetailsButton: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowDetailsButton":"type: boolean, description: New value for property <code>showDetailsButton<\/code>"}},"getShowDrillBreadcrumbs":{"!description":"Gets current value of property <code>showDrillBreadcrumbs<\/code>.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true<\/code>,\nthe toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachAfterVariantInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantInitialise<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowVariantManagement":{"!description":"Sets a new value for property <code>showVariantManagement<\/code>.\n\nControls the visibility of the Variant Management.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowVariantManagement: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowVariantManagement":"type: boolean, description: New value for property <code>showVariantManagement<\/code>"}},"getPersistencyKey":{"!description":"Gets current value of property <code>persistencyKey<\/code>.\n\nKey used to access personalization data.","!static":false,"!category":"function","!type":"fn() -> String"},"attachAfterVariantApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantApply<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired after a variant has been applied.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getChart":{"!description":"Returns the chart object used internally.","!static":false,"!category":"function","!type":"fn() -> Object"},"setSmartVariant":{"!description":"Sets the associated <code>smartVariant<\/code>.","!static":false,"!category":"function","!type":"fn(oSmartVariant: sap.ui.core.Control) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSmartVariant":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"}},"getShowZoomButtons":{"!description":"Gets current value of property <code>showZoomButtons<\/code>.\n\nControls the visibility of the Zoom In and Zoom Out buttons.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIgnoredChartTypes":{"!description":"Sets a new value for property <code>ignoredChartTypes<\/code>.\n\nCSV of fields that is not shown in the list of available chart types.<br>\n<b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredChartTypes: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sIgnoredChartTypes":"type: string, description: New value for property <code>ignoredChartTypes<\/code>"}},"fireAfterVariantSave":{"!description":"Fires event <code>afterVariantSave<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>initialise<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setToolbar":{"!description":"Sets the aggregated <code>toolbar<\/code>.","!static":false,"!category":"function","!type":"fn(oToolbar: sap.m.Toolbar) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oToolbar":"type: sap.m.Toolbar, description: The toolbar to set"}},"destroyToolbar":{"!description":"Destroys the toolbar in the aggregation <code>toolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SmartChart"},"setShowChartTooltip":{"!description":"Sets a new value for property <code>showChartTooltip<\/code>.\n\nControls the visibility of the chart tooltip. If set to <code>true <\/code>, the chart tooltip will be shown when hovering over a\ndata point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowChartTooltip: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowChartTooltip":"type: boolean, description: New value for property <code>showChartTooltip<\/code>"}},"setChartType":{"!description":"Sets a new value for property <code>chartType<\/code>.\n\nSpecifies the type of chart to be created by the SmartChart control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartType: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sChartType":"type: string, description: New value for property <code>chartType<\/code>"}},"attachAfterVariantInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterVariantInitialise<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired after the variant management in the SmartChart control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterVariantSave<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachBeforeRebindChart":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeRebindChart<\/code> event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fetchVariant":{"!description":"Interface function for the SmartVariantManagement control that returns the currently used variant data.","!static":false,"!category":"function","!type":"fn() -> json"},"getSmartFilterId":{"!description":"Gets current value of property <code>smartFilterId<\/code>.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the\nclosest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowDetailsButton":{"!description":"Gets current value of property <code>showDetailsButton<\/code>.\n\nControls the visibility of the Details button. If set to <code>true<\/code>, the datapoint tooltip will be disabled as the\ninformation of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}}}}